////////////////////////////////////////////////////////////////////////////////////////////////////
// file:	EventArgs.cs
//
// summary:	Implements the event arguments class
////////////////////////////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace GCS.Core.Common.SignalR
{
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   Additional information for signal r connection closed events. </summary>
    ///
    /// <remarks>   Kevin, 1/3/2019. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    public class SignalRConnectionClosedEventArgs : EventArgs
    {
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Default constructor. </summary>
        ///
        /// <remarks>   Kevin, 9/6/2018. </remarks>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public SignalRConnectionClosedEventArgs()
        {
            WhenClosed = DateTimeOffset.Now;
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the Date/Time of the when closed. </summary>
        ///
        /// <value> The when closed. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public DateTimeOffset WhenClosed { get; internal set; }
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   Additional information for signal r connection state changed events. </summary>
    ///
    /// <remarks>   Kevin, 1/3/2019. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    public class SignalRConnectionStateChangedEventArgs : EventArgs
    {
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Default constructor. </summary>
        ///
        /// <remarks>   Kevin, 9/6/2018. </remarks>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public SignalRConnectionStateChangedEventArgs()
        {
            WhenChanged = DateTimeOffset.Now;
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Constructor. </summary>
        ///
        /// <remarks>   Kevin, 1/3/2019. </remarks>
        ///
        /// <param name="state">    The state. </param>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public SignalRConnectionStateChangedEventArgs(StateChange state)
        {
            WhenChanged = DateTimeOffset.Now;
            StateChange = state;
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the Date/Time of the when changed. </summary>
        ///
        /// <value> The when changed. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public DateTimeOffset WhenChanged { get; internal set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the state change. </summary>
        ///
        /// <value> The state change. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public StateChange StateChange { get; internal set; }
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   Additional information for signal r connection error events. </summary>
    ///
    /// <remarks>   Kevin, 1/3/2019. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    public class SignalRConnectionErrorEventArgs : EventArgs
    {
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Default constructor. </summary>
        ///
        /// <remarks>   Kevin, 9/6/2018. </remarks>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public SignalRConnectionErrorEventArgs()
        {
            When = DateTimeOffset.Now;
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Constructor. </summary>
        ///
        /// <remarks>   Kevin, 1/3/2019. </remarks>
        ///
        /// <param name="ex">   The exception. </param>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public SignalRConnectionErrorEventArgs(Exception ex)
        {
            When = DateTimeOffset.Now;
            Ex = ex;
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the Date/Time of the error. </summary>
        ///
        /// <value> The when value. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public DateTimeOffset When { get; internal set; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the exception. </summary>
        ///
        /// <value> The exception. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public Exception Ex { get; internal set; }
    }
}
