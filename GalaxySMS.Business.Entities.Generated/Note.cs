//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Runtime.Serialization;

#if NetCoreApi
namespace GalaxySMS.Business.Entities.Api.NetCore
#elif NETSTANDARD2_0
namespace GalaxySMS.Business.Entities.NetStd2
#else
namespace GalaxySMS.Business.Entities
#endif
{
    using System;
    using System.Collections.Generic;
    using GCS.Core.Common.Contracts;
	using GCS.Core.Common.Core;
    public partial class Note : EntityBase, IIdentifiableEntity, IEquatable<Note>, ITableEntityBase
    {
    /*	// Move to partial class
    using System;
    using System.Collections.Generic;
    using GCS.Core.Common.Contracts;
	using GCS.Core.Common.Core;
    using GCS.Core.Common.Extensions;
    
    using System.Runtime.Serialization;
    
    #if NetCoreApi
    namespace GalaxySMS.Business.Entities.Api.NetCore
    #elif NETSTANDARD2_0
    namespace GalaxySMS.Business.Entities.NetStd2
    #else
    namespace GalaxySMS.Business.Entities
    #endif
    {
        public partial class Note
        {
        	public Note()
        	{
        		Initialize();
        	}
        
        	public Note(Note e)
        	{
        		Initialize(e);
        	}
        
        	public void Initialize()
        	{
        		this.AccessPortalAlertEvents = new HashSet<AccessPortalAlertEvent>();
        		this.AccessPortalNotes = new HashSet<AccessPortalNote>();
        		this.GalaxyPanelAlertEvents = new HashSet<GalaxyPanelAlertEvent>();
        		this.AccessPortalActivityAlarmEvents = new HashSet<AccessPortalActivityAlarmEvent>();
        		this.InputDeviceNotes = new HashSet<InputDeviceNote>();
        		this.OutputDeviceNotes = new HashSet<OutputDeviceNote>();
        	}
        
        	public void Initialize(Note e)
        	{
        		Initialize();
        		if( e == null )
        			return;
        
        		this.IsDirty = e.IsDirty;
        		this.NoteUid = e.NoteUid;
        		this.Category = e.Category;
        		this.Note1 = e.Note1;
        		this.Photo = e.Photo;
        		this.Document = e.Document;
        		this.InsertName = e.InsertName;
        		this.InsertDate = e.InsertDate;
        		this.UpdateName = e.UpdateName;
        		this.UpdateDate = e.UpdateDate;
        		this.ConcurrencyValue = e.ConcurrencyValue;
        		this.NoteText = e.NoteText;
        		this.AccessPortalAlertEvents = e.AccessPortalAlertEvents.ToCollection();
        		this.AccessPortalNotes = e.AccessPortalNotes.ToCollection();
        		this.GalaxyPanelAlertEvents = e.GalaxyPanelAlertEvents.ToCollection();
        		this.AccessPortalActivityAlarmEvents = e.AccessPortalActivityAlarmEvents.ToCollection();
        		this.InputDeviceNotes = e.InputDeviceNotes.ToCollection();
        		this.OutputDeviceNotes = e.OutputDeviceNotes.ToCollection();
        		
        	}
        
        	public bool IsAnythingDirty
        	{
        		get
        		{
        			//foreach( var o in InterfaceBoardSections)
        			//{
        			//	if (o.IsAnythingDirty == true)
        			//		return true;
        			//}
        			return IsDirty;                
        		}
        	}
        
        	public Note Clone(Note e)
        	{
        		return new Note(e);
        	}
        
        	public bool Equals(Note other)
        	{
        		return base.Equals(other);
        	}
        	
        	public bool IsPrimaryKeyEqual(Note other)
        	{
        		if( other == null ) 
        			return false;
        
        		if(other.NoteUid != this.NoteUid )
        			return false;
        		return true;
        	}
        
        	public override int GetHashCode()
        	{
        		return base.GetHashCode();
        	}
        
        	public override string ToString()
        	{
        		return base.ToString();
        	}
        }
    }
    */
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public System.Guid NoteUid { get; set; }
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public string Category { get; set; }
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public string Note1 { get; set; }
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public byte[] Photo { get; set; }
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public byte[] Document { get; set; }
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public string InsertName { get; set; }
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public Nullable<System.DateTime> InsertDate { get; set; }
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public string UpdateName { get; set; }
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public Nullable<System.DateTime> UpdateDate { get; set; }
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public Nullable<short> ConcurrencyValue { get; set; }
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public string NoteText { get; set; }
    
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public ICollection<AccessPortalAlertEvent> AccessPortalAlertEvents { get; set; }
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public ICollection<AccessPortalNote> AccessPortalNotes { get; set; }
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public ICollection<GalaxyPanelAlertEvent> GalaxyPanelAlertEvents { get; set; }
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public ICollection<AccessPortalActivityAlarmEvent> AccessPortalActivityAlarmEvents { get; set; }
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public ICollection<InputDeviceNote> InputDeviceNotes { get; set; }
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public ICollection<OutputDeviceNote> OutputDeviceNotes { get; set; }
    
    }
}
