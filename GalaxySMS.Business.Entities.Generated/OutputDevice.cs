//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Runtime.Serialization;

#if NetCoreApi
namespace GalaxySMS.Business.Entities.Api.NetCore
#elif NETSTANDARD2_0
namespace GalaxySMS.Business.Entities.NetStd2
#else
namespace GalaxySMS.Business.Entities
#endif
{
    using System;
    using System.Collections.Generic;
    using GCS.Core.Common.Contracts;
	using GCS.Core.Common.Core;
    public partial class OutputDevice : EntityBase, IIdentifiableEntity, IEquatable<OutputDevice>, ITableEntityBase
    {
    /*	// Move to partial class
    using System;
    using System.Collections.Generic;
    using GCS.Core.Common.Contracts;
	using GCS.Core.Common.Core;
    using GCS.Core.Common.Extensions;
    
    using System.Runtime.Serialization;
    
    #if NetCoreApi
    namespace GalaxySMS.Business.Entities.Api.NetCore
    #elif NETSTANDARD2_0
    namespace GalaxySMS.Business.Entities.NetStd2
    #else
    namespace GalaxySMS.Business.Entities
    #endif
    {
        public partial class OutputDevice
        {
        	public OutputDevice()
        	{
        		Initialize();
        	}
        
        	public OutputDevice(OutputDevice e)
        	{
        		Initialize(e);
        	}
        
        	public void Initialize()
        	{
        		this.OutputDeviceGalaxyHardwareAddresses = new HashSet<OutputDeviceGalaxyHardwareAddress>();
        		this.OutputCommandAudits = new HashSet<OutputCommandAudit>();
        		this.RoleOutputDevices = new HashSet<RoleOutputDevice>();
        		this.OutputDeviceActivityEvents = new HashSet<OutputDeviceActivityEvent>();
        		this.OutputDeviceNotes = new HashSet<OutputDeviceNote>();
        	}
        
        	public void Initialize(OutputDevice e)
        	{
        		Initialize();
        		if( e == null )
        			return;
        
        		this.IsDirty = e.IsDirty;
        		this.OutputDeviceUid = e.OutputDeviceUid;
        		this.BinaryResourceUid = e.BinaryResourceUid;
        		this.EntityId = e.EntityId;
        		this.SiteUid = e.SiteUid;
        		this.OutputName = e.OutputName;
        		this.Location = e.Location;
        		this.ServiceComment = e.ServiceComment;
        		this.CriticalityComment = e.CriticalityComment;
        		this.Comment = e.Comment;
        		this.InsertName = e.InsertName;
        		this.InsertDate = e.InsertDate;
        		this.UpdateName = e.UpdateName;
        		this.UpdateDate = e.UpdateDate;
        		this.ConcurrencyValue = e.ConcurrencyValue;
        		this.IsTemplate = e.IsTemplate;
        		this.EMailEventsEnabled = e.EMailEventsEnabled;
        		this.TransmitEventsEnabled = e.TransmitEventsEnabled;
        		this.FileOutputEnabled = e.FileOutputEnabled;
        		this.IsActive = e.IsActive;
        		this.IsBoundToHardware = e.IsBoundToHardware;
        		this.OutputDeviceGalaxyHardwareAddresses = e.OutputDeviceGalaxyHardwareAddresses.ToCollection();
        		this.OutputCommandAudits = e.OutputCommandAudits.ToCollection();
        		this.RoleOutputDevices = e.RoleOutputDevices.ToCollection();
        		this.OutputDeviceActivityEvents = e.OutputDeviceActivityEvents.ToCollection();
        		this.OutputDeviceNotes = e.OutputDeviceNotes.ToCollection();
        		
        	}
        
        	public bool IsAnythingDirty
        	{
        		get
        		{
        			//foreach( var o in InterfaceBoardSections)
        			//{
        			//	if (o.IsAnythingDirty == true)
        			//		return true;
        			//}
        			return IsDirty;                
        		}
        	}
        
        	public OutputDevice Clone(OutputDevice e)
        	{
        		return new OutputDevice(e);
        	}
        
        	public bool Equals(OutputDevice other)
        	{
        		return base.Equals(other);
        	}
        	
        	public bool IsPrimaryKeyEqual(OutputDevice other)
        	{
        		if( other == null ) 
        			return false;
        
        		if(other.OutputDeviceUid != this.OutputDeviceUid )
        			return false;
        		return true;
        	}
        
        	public override int GetHashCode()
        	{
        		return base.GetHashCode();
        	}
        
        	public override string ToString()
        	{
        		return base.ToString();
        	}
        }
    }
    */
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public System.Guid OutputDeviceUid { get; set; }
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public Nullable<System.Guid> BinaryResourceUid { get; set; }
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public System.Guid EntityId { get; set; }
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public System.Guid SiteUid { get; set; }
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public string OutputName { get; set; }
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public string Location { get; set; }
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public string ServiceComment { get; set; }
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public string CriticalityComment { get; set; }
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public string Comment { get; set; }
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public string InsertName { get; set; }
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public Nullable<System.DateTime> InsertDate { get; set; }
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public string UpdateName { get; set; }
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public Nullable<System.DateTime> UpdateDate { get; set; }
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public Nullable<short> ConcurrencyValue { get; set; }
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public bool IsTemplate { get; set; }
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public bool EMailEventsEnabled { get; set; }
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public bool TransmitEventsEnabled { get; set; }
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public bool FileOutputEnabled { get; set; }
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public bool IsActive { get; set; }
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public Nullable<bool> IsBoundToHardware { get; set; }
    
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public gcsBinaryResource gcsBinaryResource { get; set; }
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public ICollection<OutputDeviceGalaxyHardwareAddress> OutputDeviceGalaxyHardwareAddresses { get; set; }
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public ICollection<OutputCommandAudit> OutputCommandAudits { get; set; }
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public ICollection<RoleOutputDevice> RoleOutputDevices { get; set; }
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public ICollection<OutputDeviceActivityEvent> OutputDeviceActivityEvents { get; set; }
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public GalaxyOutputDevice GalaxyOutputDevice { get; set; }
    
    #if NetCoreApi
    #else
    	[DataMember]
    #endif
    	public ICollection<OutputDeviceNote> OutputDeviceNotes { get; set; }
    
    }
}
