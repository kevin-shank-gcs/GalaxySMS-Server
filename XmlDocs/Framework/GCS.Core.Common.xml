<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GCS.Core.Common</name>
    </assembly>
    <members>
        <member name="T:GCS.Core.Common.Config.ConfigurationUtilities">
             <summary>   A configuration utilities. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Config.ConfigurationUtilities.SaveAppSetting(System.String,System.String,System.String,System.String)">
             <summary>   Saves an application setting. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="configFilename">   Filename of the configuration file. </param>
             <param name="sectionName">      Name of the section. </param>
             <param name="key">              The key. </param>
             <param name="value">            The value. </param>
        </member>
        <member name="M:GCS.Core.Common.Config.ConfigurationUtilities.GetAppSetting(System.String,System.String,System.String,System.String,System.Boolean)">
             <summary>   Gets application setting. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="configFilename">       Filename of the configuration file. </param>
             <param name="sectionName">          Name of the section. </param>
             <param name="key">                  The key. </param>
             <param name="defaultIfNotFound">    True to default if not found. </param>
             <param name="createIfNotFound">     True to create if not found. </param>
            
             <returns>   True if it succeeds, false if it fails. </returns>
        </member>
        <member name="M:GCS.Core.Common.Config.ConfigurationUtilities.GetAppSetting(System.String,System.String,System.String,System.Int32,System.Boolean)">
             <summary>   Gets application setting. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="configFilename">       Filename of the configuration file. </param>
             <param name="sectionName">          Name of the section. </param>
             <param name="key">                  The key. </param>
             <param name="defaultIfNotFound">    True to default if not found. </param>
             <param name="createIfNotFound">     True to create if not found. </param>
            
             <returns>   True if it succeeds, false if it fails. </returns>
        </member>
        <member name="M:GCS.Core.Common.Config.ConfigurationUtilities.GetAppSetting(System.String,System.String,System.String,System.Boolean,System.Boolean)">
             <summary>   Gets application setting. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="configFilename">       Filename of the configuration file. </param>
             <param name="sectionName">          Name of the section. </param>
             <param name="key">                  The key. </param>
             <param name="defaultIfNotFound">    True to default if not found. </param>
             <param name="createIfNotFound">     True to create if not found. </param>
            
             <returns>   True if it succeeds, false if it fails. </returns>
        </member>
        <member name="M:GCS.Core.Common.Config.ConfigurationUtilities.ProtectConnectionString(System.String)">
             <summary>   Protect connection string. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="configFilename">   Filename of the configuration file. </param>
        </member>
        <member name="M:GCS.Core.Common.Config.ConfigurationUtilities.UnprotectConnectionString(System.String)">
             <summary>   Unprotect connection string. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="configFilename">   Filename of the configuration file. </param>
        </member>
        <member name="M:GCS.Core.Common.Config.ConfigurationUtilities.ToggleConnectionStringProtection(System.String,System.Boolean)">
             <summary>   Toggle connection string protection. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="configFilename">   Filename of the configuration file. </param>
             <param name="protect">          True to protect. </param>
        </member>
        <member name="M:GCS.Core.Common.Config.ConfigurationUtilities.ProtectSection(System.String,System.String)">
             <summary>   Protect section. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="configFilename">   Filename of the configuration file. </param>
             <param name="section">          The section. </param>
        </member>
        <member name="M:GCS.Core.Common.Config.ConfigurationUtilities.UnprotectSection(System.String,System.String)">
             <summary>   Unprotect section. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="configFilename">   Filename of the configuration file. </param>
             <param name="section">          The section. </param>
        </member>
        <member name="M:GCS.Core.Common.Config.ConfigurationUtilities.ToggleSectionProtection(System.String,System.String,System.Boolean)">
             <summary>   Toggle section protection. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <exception cref="T:System.Exception">    Thrown when an exception error condition occurs. </exception>
            
             <param name="configFilename">   Filename of the configuration file. </param>
             <param name="section">          The section. </param>
             <param name="protect">          True to protect. </param>
        </member>
        <member name="M:GCS.Core.Common.Config.ConfigurationUtilities.IsSectionProtected(System.String,System.String)">
             <summary>   Query if 'configFilename' is section protected. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <exception cref="T:System.Exception">    Thrown when an exception error condition occurs. </exception>
            
             <param name="configFilename">   Filename of the configuration file. </param>
             <param name="section">          The section. </param>
            
             <returns>   True if section protected, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Config.ConfigurationUtilities.IsConnectionStringsSectionProtected(System.String)">
             <summary>   Query if 'configFilename' is connection strings section protected. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="configFilename">   Filename of the configuration file. </param>
            
             <returns>   True if connection strings section protected, false if not. </returns>
        </member>
        <member name="T:GCS.Core.Common.Core.Alias">
             <summary>   An alias. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="F:GCS.Core.Common.Core.Alias._names">
            <summary>   The names. </summary>
        </member>
        <member name="M:GCS.Core.Common.Core.Alias.#ctor(System.String[])">
             <summary>   Constructor. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="names">    The names. </param>
        </member>
        <member name="P:GCS.Core.Common.Core.Alias.Names">
             <summary>   Gets or sets the names. </summary>
            
             <value> The names. </value>
        </member>
        <member name="T:GCS.Core.Common.Core.CancelMessageEventHandler">
             <summary>   Represents the method that handles a cancelable event. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="sender">   The source of the event. </param>
             <param name="e">        Cancel message event information. </param>
        </member>
        <member name="T:GCS.Core.Common.Core.CollectionBase`1">
             <summary>   A collection base. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
        </member>
        <member name="E:GCS.Core.Common.Core.CollectionBase`1._ItemPropertyChangedEvent">
            <summary>   Event queue for all listeners interested in Item_Property_Changed events. </summary>
        </member>
        <member name="F:GCS.Core.Common.Core.CollectionBase`1._ItemPropertyChangedSubscribers">
            <summary>   The item property changed subscribers. </summary>
        </member>
        <member name="E:GCS.Core.Common.Core.CollectionBase`1.ItemPropertyChanged">
            <summary>   Event queue for all listeners interested in ItemPropertyChanged events. </summary>
        </member>
        <member name="M:GCS.Core.Common.Core.CollectionBase`1.item_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
             <summary>   Event handler. Called by item for property changed events. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="sender">   Source of the event. </param>
             <param name="e">        Property changed event information. </param>
        </member>
        <member name="M:GCS.Core.Common.Core.CollectionBase`1.OnItemPropertyChanged(`0,System.String)">
             <summary>   Executes the item property changed action. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="item">         The object to insert. </param>
             <param name="propertyName"> Name of the property. </param>
        </member>
        <member name="F:GCS.Core.Common.Core.CollectionBase`1._IsDirty">
            <summary>   True if this CollectionBase&lt;T&gt; is dirty. </summary>
        </member>
        <member name="P:GCS.Core.Common.Core.CollectionBase`1.IsDirty">
             <summary>   Gets a value indicating whether this IDirtyCapable is dirty. </summary>
            
             <value> True if this IDirtyCapable is dirty, false if not. </value>
        </member>
        <member name="P:GCS.Core.Common.Core.CollectionBase`1.IsAnyPropertyDirty">
             <summary>   Gets a value indicating whether this IDirtyCapable is any property dirty. </summary>
            
             <value> True if this IDirtyCapable is any property dirty, false if not. </value>
        </member>
        <member name="F:GCS.Core.Common.Core.CollectionBase`1._IsPanelDataDirty">
            <summary>   True if this CollectionBase&lt;T&gt; is panel data dirty. </summary>
        </member>
        <member name="P:GCS.Core.Common.Core.CollectionBase`1.IsPanelDataDirty">
             <summary>   Gets a value indicating whether this IDirtyCapable is panel data dirty. </summary>
            
             <value> True if this IDirtyCapable is panel data dirty, false if not. </value>
        </member>
        <member name="M:GCS.Core.Common.Core.CollectionBase`1.IsAnythingDirty">
             <summary>   Query if this IDirtyCapable is anything dirty. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <returns>   True if anything dirty, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Core.CollectionBase`1.GetDirtyObjects">
             <summary>   Gets dirty objects. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <returns>   The dirty objects. </returns>
        </member>
        <member name="M:GCS.Core.Common.Core.CollectionBase`1.CleanAll">
             <summary>   Clean all. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Core.CollectionBase`1.MakeDirty">
             <summary>   Makes the dirty. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Core.CollectionBase`1.MakePanelDataDirty">
             <summary>   Makes panel data dirty. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Core.CollectionBase`1.InsertItem(System.Int32,`0)">
             <summary>   Inserts an item into the collection at the specified index. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="index">    The zero-based index at which <paramref name="item" /> should be
                                     inserted. </param>
             <param name="item">     The object to insert. </param>
        </member>
        <member name="M:GCS.Core.Common.Core.CollectionBase`1.RemoveItem(System.Int32)">
             <summary>   Removes the item at the specified index of the collection. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="index">    The zero-based index of the element to remove. </param>
        </member>
        <member name="M:GCS.Core.Common.Core.CollectionBase`1.ClearItems">
             <summary>   Removes all items from the collection. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Core.CollectionBase`1.SetItem(System.Int32,`0)">
             <summary>   Replaces the element at the specified index. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="index">    The zero-based index of the element to replace. </param>
             <param name="item">     The new value for the element at the specified index. </param>
        </member>
        <member name="T:GCS.Core.Common.Core.ItemPropertyChangedEventArgs`1">
             <summary>   Additional information for item property changed events. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
        </member>
        <member name="M:GCS.Core.Common.Core.ItemPropertyChangedEventArgs`1.#ctor(`0,System.String)">
             <summary>   Constructor. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="item">         The item. </param>
             <param name="propertyName"> The name of the property. </param>
        </member>
        <member name="P:GCS.Core.Common.Core.ItemPropertyChangedEventArgs`1.Item">
             <summary>   Gets or sets the item. </summary>
            
             <value> The item. </value>
        </member>
        <member name="P:GCS.Core.Common.Core.ItemPropertyChangedEventArgs`1.PropertyName">
             <summary>   Gets or sets the name of the property. </summary>
            
             <value> The name of the property. </value>
        </member>
        <member name="T:GCS.Core.Common.Core.ItemPropertyChangedEventHandler`1">
             <summary>   Delegate for handling ItemPropertyChanged events. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="sender">   Source of the event. </param>
             <param name="e">        The ItemPropertyChangedEventArgs&lt;T&gt; to process. </param>
        </member>
        <member name="T:GCS.Core.Common.Core.CancelMessageEventArgs">
             <summary>   Additional information for cancel message events. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Core.CancelMessageEventArgs.#ctor">
             <summary>   Default constructor. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Core.CancelMessageEventArgs.#ctor(System.String)">
             <summary>   Constructor. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="messsage"> The messsage. </param>
        </member>
        <member name="P:GCS.Core.Common.Core.CancelMessageEventArgs.Message">
             <summary>   Gets or sets the message. </summary>
            
             <value> The message. </value>
        </member>
        <member name="T:GCS.Core.Common.Core.DataContractBase">
             <summary>   A data contract base. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="P:GCS.Core.Common.Core.DataContractBase.ExtensionData">
             <summary>   Gets or sets the structure that contains extra data. </summary>
            
             <value>
             An <see cref="T:System.Runtime.Serialization.ExtensionDataObject" /> that contains data that
             is not recognized as belonging to the data contract.
             </value>
        </member>
        <member name="T:GCS.Core.Common.Core.DbObjectBase">
             <summary>   A database object base. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Core.DbObjectBase.#ctor">
             <summary>   Default constructor. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Core.DbObjectBase.#ctor(GCS.Core.Common.Core.DbObjectBase)">
             <summary>   Constructor. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="o">    The DbObjectBase to process. </param>
        </member>
        <member name="M:GCS.Core.Common.Core.DbObjectBase.Initialize">
             <summary>   Initializes this DbObjectBase. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Core.DbObjectBase.Initialize(GCS.Core.Common.Core.DbObjectBase)">
             <summary>   Initializes this DbObjectBase. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="o">    The DbObjectBase to process. </param>
        </member>
        <member name="T:GCS.Core.Common.Core.DtoObjectBase">
             <summary>   A dto object base. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="T:GCS.Core.Common.Core.EntityBase">
             <summary>   An entity base. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Core.EntityBase.#ctor">
             <summary>   Default constructor. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Core.EntityBase.#ctor(GCS.Core.Common.Core.EntityBase)">
             <summary>   Constructor. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="o">    The EntityBase to process. </param>
        </member>
        <member name="P:GCS.Core.Common.Core.EntityBase.EntityGuid">
             <summary>   Gets or sets a unique identifier of the entity. </summary>
            
             <value> Unique identifier of the entity. </value>
        </member>
        <member name="P:GCS.Core.Common.Core.EntityBase.IsDirty">
             <summary>   Gets or sets a value indicating whether this EntityBase is dirty. </summary>
            
             <value> True if this EntityBase is dirty, false if not. </value>
        </member>
        <member name="P:GCS.Core.Common.Core.EntityBase.IsPanelDataDirty">
             <summary>
             Gets or sets a value indicating whether this EntityBase is panel data dirty.
             </summary>
            
             <value> True if this EntityBase is panel data dirty, false if not. </value>
        </member>
        <member name="T:GCS.Core.Common.Core.EntityBaseSimple">
             <summary>   An entity base simple. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Core.EntityBaseSimple.#ctor">
             <summary>   Default constructor. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Core.EntityBaseSimple.#ctor(GCS.Core.Common.Core.EntityBase)">
             <summary>   Constructor. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="o">    The EntityBase to process. </param>
        </member>
        <member name="T:GCS.Core.Common.Core.NotificationObject">
             <summary>   A notification object. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="E:GCS.Core.Common.Core.NotificationObject._PropertyChangedEvent">
            <summary>   Event queue for all listeners interested in Property_Changed events. </summary>
        </member>
        <member name="F:GCS.Core.Common.Core.NotificationObject._PropertyChangedSubscribers">
            <summary>   The property changed subscribers. </summary>
        </member>
        <member name="M:GCS.Core.Common.Core.NotificationObject.#ctor">
             <summary>   Default constructor. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="E:GCS.Core.Common.Core.NotificationObject.PropertyChanged">
            <summary>   Occurs when a property value changes. </summary>
        </member>
        <member name="M:GCS.Core.Common.Core.NotificationObject.OnPropertyChanged(System.String)">
             <summary>   Executes the property changed action. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="propertyName"> Name of the property. </param>
        </member>
        <member name="M:GCS.Core.Common.Core.NotificationObject.OnPropertyChanged``1(System.Linq.Expressions.Expression{System.Func{``0}})">
             <summary>   Executes the property changed action. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="propertyExpression">   The property expression. </param>
        </member>
        <member name="T:GCS.Core.Common.Core.NotNavigableAttribute">
             <summary>   Attribute for not navigable. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="T:GCS.Core.Common.Core.ObjectBase">
             <summary>   An object base. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Core.ObjectBase.#ctor">
             <summary>   Default constructor. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="F:GCS.Core.Common.Core.ObjectBase._IsDirty">
            <summary>   True if this ObjectBase is dirty. </summary>
        </member>
        <member name="F:GCS.Core.Common.Core.ObjectBase._IsAnyPropertyDirty">
            <summary>   True if this ObjectBase is any property dirty. </summary>
        </member>
        <member name="F:GCS.Core.Common.Core.ObjectBase._IsPanelDataDirty">
            <summary>   True if this ObjectBase is panel data dirty. </summary>
        </member>
        <member name="F:GCS.Core.Common.Core.ObjectBase._Validator">
            <summary>   The validator. </summary>
        </member>
        <member name="F:GCS.Core.Common.Core.ObjectBase._ValidationErrors">
            <summary>   The validation errors. </summary>
        </member>
        <member name="F:GCS.Core.Common.Core.ObjectBase._CustomErrors">
            <summary>   The custom errors. </summary>
        </member>
        <member name="P:GCS.Core.Common.Core.ObjectBase.Container">
             <summary>   Gets or sets the container. </summary>
            
             <value> The container. </value>
        </member>
        <member name="P:GCS.Core.Common.Core.ObjectBase.ExtensionData">
             <summary>   Gets or sets the structure that contains extra data. </summary>
            
             <value>
             An <see cref="T:System.Runtime.Serialization.ExtensionDataObject" /> that contains data that
             is not recognized as belonging to the data contract.
             </value>
        </member>
        <member name="P:GCS.Core.Common.Core.ObjectBase.IsDirty">
             <summary>   Gets or sets a value indicating whether this IDirtyCapable is dirty. </summary>
            
             <value> True if this IDirtyCapable is dirty, false if not. </value>
        </member>
        <member name="P:GCS.Core.Common.Core.ObjectBase.IsAnyPropertyDirty">
             <summary>
             Gets or sets a value indicating whether this IDirtyCapable is any property dirty.
             </summary>
            
             <value> True if this IDirtyCapable is any property dirty, false if not. </value>
        </member>
        <member name="P:GCS.Core.Common.Core.ObjectBase.IsPanelDataDirty">
             <summary>
             Gets or sets a value indicating whether this IDirtyCapable is panel data dirty.
             </summary>
            
             <value> True if this IDirtyCapable is panel data dirty, false if not. </value>
        </member>
        <member name="M:GCS.Core.Common.Core.ObjectBase.IsAnythingDirty">
             <summary>   Query if this IDirtyCapable is anything dirty. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <returns>   True if anything dirty, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Core.ObjectBase.IsAnyPanelDataDirty">
             <summary>   Query if this ObjectBase is any panel data dirty. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <returns>   True if any panel data dirty, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Core.ObjectBase.GetDirtyObjects">
             <summary>   Gets dirty objects. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <returns>   The dirty objects. </returns>
        </member>
        <member name="M:GCS.Core.Common.Core.ObjectBase.CleanAll">
             <summary>   Walks the object graph cleaning any dirty object. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Core.ObjectBase.MakeDirty">
             <summary>   Makes the dirty. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Core.ObjectBase.MakePanelDataDirty">
             <summary>   Makes panel data dirty. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Core.ObjectBase.WalkObjectGraph(System.Func{GCS.Core.Common.Core.ObjectBase,System.Boolean},System.Action{System.Collections.IList},System.String[])">
             <summary>   Walk object graph. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="snippetForObject">     The snippet for object. </param>
             <param name="snippetForCollection"> Collection of snippet fors. </param>
             <param name="exemptProperties">     A variable-length parameters list containing exempt
                                                 properties. </param>
        </member>
        <member name="M:GCS.Core.Common.Core.ObjectBase.OnPropertyChanged(System.String)">
             <summary>   Executes the property changed action. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="propertyName"> Name of the property. </param>
        </member>
        <member name="M:GCS.Core.Common.Core.ObjectBase.OnPropertyChanged``1(System.Linq.Expressions.Expression{System.Func{``0}},System.Boolean)">
             <summary>   Executes the property changed action. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="propertyExpression">   The property expression. </param>
             <param name="makeDirty">            True to make dirty. </param>
        </member>
        <member name="M:GCS.Core.Common.Core.ObjectBase.OnPropertyChanged(System.String,System.Boolean)">
             <summary>   Executes the property changed action. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="propertyName"> Name of the property. </param>
             <param name="makeDirty">    True to make dirty. </param>
        </member>
        <member name="M:GCS.Core.Common.Core.ObjectBase.OnPropertyChanged``1(System.Linq.Expressions.Expression{System.Func{``0}},System.Boolean,System.Boolean)">
             <summary>   Executes the property changed action. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="propertyExpression">   The property expression. </param>
             <param name="makeDirty">            True to make dirty. </param>
             <param name="makePanelDataDirty">   True to make panel data dirty. </param>
        </member>
        <member name="M:GCS.Core.Common.Core.ObjectBase.OnPropertyChanged(System.String,System.Boolean,System.Boolean)">
             <summary>   Executes the property changed action. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="propertyName">         Name of the property. </param>
             <param name="makeDirty">            True to make dirty. </param>
             <param name="makePanelDataDirty">   True to make panel data dirty. </param>
        </member>
        <member name="M:GCS.Core.Common.Core.ObjectBase.GetValidator">
             <summary>   Gets the validator. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <returns>   The validator. </returns>
        </member>
        <member name="P:GCS.Core.Common.Core.ObjectBase.ValidationErrors">
             <summary>   Gets or sets the validation errors. </summary>
            
             <value> The validation errors. </value>
        </member>
        <member name="M:GCS.Core.Common.Core.ObjectBase.AppendValidationError(FluentValidation.Results.ValidationFailure)">
             <summary>   Appends a validation error. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="error">    The error. </param>
        </member>
        <member name="M:GCS.Core.Common.Core.ObjectBase.AppendValidationErrors(System.Collections.Generic.IEnumerable{FluentValidation.Results.ValidationFailure})">
             <summary>   Appends a validation errors. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="errors">   The errors. </param>
        </member>
        <member name="M:GCS.Core.Common.Core.ObjectBase.Validate">
             <summary>   Validates this ObjectBase. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="P:GCS.Core.Common.Core.ObjectBase.IsValid">
             <summary>   Gets a value indicating whether this ObjectBase is valid. </summary>
            
             <value> True if this ObjectBase is valid, false if not. </value>
        </member>
        <member name="P:GCS.Core.Common.Core.ObjectBase.CustomErrors">
             <summary>   Gets or sets the custom errors. </summary>
            
             <value> The custom errors. </value>
        </member>
        <member name="P:GCS.Core.Common.Core.ObjectBase.System#ComponentModel#IDataErrorInfo#Error">
             <summary>   Gets an error message indicating what is wrong with this object. </summary>
            
             <value>
             An error message indicating what is wrong with this object. The default is an empty string
             ("").
             </value>
        </member>
        <member name="P:GCS.Core.Common.Core.ObjectBase.System#ComponentModel#IDataErrorInfo#Item(System.String)">
             <summary>   Gets the error message for the property with the given name. </summary>
            
             <param name="columnName">   The name of the property whose error message to get. </param>
            
             <returns>   The error message for the property. The default is an empty string (""). </returns>
        </member>
        <member name="T:GCS.Core.Common.Core.ObjectBaseSimple">
             <summary>   An object base simple. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Core.ObjectBaseSimple.#ctor">
             <summary>   Default constructor. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="F:GCS.Core.Common.Core.ObjectBaseSimple._Validator">
            <summary>   The validator. </summary>
        </member>
        <member name="F:GCS.Core.Common.Core.ObjectBaseSimple._ValidationErrors">
            <summary>   The validation errors. </summary>
        </member>
        <member name="F:GCS.Core.Common.Core.ObjectBaseSimple._CustomErrors">
            <summary>   The custom errors. </summary>
        </member>
        <member name="P:GCS.Core.Common.Core.ObjectBaseSimple.Container">
             <summary>   Gets or sets the container. </summary>
            
             <value> The container. </value>
        </member>
        <member name="P:GCS.Core.Common.Core.ObjectBaseSimple.ExtensionData">
             <summary>   Gets or sets the structure that contains extra data. </summary>
            
             <value>
             An <see cref="T:System.Runtime.Serialization.ExtensionDataObject" /> that contains data that
             is not recognized as belonging to the data contract.
             </value>
        </member>
        <member name="M:GCS.Core.Common.Core.ObjectBaseSimple.WalkObjectGraph(System.Func{GCS.Core.Common.Core.ObjectBaseSimple,System.Boolean},System.Action{System.Collections.IList},System.String[])">
             <summary>   Walk object graph. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="snippetForObject">     The snippet for object. </param>
             <param name="snippetForCollection"> Collection of snippet fors. </param>
             <param name="exemptProperties">     A variable-length parameters list containing exempt
                                                 properties. </param>
        </member>
        <member name="M:GCS.Core.Common.Core.ObjectBaseSimple.OnPropertyChanged``1(System.Linq.Expressions.Expression{System.Func{``0}})">
             <summary>   Executes the property changed action. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="propertyExpression">   The property expression. </param>
        </member>
        <member name="M:GCS.Core.Common.Core.ObjectBaseSimple.OnPropertyChanged(System.String)">
             <summary>   Executes the property changed action. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="propertyName"> Name of the property. </param>
        </member>
        <member name="M:GCS.Core.Common.Core.ObjectBaseSimple.GetValidator">
             <summary>   Gets the validator. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <returns>   The validator. </returns>
        </member>
        <member name="P:GCS.Core.Common.Core.ObjectBaseSimple.ValidationErrors">
             <summary>   Gets or sets the validation errors. </summary>
            
             <value> The validation errors. </value>
        </member>
        <member name="M:GCS.Core.Common.Core.ObjectBaseSimple.AppendValidationError(FluentValidation.Results.ValidationFailure)">
             <summary>   Appends a validation error. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="error">    The error. </param>
        </member>
        <member name="M:GCS.Core.Common.Core.ObjectBaseSimple.AppendValidationErrors(System.Collections.Generic.IEnumerable{FluentValidation.Results.ValidationFailure})">
             <summary>   Appends a validation errors. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="errors">   The errors. </param>
        </member>
        <member name="M:GCS.Core.Common.Core.ObjectBaseSimple.Validate">
             <summary>   Validates this ObjectBaseSimple. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="P:GCS.Core.Common.Core.ObjectBaseSimple.IsValid">
             <summary>   Gets a value indicating whether this ObjectBaseSimple is valid. </summary>
            
             <value> True if this ObjectBaseSimple is valid, false if not. </value>
        </member>
        <member name="P:GCS.Core.Common.Core.ObjectBaseSimple.CustomErrors">
             <summary>   Gets or sets the custom errors. </summary>
            
             <value> The custom errors. </value>
        </member>
        <member name="P:GCS.Core.Common.Core.ObjectBaseSimple.System#ComponentModel#IDataErrorInfo#Error">
             <summary>   Gets an error message indicating what is wrong with this object. </summary>
            
             <value>
             An error message indicating what is wrong with this object. The default is an empty string
             ("").
             </value>
        </member>
        <member name="P:GCS.Core.Common.Core.ObjectBaseSimple.System#ComponentModel#IDataErrorInfo#Item(System.String)">
             <summary>   Gets the error message for the property with the given name. </summary>
            
             <param name="columnName">   The name of the property whose error message to get. </param>
            
             <returns>   The error message for the property. The default is an empty string (""). </returns>
        </member>
        <member name="T:GCS.Core.Common.Data.DataAccess">
             <summary>   A data access. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Data.DataAccess.GetDataSet(Microsoft.SqlServer.Management.Smo.Server,System.String)">
             <summary>   Gets data set. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="svr">  The server. </param>
             <param name="sql">  The SQL. </param>
            
             <returns>   The data set. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.DataAccess.GetDataSets(Microsoft.SqlServer.Management.Smo.Server,System.Collections.Specialized.StringCollection)">
             <summary>   Gets data sets. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="svr">          The server. </param>
             <param name="sqlCommands">  The SQL commands. </param>
            
             <returns>   An array of data set. </returns>
        </member>
        <member name="T:GCS.Core.Common.Data.DataInsertRepositoryBase`1">
             <summary>   A data insert repository base. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
        </member>
        <member name="M:GCS.Core.Common.Data.DataInsertRepositoryBase`1.InsertEntity(`0)">
             <summary>   Inserts an entity described by entity. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="entity">   The entity. </param>
        </member>
        <member name="M:GCS.Core.Common.Data.DataInsertRepositoryBase`1.Insert(`0)">
             <summary>   Inserts the given entity. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="entity">   The entity. </param>
        </member>
        <member name="T:GCS.Core.Common.Data.DataRepositoryDbContextBase`2">
             <summary>   A data repository database context base. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <typeparam name="U">    Generic type parameter. </typeparam>
        </member>
        <member name="P:GCS.Core.Common.Data.DataRepositoryDbContextBase`2.DataStoreTableName">
             <summary>   Gets or sets the name of the data store table. </summary>
            
             <value> The name of the data store table. </value>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryDbContextBase`2.AddEntity(`1,`0,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader)">
             <summary>   Adds an entity. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="entityContext">    Context for the entity. </param>
             <param name="entity">           The entity. </param>
             <param name="sessionData">      Information describing the session. </param>
            
             <returns>   A T. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryDbContextBase`2.UpdateEntity(`1,`0,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader)">
             <summary>   Updates the entity. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="entityContext">    Context for the entity. </param>
             <param name="entity">           The entity. </param>
             <param name="sessionData">      Information describing the session. </param>
            
             <returns>   A T. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryDbContextBase`2.DeleteEntity(`1,`0,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader)">
             <summary>   Deletes the entity. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="entityContext">    Context for the entity. </param>
             <param name="entity">           The entity. </param>
             <param name="sessionData">      Information describing the session. </param>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryDbContextBase`2.GetEntities(`1,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader)">
             <summary>   Gets the entities in this collection. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="entityContext">    Context for the entity. </param>
             <param name="sessionData">      Information describing the session. </param>
            
             <returns>
             An enumerator that allows foreach to be used to process the entities in this collection.
             </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryDbContextBase`2.GetEntityByIntId(`1,System.Int32,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader)">
             <summary>
             There are two GetEntityBy functions, one for entities with a int PK and one that has a Guid
             PK The derived class should return a null value from the method that is not supported by the
             particular table.
             </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="entityContext">    Context for the entity. </param>
             <param name="id">               The identifier. </param>
             <param name="sessionData">      Information describing the session. </param>
            
             <returns>   The entity by int identifier. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryDbContextBase`2.GetEntityByGuidId(`1,System.Guid,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader)">
             <summary>   Gets entity by unique identifier identifier. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="entityContext">    Context for the entity. </param>
             <param name="guid">             Unique identifier. </param>
             <param name="sessionData">      Information describing the session. </param>
            
             <returns>   The entity by unique identifier identifier. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryDbContextBase`2.SaveAuditData(`1,GCS.Core.Common.Contracts.OperationType,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader,`0,`0,System.String)">
             <summary>   Saves an audit data. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="entityContext">    Context for the entity. </param>
             <param name="operationType">    Type of the operation. </param>
             <param name="sessionData">      Information describing the session. </param>
             <param name="originalEntity">   The original entity. </param>
             <param name="newEntity">        The new entity. </param>
             <param name="auditXml">         The audit XML. </param>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryDbContextBase`2.Add(`0,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader)">
             <summary>   Adds entity. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="entity">       The entity. </param>
             <param name="sessionData">  Information describing the session. </param>
            
             <returns>   A T. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryDbContextBase`2.Remove(System.Int32,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader)">
             <summary>   Removes this IDataRepositoryDbContext&lt;T&gt; </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="id">           The identifier. </param>
             <param name="sessionData">  Information describing the session. </param>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryDbContextBase`2.Remove(`0,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader)">
             <summary>   Removes this IDataRepositoryDbContext&lt;T&gt; </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="entity">       The entity. </param>
             <param name="sessionData">  Information describing the session. </param>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryDbContextBase`2.Remove(System.Guid,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader)">
             <summary>   Removes this IDataRepositoryDbContext&lt;T&gt; </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="id">           The identifier. </param>
             <param name="sessionData">  Information describing the session. </param>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryDbContextBase`2.Update(`0,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader)">
             <summary>   Updates this IDataRepositoryDbContext&lt;T&gt; </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="entity">       The entity. </param>
             <param name="sessionData">  Information describing the session. </param>
            
             <returns>   A T. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryDbContextBase`2.Get(GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader)">
             <summary>   Gets. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="sessionData">  Information describing the session. </param>
            
             <returns>   A T. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryDbContextBase`2.Get(System.Int32,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader)">
             <summary>   Gets. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="id">           The identifier. </param>
             <param name="sessionData">  Information describing the session. </param>
            
             <returns>   A T. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryDbContextBase`2.Get(System.Guid,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader)">
             <summary>   Gets. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="id">           The identifier. </param>
             <param name="sessionData">  Information describing the session. </param>
            
             <returns>   A T. </returns>
        </member>
        <member name="T:GCS.Core.Common.Data.PDSADataAccess">
             <summary>   A pdsa data access. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Data.PDSADataAccess.GetProvider">
             <summary>   Gets the provider. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <returns>   The provider. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.PDSADataAccess.GetDatabaseConnectionString">
             <summary>   Gets database connection string. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <returns>   The database connection string. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.PDSADataAccess.GetDataSet(System.String)">
             <summary>   Gets data set. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="sql">  The SQL. </param>
            
             <returns>   The data set. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.PDSADataAccess.ExecuteSQL(System.String,System.Collections.Generic.IEnumerable{System.Data.IDataParameter})">
             <summary>   Executes the SQL operation. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="sql">          The SQL. </param>
             <param name="parameters">   Options for controlling the operation. </param>
        </member>
        <member name="T:GCS.Core.Common.Data.SequentialGuidType">
             <summary>   Values that represent sequential Unique identifier types. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="F:GCS.Core.Common.Data.SequentialGuidType.SequentialAsString">
            <summary>   An enum constant representing the sequential as string option. </summary>
        </member>
        <member name="F:GCS.Core.Common.Data.SequentialGuidType.SequentialAsBinary">
            <summary>   An enum constant representing the sequential as binary option. </summary>
        </member>
        <member name="F:GCS.Core.Common.Data.SequentialGuidType.SequentialAtEnd">
            <summary>   An enum constant representing the sequential at end option. </summary>
        </member>
        <member name="T:GCS.Core.Common.Data.SequentialGuidGenerator">
             <summary>   A sequential unique identifier generator. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="F:GCS.Core.Common.Data.SequentialGuidGenerator._rng">
            <summary>   The random number generator. </summary>
        </member>
        <member name="M:GCS.Core.Common.Data.SequentialGuidGenerator.NewSequentialGuid(GCS.Core.Common.Data.SequentialGuidType)">
             <summary>   Creates a new sequential unique identifier. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="guidType"> Type of the unique identifier. </param>
            
             <returns>   A GUID. </returns>
        </member>
        <member name="T:GCS.Core.Common.Data.DataRepositoryBase`1">
             <summary>   A data repository base. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
        </member>
        <member name="P:GCS.Core.Common.Data.DataRepositoryBase`1.DataStoreTableName">
             <summary>   Gets or sets the name of the data store table. </summary>
            
             <value> The name of the data store table. </value>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryBase`1.AddEntity(`0,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader,GCS.Core.Common.Contracts.ISaveParameters)">
             <summary>   Adds an entity. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="entity">       The entity. </param>
             <param name="sessionData">  Information describing the session. </param>
             <param name="transaction">  The transaction. </param>
             <param name="saveParams">   Save parameters </param>
            
             <returns>   A T. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryBase`1.UpdateEntity(`0,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader,GCS.Core.Common.Contracts.ISaveParameters)">
             <summary>   Updates the entity. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="entity">       The entity. </param>
             <param name="sessionData">  Information describing the session. </param>
             <param name="transaction">  The transaction. </param>
             <param name="saveParams">   Save parameters </param>
            
             <returns>   A T. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryBase`1.DeleteEntity(`0,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader)">
             <summary>   Deletes the entity. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="entity">       The entity. </param>
             <param name="sessionData">  Information describing the session. </param>
             <param name="transaction">  The transaction. </param>
            
             <returns>   An int. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryBase`1.GetEntities(GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader,GCS.Core.Common.Contracts.IGetParametersWithPhoto)">
             <summary>   Gets the entities in this collection. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="sessionData">      Information describing the session. </param>
             <param name="getParameters">    Options for controlling the get. </param>
            
             <returns>
             An enumerator that allows foreach to be used to process the entities in this collection.
             </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryBase`1.GetAllEntities(GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader,GCS.Core.Common.Contracts.IGetParametersWithPhoto)">
             <summary>   Gets all entities in this collection. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="sessionData">      Information describing the session. </param>
             <param name="getParameters">    Options for controlling the get. </param>
            
             <returns>
             An enumerator that allows foreach to be used to process all entities in this collection.
             </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryBase`1.GetEntityByIntId(System.Int32,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader,GCS.Core.Common.Contracts.IGetParametersWithPhoto)">
             <summary>
             There are two GetEntityBy functions, one for entities with a int PK and one that has a Guid
             PK The derived class should return a null value from the method that is not supported by the
             particular table.
             </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="id">               The identifier. </param>
             <param name="sessionData">      Information describing the session. </param>
             <param name="getParameters">    Options for controlling the get. </param>
            
             <returns>   The entity by int identifier. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryBase`1.GetEntityByGuidId(System.Guid,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader,GCS.Core.Common.Contracts.IGetParametersWithPhoto)">
             <summary>   Gets entity by unique identifier identifier. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="guid">             Unique identifier. </param>
             <param name="sessionData">      Information describing the session. </param>
             <param name="getParameters">    Options for controlling the get. </param>
            
             <returns>   The entity by unique identifier identifier. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryBase`1.SaveAuditData(GCS.Core.Common.Contracts.OperationType,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader,`0,`0,System.String)">
             <summary>   Saves an audit data. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="operationType">    Type of the operation. </param>
             <param name="sessionData">      Information describing the session. </param>
             <param name="originalEntity">   The original entity. </param>
             <param name="newEntity">        The new entity. </param>
             <param name="auditXml">         The audit XML. </param>
             <param name="transaction">      The transaction. </param>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryBase`1.FillMemberCollections(`0,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader,GCS.Core.Common.Contracts.IGetParametersWithPhoto)">
             <summary>   Fill member collections. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="entity">           The entity. </param>
             <param name="sessionData">      Information describing the session. </param>
             <param name="getParameters">    Options for controlling the get. </param>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryBase`1.IsEntityReferenced(System.Guid)">
             <summary>   Query if 'id' is entity referenced. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="id">   The identifier. </param>
            
             <returns>   True if entity referenced, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryBase`1.IsEntityReferenced(System.Int32)">
             <summary>   Query if 'id' is entity referenced. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="id">   The identifier. </param>
            
             <returns>   True if entity referenced, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryBase`1.CanEntityBeDeleted(System.Guid)">
             <summary>   Determine if we can entity be deleted. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="id">   The identifier. </param>
            
             <returns>   True if we can entity be deleted, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryBase`1.CanEntityBeDeleted(System.Int32)">
             <summary>   Determine if we can entity be deleted. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="id">   The identifier. </param>
            
             <returns>   True if we can entity be deleted, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryBase`1.IsEntityUnique(`0)">
             <summary>   Query if 'entity' is entity unique. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="entity">   The entity. </param>
            
             <returns>   True if entity unique, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryBase`1.DoesEntityExist(System.Guid)">
             <summary>   Query if 'id' does entity exist. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="id">   The identifier. </param>
            
             <returns>   True if it succeeds, false if it fails. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryBase`1.DoesEntityExist(System.Int32)">
             <summary>   Query if 'id' does entity exist. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="id">   The identifier. </param>
            
             <returns>   True if it succeeds, false if it fails. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryBase`1.Add(`0,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader,GCS.Core.Common.Contracts.ISaveParameters)">
             <summary>   Adds entity. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="entity">       The entity. </param>
             <param name="sessionData">  Information describing the session. </param>
             <param name="transaction">  The transaction. </param>
             <param name="saveParams">  The save parameters. </param>
            
             <returns>   A T. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryBase`1.Remove(System.Int32,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader)">
             <summary>   Removes this IDataRepository&lt;T&gt; </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="id">           The identifier. </param>
             <param name="sessionData">  Information describing the session. </param>
             <param name="transaction">  The transaction. </param>
            
             <returns>   An int. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryBase`1.Remove(`0,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader)">
             <summary>   Removes this IDataRepository&lt;T&gt; </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="entity">       The entity. </param>
             <param name="sessionData">  Information describing the session. </param>
             <param name="transaction">  The transaction. </param>
            
             <returns>   An int. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryBase`1.Remove(System.Guid,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader)">
             <summary>   Removes this IDataRepository&lt;T&gt; </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="id">           The identifier. </param>
             <param name="sessionData">  Information describing the session. </param>
             <param name="transaction">  The transaction. </param>
            
             <returns>   An int. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryBase`1.Update(`0,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader,GCS.Core.Common.Contracts.ISaveParameters)">
             <summary>   Updates this IDataRepository&lt;T&gt; </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="entity">       The entity. </param>
             <param name="sessionData">  Information describing the session. </param>
             <param name="transaction">  The transaction. </param>
             <param name="saveParams">   Save parameters </param>
            
             <returns>   A T. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryBase`1.Get(GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader,GCS.Core.Common.Contracts.IGetParametersWithPhoto)">
             <summary>   Gets. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="sessionData">      Information describing the session. </param>
             <param name="getParameters">    Options for controlling the get. </param>
            
             <returns>   A T. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryBase`1.GetAll(GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader,GCS.Core.Common.Contracts.IGetParametersWithPhoto)">
             <summary>   Gets all items in this collection. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="sessionData">      Information describing the session. </param>
             <param name="getParameters">    Options for controlling the get. </param>
            
             <returns>
             An enumerator that allows foreach to be used to process all items in this collection.
             </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryBase`1.Get(System.Int32,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader,GCS.Core.Common.Contracts.IGetParametersWithPhoto)">
             <summary>   Gets. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="id">               The identifier. </param>
             <param name="sessionData">      Information describing the session. </param>
             <param name="getParameters">    Options for controlling the get. </param>
            
             <returns>   A T. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryBase`1.Get(System.Guid,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader,GCS.Core.Common.Contracts.IGetParametersWithPhoto)">
             <summary>   Gets. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="id">               The identifier. </param>
             <param name="sessionData">      Information describing the session. </param>
             <param name="getParameters">    Options for controlling the get. </param>
            
             <returns>   A T. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryBase`1.IsReferenced(System.Guid)">
             <summary>   Query if 'id' is referenced. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="id">   The identifier. </param>
            
             <returns>   True if referenced, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryBase`1.IsReferenced(System.Int32)">
             <summary>   Query if 'id' is referenced. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="id">   The identifier. </param>
            
             <returns>   True if referenced, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryBase`1.CanDelete(System.Guid)">
             <summary>   Determine if we can delete. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="id">   The identifier. </param>
            
             <returns>   True if we can delete, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryBase`1.CanDelete(System.Int32)">
             <summary>   Determine if we can delete. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="id">   The identifier. </param>
            
             <returns>   True if we can delete, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryBase`1.IsUnique(`0)">
             <summary>   Query if 'entity' is unique. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="entity">   The entity. </param>
            
             <returns>   True if unique, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryBase`1.DoesExist(System.Guid)">
             <summary>   Query if 'id' does exist. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="id">   The identifier. </param>
            
             <returns>   True if it succeeds, false if it fails. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryBase`1.DoesExist(System.Int32)">
             <summary>   Query if 'id' does exist. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="id">   The identifier. </param>
            
             <returns>   True if it succeeds, false if it fails. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryBase`1.UpdateTableEntityBasePropertiesFromExisting(GCS.Core.Common.Contracts.ITableEntityBase,GCS.Core.Common.Contracts.ITableEntityBase)">
             <summary>   Updates the table entity base properties from existing. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="o">    The ITableEntityBase to process. </param>
             <param name="e">    The ITableEntityBase to process. </param>
        </member>
        <member name="M:GCS.Core.Common.Data.DataRepositoryBase`1.UpdateTableEntityBaseProperties(GCS.Core.Common.Contracts.ITableEntityBase,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader)">
             <summary>   Updates the table entity base properties. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="o">            The ITableEntityBase to process. </param>
             <param name="sessionData">  Information describing the session. </param>
        </member>
        <member name="M:GCS.Core.Common.Data.PagedDataRepositoryBase`1.GetAllEntitiesPaged(GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader,GCS.Core.Common.Contracts.IGetParametersWithPhoto)">
             <summary>   Gets all entities in this collection. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="sessionData">      Information describing the session. </param>
             <param name="getParameters">    Options for controlling the get. </param>
            
             <returns>
             An enumerator that allows foreach to be used to process all entities in this collection.
             </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.PagedDataRepositoryBase`1.GetPaged(GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader,GCS.Core.Common.Contracts.IGetParametersWithPhoto)">
             <summary>   Gets. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="sessionData">      Information describing the session. </param>
             <param name="getParameters">    Options for controlling the get. </param>
            
             <returns>   An ArrayResponse object with the results </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.PagedDataRepositoryBase`1.GetAllPaged(GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader,GCS.Core.Common.Contracts.IGetParametersWithPhoto)">
             <summary>   Gets all items in this collection. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="sessionData">      Information describing the session. </param>
             <param name="getParameters">    Options for controlling the get. </param>
            
             <returns>   An ArrayResponse object with the results </returns>
        </member>
        <member name="T:GCS.Core.Common.Data.SimpleDataRepositoryBase`1">
             <summary>   A simple data repository base. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
        </member>
        <member name="P:GCS.Core.Common.Data.SimpleDataRepositoryBase`1.DataStoreTableName">
             <summary>   Gets or sets the name of the data store table. </summary>
            
             <value> The name of the data store table. </value>
        </member>
        <member name="M:GCS.Core.Common.Data.SimpleDataRepositoryBase`1.AddEntity(`0,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader)">
             <summary>   Adds an entity. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="entity">       The entity. </param>
             <param name="sessionData">  Information describing the session. </param>
             <param name="transaction">  The transaction. </param>
            
             <returns>   A T. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.SimpleDataRepositoryBase`1.UpdateEntity(`0,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader)">
             <summary>   Updates the entity. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="entity">       The entity. </param>
             <param name="sessionData">  Information describing the session. </param>
             <param name="transaction">  The transaction. </param>
            
             <returns>   A T. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.SimpleDataRepositoryBase`1.DeleteEntity(`0,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader)">
             <summary>   Deletes the entity. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="entity">       The entity. </param>
             <param name="sessionData">  Information describing the session. </param>
             <param name="transaction">  The transaction. </param>
            
             <returns>   An int. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.SimpleDataRepositoryBase`1.GetEntities(GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader,GCS.Core.Common.Contracts.IGetParametersWithPhoto)">
             <summary>   Gets the entities in this collection. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="sessionData">      Information describing the session. </param>
             <param name="getParameters">    Options for controlling the get. </param>
            
             <returns>
             An enumerator that allows foreach to be used to process the entities in this collection.
             </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.SimpleDataRepositoryBase`1.GetEntityByIntId(System.Int32,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader,GCS.Core.Common.Contracts.IGetParametersWithPhoto)">
             <summary>
             There are two GetEntityBy functions, one for entities with a int PK and one that has a Guid
             PK The derived class should return a null value from the method that is not supported by the
             particular table.
             </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="id">               The identifier. </param>
             <param name="sessionData">      Information describing the session. </param>
             <param name="getParameters">    Options for controlling the get. </param>
            
             <returns>   The entity by int identifier. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.SimpleDataRepositoryBase`1.GetEntityByGuidId(System.Guid,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader,GCS.Core.Common.Contracts.IGetParametersWithPhoto)">
             <summary>   Gets entity by unique identifier identifier. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="guid">             Unique identifier. </param>
             <param name="sessionData">      Information describing the session. </param>
             <param name="getParameters">    Options for controlling the get. </param>
            
             <returns>   The entity by unique identifier identifier. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.SimpleDataRepositoryBase`1.SaveAuditData(GCS.Core.Common.Contracts.OperationType,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader,`0,`0,System.String)">
             <summary>   Saves an audit data. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="operationType">    Type of the operation. </param>
             <param name="sessionData">      Information describing the session. </param>
             <param name="originalEntity">   The original entity. </param>
             <param name="newEntity">        The new entity. </param>
             <param name="auditXml">         The audit XML. </param>
             <param name="transaction">      The transaction. </param>
        </member>
        <member name="M:GCS.Core.Common.Data.SimpleDataRepositoryBase`1.FillMemberCollections(`0,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader)">
             <summary>   Fill member collections. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="entity">       The entity. </param>
             <param name="sessionData">  Information describing the session. </param>
        </member>
        <member name="M:GCS.Core.Common.Data.SimpleDataRepositoryBase`1.IsEntityReferenced(System.Guid)">
             <summary>   Query if 'id' is entity referenced. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="id">   The identifier. </param>
            
             <returns>   True if entity referenced, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.SimpleDataRepositoryBase`1.IsEntityReferenced(System.Int32)">
             <summary>   Query if 'id' is entity referenced. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="id">   The identifier. </param>
            
             <returns>   True if entity referenced, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.SimpleDataRepositoryBase`1.CanEntityBeDeleted(System.Guid)">
             <summary>   Determine if we can entity be deleted. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="id">   The identifier. </param>
            
             <returns>   True if we can entity be deleted, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.SimpleDataRepositoryBase`1.CanEntityBeDeleted(System.Int32)">
             <summary>   Determine if we can entity be deleted. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="id">   The identifier. </param>
            
             <returns>   True if we can entity be deleted, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.SimpleDataRepositoryBase`1.IsEntityUnique(`0)">
             <summary>   Query if 'entity' is entity unique. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="entity">   The entity. </param>
            
             <returns>   True if entity unique, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.SimpleDataRepositoryBase`1.DoesEntityExist(System.Guid)">
             <summary>   Query if 'id' does entity exist. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="id">   The identifier. </param>
            
             <returns>   True if it succeeds, false if it fails. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.SimpleDataRepositoryBase`1.DoesEntityExist(System.Int32)">
             <summary>   Query if 'id' does entity exist. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="id">   The identifier. </param>
            
             <returns>   True if it succeeds, false if it fails. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.SimpleDataRepositoryBase`1.Add(`0,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader)">
             <summary>   Adds entity. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="entity">       The entity. </param>
             <param name="sessionData">  Information describing the session. </param>
             <param name="transaction">  The transaction. </param>
            
             <returns>   A T. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.SimpleDataRepositoryBase`1.Remove(System.Int32,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader)">
             <summary>   Removes this ISimpleDataRepository&lt;T&gt; </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="id">           The identifier. </param>
             <param name="sessionData">  Information describing the session. </param>
             <param name="transaction">  The transaction. </param>
            
             <returns>   An int. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.SimpleDataRepositoryBase`1.Remove(`0,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader)">
             <summary>   Removes this ISimpleDataRepository&lt;T&gt; </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="entity">       The entity. </param>
             <param name="sessionData">  Information describing the session. </param>
             <param name="transaction">  The transaction. </param>
            
             <returns>   An int. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.SimpleDataRepositoryBase`1.Remove(System.Guid,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader)">
             <summary>   Removes this ISimpleDataRepository&lt;T&gt; </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="id">           The identifier. </param>
             <param name="sessionData">  Information describing the session. </param>
             <param name="transaction">  The transaction. </param>
            
             <returns>   An int. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.SimpleDataRepositoryBase`1.Update(`0,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader)">
             <summary>   Updates this ISimpleDataRepository&lt;T&gt; </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="entity">       The entity. </param>
             <param name="sessionData">  Information describing the session. </param>
             <param name="transaction">  The transaction. </param>
            
             <returns>   A T. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.SimpleDataRepositoryBase`1.Get">
             <summary>   Gets. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <returns>   A T. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.SimpleDataRepositoryBase`1.Get(GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader,GCS.Core.Common.Contracts.IGetParametersWithPhoto)">
             <summary>   Gets. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="sessionData">      Information describing the session. </param>
             <param name="getParameters">    Options for controlling the get. </param>
            
             <returns>   A T. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.SimpleDataRepositoryBase`1.Get(System.Int32,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader,GCS.Core.Common.Contracts.IGetParametersWithPhoto)">
             <summary>   Gets. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="id">               The identifier. </param>
             <param name="sessionData">      Information describing the session. </param>
             <param name="getParameters">    Options for controlling the get. </param>
            
             <returns>   A T. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.SimpleDataRepositoryBase`1.Get(System.Guid,GCS.Core.Common.Contracts.IApplicationUserSessionDataHeader,GCS.Core.Common.Contracts.IGetParametersWithPhoto)">
             <summary>   Gets. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="id">               The identifier. </param>
             <param name="sessionData">      Information describing the session. </param>
             <param name="getParameters">    Options for controlling the get. </param>
            
             <returns>   A T. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.SimpleDataRepositoryBase`1.IsReferenced(System.Guid)">
             <summary>   Query if 'id' is referenced. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="id">   The identifier. </param>
            
             <returns>   True if referenced, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.SimpleDataRepositoryBase`1.IsReferenced(System.Int32)">
             <summary>   Query if 'id' is referenced. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="id">   The identifier. </param>
            
             <returns>   True if referenced, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.SimpleDataRepositoryBase`1.CanDelete(System.Guid)">
             <summary>   Determine if we can delete. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="id">   The identifier. </param>
            
             <returns>   True if we can delete, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.SimpleDataRepositoryBase`1.CanDelete(System.Int32)">
             <summary>   Determine if we can delete. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="id">   The identifier. </param>
            
             <returns>   True if we can delete, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.SimpleDataRepositoryBase`1.IsUnique(`0)">
             <summary>   Query if 'entity' is unique. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="entity">   The entity. </param>
            
             <returns>   True if unique, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.SimpleDataRepositoryBase`1.DoesExist(System.Guid)">
             <summary>   Query if 'id' does exist. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="id">   The identifier. </param>
            
             <returns>   True if it succeeds, false if it fails. </returns>
        </member>
        <member name="M:GCS.Core.Common.Data.SimpleDataRepositoryBase`1.DoesExist(System.Int32)">
             <summary>   Query if 'id' does exist. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="id">   The identifier. </param>
            
             <returns>   True if it succeeds, false if it fails. </returns>
        </member>
        <member name="T:GCS.Core.Common.OperationCanceledEventArgs`1">
             <summary>   Additional information for operation canceled events. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
        </member>
        <member name="M:GCS.Core.Common.OperationCanceledEventArgs`1.#ctor">
             <summary>   Default constructor. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.OperationCanceledEventArgs`1.#ctor(`0,System.Guid)">
             <summary>   Constructor. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="entity">       The entity. </param>
             <param name="operationId">  The identifier of the operation. </param>
        </member>
        <member name="P:GCS.Core.Common.OperationCanceledEventArgs`1.Entity">
             <summary>   Gets or sets the entity. </summary>
            
             <value> The entity. </value>
        </member>
        <member name="P:GCS.Core.Common.OperationCanceledEventArgs`1.OperationId">
             <summary>   Gets or sets the identifier of the operation. </summary>
            
             <value> The identifier of the operation. </value>
        </member>
        <member name="T:GCS.Core.Common.EntitySavedEventArgs`1">
             <summary>   Additional information for entity saved events. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
        </member>
        <member name="M:GCS.Core.Common.EntitySavedEventArgs`1.#ctor">
             <summary>   Default constructor. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.EntitySavedEventArgs`1.#ctor(`0,System.Boolean,System.Boolean)">
             <summary>   Constructor. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="entity">       The entity. </param>
             <param name="isNew">        True if this EntitySavedEventArgs&lt;T&gt; is new, false if not. </param>
             <param name="closeEditor">  True if close editor, false if not. </param>
        </member>
        <member name="P:GCS.Core.Common.EntitySavedEventArgs`1.Entity">
             <summary>   Gets or sets the entity. </summary>
            
             <value> The entity. </value>
        </member>
        <member name="P:GCS.Core.Common.EntitySavedEventArgs`1.IsNew">
             <summary>
             Gets or sets a value indicating whether this EntitySavedEventArgs&lt;T&gt; is new.
             </summary>
            
             <value> True if this EntitySavedEventArgs&lt;T&gt; is new, false if not. </value>
        </member>
        <member name="P:GCS.Core.Common.EntitySavedEventArgs`1.CloseEditor">
             <summary>   Gets or sets a value indicating whether the editor should be closed. </summary>
            
             <value> True if close editor, false if not. </value>
        </member>
        <member name="T:GCS.Core.Common.Extensions.ApplicationStateExtension">
             <summary>   An application state extension. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Extensions.ApplicationStateExtension.GetSetApplicationState``1(System.Web.HttpApplicationState,System.String,System.Object,System.Int32)">
             <summary>   A HttpApplicationState extension method that gets set application state. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="appState">         The appState to act on. </param>
             <param name="objectName">       Name of the object. </param>
             <param name="objectValue">      The object value. </param>
             <param name="syncCheckMinutes"> The synchronise check in minutes. </param>
            
             <returns>   The set application state. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.ApplicationStateExtension.GetSetApplicationState(System.Web.HttpApplicationState,System.String,System.Object,System.Int32)">
             <summary>
             A HttpApplicationState extension method that gets set application state.
             </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="appState">         The appState to act on. </param>
             <param name="objectName">       Name of the object. </param>
             <param name="objectValue">      The object value. </param>
             <param name="syncCheckMinutes"> The synchronise check in minutes. </param>
            
             <returns>   The set application state. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.ApplicationStateExtension.SetApplicationState(System.Web.HttpApplicationState,System.String,System.Object,System.Int32)">
             <summary>   A HttpApplicationState extension method that sets application state. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="appState">         The appState to act on. </param>
             <param name="objectName">       Name of the object. </param>
             <param name="objectValue">      The object value. </param>
             <param name="syncCheckMinutes"> The synchronise check in minutes. </param>
        </member>
        <member name="M:GCS.Core.Common.Extensions.ApplicationStateExtension.GetApplicationState(System.Web.HttpApplicationState,System.String)">
             <summary>   A HttpApplicationState extension method that gets application state. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="appState">     The appState to act on. </param>
             <param name="objectName">   Name of the object. </param>
            
             <returns>   The application state. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.ApplicationStateExtension.GetApplicationState``1(System.Web.HttpApplicationState,System.String)">
             <summary>   A HttpApplicationState extension method that gets application state. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="appState">     The appState to act on. </param>
             <param name="objectName">   Name of the object. </param>
            
             <returns>   The application state. </returns>
        </member>
        <member name="T:GCS.Core.Common.Extensions.HttpRequestMessageExtensions">
             <summary>   A HTTP request message extensions. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="F:GCS.Core.Common.Extensions.HttpRequestMessageExtensions.HttpContext">
            <summary>   Context for the HTTP. </summary>
        </member>
        <member name="F:GCS.Core.Common.Extensions.HttpRequestMessageExtensions.RemoteEndpointMessage">
            <summary>   Message describing the remote endpoint. </summary>
        </member>
        <member name="M:GCS.Core.Common.Extensions.HttpRequestMessageExtensions.GetClientIpAddress(System.Net.Http.HttpRequestMessage)">
             <summary>   A HttpRequestMessage extension method that gets client IP address. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="request">  The request to act on. </param>
            
             <returns>   The client IP address. </returns>
        </member>
        <member name="T:GCS.Core.Common.Extensions.SessionExtensions">
             <summary>   A session extensions. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Extensions.SessionExtensions.GetDataFromSession``1(System.Web.SessionState.HttpSessionState,System.String)">
             <summary>   Get value. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    . </typeparam>
             <param name="session">  . </param>
             <param name="key">      . </param>
            
             <returns>   The data from session. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.SessionExtensions.GetDataFromSession``1(System.Web.HttpSessionStateBase,System.String)">
             <summary>   Get value. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    . </typeparam>
             <param name="session">  . </param>
             <param name="key">      . </param>
            
             <returns>   The data from session. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.SessionExtensions.SetDataToSession``1(System.Web.SessionState.HttpSessionState,System.String,System.Object)">
             <summary>   Set value. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    . </typeparam>
             <param name="session">  . </param>
             <param name="key">      . </param>
             <param name="value">    . </param>
        </member>
        <member name="M:GCS.Core.Common.Extensions.SessionExtensions.SetDataToSession``1(System.Web.HttpSessionStateBase,System.String,System.Object)">
             <summary>   Set value. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    . </typeparam>
             <param name="session">  . </param>
             <param name="key">      . </param>
             <param name="value">    . </param>
        </member>
        <member name="T:GCS.Core.Common.Extensions.LinqExtensions">
             <summary>   A linq extensions. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Extensions.LinqExtensions.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,System.Boolean})">
             <summary>   Enumerates except in this collection. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="TSource">  Type of the source. </typeparam>
             <param name="first">    The first to act on. </param>
             <param name="second">   The second. </param>
             <param name="comparer"> The comparer. </param>
            
             <returns>
             An enumerator that allows foreach to be used to process except in this collection.
             </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.LinqExtensions.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,System.Boolean})">
             <summary>   Enumerates intersect in this collection. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="TSource">  Type of the source. </typeparam>
             <param name="first">    The first to act on. </param>
             <param name="second">   The second. </param>
             <param name="comparer"> The comparer. </param>
            
             <returns>
             An enumerator that allows foreach to be used to process intersect in this collection.
             </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.LinqExtensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}})">
             <summary>   Enumerates descendants in this collection. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="source">       The source to act on. </param>
             <param name="DescendBy">    Amount to descend by. </param>
            
             <returns>
             An enumerator that allows foreach to be used to process descendants in this collection.
             </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.LinqExtensions.GetPage``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
             <summary>   Gets the pages in this collection. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="TSource">  Type of the source. </typeparam>
             <param name="source">   The source to act on. </param>
             <param name="page">     The page. </param>
             <param name="pageSize"> Size of the page. </param>
            
             <returns>
             An enumerator that allows foreach to be used to process the pages in this collection.
             </returns>
        </member>
        <member name="T:GCS.Core.Common.Extensions.DataExtensions">
             <summary>   A data extensions. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Extensions.DataExtensions.ToFullyLoaded``1(System.Linq.IQueryable{``0})">
             <summary>   Enumerates to fully loaded in this collection. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="query">    The query to act on. </param>
            
             <returns>   Query as an IEnumerable&lt;T&gt; </returns>
        </member>
        <member name="T:GCS.Core.Common.Extensions.MefExtensions">
             <summary>   A MEF extensions. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="F:GCS.Core.Common.Extensions.MefExtensions.Container">
            <summary>   The container. </summary>
        </member>
        <member name="M:GCS.Core.Common.Extensions.MefExtensions.GetExportedValueByType(System.ComponentModel.Composition.Hosting.CompositionContainer,System.Type)">
             <summary>   A CompositionContainer extension method that gets exported value by type. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="container">    The container to act on. </param>
             <param name="type">         The type. </param>
            
             <returns>   The exported value by type. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.MefExtensions.GetExportedValuesByType(System.ComponentModel.Composition.Hosting.CompositionContainer,System.Type)">
             <summary>   Gets the exported values by types in this collection. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="container">    The container to act on. </param>
             <param name="type">         The type. </param>
            
             <returns>
             An enumerator that allows foreach to be used to process the exported values by types in this
             collection.
             </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.MefExtensions.GetExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,System.Func{System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean})">
             <summary>   A CompositionContainer extension method that gets exported value. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="container">    The container to act on. </param>
             <param name="predicate">    The predicate. </param>
            
             <returns>   The exported value. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.MefExtensions.GetExportedValueByType``1(System.ComponentModel.Composition.Hosting.CompositionContainer,System.String)">
             <summary>
             A CompositionContainer extension method that gets exported value by type.
             </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="container">    The container to act on. </param>
             <param name="type">         The type. </param>
            
             <returns>   The exported value by type. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.ByteArrayExtensions.ToBase64String(System.Byte[])">
             <summary>   A byte[] extension method that convert byte array to base 64 string. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="bytes">    The bytes to act on. </param>
            
             <returns>   The byte converted array to base 64 string. </returns>
        </member>
        <member name="T:GCS.Core.Common.Extensions.CoreExtensions">
             <summary>   A core extensions. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Extensions.CoreExtensions.Merge``1(System.Collections.ObjectModel.ObservableCollection{``0},System.Collections.Generic.IEnumerable{``0})">
             <summary>   An ObservableCollection&lt;T&gt; extension method that merges. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="source">       The source to act on. </param>
             <param name="collection">   The collection to act on. </param>
        </member>
        <member name="M:GCS.Core.Common.Extensions.CoreExtensions.Merge``1(System.Collections.ObjectModel.ObservableCollection{``0},System.Collections.Generic.IEnumerable{``0},System.Boolean)">
             <summary>   An ObservableCollection&lt;T&gt; extension method that merges. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="source">           The source to act on. </param>
             <param name="collection">       The collection to act on. </param>
             <param name="ignoreDuplicates"> True to ignore duplicates. </param>
        </member>
        <member name="M:GCS.Core.Common.Extensions.CoreExtensions.IsNavigable(System.Reflection.PropertyInfo)">
             <summary>   An ObjectBase extension method that query if 'obj' is navigable. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="property"> The property. </param>
            
             <returns>   True if navigable, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.CoreExtensions.IsNavigable(GCS.Core.Common.Core.ObjectBase,System.String)">
             <summary>   An ObjectBase extension method that query if 'obj' is navigable. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="obj">          The obj to act on. </param>
             <param name="propertyName"> Name of the property. </param>
            
             <returns>   True if navigable, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.CoreExtensions.IsNavigable``1(GCS.Core.Common.Core.ObjectBase,System.Linq.Expressions.Expression{System.Func{``0}})">
             <summary>   An ObjectBase extension method that query if 'obj' is navigable. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="obj">                  The obj to act on. </param>
             <param name="propertyExpression">   The property expression. </param>
            
             <returns>   True if navigable, false if not. </returns>
        </member>
        <member name="F:GCS.Core.Common.Extensions.CoreExtensions.BrowsableProperties">
            <summary>   The browsable properties. </summary>
        </member>
        <member name="F:GCS.Core.Common.Extensions.CoreExtensions.BrowsablePropertyInfos">
            <summary>   The browsable property infos. </summary>
        </member>
        <member name="M:GCS.Core.Common.Extensions.CoreExtensions.IsBrowsable(System.Object,System.Reflection.PropertyInfo)">
             <summary>   An object extension method that query if 'obj' is browsable. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="obj">      The obj to act on. </param>
             <param name="property"> The property. </param>
            
             <returns>   True if browsable, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.CoreExtensions.GetBrowsableProperties(System.Object)">
             <summary>   An object extension method that gets browsable properties. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="obj">  The obj to act on. </param>
            
             <returns>   An array of property information. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.CoreExtensions.ToObservableCollection``1(System.Collections.Generic.IEnumerable{``0})">
             <summary>
             A System.Collections.Specialized.StringCollection extension method that converts a collection
             to an observable collection.
             </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="enumerableList">   The enumerableList to act on. </param>
            
             <returns>   Collection as an ObservableCollection&lt;string&gt; </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.CoreExtensions.ToObservableCollection(System.Collections.Specialized.StringCollection)">
             <summary>
             A System.Collections.Specialized.StringCollection extension method that converts a collection
             to an observable collection.
             </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="collection">   The collection to act on. </param>
            
             <returns>   Collection as an ObservableCollection&lt;string&gt; </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.CoreExtensions.ToReadOnlyCollection``1(System.Collections.Generic.IList{``0})">
             <summary>
             An IList&lt;T&gt; extension method that converts an enumerableList to a read only
             collection.
             </summary>
            
             <remarks>   Kevin, 2/4/2022. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="enumerableList">   The enumerableList to act on. </param>
            
             <returns>   EnumerableList as a ReadOnlyCollection&lt;T&gt; </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.CoreExtensions.ToCollection``1(System.Collections.Generic.IEnumerable{``0})">
             <summary>
             An IEnumerable&lt;T&gt; extension method that converts an enumerableList to a collection.
             </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="enumerableList">   The enumerableList to act on. </param>
            
             <returns>   EnumerableList as an ICollection&lt;T&gt; </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.CoreExtensions.AddRange``1(System.Collections.ObjectModel.ObservableCollection{``0},System.Collections.Generic.IEnumerable{``0})">
             <summary>   An ICollection&lt;T&gt; extension method that adds a range to 'source'. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="collection">   The collection to act on. </param>
             <param name="items">        The items. </param>
        </member>
        <member name="M:GCS.Core.Common.Extensions.CoreExtensions.AddRange``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})">
             <summary>
             An ICollection&lt;T&gt; extension method that adds a range to 'source'.
             </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="destination">  The destination to act on. </param>
             <param name="source">       The source to act on. </param>
        </member>
        <member name="M:GCS.Core.Common.Extensions.CoreExtensions.Append(System.Collections.IEnumerable,System.Object[])">
             <summary>   Enumerates append in this collection. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="first">    The first to act on. </param>
             <param name="second">   A variable-length parameters list containing second. </param>
            
             <returns>
             An enumerator that allows foreach to be used to process append in this collection.
             </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.CoreExtensions.Append``1(System.Collections.Generic.IEnumerable{``0},``0[])">
             <summary>   Enumerates append in this collection. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="first">    The first to act on. </param>
             <param name="second">   A variable-length parameters list containing second. </param>
            
             <returns>
             An enumerator that allows foreach to be used to process append in this collection.
             </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.CoreExtensions.Append``1(``0[],``0[])">
             <summary>   Enumerates append in this collection. </summary>
            
             <remarks>   Kevin, 1/22/2019. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="first">    The first to act on. </param>
             <param name="second">   A variable-length parameters list containing second. </param>
            
             <returns>
             An enumerator that allows foreach to be used to process append in this collection.
             </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.CoreExtensions.Prepend(System.Collections.IEnumerable,System.Object[])">
             <summary>   Enumerates prepend in this collection. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="first">    The first to act on. </param>
             <param name="second">   A variable-length parameters list containing second. </param>
            
             <returns>
             An enumerator that allows foreach to be used to process prepend in this collection.
             </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.CoreExtensions.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0[])">
             <summary>   Enumerates prepend in this collection. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="first">    The first to act on. </param>
             <param name="second">   A variable-length parameters list containing second. </param>
            
             <returns>
             An enumerator that allows foreach to be used to process prepend in this collection.
             </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.CoreExtensions.Remove``1(System.Collections.ObjectModel.ObservableCollection{``0},System.Func{``0,System.Boolean})">
             <summary>
             An ObservableCollection&lt;T&gt; extension method that removes this CoreExtensions.
             </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="coll">         The coll to act on. </param>
             <param name="condition">    The condition. </param>
            
             <returns>   An int. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.CoreExtensions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
             <summary>   Enumerates distinct by in this collection. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="TSource">  Type of the source. </typeparam>
             <typeparam name="TKey">     Type of the key. </typeparam>
             <param name="source">       The source to act on. </param>
             <param name="keySelector">  The key selector. </param>
            
             <returns>
             An enumerator that allows foreach to be used to process distinct by in this collection.
             </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.CoreExtensions.IsNumber(System.Object)">
             <summary>   An object extension method that query if 'value' is number. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="value">    The value to act on. </param>
            
             <returns>   True if number, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.CoreExtensions.ToGuidCollection(System.Collections.Generic.IEnumerable{System.String})">
             <summary>
             An IEnumerable&lt;string&gt; extension method that converts an enumerableList to a unique
             identifier collection.
             </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="enumerableList">   The enumerableList to act on. </param>
            
             <returns>   EnumerableList as an ICollection&lt;Guid&gt; </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.CoreExtensions.ToStringCollection``1(System.Collections.Generic.IEnumerable{``0})">
             <summary>   A T extension method that converts an o to a string collection. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="enumerableList">   The enumerableList to act on. </param>
            
             <returns>   O as an ICollection&lt;string&gt; </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.CoreExtensions.AreLengthsEqual``1(``0[],``0[])">
             <summary>
             An IEnumerable&lt;T&gt; extension method that determine if we are lengths equal.
             </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="o">    The o to act on. </param>
             <param name="o1">   The first IEnumerable&lt;T&gt; </param>
            
             <returns>   True if lengths equal, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.CoreExtensions.AreLengthsEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
             <summary>
             An IEnumerable&lt;T&gt; extension method that determine if we are lengths equal.
             </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="o">    The o to act on. </param>
             <param name="o1">   The first IEnumerable&lt;T&gt; </param>
            
             <returns>   True if lengths equal, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.CoreExtensions.GetLength``1(System.Collections.Generic.IEnumerable{``0})">
             <summary>   An IEnumerable&lt;T&gt; extension method that gets a length. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="o">    The o to act on. </param>
            
             <returns>   The length. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.CoreExtensions.AreContentsEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
             <summary>
             An IEnumerable&lt;T&gt; extension method that determine if we are contents equal.
             </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="o">    The o to act on. </param>
             <param name="o1">   The first IEnumerable&lt;T&gt; </param>
            
             <returns>   True if contents equal, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.CoreExtensions.ToStringCollection``1(``0)">
             <summary>   A T extension method that converts an o to a string collection. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="o">    The o to act on. </param>
            
             <returns>   O as an ICollection&lt;string&gt; </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.CoreExtensions.ToStringArray``1(``0)">
             <summary>   A T extension method that converts an o to a string array. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="o">    The o to act on. </param>
            
             <returns>   O as a string[]. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.CoreExtensions.IsHex(System.Char)">
             <summary>   A char extension method that query if 'c' is hexadecimal. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="c">    The c to act on. </param>
            
             <returns>   True if hexadecimal, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.CoreExtensions.ImplementsInterface(System.Type,System.Type)">
             <summary>   A Type extension method that implements interface. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="type">         The type to act on. </param>
             <param name="interFace">    The inter face. </param>
            
             <returns>   True if it succeeds, false if it fails. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.CoreExtensions.IsEnumerable(System.Type)">
             <summary>   An object extension method that query if 'obj' is enumerable. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="type"> The type to act on. </param>
            
             <returns>   True if enumerable, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.CoreExtensions.IsEnumerable(System.Object)">
             <summary>   An object extension method that query if 'obj' is enumerable. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="obj">  The obj to act on. </param>
            
             <returns>   True if enumerable, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.CoreExtensions.IsGenericList(System.Object)">
             <summary>   An object extension method that query if 'obj' is generic list. </summary>
            
             <remarks>   Kevin, 6/5/2019. </remarks>
            
             <param name="obj">  The obj to act on. </param>
            
             <returns>   True if generic list, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.CoreExtensions.IsGenericList(System.Type)">
             <summary>   An object extension method that query if 'obj' is generic list. </summary>
            
             <remarks>   Kevin, 6/5/2019. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are
                                                         null. </exception>
            
             <param name="type"> The type to act on. </param>
            
             <returns>   True if generic list, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.CoreExtensions.GetMessageType(System.Object)">
             <summary>   An object extension method that gets message type. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="obj">  The obj to act on. </param>
            
             <returns>   The message type. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.CoreExtensions.ToJsonString(System.Object)">
             <summary>   An object extension method that converts an obj to a JSON string. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="obj">  The obj to act on. </param>
            
             <returns>   Obj as a string. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.CoreExtensions.ToJsonStream(System.Object)">
             <summary>   An object extension method that converts an obj to a JSON stream. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="obj">  The obj to act on. </param>
            
             <returns>   Obj as a Stream. </returns>
        </member>
        <member name="T:GCS.Core.Common.Extensions.DateTimeExtensions">
             <summary>   A date time extensions. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="F:GCS.Core.Common.Extensions.DateTimeExtensions._gc">
            <summary>   The GC. </summary>
        </member>
        <member name="M:GCS.Core.Common.Extensions.DateTimeExtensions.MinSqlDateTime(System.DateTime)">
             <summary>   A DateTimeOffset extension method that minimum SQL date time. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="dt">   The dt to act on. </param>
            
             <returns>   A DateTimeOffset. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.DateTimeExtensions.MaxSqlDateTime(System.DateTime)">
             <summary>   A DateTimeOffset extension method that maximum SQL date time. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="dt">   The dt to act on. </param>
            
             <returns>   A DateTimeOffset. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.DateTimeExtensions.MinSqlSmallDateTime(System.DateTime)">
             <summary>   A DateTimeOffset extension method that minimum SQL small date time. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="dt">   The dt to act on. </param>
            
             <returns>   A DateTimeOffset. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.DateTimeExtensions.MaxSqlSmallDateTime(System.DateTime)">
             <summary>   A DateTimeOffset extension method that maximum SQL small date time. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="dt">   The dt to act on. </param>
            
             <returns>   A DateTimeOffset. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.DateTimeExtensions.MinSqlDateTime2(System.DateTime)">
             <summary>   A DateTimeOffset extension method that minimum SQL date time 2. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="dt">   The dt to act on. </param>
            
             <returns>   A DateTimeOffset. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.DateTimeExtensions.MaxSqlDateTime2(System.DateTime)">
             <summary>   A DateTimeOffset extension method that maximum SQL date time 2. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="dt">   The dt to act on. </param>
            
             <returns>   A DateTimeOffset. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.DateTimeExtensions.DateOnly(System.DateTime)">
             <summary>   A DateTimeOffset extension method that date only. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="dt">   The dt to act on. </param>
            
             <returns>   A DateTimeOffset. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.DateTimeExtensions.StartOfMonth(System.DateTime)">
             <summary>   A DateTimeOffset extension method that starts of month. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="dt">   The dt to act on. </param>
            
             <returns>   A DateTimeOffset. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.DateTimeExtensions.EndOfMonth(System.DateTime)">
             <summary>   A DateTimeOffset extension method that ends of month. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="dt">   The dt to act on. </param>
            
             <returns>   A DateTimeOffset. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.DateTimeExtensions.EndOfYear(System.DateTime)">
             <summary>   A DateTimeOffset extension method that ends of month. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="dt">   The dt to act on. </param>
            
             <returns>   A DateTimeOffset. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.DateTimeExtensions.StartOfDay(System.DateTime)">
             <summary>   A DateTimeOffset extension method that returns the start of the day. </summary>
            
             <param name="dt">   The dt to act on. </param>
            
             <returns>   A DateTimeOffset. </returns>
            =================================================================================================
        </member>
        <member name="M:GCS.Core.Common.Extensions.DateTimeExtensions.EndOfDay(System.DateTime)">
             <summary>   A DateTimeOffset extension method that returns the end of the day. </summary>
            
             <param name="dt">   The dt to act on. </param>
            
             <returns>   A DateTimeOffset. </returns>
            =================================================================================================
        </member>
        <member name="M:GCS.Core.Common.Extensions.DateTimeExtensions.DayOfWeekNumber(System.DateTime)">
             <summary>   A DateTimeOffset extension method that day of week number. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="dt">   The dt to act on. </param>
            
             <returns>   An int. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.DateTimeExtensions.GetWeekOfYear(System.DateTime)">
             <summary>   A DateTimeOffset extension method that gets week of year. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="time"> The time to act on. </param>
            
             <returns>   The week of year. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.DateTimeExtensions.WeekOfMonth(System.DateTime)">
             <summary>   A DateTimeOffset extension method that week of month. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="dt">   The dt to act on. </param>
            
             <returns>   An int. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.DateTimeExtensions.DaysInMonth(System.DateTimeOffset)">
             <summary>   A DateTimeOffset extension method that days in month. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="dt">   The dt to act on. </param>
            
             <returns>   An int. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.DateTimeExtensions.IsInThePast(System.DateTimeOffset)">
             <summary>   A DateTimeOffset extension method that query if 'dt' is in the past. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="dt">   The dt to act on. </param>
            
             <returns>   True if in the past, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.DateTimeExtensions.IsWithinTheNextYear(System.DateTime)">
             <summary>
             A DateTimeOffset extension method that query if 'dt' is within the next year.
             </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="dt">   The dt to act on. </param>
            
             <returns>   True if within the next year, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.DateTimeExtensions.IsThisMonth(System.DateTimeOffset)">
             <summary>   A DateTimeOffset extension method that query if 'dt' is this month. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="dt">   The dt to act on. </param>
            
             <returns>   True if this month, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.DateTimeExtensions.IsToday(System.DateTimeOffset)">
             <summary>   A DateTimeOffset extension method that query if 'dt' is today. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="dt">   The dt to act on. </param>
            
             <returns>   True if today, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.DateTimeExtensions.GetFirstOfEachMonthForNextYear(System.DateTime)">
             <summary>   Gets the first of each month for next years in this collection. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="dt">   The dt to act on. </param>
            
             <returns>
             An enumerator that allows foreach to be used to process the first of each month for next
             years in this collection.
             </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.DateTimeExtensions.GetAllDayOfWeekDatesInMonth(System.DateTime,System.DayOfWeek)">
             <summary>   Gets all day of week dates in months in this collection. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="dt">           The dt to act on. </param>
             <param name="dayOfWeek">    The day of week. </param>
            
             <returns>
             An enumerator that allows foreach to be used to process all day of week dates in months in
             this collection.
             </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.DateTimeExtensions.GetAllDatesForRange(System.DateTimeOffset,System.DateTimeOffset)">
             <summary>   Gets all dates for ranges in this collection. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="dt">           The dt to act on. </param>
             <param name="endDateTime">  The end date time. </param>
            
             <returns>
             An enumerator that allows foreach to be used to process all dates for ranges in this
             collection.
             </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.DateTimeExtensions.UnixTimestampFromDateTime(System.DateTime)">
             <summary>   A DateTimeOffset extension method that unix timestamp from date time. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="date"> The date to act on. </param>
            
             <returns>   A long. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.DateTimeExtensions.TimeFromUnixTimestamp(System.Int32)">
             <summary>   An int extension method that time from unix timestamp. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="unixTimestamp">    The unixTimestamp to act on. </param>
            
             <returns>   A DateTimeOffset. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.DateTimeExtensions.ToSqlDateTimeFormat(System.DateTimeOffset)">
             <summary>
             A DateTimeOffset extension method that converts a value to a SQL date time format.
             </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="value">    The value to act on. </param>
            
             <returns>   Value as a string. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.DateTimeExtensions.ToSqlDateFormat(System.DateTimeOffset)">
             <summary>
             A DateTimeOffset extension method that converts a value to a SQL date format.
             </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="value">    The value to act on. </param>
            
             <returns>   Value as a string. </returns>
        </member>
        <member name="T:GCS.Core.Common.Extensions.EnumExtensions">
             <summary>   An enum extensions. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Extensions.EnumExtensions.GetEnumName``1(``0)">
             <summary>   A T extension method that gets enum name. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <exception cref="T:System.InvalidOperationException">    Thrown when the requested operation is
                                                             invalid. </exception>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="value">    The value to act on. </param>
            
             <returns>   The enum name. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.EnumExtensions.GetOne``1(System.Object)">
             <summary>   Gets an one. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="o">    The object to process. </param>
            
             <returns>   The one. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.EnumExtensions.ParseEnum``1(System.String,System.Boolean,``0)">
             <summary>   A string extension method that parse enum. </summary>
            
             <exception cref="T:System.ArgumentException">    Thrown when one or more arguments have unsupported or
                                                     illegal values. </exception>
            
             <typeparam name="TEnum">    Type of the enum. </typeparam>
             <param name="value">        The value to act on. </param>
             <param name="ignoreCase">   (Optional) True to ignore case. </param>
             <param name="defaultValue"> (Optional) The default value. </param>
            
             <returns>   A TEnum. </returns>
            =================================================================================================
        </member>
        <member name="T:GCS.Core.Common.Extensions.ObjectExtensions">
            <summary>
                Extension methods applied to the <see cref="T:System.Object"/> type.
            </summary>
        </member>
        <member name="M:GCS.Core.Common.Extensions.ObjectExtensions.GetHash``1(System.Object)">
            <summary>
                Gets a hash of the current instance.
            </summary>
            <typeparam name="T">
                The type of the Cryptographic Service Provider to use.
            </typeparam>
            <param name="instance">
                The instance being extended.
            </param>
            <returns>
                A base 64 encoded string representation of the hash.
            </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.ObjectExtensions.GetKeyedHash``1(System.Object,System.Byte[])">
            <summary>
                Gets a key based hash of the current instance.
            </summary>
            <typeparam name="T">
                The type of the Cryptographic Service Provider to use.
            </typeparam>
            <param name="instance">
                The instance being extended.
            </param>
            <param name="key">
                The key passed into the Cryptographic Service Provider algorithm.
            </param>
            <returns>
                A base 64 encoded string representation of the hash.
            </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.ObjectExtensions.GetMD5Hash(System.Object)">
            <summary>
                Gets a MD5 hash of the current instance.
            </summary>
            <param name="instance">
                The instance being extended.
            </param>
            <returns>
                A base 64 encoded string representation of the hash.
            </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.ObjectExtensions.GetSHA1Hash(System.Object)">
            <summary>
                Gets a SHA1 hash of the current instance.
            </summary>
            <param name="instance">
                The instance being extended.
            </param>
            <returns>
                A base 64 encoded string representation of the hash.
            </returns>
        </member>
        <member name="T:GCS.Core.Common.Extensions.StreamExtensions">
             <summary>   A stream extensions. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Extensions.StreamExtensions.ReadToEnd(System.IO.Stream)">
             <summary>   A Stream extension method that reads to end. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="stream">   The stream to act on. </param>
            
             <returns>   to end. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.StreamExtensions.ReadFromJson``1(System.IO.Stream)">
             <summary>   A Stream extension method that reads from JSON. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="stream">   The stream to act on. </param>
            
             <returns>   The data that was read from the JSON. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.StreamExtensions.ReadFromJson``1(System.IO.Stream,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>   A Stream extension method that reads from JSON. </summary>
            
            <remarks>   Kevin, 12/26/2018. </remarks>
            
            <typeparam name="T">    Generic type parameter. </typeparam>
            <param name="stream">   The stream to act on. </param>
            <param name="settings"></param>
            <returns>   The data that was read from the JSON. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.StreamExtensions.ReadFromJson(System.IO.Stream,System.String)">
             <summary>   A Stream extension method that reads from JSON. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="stream">       The stream to act on. </param>
             <param name="messageType">  Type of the message. </param>
            
             <returns>   The data that was read from the JSON. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.StreamExtensions.ReadFromJson(System.IO.Stream,System.String,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>   A Stream extension method that reads from JSON. </summary>
            
            <remarks>   Kevin, 12/26/2018. </remarks>
            
            <param name="stream">       The stream to act on. </param>
            <param name="messageType">  Type of the message. </param>
            <param name="settings"></param>
            <returns>   The data that was read from the JSON. </returns>
        </member>
        <member name="T:GCS.Core.Common.Extensions.StringExtensions">
             <summary>   A string extensions. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Extensions.StringExtensions.IsValidEmailAddress(System.String)">
             <summary>   A string extension method that query if 's' is valid email address. </summary>
            
             <remarks>   Kevin, 1/4/2016. </remarks>
            
             <param name="s">    The s to act on. </param>
            
             <returns>   true if valid email address, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.StringExtensions.IsNumeric(System.String)">
             <summary>   A string extension method that query if 'theValue' is numeric. </summary>
            
             <remarks>   Kevin, 1/4/2016. </remarks>
            
             <param name="theValue"> The theValue to act on. </param>
            
             <returns>   true if numeric, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.StringExtensions.Encrypt(System.String,System.String)">
             <summary>
             Encryptes a string using the supplied key. Encoding is done using RSA encryption.
             </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <exception cref="T:System.ArgumentException">    Occurs when stringToEncrypt or key is null or empty. </exception>
            
             <param name="stringToEncrypt">  String that must be encrypted. </param>
             <param name="key">              Encryptionkey. </param>
            
             <returns>   A string representing a byte array separated by a minus sign. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.StringExtensions.Decrypt(System.String,System.String)">
             <summary>
             Decryptes a string using the supplied key. Decoding is done using RSA encryption.
             </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <exception cref="T:System.ArgumentException">    Occurs when stringToDecrypt or key is null or empty. </exception>
            
             <param name="stringToDecrypt">  String that must be decrypted. </param>
             <param name="key">              Decryptionkey. </param>
            
             <returns>   The decrypted string or null if decryption failed. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.StringExtensions.Truncate(System.String,System.Int32)">
             <summary>   A string extension method that truncates. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="source">   The source to act on. </param>
             <param name="length">   The length. </param>
            
             <returns>   A string. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.StringExtensions.TruncateLeft(System.String,System.Int32)">
             <summary>   A string extension method that truncate left. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="source">   The source to act on. </param>
             <param name="length">   The length. </param>
            
             <returns>   A string. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.StringExtensions.IsNullWhiteSpaceOrEmpty(System.String)">
             <summary>
             A string extension method that queries if a null white space or is empty.
             </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="source">   The source to act on. </param>
            
             <returns>   True if a null white space or is empty, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.StringExtensions.EncodeForXml(System.String)">
             <summary>   A string extension method that encode for XML. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="stringToEncode">   The stringToEncode to act on. </param>
            
             <returns>   A string. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.StringExtensions.SplitAtUpperCaseCharacters(System.String)">
             <summary>   A string extension method that splits at upper case characters. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="stringToSplit">    The stringToSplit to act on. </param>
            
             <returns>   A string. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.StringExtensions.IsHexadecimal(System.String,System.Boolean)">
             <summary>   A string extension method that query if 'strInput' is hexadecimal. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="strInput">         The strInput to act on. </param>
             <param name="allowLeadingX">    True to allow, false to deny leading x coordinate. </param>
            
             <returns>   True if hexadecimal, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.StringExtensions.IsDecimal(System.String)">
             <summary>   A string extension method that query if 'strInput' is decimal. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="strInput"> The strInput to act on. </param>
            
             <returns>   True if decimal, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.StringExtensions.ReadFromJson(System.String,System.String)">
             <summary>   A string extension method that reads from JSON. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="json">         The JSON to act on. </param>
             <param name="messageType">  Type of the message. </param>
            
             <returns>   The data that was read from the JSON. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.StringExtensions.ReadFromJson(System.String,System.String,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>   A string extension method that reads from JSON. </summary>
            
            <remarks>   Kevin, 12/26/2018. </remarks>
            
            <param name="json">         The JSON to act on. </param>
            <param name="messageType">  Type of the message. </param>
            <param name="settings"></param>
            <returns>   The data that was read from the JSON. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.StringExtensions.ReadFromJson``1(System.String)">
             <summary>   A string extension method that reads from JSON. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="json">         The JSON to act on. </param>
             <param name="messageType">  Type of the message. </param>
            
             <returns>   The data that was read from the JSON. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.StringExtensions.RemoveSpecialCharacters(System.String)">
             <summary>
             A string extension method that removes the special characters described by str.
             </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="str">  The str to act on. </param>
            
             <returns>   A string. </returns>
        </member>
        <member name="M:GCS.Core.Common.Extensions.StringExtensions.RemoveSpecialCharacters(System.String,System.String)">
             <summary>   A string extension method that removes the special characters. </summary>
            
             <param name="str">                  The str to act on. </param>
             <param name="charactersToRemove">   The characters to remove. </param>
            
             <returns>   A string. </returns>
            =================================================================================================
        </member>
        <member name="M:GCS.Core.Common.Extensions.StringExtensions.ConvertBase64StringToByteArray(System.String)">
             <summary>   A string extension method that convert base 64 string to byte array. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="str">  The str to act on. </param>
            
             <returns>   The base converted 64 string to byte array. </returns>
        </member>
        <member name="T:GCS.Core.Common.Localization.Localizer">
             <summary>   A localizer. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Localization.Localizer.SetCulture(System.String,System.String)">
             <summary>   Sets a culture. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="culture">      The culture. </param>
             <param name="uiCulture">    The culture. </param>
        </member>
        <member name="T:GCS.Core.Common.ErrorMessageEventArgs">
             <summary>   Additional information for error message events. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.ErrorMessageEventArgs.#ctor(System.String)">
             <summary>   Constructor. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="errorMessage"> A message describing the error. </param>
        </member>
        <member name="P:GCS.Core.Common.ErrorMessageEventArgs.ErrorMessage">
             <summary>   Gets or sets a message describing the error. </summary>
            
             <value> A message describing the error. </value>
        </member>
        <member name="T:GCS.Core.Common.Reflection.ReflectionExtensions">
             <summary>   A reflection extensions. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Reflection.ReflectionExtensions.GetFullMethodName(System.Reflection.MethodBase)">
             <summary>   Gets full method name. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="methodBase">   The method base. </param>
            
             <returns>   The full method name. </returns>
        </member>
        <member name="T:GCS.Core.Common.Utils.BitShifter">
             <summary>   A bit shifter. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Utils.BitShifter.ShiftLeft(System.Byte[],System.Int32)">
             <summary>   Shift left. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="value">    The value. </param>
             <param name="bitcount"> The bitcount. </param>
            
             <returns>   A byte[]. </returns>
        </member>
        <member name="M:GCS.Core.Common.Utils.BitShifter.ShiftRight(System.Byte[],System.Int32)">
             <summary>   Shift right. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="value">    The value. </param>
             <param name="bitcount"> The bitcount. </param>
            
             <returns>   A byte[]. </returns>
        </member>
        <member name="T:GCS.Core.Common.Utils.ByteArrayUtilities">
             <summary>   A byte array utilities. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Utils.ByteArrayUtilities.ByteArrayEquals(System.Byte[],System.Byte[])">
             <summary>   Byte array equals. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="a">    The byte[] to process. </param>
             <param name="b">    The byte[] to process. </param>
            
             <returns>   True if it succeeds, false if it fails. </returns>
        </member>
        <member name="M:GCS.Core.Common.Utils.ByteArrayUtilities.GetBytesFromArray(System.Byte[]@,System.Int32,System.Int32)">
             <summary>   Gets bytes from array. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="source">           [in,out] Source for the. </param>
             <param name="lengthToGet">      The length to get. </param>
             <param name="startingIndex">    Zero-based index of the starting. </param>
            
             <returns>   An array of byte. </returns>
        </member>
        <member name="M:GCS.Core.Common.Utils.ByteArrayUtilities.GetBytesFromArray(System.Byte[],System.Int32,System.Int32)">
             <summary>   Gets bytes from array. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="source">           Source for the. </param>
             <param name="lengthToGet">      The length to get. </param>
             <param name="startingIndex">    Zero-based index of the starting. </param>
            
             <returns>   An array of byte. </returns>
        </member>
        <member name="M:GCS.Core.Common.Utils.ByteArrayUtilities.ConvertByteArrayToBase64String(System.Byte[])">
             <summary>   A byte[] extension method that convert byte array to base 64 string. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="bytes">    The bytes to act on. </param>
            
             <returns>   The byte converted array to base 64 string. </returns>
        </member>
        <member name="T:GCS.Core.Common.Utils.ByteConverters">
             <summary>   A byte converters. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Utils.ByteConverters.ThreeBytesToInt(System.Byte,System.Byte,System.Byte)">
             <summary>   Three bytes to int. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="b1">   The first byte. </param>
             <param name="b2">   The second byte. </param>
             <param name="b3">   The third byte. </param>
            
             <returns>   An int. </returns>
        </member>
        <member name="M:GCS.Core.Common.Utils.ByteConverters.ReverseBytes(System.UInt16)">
             <summary>   reverse byte order (32-bit) </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="value">    The value. </param>
            
             <returns>   An UInt32. </returns>
        </member>
        <member name="M:GCS.Core.Common.Utils.ByteConverters.ReverseBytes(System.UInt32)">
             <summary>   reverse byte order (32-bit) </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="value">    The value. </param>
            
             <returns>   An UInt32. </returns>
        </member>
        <member name="M:GCS.Core.Common.Utils.ByteConverters.ReverseBytes(System.UInt64)">
             <summary>   reverse byte order (64-bit) </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="value">    The value. </param>
            
             <returns>   An UInt64. </returns>
        </member>
        <member name="T:GCS.Core.Common.Utils.ByteFlipper">
             <summary>   A byte flipper. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Utils.ByteFlipper.ReverseBytes(System.UInt16)">
             <summary>   reverse byte order (32-bit) </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="value">    The value. </param>
            
             <returns>   An UInt32. </returns>
        </member>
        <member name="M:GCS.Core.Common.Utils.ByteFlipper.ReverseBytes(System.UInt32)">
             <summary>   reverse byte order (32-bit) </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="value">    The value. </param>
            
             <returns>   An UInt32. </returns>
        </member>
        <member name="M:GCS.Core.Common.Utils.ByteFlipper.ReverseBytes(System.UInt64)">
             <summary>   reverse byte order (64-bit) </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="value">    The value. </param>
            
             <returns>   An UInt64. </returns>
        </member>
        <member name="M:GCS.Core.Common.Utils.ByteFlipper.ReverseBytes(System.Byte[])">
             <summary>   Reverse bytes. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="bytes">    The bytes. </param>
            
             <returns>   A byte[]. </returns>
        </member>
        <member name="T:GCS.Core.Common.Utils.DisposableProxyExecutioner">
             <summary>   A disposable proxy executioner. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Utils.DisposableProxyExecutioner.WithClient``1(``0,System.Action{``0})">
             <summary>   With client. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="proxy">            The proxy. </param>
             <param name="codeToExecute">    The code to execute. </param>
        </member>
        <member name="M:GCS.Core.Common.Utils.DisposableProxyExecutioner.WithClientAsync``1(``0,System.Action{``0})">
             <summary>   With client asynchronous. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="proxy">            The proxy. </param>
             <param name="codeToExecute">    The code to execute. </param>
        </member>
        <member name="T:GCS.Core.Common.Utils.HexEncoding">
             <summary>   A hexadecimal encoding. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Utils.HexEncoding.#ctor">
             <summary>   Default constructor. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Utils.HexEncoding.AreByteArraysEquivalent(System.Byte[],System.Byte[])">
             <summary>   Determine if we are byte arrays equivalent. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="a1">   The first byte[]. </param>
             <param name="a2">   The second byte[]. </param>
            
             <returns>   True if byte arrays equivalent, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Utils.HexEncoding.GetByteCount(System.String)">
             <summary>   Gets byte count. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="hexString">    string to convert to byte array. </param>
            
             <returns>   The byte count. </returns>
        </member>
        <member name="M:GCS.Core.Common.Utils.HexEncoding.GetBytesFromHexString(System.String)">
             <summary>
             Creates a byte array from the hexadecimal string. Each two characters are combined to create
             one byte. First two hexadecimal characters become first byte in returned array. Non-
             hexadecimal characters are ignored.
             </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="hexString">    string to convert to byte array. </param>
            
             <returns>   byte array, in the same left-to-right order as the hexString. </returns>
            
             ### <param name="discarded">    number of characters in string ignored. </param>
        </member>
        <member name="M:GCS.Core.Common.Utils.HexEncoding.GetBytesFromHexString(System.String,System.Int32,System.Int32@)">
             <summary>
             Creates a byte array from the hexadecimal string. Each two characters are combined to create
             one byte. First two hexadecimal characters become first byte in returned array. Non-
             hexadecimal characters are ignored.
             </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="hexString">    string to convert to byte array. </param>
             <param name="padToLength">  Length of the pad to. </param>
             <param name="discarded">    [out] number of characters in string ignored. </param>
            
             <returns>   byte array, in the same left-to-right order as the hexString. </returns>
        </member>
        <member name="M:GCS.Core.Common.Utils.HexEncoding.GetBytesFromDecimalString(System.String,System.Int32,System.Int32@)">
             <summary>   Creates a byte array from the decimal string. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="decimalString">    string to convert to byte array. </param>
             <param name="padToLength">      Length of the pad to. </param>
             <param name="discarded">        [out] number of characters in string ignored. </param>
            
             <returns>   byte array, in the same left-to-right order as the decimalString. </returns>
        </member>
        <member name="M:GCS.Core.Common.Utils.HexEncoding.GetBytesFromString(System.String,System.Int32,System.Int32@)">
             <summary>   Gets bytes from string. </summary>
            
             <remarks>   Kevin, 3/23/2022. </remarks>
            
             <param name="s">            The string. </param>
             <param name="padToLength">  Length of the pad to. </param>
             <param name="discarded">    [out] number of characters in string ignored. </param>
            
             <returns>   An array of byte. </returns>
        </member>
        <member name="M:GCS.Core.Common.Utils.HexEncoding.SetBit(System.Byte[],System.Int32,System.Boolean)">
             <summary>   Sets a bit in a byte array to the specified value. </summary>
            
             <remarks>   Kevin, 11/2/2016. </remarks>
            
             <param name="bytes">        The byte array to operate on. The bytes are considered to be
                                         right-adjusted. </param>
             <param name="bitNumber">    The bit number to set, counting from the right. One based. </param>
             <param name="bitValue">     true or false, the bit value. </param>
            
             <returns>   A byte[]. </returns>
        </member>
        <member name="M:GCS.Core.Common.Utils.HexEncoding.ToString(System.Byte[],System.Boolean,System.String,System.Boolean,System.Int16)">
             <summary>   Convert this HexEncoding into a string representation. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="bytes">                        The byte array to operate on. The bytes are
                                                         considered to be right-adjusted. </param>
             <param name="bDiscardLeadingZeros">         True to discard leading zeros. </param>
             <param name="hexPrefix">                    The hexadecimal prefix. </param>
             <param name="bReturnDecimalIfPossible">     True to return decimal if possible. </param>
             <param name="maximumDecimalFormatBitCount"> Number of maximum decimal format bits. </param>
            
             <returns>   A string that represents this HexEncoding. </returns>
        </member>
        <member name="M:GCS.Core.Common.Utils.HexEncoding.PadByteArray(System.Byte[],System.Int32,System.Boolean)">
             <summary>   Pad byte array. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="bytes">            The byte array to operate on. The bytes are considered to be
                                             right-adjusted. </param>
             <param name="padToLength">      Length of the pad to. </param>
             <param name="addPaddingToEnd">  True to add padding to end. </param>
            
             <returns>   A byte[]. </returns>
        </member>
        <member name="M:GCS.Core.Common.Utils.HexEncoding.Right(System.Byte[],System.Int32)">
             <summary>   Rights. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="bytes">            The byte array to operate on. The bytes are considered to be
                                             right-adjusted. </param>
             <param name="numberOfBytes">    Number of bytes. </param>
            
             <returns>   A byte[]. </returns>
        </member>
        <member name="M:GCS.Core.Common.Utils.HexEncoding.IsHexFormat(System.String)">
             <summary>   Determines if given string is in proper hexadecimal string format. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="hexString">    . </param>
            
             <returns>   True if hexadecimal format, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Utils.HexEncoding.IsDecimalFormat(System.String)">
             <summary>   Determines if given string is in proper decimal string format. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="decString">    . </param>
            
             <returns>   True if decimal format, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Utils.HexEncoding.IsHexDigit(System.Char)">
             <summary>   Returns true is c is a hexadecimal digit (A-F, a-f, 0-9) </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="c">    Character to test. </param>
            
             <returns>   true if hex digit, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Utils.HexEncoding.IsDecimalDigit(System.Char)">
             <summary>   Returns true is c is a decimal digit (0-9) </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="c">    Character to test. </param>
            
             <returns>   true if decimal digit, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Utils.HexEncoding.HexToByte(System.String)">
             <summary>   Converts 1 or 2 character string into equivalant byte value. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <exception cref="T:System.ArgumentException">    Thrown when one or more arguments have unsupported or
                                                     illegal values. </exception>
            
             <param name="hex">  1 or 2 character string. </param>
            
             <returns>   byte. </returns>
        </member>
        <member name="M:GCS.Core.Common.Utils.HexEncoding.CompareArray``1(``0[],``0)">
             <summary>
             Spins through a Generic array and determines if all elements match the specified value.
             </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="array">        array of generic objects. </param>
             <param name="compareTo">    object of T to compare against. </param>
            
             <returns>   bool. </returns>
        </member>
        <member name="M:GCS.Core.Common.Utils.HexEncoding.GetHighestNonZeroBit(System.Byte[])">
             <summary>   Gets highest non zero bit. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="array">    array of generic objects. </param>
            
             <returns>   The highest non zero bit. </returns>
        </member>
        <member name="M:GCS.Core.Common.Utils.HexEncoding.ApplyMask(System.Byte[],System.Byte[],System.Boolean)">
             <summary>   Applies the mask. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="array">            array of generic objects. </param>
             <param name="mask">             The mask. </param>
             <param name="bApplyMaskToEnd">  True to apply mask to end. </param>
            
             <returns>   A byte[]. </returns>
        </member>
        <member name="T:GCS.Core.Common.Utils.Net">
             <summary>   A net. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Utils.Net.GetMyIpAddress(System.Net.Sockets.AddressFamily)">
             <summary>   Gets my IP address. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="family">   The family. </param>
            
             <returns>   my IP address. </returns>
        </member>
        <member name="M:GCS.Core.Common.Utils.Net.GetMyIpAddresses(System.Net.Sockets.AddressFamily)">
             <summary>   Gets my IP addresses in this collection. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="family">   The family. </param>
            
             <returns>
             An enumerator that allows foreach to be used to process my IP addresses in this collection.
             </returns>
        </member>
        <member name="T:GCS.Core.Common.Utils.SimpleObjectDifferenceDetector">
             <summary>   A simple object difference detector. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="T:GCS.Core.Common.Utils.SimpleObjectDifferenceDetector.PropertyChangeInformation">
             <summary>   Information about the property change. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Utils.SimpleObjectDifferenceDetector.PropertyChangeInformation.#ctor">
             <summary>   Default constructor. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Utils.SimpleObjectDifferenceDetector.PropertyChangeInformation.#ctor(System.String,System.Object,System.Object,System.Type)">
             <summary>   Constructor. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="propertyName">     The name of the property. </param>
             <param name="originalValue">    The original value. </param>
             <param name="newValue">         The new value. </param>
             <param name="propertyType">     The type of the property. </param>
        </member>
        <member name="P:GCS.Core.Common.Utils.SimpleObjectDifferenceDetector.PropertyChangeInformation.PropertyName">
             <summary>   Gets or sets the name of the property. </summary>
            
             <value> The name of the property. </value>
        </member>
        <member name="P:GCS.Core.Common.Utils.SimpleObjectDifferenceDetector.PropertyChangeInformation.OriginalValue">
             <summary>   Gets or sets the original value. </summary>
            
             <value> The original value. </value>
        </member>
        <member name="P:GCS.Core.Common.Utils.SimpleObjectDifferenceDetector.PropertyChangeInformation.NewValue">
             <summary>   Gets or sets the new value. </summary>
            
             <value> The new value. </value>
        </member>
        <member name="P:GCS.Core.Common.Utils.SimpleObjectDifferenceDetector.PropertyChangeInformation.PropertyType">
             <summary>   Gets or sets the type of the property. </summary>
            
             <value> The type of the property. </value>
        </member>
        <member name="M:GCS.Core.Common.Utils.SimpleObjectDifferenceDetector.PropertyChangeInformation.ToString">
             <summary>   Returns a string that represents the current object. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <returns>   A string that represents the current object. </returns>
        </member>
        <member name="T:GCS.Core.Common.Utils.SimpleObjectDifferenceDetector.CompareResults">
             <summary>   A compare results. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Utils.SimpleObjectDifferenceDetector.CompareResults.#ctor">
             <summary>   Default constructor. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="P:GCS.Core.Common.Utils.SimpleObjectDifferenceDetector.CompareResults.CompareDateTime">
             <summary>   Gets or sets the compare date time. </summary>
            
             <value> The compare date time. </value>
        </member>
        <member name="P:GCS.Core.Common.Utils.SimpleObjectDifferenceDetector.CompareResults.PropertyChanges">
             <summary>   Gets or sets the property changes. </summary>
            
             <value> The property changes. </value>
        </member>
        <member name="M:GCS.Core.Common.Utils.SimpleObjectDifferenceDetector.CompareObjects``2(``0,``1,System.Collections.Generic.List{System.String})">
             <summary>   Compare objects. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <typeparam name="U">    Generic type parameter. </typeparam>
             <param name="originalObject">       The original object. </param>
             <param name="newObject">            The new object. </param>
             <param name="propertiesToIgnore">   The properties to ignore. </param>
            
             <returns>   The CompareResults. </returns>
        </member>
        <member name="T:GCS.Core.Common.Utils.SimpleMapper">
             <summary>   A simple mapper. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "M:GCS.Core.Common.Utils.SimpleMapper.PropertyMap``2(``0,``1)" -->
        <member name="M:GCS.Core.Common.Utils.SimpleMapper.PropertyMap``2(``0,``1,System.Collections.Generic.IEnumerable{System.String})">
             <summary>   Property map. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <typeparam name="U">    Generic type parameter. </typeparam>
             <param name="source">               Source for the. </param>
             <param name="destination">          Destination for the. </param>
             <param name="excludeProperties">    The exclude properties. </param>
        </member>
        <member name="T:GCS.Core.Common.Utils.GuidUtilities">
             <summary>   A unique identifier utilities. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Utils.GuidUtilities.GenerateComb">
             <summary>   Generates a comb. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <returns>   The comb. </returns>
        </member>
        <member name="M:GCS.Core.Common.Utils.GuidUtilities.SyncDestAndSourceIfDestNullOrEmpty(System.Guid,System.Guid)">
             <summary>   Synchronizes the destination and source if destination null or empty. </summary>
            
             <param name="source">   Source for the. </param>
             <param name="dest">     Destination for the. </param>
            
             <returns>   A GUID. </returns>
            =================================================================================================
        </member>
        <member name="T:GCS.Core.Common.Utils.HardDriveInfo">
             <summary>   Information about the hard drive. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="F:GCS.Core.Common.Utils.HardDriveInfo.modelNo">
            <summary>   The model no. </summary>
        </member>
        <member name="F:GCS.Core.Common.Utils.HardDriveInfo.serialNo">
            <summary>   The serial no. </summary>
        </member>
        <member name="F:GCS.Core.Common.Utils.HardDriveInfo.type">
            <summary>   The type. </summary>
        </member>
        <member name="P:GCS.Core.Common.Utils.HardDriveInfo.ModelNo">
             <summary>   Gets or sets the model no. </summary>
            
             <value> The model no. </value>
        </member>
        <member name="P:GCS.Core.Common.Utils.HardDriveInfo.SerialNo">
             <summary>   Gets or sets the serial no. </summary>
            
             <value> The serial no. </value>
        </member>
        <member name="P:GCS.Core.Common.Utils.HardDriveInfo.Type">
             <summary>   Gets or sets the type. </summary>
            
             <value> The type. </value>
        </member>
        <member name="T:GCS.Core.Common.Utils.LogicalDriveInfo">
             <summary>   Information about the logical drive. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="F:GCS.Core.Common.Utils.LogicalDriveInfo.volumeSerialNo">
            <summary>   The volume serial no. </summary>
        </member>
        <member name="F:GCS.Core.Common.Utils.LogicalDriveInfo.volumeName">
            <summary>   Name of the volume. </summary>
        </member>
        <member name="F:GCS.Core.Common.Utils.LogicalDriveInfo.systemName">
            <summary>   Name of the system. </summary>
        </member>
        <member name="F:GCS.Core.Common.Utils.LogicalDriveInfo.name">
            <summary>   The name. </summary>
        </member>
        <member name="F:GCS.Core.Common.Utils.LogicalDriveInfo.caption">
            <summary>   The caption. </summary>
        </member>
        <member name="F:GCS.Core.Common.Utils.LogicalDriveInfo.description">
            <summary>   The description. </summary>
        </member>
        <member name="F:GCS.Core.Common.Utils.LogicalDriveInfo.filesystem">
            <summary>   The filesystem. </summary>
        </member>
        <member name="P:GCS.Core.Common.Utils.LogicalDriveInfo.VolumeSerialNumberDecimal">
             <summary>   Gets the volume serial number decimal. </summary>
            
             <value> The volume serial number decimal. </value>
        </member>
        <member name="P:GCS.Core.Common.Utils.LogicalDriveInfo.VolumeSerialNumber">
             <summary>   Gets or sets the volume serial number. </summary>
            
             <value> The volume serial number. </value>
        </member>
        <member name="P:GCS.Core.Common.Utils.LogicalDriveInfo.VolumeName">
             <summary>   Gets or sets the name of the volume. </summary>
            
             <value> The name of the volume. </value>
        </member>
        <member name="P:GCS.Core.Common.Utils.LogicalDriveInfo.SystemName">
             <summary>   Gets or sets the name of the system. </summary>
            
             <value> The name of the system. </value>
        </member>
        <member name="P:GCS.Core.Common.Utils.LogicalDriveInfo.Name">
             <summary>   Gets or sets the name. </summary>
            
             <value> The name. </value>
        </member>
        <member name="P:GCS.Core.Common.Utils.LogicalDriveInfo.Caption">
             <summary>   Gets or sets the caption. </summary>
            
             <value> The caption. </value>
        </member>
        <member name="P:GCS.Core.Common.Utils.LogicalDriveInfo.Description">
             <summary>   Gets or sets the description. </summary>
            
             <value> The description. </value>
        </member>
        <member name="P:GCS.Core.Common.Utils.LogicalDriveInfo.FileSystem">
             <summary>   Gets or sets the file system. </summary>
            
             <value> The file system. </value>
        </member>
        <member name="T:GCS.Core.Common.Utils.PrincipalIdentity">
             <summary>   A principal identity. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="P:GCS.Core.Common.Utils.PrincipalIdentity.CurrentWindowsUserName">
             <summary>   Gets the current windows user name. </summary>
            
             <value> The name of the current windows user. </value>
        </member>
        <member name="T:GCS.Core.Common.Utils.PropertySupport">
             <summary>   A property support. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Utils.PropertySupport.ExtractPropertyName``1(System.Linq.Expressions.Expression{System.Func{``0}})">
             <summary>   Extracts the property name described by propertyExpression. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <exception cref="T:System.ArgumentNullException">    Thrown when one or more required arguments are
                                                         null. </exception>
             <exception cref="T:System.ArgumentException">        Thrown when one or more arguments have
                                                         unsupported or illegal values. </exception>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="propertyExpression">   The property expression. </param>
            
             <returns>   The extracted property name. </returns>
        </member>
        <member name="T:GCS.Core.Common.Utils.SystemUtilities">
             <summary>   A system utilities. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Utils.SystemUtilities.IsProcessRunning(System.String)">
             <summary>   Query if 'name' is process running. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="name"> The name. </param>
            
             <returns>   True if process running, false if not. </returns>
        </member>
        <member name="M:GCS.Core.Common.Utils.SystemUtilities.PriorProcess">
             <summary>   Prior process. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <returns>   The Process. </returns>
        </member>
        <member name="M:GCS.Core.Common.Utils.SystemUtilities.GetRunningProcess(System.String)">
             <summary>   Gets running process. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="name"> The name. </param>
            
             <returns>   The running process. </returns>
        </member>
        <member name="M:GCS.Core.Common.Utils.SystemUtilities.GetAssemblyAttributes(System.Reflection.Assembly@)">
             <summary>   Gets assembly attributes. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="assem">    [in,out] The assem. </param>
            
             <returns>   The assembly attributes. </returns>
        </member>
        <member name="M:GCS.Core.Common.Utils.SystemUtilities.GetProcessorInfo">
             <summary>   Gets processor information. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <returns>   The processor information. </returns>
        </member>
        <member name="M:GCS.Core.Common.Utils.SystemUtilities.GetLogicalDriveInfo(System.String)">
             <summary>   Gets logical drive information. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="sPath">    Full pathname of the file. </param>
            
             <returns>   The logical drive information. </returns>
        </member>
        <member name="M:GCS.Core.Common.Utils.SystemUtilities.GetDriveInfo">
             <summary>   Gets drive information. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <returns>   An array of hard drive information. </returns>
        </member>
        <member name="M:GCS.Core.Common.Utils.SystemUtilities.MyMachineName">
             <summary>   My machine name. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <returns>   A string. </returns>
        </member>
        <member name="M:GCS.Core.Common.Utils.SystemUtilities.MyIPAddresses">
             <summary>   My IP addresses. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <returns>   An IPAddress[]. </returns>
        </member>
        <member name="M:GCS.Core.Common.Utils.SystemUtilities.MyAssemblyName">
             <summary>   My assembly name. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <returns>   A string. </returns>
        </member>
        <member name="P:GCS.Core.Common.Utils.SystemUtilities.MyProcessName">
             <summary>   Gets the name of my process. </summary>
            
             <value> The name of my process. </value>
        </member>
        <member name="P:GCS.Core.Common.Utils.SystemUtilities.MyFolderLocation">
             <summary> Gets my folder location. </summary>
            
             <value>   my folder location. </value>
        </member>
        <member name="P:GCS.Core.Common.Utils.SystemUtilities.MyProcess">
             <summary> Gets my process. </summary>
            
             <value>   my process. </value>
        </member>
        <member name="M:GCS.Core.Common.Utils.XmlUtilities.ConvertObjectToXMLString(System.Object)">
             <summary>   Convert object to XML string. </summary>
            
             <remarks>   Kevin, 6/6/2019. </remarks>
            
             <param name="classObject">  The class object. </param>
            
             <returns>   The object converted to XML string. </returns>
        </member>
        <member name="M:GCS.Core.Common.Utils.XmlUtilities.ConvertXmlStringtoObject``1(System.String)">
             <summary>   Convert XML string to object of type T. </summary>
            
             <remarks>   Kevin, 6/6/2019. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="xmlString">    The XML string. </param>
            
             <returns>   The XML converted string to object. </returns>
        </member>
        <member name="T:GCS.Core.Common.Exceptions.AuthorizationValidationException">
             <summary>   Exception for signalling authorization validation errors. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Exceptions.AuthorizationValidationException.#ctor(System.String)">
             <summary>   Constructor. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="message">  The message. </param>
        </member>
        <member name="M:GCS.Core.Common.Exceptions.AuthorizationValidationException.#ctor(System.String,System.Exception)">
             <summary>   Constructor. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="message">          The message. </param>
             <param name="innerException">   The inner exception. </param>
        </member>
        <member name="T:GCS.Core.Common.Exceptions.CannotDeleteReferenceException">
             <summary>   Exception for signalling cannot delete reference errors. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Exceptions.CannotDeleteReferenceException.#ctor(System.String)">
             <summary>   Constructor. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="message">  The message. </param>
        </member>
        <member name="M:GCS.Core.Common.Exceptions.CannotDeleteReferenceException.#ctor(System.String,System.Exception)">
             <summary>   Constructor. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="message">          The message. </param>
             <param name="innerException">   The inner exception. </param>
        </member>
        <member name="T:GCS.Core.Common.Exceptions.DataValidationException">
             <summary>   Exception for signalling data validation errors. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Exceptions.DataValidationException.#ctor(System.String)">
             <summary>   Constructor. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="message">  The message. </param>
        </member>
        <member name="M:GCS.Core.Common.Exceptions.DataValidationException.#ctor(System.String,System.Exception)">
             <summary>   Constructor. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="message">          The message. </param>
             <param name="innerException">   The inner exception. </param>
        </member>
        <member name="M:GCS.Core.Common.Exceptions.DataValidationException.#ctor(System.Collections.Generic.IEnumerable{FluentValidation.Results.ValidationFailure})">
             <summary>   Constructor. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="validationFailures">   The validation failures. </param>
        </member>
        <member name="F:GCS.Core.Common.Exceptions.DataValidationException._validationRulesMessages">
            <summary>   The validation rules messages. </summary>
        </member>
        <member name="P:GCS.Core.Common.Exceptions.DataValidationException.ValidationRuleMessages">
             <summary>   Gets or sets the validation rule messages. </summary>
            
             <value> The validation rule messages. </value>
        </member>
        <member name="M:GCS.Core.Common.Exceptions.DataValidationException.AddValidationRuleMessage(GCS.Core.Common.Validation.ValidationRule)">
             <summary>   Adds a validation rule message to 'message'. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="rule"> The rule. </param>
        </member>
        <member name="M:GCS.Core.Common.Exceptions.DataValidationException.AddValidationRuleMessage(FluentValidation.Results.ValidationFailure)">
             <summary>   Adds a validation rule message to 'message'. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="validationFailure">    The validation failure. </param>
        </member>
        <member name="M:GCS.Core.Common.Exceptions.DataValidationException.AddValidationRuleMessage(System.String,System.String)">
             <summary>   Adds a validation rule message to 'message'. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="properyName">  Name of the propery. </param>
             <param name="message">      The message. </param>
        </member>
        <member name="M:GCS.Core.Common.Exceptions.DataValidationException.ToString">
             <summary>   Creates and returns a string representation of the current exception. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <returns>   A string representation of the current exception. </returns>
        </member>
        <member name="T:GCS.Core.Common.Exceptions.InvalidDataException">
             <summary>   Exception for signalling duplicate index errors. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Exceptions.InvalidDataException.#ctor(System.String)">
             <summary>   Constructor. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="message">  The message. </param>
        </member>
        <member name="M:GCS.Core.Common.Exceptions.InvalidDataException.#ctor(System.String,System.Exception)">
             <summary>   Constructor. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="message">          The message. </param>
             <param name="innerException">   The inner exception. </param>
        </member>
        <member name="T:GCS.Core.Common.Exceptions.DuplicateIndexException">
             <summary>   Exception for signalling duplicate index errors. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Exceptions.DuplicateIndexException.#ctor(System.String)">
             <summary>   Constructor. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="message">  The message. </param>
        </member>
        <member name="M:GCS.Core.Common.Exceptions.DuplicateIndexException.#ctor(System.String,System.Exception)">
             <summary>   Constructor. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="message">          The message. </param>
             <param name="innerException">   The inner exception. </param>
        </member>
        <member name="T:GCS.Core.Common.Exceptions.NotFoundException">
             <summary>   Exception for signalling not found errors. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Exceptions.NotFoundException.#ctor(System.String)">
             <summary>   Constructor. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="message">  The message. </param>
        </member>
        <member name="M:GCS.Core.Common.Exceptions.NotFoundException.#ctor(System.String,System.Exception)">
             <summary>   Constructor. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="message">      The message. </param>
             <param name="exception">    The exception. </param>
        </member>
        <member name="T:GCS.Core.Common.Logger.CachingLogManager">
             <summary>   Manager for caching logs. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="F:GCS.Core.Common.Logger.CachingLogManager._logManager">
            <summary>   Manager for log. </summary>
        </member>
        <member name="F:GCS.Core.Common.Logger.CachingLogManager.LoggerMap">
            <summary>   The logger map. </summary>
        </member>
        <member name="M:GCS.Core.Common.Logger.CachingLogManager.#ctor(GCS.Core.Common.Contracts.ILogManager)">
             <summary>   Constructor. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="logManager">   Manager for log. </param>
        </member>
        <member name="M:GCS.Core.Common.Logger.CachingLogManager.GetLogger(System.Type)">
             <summary>   Gets a logger. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="type"> The type. </param>
            
             <returns>   The logger. </returns>
        </member>
        <member name="T:GCS.Core.Common.Logger.GenericLoggingExtensions">
             <summary>   A generic logging extensions. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Logger.GenericLoggingExtensions.Log``1(``0)">
             <summary>   A T extension method that logs the given thing. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
             <param name="thing">    The thing to act on. </param>
            
             <returns>   An ILogger. </returns>
        </member>
        <member name="T:GCS.Core.Common.Logger.LoggerAdapter">
             <summary>   A logger adapter. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerAdapter.Debug(System.Object)">
             <summary>   Debugs. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="message">  The message. </param>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerAdapter.Debug(System.Object,System.Exception)">
             <summary>   Debugs. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="message">      The message. </param>
             <param name="exception">    The exception. </param>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerAdapter.DebugFormat(System.String,System.Object[])">
             <summary>   Debug format. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="format">   Describes the format to use. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerAdapter.DebugFormat(System.String,System.Object)">
             <summary>   Debug format. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="format">   Describes the format to use. </param>
             <param name="arg0">     The argument 0. </param>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerAdapter.DebugFormat(System.String,System.Object,System.Object)">
             <summary>   Debug format. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="format">   Describes the format to use. </param>
             <param name="arg0">     The argument 0. </param>
             <param name="arg1">     The first argument. </param>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerAdapter.DebugFormat(System.String,System.Object,System.Object,System.Object)">
             <summary>   Debug format. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="format">   Describes the format to use. </param>
             <param name="arg0">     The argument 0. </param>
             <param name="arg1">     The first argument. </param>
             <param name="arg2">     The second argument. </param>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerAdapter.DebugFormat(System.IFormatProvider,System.String,System.Object[])">
             <summary>   Debug format. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="provider"> The provider. </param>
             <param name="format">   Describes the format to use. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerAdapter.Info(System.Object)">
             <summary>   Infoes. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="message">  The message. </param>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerAdapter.Info(System.Object,System.Exception)">
             <summary>   Infoes. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="message">      The message. </param>
             <param name="exception">    The exception. </param>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerAdapter.InfoFormat(System.String,System.Object[])">
             <summary>   Information format. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="format">   Describes the format to use. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerAdapter.InfoFormat(System.String,System.Object)">
             <summary>   Information format. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="format">   Describes the format to use. </param>
             <param name="arg0">     The argument 0. </param>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerAdapter.InfoFormat(System.String,System.Object,System.Object)">
             <summary>   Information format. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="format">   Describes the format to use. </param>
             <param name="arg0">     The argument 0. </param>
             <param name="arg1">     The first argument. </param>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerAdapter.InfoFormat(System.String,System.Object,System.Object,System.Object)">
             <summary>   Information format. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="format">   Describes the format to use. </param>
             <param name="arg0">     The argument 0. </param>
             <param name="arg1">     The first argument. </param>
             <param name="arg2">     The second argument. </param>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerAdapter.InfoFormat(System.IFormatProvider,System.String,System.Object[])">
             <summary>   Information format. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="provider"> The provider. </param>
             <param name="format">   Describes the format to use. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerAdapter.Warn(System.Object)">
             <summary>   Warns. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="message">  The message. </param>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerAdapter.Warn(System.Object,System.Exception)">
             <summary>   Warns. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="message">      The message. </param>
             <param name="exception">    The exception. </param>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerAdapter.WarnFormat(System.String,System.Object[])">
             <summary>   Warning format. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="format">   Describes the format to use. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerAdapter.WarnFormat(System.String,System.Object)">
             <summary>   Warning format. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="format">   Describes the format to use. </param>
             <param name="arg0">     The argument 0. </param>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerAdapter.WarnFormat(System.String,System.Object,System.Object)">
             <summary>   Warning format. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="format">   Describes the format to use. </param>
             <param name="arg0">     The argument 0. </param>
             <param name="arg1">     The first argument. </param>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerAdapter.WarnFormat(System.String,System.Object,System.Object,System.Object)">
             <summary>   Warning format. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="format">   Describes the format to use. </param>
             <param name="arg0">     The argument 0. </param>
             <param name="arg1">     The first argument. </param>
             <param name="arg2">     The second argument. </param>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerAdapter.WarnFormat(System.IFormatProvider,System.String,System.Object[])">
             <summary>   Warning format. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="provider"> The provider. </param>
             <param name="format">   Describes the format to use. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerAdapter.Error(System.Object)">
             <summary>   Errors. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="message">  The message. </param>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerAdapter.Error(System.Object,System.Exception)">
             <summary>   Errors. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="message">      The message. </param>
             <param name="exception">    The exception. </param>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerAdapter.ErrorFormat(System.String,System.Object[])">
             <summary>   Error format. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="format">   Describes the format to use. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerAdapter.ErrorFormat(System.String,System.Object)">
             <summary>   Error format. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="format">   Describes the format to use. </param>
             <param name="arg0">     The argument 0. </param>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerAdapter.ErrorFormat(System.String,System.Object,System.Object)">
             <summary>   Error format. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="format">   Describes the format to use. </param>
             <param name="arg0">     The argument 0. </param>
             <param name="arg1">     The first argument. </param>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerAdapter.ErrorFormat(System.String,System.Object,System.Object,System.Object)">
             <summary>   Error format. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="format">   Describes the format to use. </param>
             <param name="arg0">     The argument 0. </param>
             <param name="arg1">     The first argument. </param>
             <param name="arg2">     The second argument. </param>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerAdapter.ErrorFormat(System.IFormatProvider,System.String,System.Object[])">
             <summary>   Error format. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="provider"> The provider. </param>
             <param name="format">   Describes the format to use. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerAdapter.Fatal(System.Object)">
             <summary>   Fatals. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="message">  The message. </param>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerAdapter.Fatal(System.Object,System.Exception)">
             <summary>   Fatals. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="message">      The message. </param>
             <param name="exception">    The exception. </param>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerAdapter.FatalFormat(System.String,System.Object[])">
             <summary>   Fatal format. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="format">   Describes the format to use. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerAdapter.FatalFormat(System.String,System.Object)">
             <summary>   Fatal format. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="format">   Describes the format to use. </param>
             <param name="arg0">     The argument 0. </param>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerAdapter.FatalFormat(System.String,System.Object,System.Object)">
             <summary>   Fatal format. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="format">   Describes the format to use. </param>
             <param name="arg0">     The argument 0. </param>
             <param name="arg1">     The first argument. </param>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerAdapter.FatalFormat(System.String,System.Object,System.Object,System.Object)">
             <summary>   Fatal format. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="format">   Describes the format to use. </param>
             <param name="arg0">     The argument 0. </param>
             <param name="arg1">     The first argument. </param>
             <param name="arg2">     The second argument. </param>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerAdapter.FatalFormat(System.IFormatProvider,System.String,System.Object[])">
             <summary>   Fatal format. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="provider"> The provider. </param>
             <param name="format">   Describes the format to use. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
        </member>
        <member name="P:GCS.Core.Common.Logger.LoggerAdapter.IsDebugEnabled">
             <summary>   Gets a value indicating whether a debug is enabled. </summary>
            
             <value> True if a debug is enabled, false if not. </value>
        </member>
        <member name="P:GCS.Core.Common.Logger.LoggerAdapter.IsInfoEnabled">
             <summary>   Gets a value indicating whether an information is enabled. </summary>
            
             <value> True if an information is enabled, false if not. </value>
        </member>
        <member name="P:GCS.Core.Common.Logger.LoggerAdapter.IsWarnEnabled">
             <summary>   Gets a value indicating whether a warning is enabled. </summary>
            
             <value> True if a warning is enabled, false if not. </value>
        </member>
        <member name="P:GCS.Core.Common.Logger.LoggerAdapter.IsErrorEnabled">
             <summary>   Gets a value indicating whether an error is enabled. </summary>
            
             <value> True if an error is enabled, false if not. </value>
        </member>
        <member name="P:GCS.Core.Common.Logger.LoggerAdapter.IsFatalEnabled">
             <summary>   Gets a value indicating whether a fatal is enabled. </summary>
            
             <value> True if a fatal is enabled, false if not. </value>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerAdapter.PushActivity(System.String)">
             <summary>   Pushes an activity. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="activityName"> Name of the activity. </param>
            
             <returns>   An IDisposable. </returns>
        </member>
        <member name="T:GCS.Core.Common.Logger.LoggerExtensions">
             <summary>   A logger extensions. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerExtensions.Debug(GCS.Core.Common.Contracts.ILogger,System.Func{System.String})">
             <summary>   An ILogger extension method that debugs. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="log">          The log to act on. </param>
             <param name="getMessage">   Message describing the get. </param>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerExtensions.Info(GCS.Core.Common.Contracts.ILogger,System.Func{System.String})">
             <summary>   An ILogger extension method that infoes. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="log">          The log to act on. </param>
             <param name="getMessage">   Message describing the get. </param>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerExtensions.Warn(GCS.Core.Common.Contracts.ILogger,System.Func{System.String})">
             <summary>   An ILogger extension method that warns. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="log">          The log to act on. </param>
             <param name="getMessage">   Message describing the get. </param>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerExtensions.Error(GCS.Core.Common.Contracts.ILogger,System.Func{System.String})">
             <summary>   An ILogger extension method that errors. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="log">          The log to act on. </param>
             <param name="getMessage">   Message describing the get. </param>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggerExtensions.Fatal(GCS.Core.Common.Contracts.ILogger,System.Func{System.String})">
             <summary>   An ILogger extension method that fatals. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="log">          The log to act on. </param>
             <param name="getMessage">   Message describing the get. </param>
        </member>
        <member name="T:GCS.Core.Common.Logger.LogActivityExtensions">
             <summary>   A log activity extensions. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Logger.LogActivityExtensions.Activity(GCS.Core.Common.Contracts.ILogger,System.String,System.Object[])">
             <summary>   An ILogger extension method that activities. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="log">      The log to act on. </param>
             <param name="format">   Describes the format to use. </param>
             <param name="args">     A variable-length parameters list containing arguments. </param>
            
             <returns>   An IDisposable. </returns>
        </member>
        <member name="T:GCS.Core.Common.Logger.LoggingActivity">
             <summary>   A logging activity. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="F:GCS.Core.Common.Logger.LoggingActivity._log">
            <summary>   The log. </summary>
        </member>
        <member name="F:GCS.Core.Common.Logger.LoggingActivity._activityName">
            <summary>   Name of the activity. </summary>
        </member>
        <member name="F:GCS.Core.Common.Logger.LoggingActivity._scope">
            <summary>   The scope. </summary>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggingActivity.#ctor(GCS.Core.Common.Contracts.ILogger,System.String)">
             <summary>   Constructor. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="log">          The log. </param>
             <param name="activityName"> Name of the activity. </param>
        </member>
        <member name="M:GCS.Core.Common.Logger.LoggingActivity.Dispose">
             <summary>
             Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged
             resources.
             </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="T:GCS.Core.Common.Logger.LogManager">
             <summary>   Manager for logs. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="F:GCS.Core.Common.Logger.LogManager._logManager">
            <summary>   Manager for log. </summary>
        </member>
        <member name="M:GCS.Core.Common.Logger.LogManager.#cctor">
             <summary>   Static constructor. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Logger.LogManager.GetLogger``1">
             <summary>   Gets a logger. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <typeparam name="T">    Generic type parameter. </typeparam>
            
             <returns>   The logger. </returns>
        </member>
        <member name="M:GCS.Core.Common.Logger.LogManager.GetLogger(System.Type)">
             <summary>   Gets a logger. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="type"> The type. </param>
            
             <returns>   The logger. </returns>
        </member>
        <member name="T:GCS.Core.Common.CustomError">
             <summary>   (Serializable) a custom error. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.CustomError.#ctor(System.String)">
             <summary>   Creates a new validation failure. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="error">    The error. </param>
        </member>
        <member name="M:GCS.Core.Common.CustomError.#ctor(System.String,System.String)">
             <summary>   Creates a new validation failure. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="propertyName"> The name of the property. </param>
             <param name="error">        The error. </param>
        </member>
        <member name="M:GCS.Core.Common.CustomError.#ctor(System.String,System.String,System.Object)">
             <summary>   Creates a new ValidationFailure. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="propertyName">     The name of the property. </param>
             <param name="error">            The error. </param>
             <param name="attemptedValue">   The attempted value. </param>
        </member>
        <member name="M:GCS.Core.Common.CustomError.#ctor(System.Exception)">
             <summary>   Creates a new validation failure. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="exception">    The exception. </param>
        </member>
        <member name="M:GCS.Core.Common.CustomError.#ctor(GCS.Core.Common.ServiceModel.ExceptionDetailEx)">
             <summary>   Creates a new validation failure. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="exceptionDetailEx">    The exception detail ex. </param>
        </member>
        <member name="M:GCS.Core.Common.CustomError.#ctor(System.ServiceModel.ExceptionDetail)">
             <summary>   Creates a new validation failure. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="exceptionDetail">  The exception detail. </param>
        </member>
        <member name="M:GCS.Core.Common.CustomError.ToString">
             <summary>   Creates a textual representation of the failure. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <returns>   A string that represents this CustomError. </returns>
        </member>
        <member name="P:GCS.Core.Common.CustomError.PropertyName">
             <summary>   The name of the property. </summary>
            
             <value> The name of the property. </value>
        </member>
        <member name="P:GCS.Core.Common.CustomError.ErrorMessage">
             <summary>   The error message. </summary>
            
             <value> A message describing the error. </value>
        </member>
        <member name="P:GCS.Core.Common.CustomError.AttemptedValue">
             <summary>   The property value that caused the failure. </summary>
            
             <value> The attempted value. </value>
        </member>
        <member name="P:GCS.Core.Common.CustomError.CustomState">
             <summary>   Custom state associated with the failure. </summary>
            
             <value> The custom state. </value>
        </member>
        <member name="P:GCS.Core.Common.CustomError.ErrorMessages">
             <summary>   Gets or sets the error messages. </summary>
            
             <value> The error messages. </value>
        </member>
        <member name="P:GCS.Core.Common.CustomError.ExceptionDetail">
             <summary>   Gets or sets the exception detail. </summary>
            
             <value> The exception detail. </value>
        </member>
        <member name="P:GCS.Core.Common.CustomError.ExceptionDetailEx">
             <summary>   Gets or sets the exception detail ex. </summary>
            
             <value> The exception detail ex. </value>
        </member>
        <member name="P:GCS.Core.Common.CustomError.ExceptionType">
             <summary>   Gets the type of the exception. </summary>
            
             <value> The type of the exception. </value>
        </member>
        <member name="T:GCS.Core.Common.ServiceModel.ExceptionDetailEx">
             <summary>   An exception detail ex. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="F:GCS.Core.Common.ServiceModel.ExceptionDetailEx._messages">
            <summary>   The messages. </summary>
        </member>
        <member name="M:GCS.Core.Common.ServiceModel.ExceptionDetailEx.#ctor(System.Exception)">
             <summary>   Constructor. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="exception">    The exception. </param>
        </member>
        <member name="P:GCS.Core.Common.ServiceModel.ExceptionDetailEx.Messages">
             <summary>   Gets or sets the messages. </summary>
            
             <value> The messages. </value>
        </member>
        <member name="P:GCS.Core.Common.ServiceModel.ExceptionDetailEx.PreferredHttpStatusCode">
             <summary>   Gets or sets the preferred HTTP status code. </summary>
            
             <value> The preferred HTTP status code. </value>
        </member>
        <member name="M:GCS.Core.Common.ServiceModel.ExceptionDetailEx.AddMessage(System.String)">
             <summary>   Adds a message. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="message">  The message. </param>
        </member>
        <member name="M:GCS.Core.Common.ServiceModel.ExceptionDetailEx.ToString">
             <summary>
             Returns the exception detail information for the exception passed to the constructor.
             </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <returns>   The message and stack trace of the exception. </returns>
        </member>
        <member name="T:GCS.Core.Common.Validation.ValidationRule">
             <summary>
             This class holds the business rule failure message for a specific property.
             </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Validation.ValidationRule.#ctor(System.String,System.String)">
             <summary>   Constructor for PDSAValidation Class. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <param name="propertyName"> The property name that is in error. </param>
             <param name="message">      The message. </param>
        </member>
        <member name="P:GCS.Core.Common.Validation.ValidationRule.PropertyName">
             <summary>   Get/Set the property name. </summary>
            
             <value> The name of the property. </value>
        </member>
        <member name="P:GCS.Core.Common.Validation.ValidationRule.Message">
             <summary>   Get/Set the business rule failure message. </summary>
            
             <value> The message. </value>
        </member>
        <member name="T:GCS.Core.Common.Validation.ValidationRules">
             <summary>   Collection class to hold all validation rule failure messages. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Validation.ValidationRules.#ctor">
             <summary>   Constructor for PDSAValidationRules class. </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
        </member>
        <member name="M:GCS.Core.Common.Validation.ValidationRules.ToString">
             <summary>
             ToString() method returns a CRLF delimited list of validation rule failure messages.
             </summary>
            
             <remarks>   Kevin, 12/26/2018. </remarks>
            
             <returns>   string. </returns>
        </member>
        <member name="P:GCS.Core.Common.Validation.ValidationRules.ClassName">
             <summary>   Get/Set the class name to which these business rules belong. </summary>
            
             <value> The name of the class. </value>
        </member>
    </members>
</doc>
