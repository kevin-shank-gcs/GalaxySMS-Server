//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Business.Entities
{
    using System;
    using System.Collections.Generic;
    using GCS.Core.Common.Contracts;
	using GCS.Core.Common.Core;
    public partial class TimeScheduleEntityMap : EntityBase, IIdentifiableEntity, IEquatable<TimeScheduleEntityMap>, ITableEntityBase
    {
    /*	// Move to partial class
    using System;
    using System.Collections.Generic;
    using GCS.Core.Common.Contracts;
	using GCS.Core.Common.Core;
    using GCS.Core.Common.Extensions;
    
    namespace GalaxySMS.Business.Entities
    {
        public partial class TimeScheduleEntityMap
        {
        	public TimeScheduleEntityMap()
        	{
        		Initialize();
        	}
        
        	public TimeScheduleEntityMap(TimeScheduleEntityMap e)
        	{
        		Initialize(e);
        	}
        
        	public void Initialize()
        	{
        	}
        
        	public void Initialize(TimeScheduleEntityMap e)
        	{
        		Initialize();
        		if( e == null )
        			return;
        		this.TimeScheduleEntityMapUid = e.TimeScheduleEntityMapUid;
        		this.TimeScheduleUid = e.TimeScheduleUid;
        		this.EntityId = e.EntityId;
        		this.InsertName = e.InsertName;
        		this.InsertDate = e.InsertDate;
        		this.UpdateName = e.UpdateName;
        		this.UpdateDate = e.UpdateDate;
        		this.ConcurrencyValue = e.ConcurrencyValue;
        		
        	}
        
        	public TimeScheduleEntityMap Clone(TimeScheduleEntityMap e)
        	{
        		return new TimeScheduleEntityMap(e);
        	}
        
        	public bool Equals(TimeScheduleEntityMap other)
        	{
        		return base.Equals(other);
        	}
        	
        	public bool IsPrimaryKeyEqual(TimeScheduleEntityMap other)
        	{
        		if( other == null ) 
        			return false;
        
        		if(other.TimeScheduleEntityMapUid != this.TimeScheduleEntityMapUid )
        			return false;
        		return true;
        	}
        
        	public override int GetHashCode()
        	{
        		return base.GetHashCode();
        	}
        
        	public override string ToString()
        	{
        		return base.ToString();
        	}
        }
    }
    */
    	public System.Guid TimeScheduleEntityMapUid { get; set; }
    	public System.Guid TimeScheduleUid { get; set; }
    	public System.Guid EntityId { get; set; }
    	public string InsertName { get; set; }
    	public System.DateTimeOffset InsertDate { get; set; }
    	public string UpdateName { get; set; }
    	public Nullable<System.DateTimeOffset> UpdateDate { get; set; }
    	public Nullable<short> ConcurrencyValue { get; set; }
    
    	public gcsEntity gcsEntity { get; set; }
    
    }
}
