//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Business.Entities
{
    using System;
    using System.Collections.Generic;
    using GCS.Core.Common.Contracts;
	using GCS.Core.Common.Core;
    public partial class Address : EntityBase, IIdentifiableEntity, IEquatable<Address>
    {
        /*	// Move to partial class
        using System;
        using System.Collections.Generic;
        using GCS.Core.Common.Contracts;
        using GCS.Core.Common.Core;
        using GCS.Core.Common.Extensions;

        namespace GalaxySMS.Business.Entities
        {
            public partial class Address
            {
                public Address()
                {
                    Initialize();
                }

                public Address(Address e)
                {
                    Initialize(e);
                }

                public void Initialize()
                {
                }

                public void Initialize(Address e)
                {
                    Initialize();
                    if( e == null )
                        return;
                    this.AddressUid = e.AddressUid;
                    this.StreetAddress = e.StreetAddress;
                    this.PostalCode = e.PostalCode;
                    this.City = e.City;
                    this.StateProvinceUid = e.StateProvinceUid;
                    this.Longitude = e.Longitude;
                    this.Latitude = e.Latitude;
                    this.InsertName = e.InsertName;
                    this.InsertDate = e.InsertDate;
                    this.UpdateName = e.UpdateName;
                    this.UpdateDate = e.UpdateDate;
                    this.ConcurrencyValue = e.ConcurrencyValue;
                }

                public Address Clone(Address e)
                {
                    return new Address(e);
                }

                public bool Equals(Address other)
                {
                    return base.Equals(other);
                }

                public bool IsPrimaryKeyEqual(Address other)
                {
                    if( other == null ) 
                        return false;

                    if(other.AddressUid != this.AddressUid )
                        return false;
                    return true;
                }

                public override int GetHashCode()
                {
                    return base.GetHashCode();
                }

                public override string ToString()
                {
                    return base.ToString();
                }
            }
        }
        */
        public System.Guid AddressUid { get; set; }
    	public string StreetAddress { get; set; }
    	public string PostalCode { get; set; }
    	public string City { get; set; }
    	public System.Guid StateProvinceUid { get; set; }
    	public Nullable<double> Longitude { get; set; }
    	public Nullable<double> Latitude { get; set; }
    	public string InsertName { get; set; }
    	public System.DateTimeOffset InsertDate { get; set; }
    	public string UpdateName { get; set; }
    	public Nullable<System.DateTimeOffset> UpdateDate { get; set; }
    	public Nullable<short> ConcurrencyValue { get; set; }

        public StateProvince StateProvince { get; set; }
    
    }
}
