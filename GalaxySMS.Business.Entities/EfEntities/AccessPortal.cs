//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Business.Entities
{
    using System;
    using System.Collections.Generic;
    using GCS.Core.Common.Contracts;
	using GCS.Core.Common.Core;
    public partial class AccessPortal : EntityBase, IIdentifiableEntity, IEquatable<AccessPortal>, IHasBinaryResource, IHasEntityMappingList, IHasNotes
    {
    /*	// Move to partial class
    using System;
    using System.Collections.Generic;
    using GCS.Core.Common.Contracts;
	using GCS.Core.Common.Core;
    using GCS.Core.Common.Extensions;
    
    namespace GalaxySMS.Business.Entities
    {
        public partial class AccessPortal
        {
        	public AccessPortal()
        	{
        		Initialize();
        	}
        
        	public AccessPortal(AccessPortal e)
        	{
        		Initialize(e);
        	}
        
        	public void Initialize()
        	{
        	}
        
        	public void Initialize(AccessPortal e)
        	{
        		Initialize();
        		if( e == null )
        			return;
        		this.AccessPortalUid = e.AccessPortalUid;
        		this.AccessPortalTypeUid = e.AccessPortalTypeUid;
        		this.BinaryResourceUid = e.BinaryResourceUid;
                this.SiteUid = e.SiteUid;
        		this.PortalName = e.PortalName;
        		this.Location = e.Location;
        		this.ServiceComment = e.ServiceComment;
        		this.CriticalityComment = e.CriticalityComment;
        		this.Comment = e.Comment;
        		this.IsTemplate = e.IsTemplate;
        		this.InsertName = e.InsertName;
        		this.InsertDate = e.InsertDate;
        		this.UpdateName = e.UpdateName;
        		this.UpdateDate = e.UpdateDate;
        		this.ConcurrencyValue = e.ConcurrencyValue;
        		
        	}
        
        	public AccessPortal Clone(AccessPortal e)
        	{
        		return new AccessPortal(e);
        	}
        
        	public bool Equals(AccessPortal other)
        	{
        		return base.Equals(other);
        	}
        	
        	public bool IsPrimaryKeyEqual(AccessPortal other)
        	{
        		if( other == null ) 
        			return false;
        
        		if(other.AccessPortalUid != this.AccessPortalUid )
        			return false;
        		return true;
        	}
        
        	public override int GetHashCode()
        	{
        		return base.GetHashCode();
        	}
        
        	public override string ToString()
        	{
        		return base.ToString();
        	}
        }
    }
    */
    	public System.Guid AccessPortalUid { get; set; }
    	public System.Guid AccessPortalTypeUid { get; set; }
    	public Nullable<System.Guid> BinaryResourceUid { get; set; }
        public System.Guid SiteUid { get; set; }
        public System.Guid EntityId { get; set; }
        public string PortalName { get; set; }
    	public string Location { get; set; }
    	public string ServiceComment { get; set; }
    	public string CriticalityComment { get; set; }
    	public string Comment { get; set; }
    	public bool IsTemplate { get; set; }
    	public string InsertName { get; set; }
    	public System.DateTimeOffset InsertDate { get; set; }
    	public string UpdateName { get; set; }
    	public Nullable<System.DateTimeOffset> UpdateDate { get; set; }
    	public Nullable<short> ConcurrencyValue { get; set; }
    
    	public gcsBinaryResource gcsBinaryResource { get; set; }

        public string Name
        {
            get { return PortalName; }

            set { PortalName = value; }
        }
        public System.Guid RegionUid { get; set; }
        public string RegionName { get; set; }
        public string SiteName { get; set; }

        public Guid ClusterUid { get; set; }
        public Guid GalaxyPanelUid { get; set; }
        public int ClusterGroupId { get; set; }
        public int ClusterNumber { get; set; }
        public int PanelNumber { get; set; }
        public short BoardNumber { get; set; }
        public short SectionNumber { get; set; }
        public short ModuleNumber { get; set; }
        public short NodeNumber { get; set; }
        public Guid ClusterTypeUid { get; set; }
        public string ClusterTypeCode { get; set; }
        public Guid GalaxyPanelModelUid { get; set; }
        public string GalaxyPanelTypeCode { get; set; }
        public Guid InterfaceBoardTypeUid { get; set; }
        public short InterfaceBoardTypeCode { get; set; }
        public string InterfaceBoardModel { get; set; }
        public Guid InterfaceBoardSectionModeUid { get; set; }
        public short InterfaceBoardSectionModeCode { get; set; }
        public Guid GalaxyHardwareModuleTypeUid { get; set; }
        public short ModuleTypeCode { get; set; }


        public ICollection<Guid> EntityIds { get; set; }
        public ICollection<EntityIdEntityMapPermissionLevel> MappedEntitiesPermissionLevels { get; set; }
        public AccessPortalGalaxyHardwareAddress GalaxyHardwareAddress { get; set; }

        public AccessPortalProperties Properties {get;set; }
        public ICollection<AccessPortalArea> Areas {get;set; }
        public ICollection<AccessPortalTimeSchedule> Schedules {get;set; }
        public ICollection<AccessPortalAlertEvent> AlertEvents {get;set; }
        public ICollection<AccessPortalAuxiliaryOutput> AuxiliaryOutputs {get;set; }
        public ICollection<Note> Notes { get; set; }
        public ICollection<AccessGroupAccessPortal> AccessGroupAccessPortals { get; set; }
        public ICollection<AccessPortalCommand> Commands { get; set; }

    }
}
