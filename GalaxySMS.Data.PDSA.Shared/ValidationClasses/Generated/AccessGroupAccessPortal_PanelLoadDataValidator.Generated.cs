using System;

using PDSA.Validation;

using GalaxySMS.EntityLayer;

namespace GalaxySMS.ValidationLayer
{
  /// <summary>
  /// Used to validate all properties of the AccessGroupAccessPortal_PanelLoadDataPDSA class.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public partial class AccessGroupAccessPortal_PanelLoadDataPDSAValidator : PDSAValidatorBase
  {
    #region Public Entity Property
    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    private AccessGroupAccessPortal_PanelLoadDataPDSA _Entity = null;

    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    public new AccessGroupAccessPortal_PanelLoadDataPDSA Entity
    {
      get { return _Entity; }
      set
      {
        _Entity = value;
        base.Entity = value;
      }
    }
    #endregion
    
    #region Clone Entity Class
    /// <summary>
    /// Clones the current AccessGroupAccessPortal_PanelLoadDataPDSA
    /// </summary>
    /// <returns>A cloned AccessGroupAccessPortal_PanelLoadDataPDSA object</returns>
    public AccessGroupAccessPortal_PanelLoadDataPDSA CloneEntity()
    {
      return CloneEntity(this.Entity);
    }
    
    /// <summary>
    /// Clones the passed in AccessGroupAccessPortal_PanelLoadDataPDSA
    /// </summary>
    /// <param name="entityToClone">The AccessGroupAccessPortal_PanelLoadDataPDSA entity to clone</param>
    /// <returns>A cloned AccessGroupAccessPortal_PanelLoadDataPDSA object</returns>
    public AccessGroupAccessPortal_PanelLoadDataPDSA CloneEntity(AccessGroupAccessPortal_PanelLoadDataPDSA entityToClone)
    {
      AccessGroupAccessPortal_PanelLoadDataPDSA newEntity = new AccessGroupAccessPortal_PanelLoadDataPDSA();

      newEntity.AccessGroupAccessPortalUid = entityToClone.AccessGroupAccessPortalUid;
      newEntity.AccessGroupName = entityToClone.AccessGroupName;
      newEntity.TimeScheduleName = entityToClone.TimeScheduleName;
      newEntity.AccessPortalName = entityToClone.AccessPortalName;
      newEntity.ClusterGroupId = entityToClone.ClusterGroupId;
      newEntity.ClusterNumber = entityToClone.ClusterNumber;
      newEntity.PanelNumber = entityToClone.PanelNumber;
      newEntity.BoardNumber = entityToClone.BoardNumber;
      newEntity.SectionNumber = entityToClone.SectionNumber;
      newEntity.ModuleNumber = entityToClone.ModuleNumber;
      newEntity.NodeNumber = entityToClone.NodeNumber;
      newEntity.AccessGroupNumber = entityToClone.AccessGroupNumber;
      newEntity.PanelScheduleNumber = entityToClone.PanelScheduleNumber;
      newEntity.ActivationDate = entityToClone.ActivationDate;
      newEntity.ExpirationDate = entityToClone.ExpirationDate;
      newEntity.IsEnabled = entityToClone.IsEnabled;
      newEntity.AccessPortalUid = entityToClone.AccessPortalUid;
      newEntity.TimeScheduleUid = entityToClone.TimeScheduleUid;
      newEntity.AccessGroupUid = entityToClone.AccessGroupUid;
      newEntity.AccessPortalBoardTypeTypeCode = entityToClone.AccessPortalBoardTypeTypeCode;
      newEntity.CurrentTimeForCluster = entityToClone.CurrentTimeForCluster;
      newEntity.ClusterUid = entityToClone.ClusterUid;
      newEntity.GalaxyPanelUid = entityToClone.GalaxyPanelUid;

      return newEntity;
    }
    #endregion

    #region CreateProperties Method
    /// <summary>
    /// Creates the collection of PDSAProperty objects. These are used to control validation and null handling.
    /// </summary>
    /// <returns>A collection of PDSAProperty objects</returns>
    public override PDSAProperties CreateProperties()
    {
      PDSAProperties props = new PDSAProperties();
      
      props.Add(PDSAProperty.Create(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.AccessGroupAccessPortalUid, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_AccessGroupAccessPortalUid_Header", "Access Group Access Portal Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_AccessGroupAccessPortalUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.AccessGroupName, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_AccessGroupName_Header", "Access Group Name"), false, typeof(string), 65, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_AccessGroupName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.TimeScheduleName, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_TimeScheduleName_Header", "Time Schedule Name"), false, typeof(string), 65, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_TimeScheduleName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.AccessPortalName, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_AccessPortalName_Header", "Access Portal Name"), false, typeof(string), 128, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_AccessPortalName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.ClusterGroupId, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_AccountCode_Header", "Account Code"), false, typeof(string), 16, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_AccountCode_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.ClusterNumber, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_ClusterNumber_Header", "Cluster Number"), false, typeof(short), 10, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_ClusterNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.PanelNumber, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_PanelNumber_Header", "Panel Number"), false, typeof(short), 10, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_PanelNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.BoardNumber, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_BoardNumber_Header", "Board Number"), false, typeof(short), 5, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_BoardNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.SectionNumber, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_SectionNumber_Header", "Section Number"), false, typeof(short), 5, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_SectionNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.ModuleNumber, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_ModuleNumber_Header", "Module Number"), false, typeof(short), 5, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_ModuleNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.NodeNumber, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_NodeNumber_Header", "Node Number"), false, typeof(short), 5, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_NodeNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.AccessGroupNumber, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_AccessGroupNumber_Header", "Access Group Number"), false, typeof(int), 10, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_AccessGroupNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.PanelScheduleNumber, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_PanelScheduleNumber_Header", "Panel Schedule Number"), false, typeof(int), 10, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_PanelScheduleNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.ActivationDate, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_ActivationDate_Header", "Activation Date"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_ActivationDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.ExpirationDate, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_ExpirationDate_Header", "Expiration Date"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_ExpirationDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.IsEnabled, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_IsEnabled_Header", "Is Enabled"), false, typeof(bool), -1, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_IsEnabled_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.AccessPortalUid, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_AccessPortalUid_Header", "Access Portal Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_AccessPortalUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.TimeScheduleUid, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_TimeScheduleUid_Header", "Time Schedule Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_TimeScheduleUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.AccessGroupUid, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_AccessGroupUid_Header", "Access Group Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_AccessGroupUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.AccessPortalBoardTypeTypeCode, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_AccessPortalBoardTypeTypeCode_Header", "Access Portal Board Type Type Code"), false, typeof(short), 5, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_AccessPortalBoardTypeTypeCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.CurrentTimeForCluster, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_CurrentTimeForCluster_Header", "Current Time For Cluster"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_CurrentTimeForCluster_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.ClusterUid, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_ClusterUid_Header", "Cluster Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_ClusterUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.GalaxyPanelUid, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_GalaxyPanelUid_Header", "Galaxy Panel Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_AccessGroupAccessPortal_PanelLoadDataPDSA_GalaxyPanelUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      
      return props;
    }
    #endregion

    #region Initialize Entity
    /// <summary>
    /// This method is called from the CreateNewEntity Method. All the properties for the Entity are set to default values here by the code generator.
    /// </summary>
    protected override void InitializeEntity()
    {
      Entity.AccessGroupAccessPortalUid = Guid.Empty;
      Entity.AccessGroupName = string.Empty;
      Entity.TimeScheduleName = string.Empty;
      Entity.AccessPortalName = string.Empty;
      Entity.ClusterGroupId = 0;
      Entity.ClusterNumber = 0;
      Entity.PanelNumber = 0;
      Entity.BoardNumber = 0;
      Entity.SectionNumber = 0;
      Entity.ModuleNumber = 0;
      Entity.NodeNumber = 0;
      Entity.AccessGroupNumber = 0;
      Entity.PanelScheduleNumber = 0;
      Entity.ActivationDate = DateTimeOffset.Now;
      Entity.ExpirationDate = DateTimeOffset.Now;
      Entity.IsEnabled = false;
      Entity.AccessPortalUid = Guid.Empty;
      Entity.TimeScheduleUid = Guid.Empty;
      Entity.AccessGroupUid = Guid.Empty;
      Entity.AccessPortalBoardTypeTypeCode = 0;
      Entity.CurrentTimeForCluster = DateTimeOffset.Now;
      Entity.ClusterUid = Guid.Empty;
      Entity.GalaxyPanelUid = Guid.Empty;

      Entity.ResetAllIsDirtyProperties();
    }
    #endregion
    
    #region InitProperties Method
    /// <summary>
    /// Called by the constructor to create the PDSAProperties collection of all properties that will be validated.
    /// </summary>
    protected override void InitProperties()
    {
      // Set the Properties collection to the collection of Entity Properties
      Properties = CreateProperties();
    }
    #endregion

    #region EntityDataToProperties Method
    /// <summary>
    /// Moves the Entity class data into the Properties collection.
    /// </summary>
    protected override void EntityDataToProperties()
    {
      if (Properties == null)
        InitProperties();
      
      if(!Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.AccessGroupAccessPortalUid).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.AccessGroupAccessPortalUid).Value = Entity.AccessGroupAccessPortalUid;
      if(!Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.AccessGroupName).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.AccessGroupName).Value = Entity.AccessGroupName;
      if(!Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.TimeScheduleName).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.TimeScheduleName).Value = Entity.TimeScheduleName;
      if(!Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.AccessPortalName).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.AccessPortalName).Value = Entity.AccessPortalName;
      if(!Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.ClusterGroupId).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.ClusterGroupId).Value = Entity.ClusterGroupId;
      if(!Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.ClusterNumber).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.ClusterNumber).Value = Entity.ClusterNumber;
      if(!Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.PanelNumber).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.PanelNumber).Value = Entity.PanelNumber;
      if(!Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.BoardNumber).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.BoardNumber).Value = Entity.BoardNumber;
      if(!Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.SectionNumber).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.SectionNumber).Value = Entity.SectionNumber;
      if(!Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.ModuleNumber).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.ModuleNumber).Value = Entity.ModuleNumber;
      if(!Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.NodeNumber).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.NodeNumber).Value = Entity.NodeNumber;
      if(!Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.AccessGroupNumber).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.AccessGroupNumber).Value = Entity.AccessGroupNumber;
      if(!Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.PanelScheduleNumber).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.PanelScheduleNumber).Value = Entity.PanelScheduleNumber;
      if(!Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.ActivationDate).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.ActivationDate).Value = Entity.ActivationDate;
      if(!Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.ExpirationDate).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.ExpirationDate).Value = Entity.ExpirationDate;
      if(!Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.IsEnabled).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.IsEnabled).Value = Entity.IsEnabled;
      if(!Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.AccessPortalUid).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.AccessPortalUid).Value = Entity.AccessPortalUid;
      if(!Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.TimeScheduleUid).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.TimeScheduleUid).Value = Entity.TimeScheduleUid;
      if(!Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.AccessGroupUid).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.AccessGroupUid).Value = Entity.AccessGroupUid;
      if(!Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.AccessPortalBoardTypeTypeCode).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.AccessPortalBoardTypeTypeCode).Value = Entity.AccessPortalBoardTypeTypeCode;
      if(!Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.CurrentTimeForCluster).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.CurrentTimeForCluster).Value = Entity.CurrentTimeForCluster;
      if(!Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.ClusterUid).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.ClusterUid).Value = Entity.ClusterUid;
      if(!Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.GalaxyPanelUid).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.GalaxyPanelUid).Value = Entity.GalaxyPanelUid;
    }

    /// <summary>
    /// Moves the Properties collection objects into the Entity properties
    /// </summary>
    protected override void PropertiesToEntityData()
    {
      if (Properties == null)
        InitProperties();

      if(Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.AccessGroupAccessPortalUid).IsNull == false)
        Entity.AccessGroupAccessPortalUid = Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.AccessGroupAccessPortalUid).GetAsGuid();
      if(Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.AccessGroupName).IsNull == false)
        Entity.AccessGroupName = Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.AccessGroupName).GetAsString();
      if(Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.TimeScheduleName).IsNull == false)
        Entity.TimeScheduleName = Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.TimeScheduleName).GetAsString();
      if(Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.AccessPortalName).IsNull == false)
        Entity.AccessPortalName = Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.AccessPortalName).GetAsString();
      if(Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.ClusterGroupId).IsNull == false)
        Entity.ClusterGroupId = Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.ClusterGroupId).GetAsInteger();
      if(Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.ClusterNumber).IsNull == false)
        Entity.ClusterNumber = Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.ClusterNumber).GetAsShort();
      if(Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.PanelNumber).IsNull == false)
        Entity.PanelNumber = Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.PanelNumber).GetAsShort();
      if(Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.BoardNumber).IsNull == false)
        Entity.BoardNumber = Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.BoardNumber).GetAsShort();
      if(Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.SectionNumber).IsNull == false)
        Entity.SectionNumber = Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.SectionNumber).GetAsShort();
      if(Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.ModuleNumber).IsNull == false)
        Entity.ModuleNumber = Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.ModuleNumber).GetAsShort();
      if(Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.NodeNumber).IsNull == false)
        Entity.NodeNumber = Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.NodeNumber).GetAsShort();
      if(Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.AccessGroupNumber).IsNull == false)
        Entity.AccessGroupNumber = Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.AccessGroupNumber).GetAsInteger();
      if(Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.PanelScheduleNumber).IsNull == false)
        Entity.PanelScheduleNumber = Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.PanelScheduleNumber).GetAsInteger();
      if(Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.ActivationDate).IsNull == false)
        Entity.ActivationDate = Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.ActivationDate).GetAsDateTimeOffset();
      if(Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.ExpirationDate).IsNull == false)
        Entity.ExpirationDate = Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.ExpirationDate).GetAsDateTimeOffset();
      if(Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.IsEnabled).IsNull == false)
        Entity.IsEnabled = Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.IsEnabled).GetAsBool();
      if(Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.AccessPortalUid).IsNull == false)
        Entity.AccessPortalUid = Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.AccessPortalUid).GetAsGuid();
      if(Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.TimeScheduleUid).IsNull == false)
        Entity.TimeScheduleUid = Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.TimeScheduleUid).GetAsGuid();
      if(Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.AccessGroupUid).IsNull == false)
        Entity.AccessGroupUid = Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.AccessGroupUid).GetAsGuid();
      if(Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.AccessPortalBoardTypeTypeCode).IsNull == false)
        Entity.AccessPortalBoardTypeTypeCode = Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.AccessPortalBoardTypeTypeCode).GetAsShort();
      if(Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.CurrentTimeForCluster).IsNull == false)
        Entity.CurrentTimeForCluster = Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.CurrentTimeForCluster).GetAsDateTimeOffset();
      if(Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.ClusterUid).IsNull == false)
        Entity.ClusterUid = Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.ClusterUid).GetAsGuid();
      if(Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.GalaxyPanelUid).IsNull == false)
        Entity.GalaxyPanelUid = Properties.GetByName(AccessGroupAccessPortal_PanelLoadDataPDSAValidator.ColumnNames.GalaxyPanelUid).GetAsGuid();
    }
    #endregion
    
    #region ColumnNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the AccessGroupAccessPortal_PanelLoadDataPDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ColumnNames
    {
    /// <summary>
    /// Returns 'AccessGroupAccessPortalUid'
    /// </summary>
    public static string AccessGroupAccessPortalUid = "AccessGroupAccessPortalUid";
    /// <summary>
    /// Returns 'AccessGroupName'
    /// </summary>
    public static string AccessGroupName = "AccessGroupName";
    /// <summary>
    /// Returns 'TimeScheduleName'
    /// </summary>
    public static string TimeScheduleName = "TimeScheduleName";
    /// <summary>
    /// Returns 'AccessPortalName'
    /// </summary>
    public static string AccessPortalName = "AccessPortalName";
    /// <summary>
    /// Returns 'ClusterGroupId'
    /// </summary>
    public static string ClusterGroupId = "ClusterGroupId";
    /// <summary>
    /// Returns 'ClusterNumber'
    /// </summary>
    public static string ClusterNumber = "ClusterNumber";
    /// <summary>
    /// Returns 'PanelNumber'
    /// </summary>
    public static string PanelNumber = "PanelNumber";
    /// <summary>
    /// Returns 'BoardNumber'
    /// </summary>
    public static string BoardNumber = "BoardNumber";
    /// <summary>
    /// Returns 'SectionNumber'
    /// </summary>
    public static string SectionNumber = "SectionNumber";
    /// <summary>
    /// Returns 'ModuleNumber'
    /// </summary>
    public static string ModuleNumber = "ModuleNumber";
    /// <summary>
    /// Returns 'NodeNumber'
    /// </summary>
    public static string NodeNumber = "NodeNumber";
    /// <summary>
    /// Returns 'AccessGroupNumber'
    /// </summary>
    public static string AccessGroupNumber = "AccessGroupNumber";
    /// <summary>
    /// Returns 'PanelScheduleNumber'
    /// </summary>
    public static string PanelScheduleNumber = "PanelScheduleNumber";
    /// <summary>
    /// Returns 'ActivationDate'
    /// </summary>
    public static string ActivationDate = "ActivationDate";
    /// <summary>
    /// Returns 'ExpirationDate'
    /// </summary>
    public static string ExpirationDate = "ExpirationDate";
    /// <summary>
    /// Returns 'IsEnabled'
    /// </summary>
    public static string IsEnabled = "IsEnabled";
    /// <summary>
    /// Returns 'AccessPortalUid'
    /// </summary>
    public static string AccessPortalUid = "AccessPortalUid";
    /// <summary>
    /// Returns 'TimeScheduleUid'
    /// </summary>
    public static string TimeScheduleUid = "TimeScheduleUid";
    /// <summary>
    /// Returns 'AccessGroupUid'
    /// </summary>
    public static string AccessGroupUid = "AccessGroupUid";
    /// <summary>
    /// Returns 'AccessPortalBoardTypeTypeCode'
    /// </summary>
    public static string AccessPortalBoardTypeTypeCode = "AccessPortalBoardTypeTypeCode";
    /// <summary>
    /// Returns 'CurrentTimeForCluster'
    /// </summary>
    public static string CurrentTimeForCluster = "CurrentTimeForCluster";
    /// <summary>
    /// Returns 'ClusterUid'
    /// </summary>
    public static string ClusterUid = "ClusterUid";
    /// <summary>
    /// Returns 'GalaxyPanelUid'
    /// </summary>
    public static string GalaxyPanelUid = "GalaxyPanelUid";
    }
    #endregion
  }
}
