using System;

using PDSA.Common;
using PDSA.Validation;

using GalaxySMS.EntityLayer;

namespace GalaxySMS.ValidationLayer
{
  /// <summary>
  /// Used to validate all properties of the PanelDataPacketLogPDSA class.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public partial class PanelDataPacketLogPDSAValidator : PDSAValidatorBase
  {
    #region Public Entity Property
    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    private PanelDataPacketLogPDSA _Entity = null;

    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    public new PanelDataPacketLogPDSA Entity
    {
      get { return _Entity; }
      set
      {
        _Entity = value;
        base.Entity = value;
      }
    }
    #endregion
    
    #region Clone Entity Class
    /// <summary>
    /// Clones the current PanelDataPacketLogPDSA
    /// </summary>
    /// <returns>A cloned PanelDataPacketLogPDSA object</returns>
    public PanelDataPacketLogPDSA CloneEntity()
    {
      return CloneEntity(this.Entity);
    }
    
    /// <summary>
    /// Clones the passed in PanelDataPacketLogPDSA
    /// </summary>
    /// <param name="entityToClone">The PanelDataPacketLogPDSA entity to clone</param>
    /// <returns>A cloned PanelDataPacketLogPDSA object</returns>
    public PanelDataPacketLogPDSA CloneEntity(PanelDataPacketLogPDSA entityToClone)
    {
      PanelDataPacketLogPDSA newEntity = new PanelDataPacketLogPDSA();

      newEntity.Id = entityToClone.Id;
      newEntity.InsertDate = entityToClone.InsertDate;
      newEntity.UpdateDate = entityToClone.UpdateDate;
      newEntity.Length = entityToClone.Length;
      newEntity.Distribute = entityToClone.Distribute;
      newEntity.ClusterId = entityToClone.ClusterId;
      newEntity.PanelId = entityToClone.PanelId;
      newEntity.CpuId = entityToClone.CpuId;
      newEntity.BoardNumber = entityToClone.BoardNumber;
      newEntity.SectionNumber = entityToClone.SectionNumber;
      newEntity.SecondsFromWeekStart = entityToClone.SecondsFromWeekStart;
      newEntity.Sequence = entityToClone.Sequence;
      newEntity.RawData = entityToClone.RawData;
      newEntity.Direction = entityToClone.Direction;

      return newEntity;
    }
    #endregion

    #region CreateProperties Method
    /// <summary>
    /// Creates the collection of PDSAProperty objects. These are used to control validation and null handling.
    /// </summary>
    /// <returns>A collection of PDSAProperty objects</returns>
    public override PDSAProperties CreateProperties()
    {
      PDSAProperties props = new PDSAProperties();
      
      props.Add(PDSAProperty.Create(PanelDataPacketLogPDSAValidator.ColumnNames.Id, GetResourceMessage("GCS_PanelDataPacketLogPDSA_Id_Header", "Id"), true, typeof(Guid), -1, GetResourceMessage("GCS_PanelDataPacketLogPDSA_Id_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PanelDataPacketLogPDSAValidator.ColumnNames.InsertDate, GetResourceMessage("GCS_PanelDataPacketLogPDSA_InsertDate_Header", "Insert Date"), true, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_PanelDataPacketLogPDSA_InsertDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(PanelDataPacketLogPDSAValidator.ColumnNames.UpdateDate, GetResourceMessage("GCS_PanelDataPacketLogPDSA_UpdateDate_Header", "Update Date"), true, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_PanelDataPacketLogPDSA_UpdateDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(PanelDataPacketLogPDSAValidator.ColumnNames.Length, GetResourceMessage("GCS_PanelDataPacketLogPDSA_Length_Header", "Length"), true, typeof(short), 5, GetResourceMessage("GCS_PanelDataPacketLogPDSA_Length_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(PanelDataPacketLogPDSAValidator.ColumnNames.Distribute, GetResourceMessage("GCS_PanelDataPacketLogPDSA_Distribute_Header", "Distribute"), true, typeof(short), 5, GetResourceMessage("GCS_PanelDataPacketLogPDSA_Distribute_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(PanelDataPacketLogPDSAValidator.ColumnNames.ClusterId, GetResourceMessage("GCS_PanelDataPacketLogPDSA_ClusterId_Header", "Cluster Id"), true, typeof(int), 10, GetResourceMessage("GCS_PanelDataPacketLogPDSA_ClusterId_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(PanelDataPacketLogPDSAValidator.ColumnNames.PanelId, GetResourceMessage("GCS_PanelDataPacketLogPDSA_PanelId_Header", "Panel Id"), true, typeof(int), 10, GetResourceMessage("GCS_PanelDataPacketLogPDSA_PanelId_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(PanelDataPacketLogPDSAValidator.ColumnNames.CpuId, GetResourceMessage("GCS_PanelDataPacketLogPDSA_CpuId_Header", "Cpu Id"), true, typeof(short), 5, GetResourceMessage("GCS_PanelDataPacketLogPDSA_CpuId_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(PanelDataPacketLogPDSAValidator.ColumnNames.BoardNumber, GetResourceMessage("GCS_PanelDataPacketLogPDSA_BoardNumber_Header", "Board Number"), true, typeof(int), 10, GetResourceMessage("GCS_PanelDataPacketLogPDSA_BoardNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(PanelDataPacketLogPDSAValidator.ColumnNames.SectionNumber, GetResourceMessage("GCS_PanelDataPacketLogPDSA_SectionNumber_Header", "Section Number"), true, typeof(short), 5, GetResourceMessage("GCS_PanelDataPacketLogPDSA_SectionNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(PanelDataPacketLogPDSAValidator.ColumnNames.SecondsFromWeekStart, GetResourceMessage("GCS_PanelDataPacketLogPDSA_SecondsFromWeekStart_Header", "Seconds From Week Start"), true, typeof(int), 10, GetResourceMessage("GCS_PanelDataPacketLogPDSA_SecondsFromWeekStart_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(PanelDataPacketLogPDSAValidator.ColumnNames.Sequence, GetResourceMessage("GCS_PanelDataPacketLogPDSA_Sequence_Header", "Sequence"), true, typeof(int), 10, GetResourceMessage("GCS_PanelDataPacketLogPDSA_Sequence_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(PanelDataPacketLogPDSAValidator.ColumnNames.RawData, GetResourceMessage("GCS_PanelDataPacketLogPDSA_RawData_Header", "Raw Data"), true, typeof(byte[]), 2147483647, GetResourceMessage("GCS_PanelDataPacketLogPDSA_RawData_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, null, @"", ""));
      props.Add(PDSAProperty.Create(PanelDataPacketLogPDSAValidator.ColumnNames.Direction, GetResourceMessage("GCS_PanelDataPacketLogPDSA_Direction_Header", "Direction"), false, typeof(bool), -1, GetResourceMessage("GCS_PanelDataPacketLogPDSA_Direction_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      
      return props;
    }
    #endregion

    #region Initialize Entity
    /// <summary>
    /// This method is called from the CreateNewEntity Method. All the properties for the Entity are set to default values here by the code generator.
    /// </summary>
    protected override void InitializeEntity()
    {
      Entity.Id = Guid.Empty;
      Entity.InsertDate = DateTimeOffset.Now;
      Entity.UpdateDate = DateTimeOffset.Now;
      Entity.Length = 0;
      Entity.Distribute = 0;
      Entity.ClusterId = 0;
      Entity.PanelId = 0;
      Entity.CpuId = 0;
      Entity.BoardNumber = 0;
      Entity.SectionNumber = 0;
      Entity.SecondsFromWeekStart = 0;
      Entity.Sequence = 0;
      Entity.RawData = null;
      Entity.Direction = false;

      Entity.ResetAllIsDirtyProperties();
    }
    #endregion
    
    #region InitProperties Method
    /// <summary>
    /// Called by the constructor to create the PDSAProperties collection of all properties that will be validated.
    /// </summary>
    protected override void InitProperties()
    {
      // Set the Properties collection to the collection of Entity Properties
      Properties = CreateProperties();
    }
    #endregion

    #region EntityDataToProperties Method
    /// <summary>
    /// Moves the Entity class data into the Properties collection.
    /// </summary>
    protected override void EntityDataToProperties()
    {
      if (Properties == null)
        InitProperties();
      
      if(!Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.Id).SetAsNull)
        Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.Id).Value = Entity.Id;
      if(!Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.InsertDate).SetAsNull)
        Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.InsertDate).Value = Entity.InsertDate;
      if(!Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.UpdateDate).SetAsNull)
        Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.UpdateDate).Value = Entity.UpdateDate;
      if(!Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.Length).SetAsNull)
        Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.Length).Value = Entity.Length;
      if(!Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.Distribute).SetAsNull)
        Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.Distribute).Value = Entity.Distribute;
      if(!Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.ClusterId).SetAsNull)
        Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.ClusterId).Value = Entity.ClusterId;
      if(!Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.PanelId).SetAsNull)
        Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.PanelId).Value = Entity.PanelId;
      if(!Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.CpuId).SetAsNull)
        Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.CpuId).Value = Entity.CpuId;
      if(!Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.BoardNumber).SetAsNull)
        Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.BoardNumber).Value = Entity.BoardNumber;
      if(!Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.SectionNumber).SetAsNull)
        Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.SectionNumber).Value = Entity.SectionNumber;
      if(!Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.SecondsFromWeekStart).SetAsNull)
        Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.SecondsFromWeekStart).Value = Entity.SecondsFromWeekStart;
      if(!Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.Sequence).SetAsNull)
        Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.Sequence).Value = Entity.Sequence;
      if(!Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.RawData).SetAsNull)
        Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.RawData).Value = Entity.RawData;
      if(!Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.Direction).SetAsNull)
        Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.Direction).Value = Entity.Direction;
    }

    /// <summary>
    /// Moves the Properties collection objects into the Entity properties
    /// </summary>
    protected override void PropertiesToEntityData()
    {
      if (Properties == null)
        InitProperties();

      if(Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.Id).IsNull == false)
        Entity.Id = Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.Id).GetAsGuid();
      if(Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.InsertDate).IsNull == false)
        Entity.InsertDate = Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.InsertDate).GetAsDateTimeOffset();
      if(Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.UpdateDate).IsNull == false)
        Entity.UpdateDate = Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.UpdateDate).GetAsDateTimeOffset();
      if(Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.Length).IsNull == false)
        Entity.Length = Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.Length).GetAsShort();
      if(Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.Distribute).IsNull == false)
        Entity.Distribute = Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.Distribute).GetAsShort();
      if(Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.ClusterId).IsNull == false)
        Entity.ClusterId = Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.ClusterId).GetAsInteger();
      if(Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.PanelId).IsNull == false)
        Entity.PanelId = Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.PanelId).GetAsInteger();
      if(Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.CpuId).IsNull == false)
        Entity.CpuId = Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.CpuId).GetAsShort();
      if(Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.BoardNumber).IsNull == false)
        Entity.BoardNumber = Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.BoardNumber).GetAsInteger();
      if(Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.SectionNumber).IsNull == false)
        Entity.SectionNumber = Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.SectionNumber).GetAsShort();
      if(Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.SecondsFromWeekStart).IsNull == false)
        Entity.SecondsFromWeekStart = Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.SecondsFromWeekStart).GetAsInteger();
      if(Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.Sequence).IsNull == false)
        Entity.Sequence = Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.Sequence).GetAsInteger();
      if(Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.RawData).IsNull == false)
        Entity.RawData = Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.RawData).GetAsByteArray();
      if(Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.Direction).IsNull == false)
        Entity.Direction = Properties.GetByName(PanelDataPacketLogPDSAValidator.ColumnNames.Direction).GetAsBool();
    }
    #endregion
    
    #region ColumnNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the PanelDataPacketLogPDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ColumnNames
    {
    /// <summary>
    /// Returns 'Id'
    /// </summary>
    public static string Id = "Id";
    /// <summary>
    /// Returns 'InsertDate'
    /// </summary>
    public static string InsertDate = "InsertDate";
    /// <summary>
    /// Returns 'UpdateDate'
    /// </summary>
    public static string UpdateDate = "UpdateDate";
    /// <summary>
    /// Returns 'Length'
    /// </summary>
    public static string Length = "Length";
    /// <summary>
    /// Returns 'Distribute'
    /// </summary>
    public static string Distribute = "Distribute";
    /// <summary>
    /// Returns 'ClusterId'
    /// </summary>
    public static string ClusterId = "ClusterId";
    /// <summary>
    /// Returns 'PanelId'
    /// </summary>
    public static string PanelId = "PanelId";
    /// <summary>
    /// Returns 'CpuId'
    /// </summary>
    public static string CpuId = "CpuId";
    /// <summary>
    /// Returns 'BoardNumber'
    /// </summary>
    public static string BoardNumber = "BoardNumber";
    /// <summary>
    /// Returns 'SectionNumber'
    /// </summary>
    public static string SectionNumber = "SectionNumber";
    /// <summary>
    /// Returns 'SecondsFromWeekStart'
    /// </summary>
    public static string SecondsFromWeekStart = "SecondsFromWeekStart";
    /// <summary>
    /// Returns 'Sequence'
    /// </summary>
    public static string Sequence = "Sequence";
    /// <summary>
    /// Returns 'RawData'
    /// </summary>
    public static string RawData = "RawData";
    /// <summary>
    /// Returns 'Direction'
    /// </summary>
    public static string Direction = "Direction";
    }
    #endregion
  }
}
