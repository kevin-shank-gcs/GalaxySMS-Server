using System;

using PDSA.Validation;

using GalaxySMS.EntityLayer;

namespace GalaxySMS.ValidationLayer
{
  /// <summary>
  /// Used to validate all properties of the CredentialToDelete_PanelLoadDataChangesForCpuPDSA class.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public partial class CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator : PDSAValidatorBase
  {
    #region Public Entity Property
    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    private CredentialToDelete_PanelLoadDataChangesForCpuPDSA _Entity = null;

    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    public new CredentialToDelete_PanelLoadDataChangesForCpuPDSA Entity
    {
      get { return _Entity; }
      set
      {
        _Entity = value;
        base.Entity = value;
      }
    }
    #endregion
    
    #region Clone Entity Class
    /// <summary>
    /// Clones the current CredentialToDelete_PanelLoadDataChangesForCpuPDSA
    /// </summary>
    /// <returns>A cloned CredentialToDelete_PanelLoadDataChangesForCpuPDSA object</returns>
    public CredentialToDelete_PanelLoadDataChangesForCpuPDSA CloneEntity()
    {
      return CloneEntity(this.Entity);
    }
    
    /// <summary>
    /// Clones the passed in CredentialToDelete_PanelLoadDataChangesForCpuPDSA
    /// </summary>
    /// <param name="entityToClone">The CredentialToDelete_PanelLoadDataChangesForCpuPDSA entity to clone</param>
    /// <returns>A cloned CredentialToDelete_PanelLoadDataChangesForCpuPDSA object</returns>
    public CredentialToDelete_PanelLoadDataChangesForCpuPDSA CloneEntity(CredentialToDelete_PanelLoadDataChangesForCpuPDSA entityToClone)
    {
      CredentialToDelete_PanelLoadDataChangesForCpuPDSA newEntity = new CredentialToDelete_PanelLoadDataChangesForCpuPDSA();

      newEntity.CredentialToDeleteFromCpuUid = entityToClone.CredentialToDeleteFromCpuUid;
      newEntity.CpuUid = entityToClone.CpuUid;
      newEntity.CardBinaryData = entityToClone.CardBinaryData;
      newEntity.DeletedFromDatabaseDate = entityToClone.DeletedFromDatabaseDate;
      newEntity.DeletedFromCpuDate = entityToClone.DeletedFromCpuDate;
      newEntity.ClusterNumber = entityToClone.ClusterNumber;
      newEntity.PanelNumber = entityToClone.PanelNumber;
      newEntity.CpuNumber = entityToClone.CpuNumber;
      newEntity.ClusterGroupId = entityToClone.ClusterGroupId;
      newEntity.ServerAddress = entityToClone.ServerAddress;
      newEntity.IsConnected = entityToClone.IsConnected;

      return newEntity;
    }
    #endregion

    #region CreateProperties Method
    /// <summary>
    /// Creates the collection of PDSAProperty objects. These are used to control validation and null handling.
    /// </summary>
    /// <returns>A collection of PDSAProperty objects</returns>
    public override PDSAProperties CreateProperties()
    {
      PDSAProperties props = new PDSAProperties();
      
      props.Add(PDSAProperty.Create(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialToDeleteFromCpuUid, GetResourceMessage("GCS_CredentialToDelete_PanelLoadDataChangesForCpuPDSA_CredentialToDeleteFromCpuUid_Header", "Credential To Delete From Cpu Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_CredentialToDelete_PanelLoadDataChangesForCpuPDSA_CredentialToDeleteFromCpuUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuUid, GetResourceMessage("GCS_CredentialToDelete_PanelLoadDataChangesForCpuPDSA_CpuUid_Header", "Cpu Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_CredentialToDelete_PanelLoadDataChangesForCpuPDSA_CpuUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardBinaryData, GetResourceMessage("GCS_CredentialToDelete_PanelLoadDataChangesForCpuPDSA_CardBinaryData_Header", "Card Binary Data"), false, typeof(byte[]), 32, GetResourceMessage("GCS_CredentialToDelete_PanelLoadDataChangesForCpuPDSA_CardBinaryData_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, null, @"", ""));
      props.Add(PDSAProperty.Create(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DeletedFromDatabaseDate, GetResourceMessage("GCS_CredentialToDelete_PanelLoadDataChangesForCpuPDSA_DeletedFromDatabaseDate_Header", "Deleted From Database Date"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_CredentialToDelete_PanelLoadDataChangesForCpuPDSA_DeletedFromDatabaseDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DeletedFromCpuDate, GetResourceMessage("GCS_CredentialToDelete_PanelLoadDataChangesForCpuPDSA_DeletedFromCpuDate_Header", "Deleted From Cpu Date"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_CredentialToDelete_PanelLoadDataChangesForCpuPDSA_DeletedFromCpuDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterNumber, GetResourceMessage("GCS_CredentialToDelete_PanelLoadDataChangesForCpuPDSA_ClusterNumber_Header", "Cluster Number"), false, typeof(int), 10, GetResourceMessage("GCS_CredentialToDelete_PanelLoadDataChangesForCpuPDSA_ClusterNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PanelNumber, GetResourceMessage("GCS_CredentialToDelete_PanelLoadDataChangesForCpuPDSA_PanelNumber_Header", "Panel Number"), false, typeof(int), 10, GetResourceMessage("GCS_CredentialToDelete_PanelLoadDataChangesForCpuPDSA_PanelNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuNumber, GetResourceMessage("GCS_CredentialToDelete_PanelLoadDataChangesForCpuPDSA_CpuNumber_Header", "Cpu Number"), false, typeof(short), 5, GetResourceMessage("GCS_CredentialToDelete_PanelLoadDataChangesForCpuPDSA_CpuNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterGroupId, GetResourceMessage("GCS_CredentialToDelete_PanelLoadDataChangesForCpuPDSA_ClusterGroupId_Header", "Cluster Group Id"), false, typeof(int), 10, GetResourceMessage("GCS_CredentialToDelete_PanelLoadDataChangesForCpuPDSA_ClusterGroupId_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ServerAddress, GetResourceMessage("GCS_CredentialToDelete_PanelLoadDataChangesForCpuPDSA_ServerAddress_Header", "Server Address"), false, typeof(string), 255, GetResourceMessage("GCS_CredentialToDelete_PanelLoadDataChangesForCpuPDSA_ServerAddress_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IsConnected, GetResourceMessage("GCS_CredentialToDelete_PanelLoadDataChangesForCpuPDSA_IsConnected_Header", "Is Connected"), false, typeof(bool), -1, GetResourceMessage("GCS_CredentialToDelete_PanelLoadDataChangesForCpuPDSA_IsConnected_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      
      return props;
    }
    #endregion

    #region Initialize Entity
    /// <summary>
    /// This method is called from the CreateNewEntity Method. All the properties for the Entity are set to default values here by the code generator.
    /// </summary>
    protected override void InitializeEntity()
    {
      Entity.CredentialToDeleteFromCpuUid = Guid.Empty;
      Entity.CpuUid = Guid.Empty;
      Entity.CardBinaryData = null;
      Entity.DeletedFromDatabaseDate = DateTimeOffset.Now;
      Entity.DeletedFromCpuDate = DateTimeOffset.Now;
      Entity.ClusterNumber = 0;
      Entity.PanelNumber = 0;
      Entity.CpuNumber = 0;
      Entity.ClusterGroupId = 0;
      Entity.ServerAddress = string.Empty;
      Entity.IsConnected = false;

      Entity.ResetAllIsDirtyProperties();
    }
    #endregion
    
    #region InitProperties Method
    /// <summary>
    /// Called by the constructor to create the PDSAProperties collection of all properties that will be validated.
    /// </summary>
    protected override void InitProperties()
    {
      // Set the Properties collection to the collection of Entity Properties
      Properties = CreateProperties();
    }
    #endregion

    #region EntityDataToProperties Method
    /// <summary>
    /// Moves the Entity class data into the Properties collection.
    /// </summary>
    protected override void EntityDataToProperties()
    {
      if (Properties == null)
        InitProperties();
      
      if(!Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialToDeleteFromCpuUid).SetAsNull)
        Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialToDeleteFromCpuUid).Value = Entity.CredentialToDeleteFromCpuUid;
      if(!Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuUid).SetAsNull)
        Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuUid).Value = Entity.CpuUid;
      if(!Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardBinaryData).SetAsNull)
        Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardBinaryData).Value = Entity.CardBinaryData;
      if(!Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DeletedFromDatabaseDate).SetAsNull)
        Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DeletedFromDatabaseDate).Value = Entity.DeletedFromDatabaseDate;
      if(!Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DeletedFromCpuDate).SetAsNull)
        Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DeletedFromCpuDate).Value = Entity.DeletedFromCpuDate;
      if(!Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterNumber).SetAsNull)
        Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterNumber).Value = Entity.ClusterNumber;
      if(!Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PanelNumber).SetAsNull)
        Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PanelNumber).Value = Entity.PanelNumber;
      if(!Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuNumber).SetAsNull)
        Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuNumber).Value = Entity.CpuNumber;
      if(!Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterGroupId).SetAsNull)
        Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterGroupId).Value = Entity.ClusterGroupId;
      if(!Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ServerAddress).SetAsNull)
        Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ServerAddress).Value = Entity.ServerAddress;
      if(!Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IsConnected).SetAsNull)
        Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IsConnected).Value = Entity.IsConnected;
    }

    /// <summary>
    /// Moves the Properties collection objects into the Entity properties
    /// </summary>
    protected override void PropertiesToEntityData()
    {
      if (Properties == null)
        InitProperties();

      if(Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialToDeleteFromCpuUid).IsNull == false)
        Entity.CredentialToDeleteFromCpuUid = Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialToDeleteFromCpuUid).GetAsGuid();
      if(Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuUid).IsNull == false)
        Entity.CpuUid = Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuUid).GetAsGuid();
      if(Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardBinaryData).IsNull == false)
        Entity.CardBinaryData = Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardBinaryData).GetAsByteArray();
      if(Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DeletedFromDatabaseDate).IsNull == false)
        Entity.DeletedFromDatabaseDate = Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DeletedFromDatabaseDate).GetAsDateTimeOffset();
      if(Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DeletedFromCpuDate).IsNull == false)
        Entity.DeletedFromCpuDate = Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DeletedFromCpuDate).GetAsDateTimeOffset();
      if(Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterNumber).IsNull == false)
        Entity.ClusterNumber = Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterNumber).GetAsInteger();
      if(Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PanelNumber).IsNull == false)
        Entity.PanelNumber = Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PanelNumber).GetAsInteger();
      if(Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuNumber).IsNull == false)
        Entity.CpuNumber = Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuNumber).GetAsShort();
      if(Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterGroupId).IsNull == false)
        Entity.ClusterGroupId = Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterGroupId).GetAsInteger();
      if(Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ServerAddress).IsNull == false)
        Entity.ServerAddress = Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ServerAddress).GetAsString();
      if(Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IsConnected).IsNull == false)
        Entity.IsConnected = Properties.GetByName(CredentialToDelete_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IsConnected).GetAsBool();
    }
    #endregion
    
    #region ColumnNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the CredentialToDelete_PanelLoadDataChangesForCpuPDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ColumnNames
    {
    /// <summary>
    /// Returns 'CredentialToDeleteFromCpuUid'
    /// </summary>
    public static string CredentialToDeleteFromCpuUid = "CredentialToDeleteFromCpuUid";
    /// <summary>
    /// Returns 'CpuUid'
    /// </summary>
    public static string CpuUid = "CpuUid";
    /// <summary>
    /// Returns 'CardBinaryData'
    /// </summary>
    public static string CardBinaryData = "CardBinaryData";
    /// <summary>
    /// Returns 'DeletedFromDatabaseDate'
    /// </summary>
    public static string DeletedFromDatabaseDate = "DeletedFromDatabaseDate";
    /// <summary>
    /// Returns 'DeletedFromCpuDate'
    /// </summary>
    public static string DeletedFromCpuDate = "DeletedFromCpuDate";
    /// <summary>
    /// Returns 'ClusterNumber'
    /// </summary>
    public static string ClusterNumber = "ClusterNumber";
    /// <summary>
    /// Returns 'PanelNumber'
    /// </summary>
    public static string PanelNumber = "PanelNumber";
    /// <summary>
    /// Returns 'CpuNumber'
    /// </summary>
    public static string CpuNumber = "CpuNumber";
    /// <summary>
    /// Returns 'ClusterGroupId'
    /// </summary>
    public static string ClusterGroupId = "ClusterGroupId";
    /// <summary>
    /// Returns 'ServerAddress'
    /// </summary>
    public static string ServerAddress = "ServerAddress";
    /// <summary>
    /// Returns 'IsConnected'
    /// </summary>
    public static string IsConnected = "IsConnected";
    }
    #endregion
  }
}
