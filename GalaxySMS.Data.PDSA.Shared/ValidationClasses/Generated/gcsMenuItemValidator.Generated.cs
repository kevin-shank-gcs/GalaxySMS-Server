using System;

using PDSA.Validation;

using GalaxySMS.EntityLayer;

namespace GalaxySMS.ValidationLayer
{
  /// <summary>
  /// Used to validate all properties of the gcsMenuItemPDSA class.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public partial class gcsMenuItemPDSAValidator : PDSAValidatorBase
  {
    #region Public Entity Property
    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    private gcsMenuItemPDSA _Entity = null;

    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    public new gcsMenuItemPDSA Entity
    {
      get { return _Entity; }
      set
      {
        _Entity = value;
        base.Entity = value;
      }
    }
    #endregion
    
    #region Clone Entity Class
    /// <summary>
    /// Clones the current gcsMenuItemPDSA
    /// </summary>
    /// <returns>A cloned gcsMenuItemPDSA object</returns>
    public gcsMenuItemPDSA CloneEntity()
    {
      return CloneEntity(this.Entity);
    }
    
    /// <summary>
    /// Clones the passed in gcsMenuItemPDSA
    /// </summary>
    /// <param name="entityToClone">The gcsMenuItemPDSA entity to clone</param>
    /// <returns>A cloned gcsMenuItemPDSA object</returns>
    public gcsMenuItemPDSA CloneEntity(gcsMenuItemPDSA entityToClone)
    {
      gcsMenuItemPDSA newEntity = new gcsMenuItemPDSA();

      newEntity.MenuItemId = entityToClone.MenuItemId;
      newEntity.ApplicationId = entityToClone.ApplicationId;
      newEntity.PermissionId = entityToClone.PermissionId;
      newEntity.ParentMenuItemId = entityToClone.ParentMenuItemId;
      newEntity.MenuTitleResourceId = entityToClone.MenuTitleResourceId;
      newEntity.TipTextResourceId = entityToClone.TipTextResourceId;
      newEntity.MenuTitle = entityToClone.MenuTitle;
      newEntity.TipText = entityToClone.TipText;
      newEntity.DisplayOrder = entityToClone.DisplayOrder;
      newEntity.IsActive = entityToClone.IsActive;
      newEntity.MenuAction = entityToClone.MenuAction;
      newEntity.ActiveImage = entityToClone.ActiveImage;
      newEntity.InactiveImage = entityToClone.InactiveImage;
      newEntity.DisabledImage = entityToClone.DisabledImage;
      newEntity.MenuSize = entityToClone.MenuSize;
      newEntity.InsertName = entityToClone.InsertName;
      newEntity.InsertDate = entityToClone.InsertDate;
      newEntity.UpdateName = entityToClone.UpdateName;
      newEntity.UpdateDate = entityToClone.UpdateDate;
      newEntity.ConcurrencyValue = entityToClone.ConcurrencyValue;

      return newEntity;
    }
    #endregion

    #region CreateProperties Method
    /// <summary>
    /// Creates the collection of PDSAProperty objects. These are used to control validation and null handling.
    /// </summary>
    /// <returns>A collection of PDSAProperty objects</returns>
    public override PDSAProperties CreateProperties()
    {
      PDSAProperties props = new PDSAProperties();
      
      props.Add(PDSAProperty.Create(gcsMenuItemPDSAValidator.ColumnNames.MenuItemId, GetResourceMessage("GCS_gcsMenuItemPDSA_MenuItemId_Header", "Menu Item Id"), true, typeof(Guid), -1, GetResourceMessage("GCS_gcsMenuItemPDSA_MenuItemId_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.NewGuid(), @"", ""));
      props.Add(PDSAProperty.Create(gcsMenuItemPDSAValidator.ColumnNames.ApplicationId, GetResourceMessage("GCS_gcsMenuItemPDSA_ApplicationId_Header", "Application Id"), true, typeof(Guid), -1, GetResourceMessage("GCS_gcsMenuItemPDSA_ApplicationId_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.NewGuid(), @"", ""));
      props.Add(PDSAProperty.Create(gcsMenuItemPDSAValidator.ColumnNames.PermissionId, GetResourceMessage("GCS_gcsMenuItemPDSA_PermissionId_Header", "Permission Id"), true, typeof(Guid), -1, GetResourceMessage("GCS_gcsMenuItemPDSA_PermissionId_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.NewGuid(), @"", ""));
      props.Add(PDSAProperty.Create(gcsMenuItemPDSAValidator.ColumnNames.ParentMenuItemId, GetResourceMessage("GCS_gcsMenuItemPDSA_ParentMenuItemId_Header", "Parent Menu Item Id"), false, typeof(Guid), -1, GetResourceMessage("GCS_gcsMenuItemPDSA_ParentMenuItemId_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.NewGuid(), @"", ""));
      props.Add(PDSAProperty.Create(gcsMenuItemPDSAValidator.ColumnNames.MenuTitleResourceId, GetResourceMessage("GCS_gcsMenuItemPDSA_MenuTitleResourceId_Header", "Menu Title Resource Id"), false, typeof(Guid), -1, GetResourceMessage("GCS_gcsMenuItemPDSA_MenuTitleResourceId_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.NewGuid(), @"", ""));
      props.Add(PDSAProperty.Create(gcsMenuItemPDSAValidator.ColumnNames.TipTextResourceId, GetResourceMessage("GCS_gcsMenuItemPDSA_TipTextResourceId_Header", "Tip Text Resource Id"), false, typeof(Guid), -1, GetResourceMessage("GCS_gcsMenuItemPDSA_TipTextResourceId_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.NewGuid(), @"", ""));
      props.Add(PDSAProperty.Create(gcsMenuItemPDSAValidator.ColumnNames.MenuTitle, GetResourceMessage("GCS_gcsMenuItemPDSA_MenuTitle_Header", "Menu Title"), true, typeof(string), 100, GetResourceMessage("GCS_gcsMenuItemPDSA_MenuTitle_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(gcsMenuItemPDSAValidator.ColumnNames.TipText, GetResourceMessage("GCS_gcsMenuItemPDSA_TipText_Header", "Tip Text"), true, typeof(string), 500, GetResourceMessage("GCS_gcsMenuItemPDSA_TipText_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(gcsMenuItemPDSAValidator.ColumnNames.DisplayOrder, GetResourceMessage("GCS_gcsMenuItemPDSA_DisplayOrder_Header", "Display Order"), true, typeof(short), 5, GetResourceMessage("GCS_gcsMenuItemPDSA_DisplayOrder_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(gcsMenuItemPDSAValidator.ColumnNames.IsActive, GetResourceMessage("GCS_gcsMenuItemPDSA_IsActive_Header", "Is Active"), true, typeof(bool?), -1, GetResourceMessage("GCS_gcsMenuItemPDSA_IsActive_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(gcsMenuItemPDSAValidator.ColumnNames.MenuAction, GetResourceMessage("GCS_gcsMenuItemPDSA_MenuAction_Header", "Menu Action"), true, typeof(string), 255, GetResourceMessage("GCS_gcsMenuItemPDSA_MenuAction_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(gcsMenuItemPDSAValidator.ColumnNames.ActiveImage, GetResourceMessage("GCS_gcsMenuItemPDSA_ActiveImage_Header", "Active Image"), true, typeof(string), 255, GetResourceMessage("GCS_gcsMenuItemPDSA_ActiveImage_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(gcsMenuItemPDSAValidator.ColumnNames.InactiveImage, GetResourceMessage("GCS_gcsMenuItemPDSA_InactiveImage_Header", "Inactive Image"), true, typeof(string), 255, GetResourceMessage("GCS_gcsMenuItemPDSA_InactiveImage_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(gcsMenuItemPDSAValidator.ColumnNames.DisabledImage, GetResourceMessage("GCS_gcsMenuItemPDSA_DisabledImage_Header", "Disabled Image"), true, typeof(string), 255, GetResourceMessage("GCS_gcsMenuItemPDSA_DisabledImage_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(gcsMenuItemPDSAValidator.ColumnNames.MenuSize, GetResourceMessage("GCS_gcsMenuItemPDSA_MenuSize_Header", "Menu Size"), false, typeof(int), 10, GetResourceMessage("GCS_gcsMenuItemPDSA_MenuSize_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(gcsMenuItemPDSAValidator.ColumnNames.InsertName, GetResourceMessage("GCS_gcsMenuItemPDSA_InsertName_Header", "Insert Name"), true, typeof(string), 50, GetResourceMessage("GCS_gcsMenuItemPDSA_InsertName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(gcsMenuItemPDSAValidator.ColumnNames.InsertDate, GetResourceMessage("GCS_gcsMenuItemPDSA_InsertDate_Header", "Insert Date"), true, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_gcsMenuItemPDSA_InsertDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(gcsMenuItemPDSAValidator.ColumnNames.UpdateName, GetResourceMessage("GCS_gcsMenuItemPDSA_UpdateName_Header", "Update Name"), true, typeof(string), 50, GetResourceMessage("GCS_gcsMenuItemPDSA_UpdateName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(gcsMenuItemPDSAValidator.ColumnNames.UpdateDate, GetResourceMessage("GCS_gcsMenuItemPDSA_UpdateDate_Header", "Update Date"), true, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_gcsMenuItemPDSA_UpdateDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(gcsMenuItemPDSAValidator.ColumnNames.ConcurrencyValue, GetResourceMessage("GCS_gcsMenuItemPDSA_ConcurrencyValue_Header", "Concurrency Value"), true, typeof(short), 5, GetResourceMessage("GCS_gcsMenuItemPDSA_ConcurrencyValue_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      
      return props;
    }
    #endregion

    #region Initialize Entity
    /// <summary>
    /// This method is called from the CreateNewEntity Method. All the properties for the Entity are set to default values here by the code generator.
    /// </summary>
    protected override void InitializeEntity()
    {
      Entity.MenuItemId = Guid.NewGuid();
      Entity.ApplicationId = Guid.NewGuid();
      Entity.PermissionId = Guid.NewGuid();
      Entity.ParentMenuItemId = Guid.NewGuid();
      Entity.MenuTitleResourceId = Guid.NewGuid();
      Entity.TipTextResourceId = Guid.NewGuid();
      Entity.MenuTitle = string.Empty;
      Entity.TipText = string.Empty;
      Entity.DisplayOrder = 0;
      Entity.IsActive = false;
      Entity.MenuAction = string.Empty;
      Entity.ActiveImage = string.Empty;
      Entity.InactiveImage = string.Empty;
      Entity.DisabledImage = string.Empty;
      Entity.MenuSize = 0;
      Entity.InsertName = string.Empty;
      Entity.InsertDate = DateTimeOffset.Now;
      Entity.UpdateName = string.Empty;
      Entity.UpdateDate = DateTimeOffset.Now;
      Entity.ConcurrencyValue = 0;

      Entity.ResetAllIsDirtyProperties();
    }
    #endregion
    
    #region InitProperties Method
    /// <summary>
    /// Called by the constructor to create the PDSAProperties collection of all properties that will be validated.
    /// </summary>
    protected override void InitProperties()
    {
      // Set the Properties collection to the collection of Entity Properties
      Properties = CreateProperties();
    }
    #endregion

    #region EntityDataToProperties Method
    /// <summary>
    /// Moves the Entity class data into the Properties collection.
    /// </summary>
    protected override void EntityDataToProperties()
    {
      if (Properties == null)
        InitProperties();
      
      if(!Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.MenuItemId).SetAsNull)
        Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.MenuItemId).Value = Entity.MenuItemId;
      if(!Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.ApplicationId).SetAsNull)
        Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.ApplicationId).Value = Entity.ApplicationId;
      if(!Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.PermissionId).SetAsNull)
        Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.PermissionId).Value = Entity.PermissionId;
      if(!Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.ParentMenuItemId).SetAsNull)
        Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.ParentMenuItemId).Value = Entity.ParentMenuItemId;
      if(!Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.MenuTitleResourceId).SetAsNull)
        Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.MenuTitleResourceId).Value = Entity.MenuTitleResourceId;
      if(!Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.TipTextResourceId).SetAsNull)
        Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.TipTextResourceId).Value = Entity.TipTextResourceId;
      if(!Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.MenuTitle).SetAsNull)
        Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.MenuTitle).Value = Entity.MenuTitle;
      if(!Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.TipText).SetAsNull)
        Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.TipText).Value = Entity.TipText;
      if(!Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.DisplayOrder).SetAsNull)
        Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.DisplayOrder).Value = Entity.DisplayOrder;
      if(!Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.IsActive).SetAsNull)
        Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.IsActive).Value = Entity.IsActive;
      if(!Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.MenuAction).SetAsNull)
        Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.MenuAction).Value = Entity.MenuAction;
      if(!Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.ActiveImage).SetAsNull)
        Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.ActiveImage).Value = Entity.ActiveImage;
      if(!Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.InactiveImage).SetAsNull)
        Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.InactiveImage).Value = Entity.InactiveImage;
      if(!Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.DisabledImage).SetAsNull)
        Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.DisabledImage).Value = Entity.DisabledImage;
      if(!Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.MenuSize).SetAsNull)
        Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.MenuSize).Value = Entity.MenuSize;
      if(!Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.InsertName).SetAsNull)
        Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.InsertName).Value = Entity.InsertName;
      if(!Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.InsertDate).SetAsNull)
        Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.InsertDate).Value = Entity.InsertDate;
      if(!Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.UpdateName).SetAsNull)
        Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.UpdateName).Value = Entity.UpdateName;
      if(!Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.UpdateDate).SetAsNull)
        Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.UpdateDate).Value = Entity.UpdateDate;
      if(!Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.ConcurrencyValue).SetAsNull)
        Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.ConcurrencyValue).Value = Entity.ConcurrencyValue;
    }

    /// <summary>
    /// Moves the Properties collection objects into the Entity properties
    /// </summary>
    protected override void PropertiesToEntityData()
    {
      if (Properties == null)
        InitProperties();

      if(Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.MenuItemId).IsNull == false)
        Entity.MenuItemId = Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.MenuItemId).GetAsGuid();
      if(Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.ApplicationId).IsNull == false)
        Entity.ApplicationId = Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.ApplicationId).GetAsGuid();
      if(Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.PermissionId).IsNull == false)
        Entity.PermissionId = Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.PermissionId).GetAsGuid();
      if(Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.ParentMenuItemId).IsNull == false)
        Entity.ParentMenuItemId = Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.ParentMenuItemId).GetAsGuid();
      if(Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.MenuTitleResourceId).IsNull == false)
        Entity.MenuTitleResourceId = Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.MenuTitleResourceId).GetAsGuid();
      if(Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.TipTextResourceId).IsNull == false)
        Entity.TipTextResourceId = Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.TipTextResourceId).GetAsGuid();
      if(Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.MenuTitle).IsNull == false)
        Entity.MenuTitle = Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.MenuTitle).GetAsString();
      if(Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.TipText).IsNull == false)
        Entity.TipText = Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.TipText).GetAsString();
      if(Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.DisplayOrder).IsNull == false)
        Entity.DisplayOrder = Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.DisplayOrder).GetAsShort();
      if(Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.IsActive).IsNull == false)
        Entity.IsActive = Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.IsActive).GetValueAsBoolean();
      if(Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.MenuAction).IsNull == false)
        Entity.MenuAction = Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.MenuAction).GetAsString();
      if(Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.ActiveImage).IsNull == false)
        Entity.ActiveImage = Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.ActiveImage).GetAsString();
      if(Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.InactiveImage).IsNull == false)
        Entity.InactiveImage = Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.InactiveImage).GetAsString();
      if(Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.DisabledImage).IsNull == false)
        Entity.DisabledImage = Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.DisabledImage).GetAsString();
      if(Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.MenuSize).IsNull == false)
        Entity.MenuSize = Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.MenuSize).GetAsInteger();
      if(Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.InsertName).IsNull == false)
        Entity.InsertName = Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.InsertName).GetAsString();
      if(Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.InsertDate).IsNull == false)
        Entity.InsertDate = Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.InsertDate).GetAsDateTimeOffset();
      if(Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.UpdateName).IsNull == false)
        Entity.UpdateName = Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.UpdateName).GetAsString();
      if(Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.UpdateDate).IsNull == false)
        Entity.UpdateDate = Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.UpdateDate).GetAsDateTimeOffset();
      if(Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.ConcurrencyValue).IsNull == false)
        Entity.ConcurrencyValue = Properties.GetByName(gcsMenuItemPDSAValidator.ColumnNames.ConcurrencyValue).GetAsShort();
    }
    #endregion
    
    #region ColumnNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the gcsMenuItemPDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ColumnNames
    {
    /// <summary>
    /// Returns 'MenuItemId'
    /// </summary>
    public static string MenuItemId = "MenuItemId";
    /// <summary>
    /// Returns 'ApplicationId'
    /// </summary>
    public static string ApplicationId = "ApplicationId";
    /// <summary>
    /// Returns 'PermissionId'
    /// </summary>
    public static string PermissionId = "PermissionId";
    /// <summary>
    /// Returns 'ParentMenuItemId'
    /// </summary>
    public static string ParentMenuItemId = "ParentMenuItemId";
    /// <summary>
    /// Returns 'MenuTitleResourceId'
    /// </summary>
    public static string MenuTitleResourceId = "MenuTitleResourceId";
    /// <summary>
    /// Returns 'TipTextResourceId'
    /// </summary>
    public static string TipTextResourceId = "TipTextResourceId";
    /// <summary>
    /// Returns 'MenuTitle'
    /// </summary>
    public static string MenuTitle = "MenuTitle";
    /// <summary>
    /// Returns 'TipText'
    /// </summary>
    public static string TipText = "TipText";
    /// <summary>
    /// Returns 'DisplayOrder'
    /// </summary>
    public static string DisplayOrder = "DisplayOrder";
    /// <summary>
    /// Returns 'IsActive'
    /// </summary>
    public static string IsActive = "IsActive";
    /// <summary>
    /// Returns 'MenuAction'
    /// </summary>
    public static string MenuAction = "MenuAction";
    /// <summary>
    /// Returns 'ActiveImage'
    /// </summary>
    public static string ActiveImage = "ActiveImage";
    /// <summary>
    /// Returns 'InactiveImage'
    /// </summary>
    public static string InactiveImage = "InactiveImage";
    /// <summary>
    /// Returns 'DisabledImage'
    /// </summary>
    public static string DisabledImage = "DisabledImage";
    /// <summary>
    /// Returns 'MenuSize'
    /// </summary>
    public static string MenuSize = "MenuSize";
    /// <summary>
    /// Returns 'InsertName'
    /// </summary>
    public static string InsertName = "InsertName";
    /// <summary>
    /// Returns 'InsertDate'
    /// </summary>
    public static string InsertDate = "InsertDate";
    /// <summary>
    /// Returns 'UpdateName'
    /// </summary>
    public static string UpdateName = "UpdateName";
    /// <summary>
    /// Returns 'UpdateDate'
    /// </summary>
    public static string UpdateDate = "UpdateDate";
    /// <summary>
    /// Returns 'ConcurrencyValue'
    /// </summary>
    public static string ConcurrencyValue = "ConcurrencyValue";
    }
    #endregion
  }
}
