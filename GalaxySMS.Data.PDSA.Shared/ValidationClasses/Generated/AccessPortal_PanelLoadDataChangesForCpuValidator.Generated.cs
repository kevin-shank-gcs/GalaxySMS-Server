using System;

using PDSA.Validation;

using GalaxySMS.EntityLayer;

namespace GalaxySMS.ValidationLayer
{
  /// <summary>
  /// Used to validate all properties of the AccessPortal_PanelLoadDataChangesForCpuPDSA class.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public partial class AccessPortal_PanelLoadDataChangesForCpuPDSAValidator : PDSAValidatorBase
  {
    #region Public Entity Property
    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    private AccessPortal_PanelLoadDataChangesForCpuPDSA _Entity = null;

    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    public new AccessPortal_PanelLoadDataChangesForCpuPDSA Entity
    {
      get { return _Entity; }
      set
      {
        _Entity = value;
        base.Entity = value;
      }
    }
    #endregion
    
    #region Clone Entity Class
    /// <summary>
    /// Clones the current AccessPortal_PanelLoadDataChangesForCpuPDSA
    /// </summary>
    /// <returns>A cloned AccessPortal_PanelLoadDataChangesForCpuPDSA object</returns>
    public AccessPortal_PanelLoadDataChangesForCpuPDSA CloneEntity()
    {
      return CloneEntity(this.Entity);
    }
    
    /// <summary>
    /// Clones the passed in AccessPortal_PanelLoadDataChangesForCpuPDSA
    /// </summary>
    /// <param name="entityToClone">The AccessPortal_PanelLoadDataChangesForCpuPDSA entity to clone</param>
    /// <returns>A cloned AccessPortal_PanelLoadDataChangesForCpuPDSA object</returns>
    public AccessPortal_PanelLoadDataChangesForCpuPDSA CloneEntity(AccessPortal_PanelLoadDataChangesForCpuPDSA entityToClone)
    {
      AccessPortal_PanelLoadDataChangesForCpuPDSA newEntity = new AccessPortal_PanelLoadDataChangesForCpuPDSA();

      newEntity.AccessPortalUid = entityToClone.AccessPortalUid;
      newEntity.ClusterUid = entityToClone.ClusterUid;
      newEntity.GalaxyPanelUid = entityToClone.GalaxyPanelUid;
      newEntity.GalaxyInterfaceBoardUid = entityToClone.GalaxyInterfaceBoardUid;
      newEntity.GalaxyInterfaceBoardSectionUid = entityToClone.GalaxyInterfaceBoardSectionUid;
      newEntity.GalaxyHardwareModuleUid = entityToClone.GalaxyHardwareModuleUid;
      newEntity.GalaxyInterfaceBoardSectionNodeUid = entityToClone.GalaxyInterfaceBoardSectionNodeUid;
      newEntity.PortalName = entityToClone.PortalName;
      newEntity.ClusterGroupId = entityToClone.ClusterGroupId;
      newEntity.ClusterNumber = entityToClone.ClusterNumber;
      newEntity.PanelNumber = entityToClone.PanelNumber;
      newEntity.BoardNumber = entityToClone.BoardNumber;
      newEntity.SectionNumber = entityToClone.SectionNumber;
      newEntity.ModuleNumber = entityToClone.ModuleNumber;
      newEntity.NodeNumber = entityToClone.NodeNumber;
      newEntity.DoorNumber = entityToClone.DoorNumber;
      newEntity.AccessPortalTypeDescription = entityToClone.AccessPortalTypeDescription;
      newEntity.ReaderTypeName = entityToClone.ReaderTypeName;
      newEntity.PanelDataFormatCode = entityToClone.PanelDataFormatCode;
      newEntity.DataFormatName = entityToClone.DataFormatName;
      newEntity.AccessPortalBoardSectionMode = entityToClone.AccessPortalBoardSectionMode;
      newEntity.AccessPortalBoardSectionModeDisplay = entityToClone.AccessPortalBoardSectionModeDisplay;
      newEntity.AccessPortalPanelModelTypeCode = entityToClone.AccessPortalPanelModelTypeCode;
      newEntity.AccessPortalCpuTypeCode = entityToClone.AccessPortalCpuTypeCode;
      newEntity.AccessPortalBoardTypeModel = entityToClone.AccessPortalBoardTypeModel;
      newEntity.AccessPortalBoardTypeTypeCode = entityToClone.AccessPortalBoardTypeTypeCode;
      newEntity.AccessPortalBoardTypeDisplay = entityToClone.AccessPortalBoardTypeDisplay;
      newEntity.UnlockDelay = entityToClone.UnlockDelay;
      newEntity.UnlockDuration = entityToClone.UnlockDuration;
      newEntity.RecloseDuration = entityToClone.RecloseDuration;
      newEntity.AllowPassbackAccess = entityToClone.AllowPassbackAccess;
      newEntity.RequireTwoValidCredentials = entityToClone.RequireTwoValidCredentials;
      newEntity.UnlockOnREX = entityToClone.UnlockOnREX;
      newEntity.SuppressIllegalOpenLog = entityToClone.SuppressIllegalOpenLog;
      newEntity.SuppressOpenTooLongLog = entityToClone.SuppressOpenTooLongLog;
      newEntity.SuppressClosedLog = entityToClone.SuppressClosedLog;
      newEntity.SuppressREXLog = entityToClone.SuppressREXLog;
      newEntity.GenerateDoorContactChangeLogs = entityToClone.GenerateDoorContactChangeLogs;
      newEntity.LockWhenDoorCloses = entityToClone.LockWhenDoorCloses;
      newEntity.EnableDuress = entityToClone.EnableDuress;
      newEntity.DoorGroupNotify = entityToClone.DoorGroupNotify;
      newEntity.DoorGroupCanDisable = entityToClone.DoorGroupCanDisable;
      newEntity.RelayOneOnDuringArmDelay = entityToClone.RelayOneOnDuringArmDelay;
      newEntity.RequireValidAccessForAutoUnlock = entityToClone.RequireValidAccessForAutoUnlock;
      newEntity.PINSpecifiesRecloseDuration = entityToClone.PINSpecifiesRecloseDuration;
      newEntity.ValidAccessRequiresDoorOpen = entityToClone.ValidAccessRequiresDoorOpen;
      newEntity.DontDecrementLimitedSwipeExpireCount = entityToClone.DontDecrementLimitedSwipeExpireCount;
      newEntity.IgnoreNotInSystem = entityToClone.IgnoreNotInSystem;
      newEntity.ReaderSendsHeartbeat = entityToClone.ReaderSendsHeartbeat;
      newEntity.PropertiesLastUpdated = entityToClone.PropertiesLastUpdated;
      newEntity.AutoForgivePassbackCode = entityToClone.AutoForgivePassbackCode;
      newEntity.AutoForgivePassbackDisplay = entityToClone.AutoForgivePassbackDisplay;
      newEntity.PinRequiredModeCode = entityToClone.PinRequiredModeCode;
      newEntity.PinRequiredModeDisplay = entityToClone.PinRequiredModeDisplay;
      newEntity.ContactSupervisionCode = entityToClone.ContactSupervisionCode;
      newEntity.ContactSupervisionDisplay = entityToClone.ContactSupervisionDisplay;
      newEntity.DeferToServerCode = entityToClone.DeferToServerCode;
      newEntity.DeferToServerDisplay = entityToClone.DeferToServerDisplay;
      newEntity.NoServerReplyCode = entityToClone.NoServerReplyCode;
      newEntity.NoServerReplyDisplay = entityToClone.NoServerReplyDisplay;
      newEntity.LockPushButtonCode = entityToClone.LockPushButtonCode;
      newEntity.LockPushButtonDisplay = entityToClone.LockPushButtonDisplay;
      newEntity.MultiFactorMode = entityToClone.MultiFactorMode;
      newEntity.MultiFactorModeDisplay = entityToClone.MultiFactorModeDisplay;
      newEntity.ElevatorControlTypeCode = entityToClone.ElevatorControlTypeCode;
      newEntity.ElevatorControlTypeDisplay = entityToClone.ElevatorControlTypeDisplay;
      newEntity.ElevatorRelayBoardNumber = entityToClone.ElevatorRelayBoardNumber;
      newEntity.ElevatorRelaySectionNumber = entityToClone.ElevatorRelaySectionNumber;
      newEntity.PassbackIntoAreaNumber = entityToClone.PassbackIntoAreaNumber;
      newEntity.PassbackFromAreaNumber = entityToClone.PassbackFromAreaNumber;
      newEntity.FreeAccessScheduleNumber = entityToClone.FreeAccessScheduleNumber;
      newEntity.FreeAccessScheduleDisplay = entityToClone.FreeAccessScheduleDisplay;
      newEntity.CrisisFreeAccessScheduleNumber = entityToClone.CrisisFreeAccessScheduleNumber;
      newEntity.CrisisFreeAccessScheduleDisplay = entityToClone.CrisisFreeAccessScheduleDisplay;
      newEntity.PinRequiredScheduleNumber = entityToClone.PinRequiredScheduleNumber;
      newEntity.PinRequiredScheduleDisplay = entityToClone.PinRequiredScheduleDisplay;
      newEntity.DisableForcedOpenScheduleNumber = entityToClone.DisableForcedOpenScheduleNumber;
      newEntity.DisableForcedOpenScheduleDisplay = entityToClone.DisableForcedOpenScheduleDisplay;
      newEntity.DisableOpenTooLongScheduleNumber = entityToClone.DisableOpenTooLongScheduleNumber;
      newEntity.DisableOpenTooLongScheduleDisplay = entityToClone.DisableOpenTooLongScheduleDisplay;
      newEntity.AuxiliaryOutputScheduleNumber = entityToClone.AuxiliaryOutputScheduleNumber;
      newEntity.AuxiliaryOutputScheduleDisplay = entityToClone.AuxiliaryOutputScheduleDisplay;
      newEntity.Relay2ActivationDelay = entityToClone.Relay2ActivationDelay;
      newEntity.Relay2ActivationDuration = entityToClone.Relay2ActivationDuration;
      newEntity.Relay2TriggerAccessGranted = entityToClone.Relay2TriggerAccessGranted;
      newEntity.Relay2TriggerDuress = entityToClone.Relay2TriggerDuress;
      newEntity.Relay2TriggerForcedOpen = entityToClone.Relay2TriggerForcedOpen;
      newEntity.Relay2TriggerInvalidAttempt = entityToClone.Relay2TriggerInvalidAttempt;
      newEntity.Relay2TriggerOpenTooLong = entityToClone.Relay2TriggerOpenTooLong;
      newEntity.Relay2TriggerPassbackViolation = entityToClone.Relay2TriggerPassbackViolation;
      newEntity.Relay2ModeCode = entityToClone.Relay2ModeCode;
      newEntity.Relay2ModeDisplay = entityToClone.Relay2ModeDisplay;
      newEntity.Relay2ScheduleNumber = entityToClone.Relay2ScheduleNumber;
      newEntity.Relay2ScheduleDisplay = entityToClone.Relay2ScheduleDisplay;
      newEntity.ForcedOpenIOGroupNumber = entityToClone.ForcedOpenIOGroupNumber;
      newEntity.ForcedOpenIOGroupOffset = entityToClone.ForcedOpenIOGroupOffset;
      newEntity.OpenTooLongIOGroupNumber = entityToClone.OpenTooLongIOGroupNumber;
      newEntity.OpenTooLongIOGroupOffset = entityToClone.OpenTooLongIOGroupOffset;
      newEntity.InvalidAccessAttemptIOGroupNumber = entityToClone.InvalidAccessAttemptIOGroupNumber;
      newEntity.InvalidAccessAttemptIOGroupOffset = entityToClone.InvalidAccessAttemptIOGroupOffset;
      newEntity.PassbackViolationIOGroupNumber = entityToClone.PassbackViolationIOGroupNumber;
      newEntity.PassbackViolationIOGroupOffset = entityToClone.PassbackViolationIOGroupOffset;
      newEntity.DuressIOGroupNumber = entityToClone.DuressIOGroupNumber;
      newEntity.DuressIOGroupOffset = entityToClone.DuressIOGroupOffset;
      newEntity.MissedHeartbeatIOGroupNumber = entityToClone.MissedHeartbeatIOGroupNumber;
      newEntity.MissedHeartbeatIOGroupOffset = entityToClone.MissedHeartbeatIOGroupOffset;
      newEntity.AccessGrantedIOGroupNumber = entityToClone.AccessGrantedIOGroupNumber;
      newEntity.AccessGrantedIOGroupOffset = entityToClone.AccessGrantedIOGroupOffset;
      newEntity.DoorGroupIOGroupNumber = entityToClone.DoorGroupIOGroupNumber;
      newEntity.DoorGroupIOGroupOffset = entityToClone.DoorGroupIOGroupOffset;
      newEntity.LockedByIOGroupNumber = entityToClone.LockedByIOGroupNumber;
      newEntity.UnlockedByIOGroupNumber = entityToClone.UnlockedByIOGroupNumber;
      newEntity.DisarmIOGroupNumber1 = entityToClone.DisarmIOGroupNumber1;
      newEntity.DisarmIOGroupNumber2 = entityToClone.DisarmIOGroupNumber2;
      newEntity.DisarmIOGroupNumber3 = entityToClone.DisarmIOGroupNumber3;
      newEntity.DisarmIOGroupNumber4 = entityToClone.DisarmIOGroupNumber4;
      newEntity.AccessPortalLastUpdated = entityToClone.AccessPortalLastUpdated;
      newEntity.HardwareAddressLastUpdated = entityToClone.HardwareAddressLastUpdated;
      newEntity.PassbackIntoAreaLastUpdated = entityToClone.PassbackIntoAreaLastUpdated;
      newEntity.PassbackFromAreaLastUpdated = entityToClone.PassbackFromAreaLastUpdated;
      newEntity.FreeAccessSchLastUpdated = entityToClone.FreeAccessSchLastUpdated;
      newEntity.CrisisFreeAccessSchLastUpdated = entityToClone.CrisisFreeAccessSchLastUpdated;
      newEntity.PinRequiredSchLastUpdated = entityToClone.PinRequiredSchLastUpdated;
      newEntity.DisableForcedOpenSchLastUpdated = entityToClone.DisableForcedOpenSchLastUpdated;
      newEntity.DisableOpenTooLongSchLastUpdated = entityToClone.DisableOpenTooLongSchLastUpdated;
      newEntity.AuxOutputSchLastUpdated = entityToClone.AuxOutputSchLastUpdated;
      newEntity.AuxOutputLastUpdated = entityToClone.AuxOutputLastUpdated;
      newEntity.Relay2SchLastUpdated = entityToClone.Relay2SchLastUpdated;
      newEntity.ForcedOpenAlertLastUpdated = entityToClone.ForcedOpenAlertLastUpdated;
      newEntity.OpenTooLongAlertLastUpdated = entityToClone.OpenTooLongAlertLastUpdated;
      newEntity.InvalidAccessAttemptAlertLastUpdated = entityToClone.InvalidAccessAttemptAlertLastUpdated;
      newEntity.PassbackViolationAlertLastUpdated = entityToClone.PassbackViolationAlertLastUpdated;
      newEntity.DuressAlertLastUpdated = entityToClone.DuressAlertLastUpdated;
      newEntity.MissedHeartbeatAlertLastUpdated = entityToClone.MissedHeartbeatAlertLastUpdated;
      newEntity.AccessGrantedAlertLastUpdated = entityToClone.AccessGrantedAlertLastUpdated;
      newEntity.DoorGroupAlertLastUpdated = entityToClone.DoorGroupAlertLastUpdated;
      newEntity.UnlockedByIogLastUpdated = entityToClone.UnlockedByIogLastUpdated;
      newEntity.LockedByIogLastUpdated = entityToClone.LockedByIogLastUpdated;
      newEntity.DisarmIog1LastUpdated = entityToClone.DisarmIog1LastUpdated;
      newEntity.DisarmIog2LastUpdated = entityToClone.DisarmIog2LastUpdated;
      newEntity.DisarmIog3LastUpdated = entityToClone.DisarmIog3LastUpdated;
      newEntity.DisarmIog4LastUpdated = entityToClone.DisarmIog4LastUpdated;
      newEntity.CpuNumber = entityToClone.CpuNumber;
      newEntity.CpuUid = entityToClone.CpuUid;
      newEntity.ServerAddress = entityToClone.ServerAddress;
      newEntity.IsConnected = entityToClone.IsConnected;

      return newEntity;
    }
    #endregion

    #region CreateProperties Method
    /// <summary>
    /// Creates the collection of PDSAProperty objects. These are used to control validation and null handling.
    /// </summary>
    /// <returns>A collection of PDSAProperty objects</returns>
    public override PDSAProperties CreateProperties()
    {
      PDSAProperties props = new PDSAProperties();
      
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalUid, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_AccessPortalUid_Header", "Access Portal Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_AccessPortalUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterUid, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_ClusterUid_Header", "Cluster Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_ClusterUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.GalaxyPanelUid, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_GalaxyPanelUid_Header", "Galaxy Panel Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_GalaxyPanelUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.GalaxyInterfaceBoardUid, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_GalaxyInterfaceBoardUid_Header", "Galaxy Interface Board Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_GalaxyInterfaceBoardUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionUid, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_GalaxyInterfaceBoardSectionUid_Header", "Galaxy Interface Board Section Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_GalaxyInterfaceBoardSectionUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.GalaxyHardwareModuleUid, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_GalaxyHardwareModuleUid_Header", "Galaxy Hardware Module Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_GalaxyHardwareModuleUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionNodeUid, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_GalaxyInterfaceBoardSectionNodeUid_Header", "Galaxy Interface Board Section Node Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_GalaxyInterfaceBoardSectionNodeUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PortalName, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_PortalName_Header", "Portal Name"), false, typeof(string), 128, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_PortalName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterGroupId, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_ClusterGroupId_Header", "Cluster Group Id"), false, typeof(int), 10, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_ClusterGroupId_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterNumber, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_ClusterNumber_Header", "Cluster Number"), false, typeof(int), 10, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_ClusterNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PanelNumber, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_PanelNumber_Header", "Panel Number"), false, typeof(int), 10, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_PanelNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.BoardNumber, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_BoardNumber_Header", "Board Number"), false, typeof(short), 5, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_BoardNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.SectionNumber, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_SectionNumber_Header", "Section Number"), false, typeof(short), 5, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_SectionNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ModuleNumber, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_ModuleNumber_Header", "Module Number"), false, typeof(short), 5, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_ModuleNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.NodeNumber, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_NodeNumber_Header", "Node Number"), false, typeof(short), 5, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_NodeNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DoorNumber, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DoorNumber_Header", "Door Number"), false, typeof(short), 5, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DoorNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalTypeDescription, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_AccessPortalTypeDescription_Header", "Access Portal Type Description"), false, typeof(string), 1000, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_AccessPortalTypeDescription_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ReaderTypeName, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_ReaderTypeName_Header", "Reader Type Name"), false, typeof(string), 65, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_ReaderTypeName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PanelDataFormatCode, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_PanelDataFormatCode_Header", "Panel Data Format Code"), false, typeof(int), 10, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_PanelDataFormatCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DataFormatName, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DataFormatName_Header", "Data Format Name"), false, typeof(string), 65, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DataFormatName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalBoardSectionMode, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_AccessPortalBoardSectionMode_Header", "Access Portal Board Section Mode"), false, typeof(short), 5, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_AccessPortalBoardSectionMode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalBoardSectionModeDisplay, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_AccessPortalBoardSectionModeDisplay_Header", "Access Portal Board Section Mode Display"), false, typeof(string), 65, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_AccessPortalBoardSectionModeDisplay_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalPanelModelTypeCode, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_AccessPortalPanelModelTypeCode_Header", "Access Portal Panel Model Type Code"), false, typeof(string), 16, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_AccessPortalPanelModelTypeCode_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalCpuTypeCode, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_AccessPortalCpuTypeCode_Header", "Access Portal Cpu Type Code"), false, typeof(string), 16, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_AccessPortalCpuTypeCode_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalBoardTypeModel, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_AccessPortalBoardTypeModel_Header", "Access Portal Board Type Model"), false, typeof(string), 65, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_AccessPortalBoardTypeModel_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalBoardTypeTypeCode, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_AccessPortalBoardTypeTypeCode_Header", "Access Portal Board Type Type Code"), false, typeof(short), 5, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_AccessPortalBoardTypeTypeCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalBoardTypeDisplay, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_AccessPortalBoardTypeDisplay_Header", "Access Portal Board Type Display"), false, typeof(string), 65, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_AccessPortalBoardTypeDisplay_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.UnlockDelay, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_UnlockDelay_Header", "Unlock Delay"), false, typeof(int), 10, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_UnlockDelay_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.UnlockDuration, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_UnlockDuration_Header", "Unlock Duration"), false, typeof(int), 10, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_UnlockDuration_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.RecloseDuration, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_RecloseDuration_Header", "Reclose Duration"), false, typeof(int), 10, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_RecloseDuration_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AllowPassbackAccess, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_AllowPassbackAccess_Header", "Allow Passback Access"), false, typeof(bool), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_AllowPassbackAccess_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.RequireTwoValidCredentials, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_RequireTwoValidCredentials_Header", "Require Two Valid Credentials"), false, typeof(bool), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_RequireTwoValidCredentials_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.UnlockOnREX, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_UnlockOnREX_Header", "Unlock On REX"), false, typeof(bool), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_UnlockOnREX_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.SuppressIllegalOpenLog, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_SuppressIllegalOpenLog_Header", "Suppress Illegal Open Log"), false, typeof(bool), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_SuppressIllegalOpenLog_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.SuppressOpenTooLongLog, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_SuppressOpenTooLongLog_Header", "Suppress Open Too Long Log"), false, typeof(bool), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_SuppressOpenTooLongLog_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.SuppressClosedLog, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_SuppressClosedLog_Header", "Suppress Closed Log"), false, typeof(bool), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_SuppressClosedLog_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.SuppressREXLog, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_SuppressREXLog_Header", "Suppress REX Log"), false, typeof(bool), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_SuppressREXLog_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.GenerateDoorContactChangeLogs, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_GenerateDoorContactChangeLogs_Header", "Generate Door Contact Change Logs"), false, typeof(bool), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_GenerateDoorContactChangeLogs_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LockWhenDoorCloses, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_LockWhenDoorCloses_Header", "Lock When Door Closes"), false, typeof(bool), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_LockWhenDoorCloses_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.EnableDuress, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_EnableDuress_Header", "Enable Duress"), false, typeof(bool), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_EnableDuress_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DoorGroupNotify, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DoorGroupNotify_Header", "Door Group Notify"), false, typeof(bool), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DoorGroupNotify_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DoorGroupCanDisable, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DoorGroupCanDisable_Header", "Door Group Can Disable"), false, typeof(bool), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DoorGroupCanDisable_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.RelayOneOnDuringArmDelay, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_RelayOneOnDuringArmDelay_Header", "Relay One On During Arm Delay"), false, typeof(bool), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_RelayOneOnDuringArmDelay_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.RequireValidAccessForAutoUnlock, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_RequireValidAccessForAutoUnlock_Header", "Require Valid Access For Auto Unlock"), false, typeof(bool), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_RequireValidAccessForAutoUnlock_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PINSpecifiesRecloseDuration, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_PINSpecifiesRecloseDuration_Header", "PIN Specifies Reclose Duration"), false, typeof(bool), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_PINSpecifiesRecloseDuration_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ValidAccessRequiresDoorOpen, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_ValidAccessRequiresDoorOpen_Header", "Valid Access Requires Door Open"), false, typeof(bool), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_ValidAccessRequiresDoorOpen_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DontDecrementLimitedSwipeExpireCount, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DontDecrementLimitedSwipeExpireCount_Header", "Dont Decrement Limited Swipe Expire Count"), false, typeof(bool), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DontDecrementLimitedSwipeExpireCount_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IgnoreNotInSystem, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_IgnoreNotInSystem_Header", "Ignore Not In System"), false, typeof(bool), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_IgnoreNotInSystem_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ReaderSendsHeartbeat, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_ReaderSendsHeartbeat_Header", "Reader Sends Heartbeat"), false, typeof(bool), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_ReaderSendsHeartbeat_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PropertiesLastUpdated, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_PropertiesLastUpdated_Header", "Properties Last Updated"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_PropertiesLastUpdated_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AutoForgivePassbackCode, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_AutoForgivePassbackCode_Header", "Auto Forgive Passback Code"), false, typeof(short), 5, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_AutoForgivePassbackCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AutoForgivePassbackDisplay, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_AutoForgivePassbackDisplay_Header", "Auto Forgive Passback Display"), false, typeof(string), 65, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_AutoForgivePassbackDisplay_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PinRequiredModeCode, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_PinRequiredModeCode_Header", "Pin Required Mode Code"), false, typeof(short), 5, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_PinRequiredModeCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PinRequiredModeDisplay, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_PinRequiredModeDisplay_Header", "Pin Required Mode Display"), false, typeof(string), 65, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_PinRequiredModeDisplay_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ContactSupervisionCode, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_ContactSupervisionCode_Header", "Contact Supervision Code"), false, typeof(short), 5, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_ContactSupervisionCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ContactSupervisionDisplay, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_ContactSupervisionDisplay_Header", "Contact Supervision Display"), false, typeof(string), 65, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_ContactSupervisionDisplay_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DeferToServerCode, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DeferToServerCode_Header", "Defer To Server Code"), false, typeof(short), 5, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DeferToServerCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DeferToServerDisplay, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DeferToServerDisplay_Header", "Defer To Server Display"), false, typeof(string), 65, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DeferToServerDisplay_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.NoServerReplyCode, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_NoServerReplyCode_Header", "No Server Reply Code"), false, typeof(short), 5, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_NoServerReplyCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.NoServerReplyDisplay, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_NoServerReplyDisplay_Header", "No Server Reply Display"), false, typeof(string), 65, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_NoServerReplyDisplay_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LockPushButtonCode, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_LockPushButtonCode_Header", "Lock Push Button Code"), false, typeof(short), 5, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_LockPushButtonCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LockPushButtonDisplay, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_LockPushButtonDisplay_Header", "Lock Push Button Display"), false, typeof(string), 65, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_LockPushButtonDisplay_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.MultiFactorMode, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_MultiFactorMode_Header", "Multi Factor Mode"), false, typeof(short), 5, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_MultiFactorMode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.MultiFactorModeDisplay, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_MultiFactorModeDisplay_Header", "Multi Factor Mode Display"), false, typeof(string), 65, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_MultiFactorModeDisplay_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ElevatorControlTypeCode, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_ElevatorControlTypeCode_Header", "Elevator Control Type Code"), false, typeof(short), 5, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_ElevatorControlTypeCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ElevatorControlTypeDisplay, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_ElevatorControlTypeDisplay_Header", "Elevator Control Type Display"), false, typeof(string), 65, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_ElevatorControlTypeDisplay_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ElevatorRelayBoardNumber, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_ElevatorRelayBoardNumber_Header", "Elevator Relay Board Number"), false, typeof(short), 5, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_ElevatorRelayBoardNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ElevatorRelaySectionNumber, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_ElevatorRelaySectionNumber_Header", "Elevator Relay Section Number"), false, typeof(short), 5, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_ElevatorRelaySectionNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackIntoAreaNumber, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_PassbackIntoAreaNumber_Header", "Passback Into Area Number"), false, typeof(int), 10, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_PassbackIntoAreaNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackFromAreaNumber, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_PassbackFromAreaNumber_Header", "Passback From Area Number"), false, typeof(int), 10, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_PassbackFromAreaNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.FreeAccessScheduleNumber, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_FreeAccessScheduleNumber_Header", "Free Access Schedule Number"), false, typeof(int), 10, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_FreeAccessScheduleNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.FreeAccessScheduleDisplay, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_FreeAccessScheduleDisplay_Header", "Free Access Schedule Display"), false, typeof(string), 65, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_FreeAccessScheduleDisplay_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CrisisFreeAccessScheduleNumber, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_CrisisFreeAccessScheduleNumber_Header", "Crisis Free Access Schedule Number"), false, typeof(int), 10, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_CrisisFreeAccessScheduleNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CrisisFreeAccessScheduleDisplay, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_CrisisFreeAccessScheduleDisplay_Header", "Crisis Free Access Schedule Display"), false, typeof(string), 65, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_CrisisFreeAccessScheduleDisplay_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PinRequiredScheduleNumber, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_PinRequiredScheduleNumber_Header", "Pin Required Schedule Number"), false, typeof(int), 10, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_PinRequiredScheduleNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PinRequiredScheduleDisplay, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_PinRequiredScheduleDisplay_Header", "Pin Required Schedule Display"), false, typeof(string), 65, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_PinRequiredScheduleDisplay_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisableForcedOpenScheduleNumber, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DisableForcedOpenScheduleNumber_Header", "Disable Forced Open Schedule Number"), false, typeof(int), 10, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DisableForcedOpenScheduleNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisableForcedOpenScheduleDisplay, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DisableForcedOpenScheduleDisplay_Header", "Disable Forced Open Schedule Display"), false, typeof(string), 65, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DisableForcedOpenScheduleDisplay_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisableOpenTooLongScheduleNumber, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DisableOpenTooLongScheduleNumber_Header", "Disable Open Too Long Schedule Number"), false, typeof(int), 10, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DisableOpenTooLongScheduleNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisableOpenTooLongScheduleDisplay, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DisableOpenTooLongScheduleDisplay_Header", "Disable Open Too Long Schedule Display"), false, typeof(string), 65, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DisableOpenTooLongScheduleDisplay_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AuxiliaryOutputScheduleNumber, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_AuxiliaryOutputScheduleNumber_Header", "Auxiliary Output Schedule Number"), false, typeof(int), 10, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_AuxiliaryOutputScheduleNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AuxiliaryOutputScheduleDisplay, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_AuxiliaryOutputScheduleDisplay_Header", "Auxiliary Output Schedule Display"), false, typeof(string), 65, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_AuxiliaryOutputScheduleDisplay_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2ActivationDelay, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_Relay2ActivationDelay_Header", "Relay 2 Activation Delay"), false, typeof(int), 10, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_Relay2ActivationDelay_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2ActivationDuration, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_Relay2ActivationDuration_Header", "Relay 2 Activation Duration"), false, typeof(int), 10, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_Relay2ActivationDuration_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2TriggerAccessGranted, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_Relay2TriggerAccessGranted_Header", "Relay 2 Trigger Access Granted"), false, typeof(bool), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_Relay2TriggerAccessGranted_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2TriggerDuress, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_Relay2TriggerDuress_Header", "Relay 2 Trigger Duress"), false, typeof(bool), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_Relay2TriggerDuress_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2TriggerForcedOpen, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_Relay2TriggerForcedOpen_Header", "Relay 2 Trigger Forced Open"), false, typeof(bool), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_Relay2TriggerForcedOpen_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2TriggerInvalidAttempt, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_Relay2TriggerInvalidAttempt_Header", "Relay 2 Trigger Invalid Attempt"), false, typeof(bool), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_Relay2TriggerInvalidAttempt_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2TriggerOpenTooLong, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_Relay2TriggerOpenTooLong_Header", "Relay 2 Trigger Open Too Long"), false, typeof(bool), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_Relay2TriggerOpenTooLong_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2TriggerPassbackViolation, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_Relay2TriggerPassbackViolation_Header", "Relay 2 Trigger Passback Violation"), false, typeof(bool), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_Relay2TriggerPassbackViolation_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2ModeCode, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_Relay2ModeCode_Header", "Relay 2 Mode Code"), false, typeof(short), 5, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_Relay2ModeCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2ModeDisplay, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_Relay2ModeDisplay_Header", "Relay 2 Mode Display"), false, typeof(string), 65, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_Relay2ModeDisplay_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2ScheduleNumber, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_Relay2ScheduleNumber_Header", "Relay 2 Schedule Number"), false, typeof(int), 10, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_Relay2ScheduleNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2ScheduleDisplay, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_Relay2ScheduleDisplay_Header", "Relay 2 Schedule Display"), false, typeof(string), 65, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_Relay2ScheduleDisplay_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ForcedOpenIOGroupNumber, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_ForcedOpenIOGroupNumber_Header", "Forced Open IO Group Number"), false, typeof(int), 10, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_ForcedOpenIOGroupNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ForcedOpenIOGroupOffset, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_ForcedOpenIOGroupOffset_Header", "Forced Open IO Group Offset"), false, typeof(short), 5, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_ForcedOpenIOGroupOffset_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.OpenTooLongIOGroupNumber, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_OpenTooLongIOGroupNumber_Header", "Open Too Long IO Group Number"), false, typeof(int), 10, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_OpenTooLongIOGroupNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.OpenTooLongIOGroupOffset, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_OpenTooLongIOGroupOffset_Header", "Open Too Long IO Group Offset"), false, typeof(short), 5, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_OpenTooLongIOGroupOffset_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InvalidAccessAttemptIOGroupNumber, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_InvalidAccessAttemptIOGroupNumber_Header", "Invalid Access Attempt IO Group Number"), false, typeof(int), 10, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_InvalidAccessAttemptIOGroupNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InvalidAccessAttemptIOGroupOffset, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_InvalidAccessAttemptIOGroupOffset_Header", "Invalid Access Attempt IO Group Offset"), false, typeof(short), 5, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_InvalidAccessAttemptIOGroupOffset_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackViolationIOGroupNumber, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_PassbackViolationIOGroupNumber_Header", "Passback Violation IO Group Number"), false, typeof(int), 10, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_PassbackViolationIOGroupNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackViolationIOGroupOffset, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_PassbackViolationIOGroupOffset_Header", "Passback Violation IO Group Offset"), false, typeof(short), 5, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_PassbackViolationIOGroupOffset_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DuressIOGroupNumber, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DuressIOGroupNumber_Header", "Duress IO Group Number"), false, typeof(int), 10, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DuressIOGroupNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DuressIOGroupOffset, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DuressIOGroupOffset_Header", "Duress IO Group Offset"), false, typeof(short), 5, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DuressIOGroupOffset_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.MissedHeartbeatIOGroupNumber, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_MissedHeartbeatIOGroupNumber_Header", "Missed Heartbeat IO Group Number"), false, typeof(int), 10, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_MissedHeartbeatIOGroupNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.MissedHeartbeatIOGroupOffset, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_MissedHeartbeatIOGroupOffset_Header", "Missed Heartbeat IO Group Offset"), false, typeof(short), 5, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_MissedHeartbeatIOGroupOffset_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGrantedIOGroupNumber, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_AccessGrantedIOGroupNumber_Header", "Access Granted IO Group Number"), false, typeof(int), 10, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_AccessGrantedIOGroupNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGrantedIOGroupOffset, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_AccessGrantedIOGroupOffset_Header", "Access Granted IO Group Offset"), false, typeof(short), 5, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_AccessGrantedIOGroupOffset_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DoorGroupIOGroupNumber, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DoorGroupIOGroupNumber_Header", "Door Group IO Group Number"), false, typeof(int), 10, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DoorGroupIOGroupNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DoorGroupIOGroupOffset, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DoorGroupIOGroupOffset_Header", "Door Group IO Group Offset"), false, typeof(short), 5, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DoorGroupIOGroupOffset_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LockedByIOGroupNumber, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_LockedByIOGroupNumber_Header", "Locked By IO Group Number"), false, typeof(int), 10, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_LockedByIOGroupNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.UnlockedByIOGroupNumber, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_UnlockedByIOGroupNumber_Header", "Unlocked By IO Group Number"), false, typeof(int), 10, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_UnlockedByIOGroupNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisarmIOGroupNumber1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DisarmIOGroupNumber1_Header", "Disarm IO Group Number 1"), false, typeof(int), 10, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DisarmIOGroupNumber1_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisarmIOGroupNumber2, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DisarmIOGroupNumber2_Header", "Disarm IO Group Number 2"), false, typeof(int), 10, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DisarmIOGroupNumber2_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisarmIOGroupNumber3, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DisarmIOGroupNumber3_Header", "Disarm IO Group Number 3"), false, typeof(int), 10, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DisarmIOGroupNumber3_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisarmIOGroupNumber4, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DisarmIOGroupNumber4_Header", "Disarm IO Group Number 4"), false, typeof(int), 10, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DisarmIOGroupNumber4_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalLastUpdated, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_AccessPortalLastUpdated_Header", "Access Portal Last Updated"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_AccessPortalLastUpdated_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.HardwareAddressLastUpdated, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_HardwareAddressLastUpdated_Header", "Hardware Address Last Updated"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_HardwareAddressLastUpdated_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackIntoAreaLastUpdated, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_PassbackIntoAreaLastUpdated_Header", "Passback Into Area Last Updated"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_PassbackIntoAreaLastUpdated_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackFromAreaLastUpdated, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_PassbackFromAreaLastUpdated_Header", "Passback From Area Last Updated"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_PassbackFromAreaLastUpdated_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.FreeAccessSchLastUpdated, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_FreeAccessSchLastUpdated_Header", "Free Access Sch Last Updated"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_FreeAccessSchLastUpdated_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CrisisFreeAccessSchLastUpdated, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_CrisisFreeAccessSchLastUpdated_Header", "Crisis Free Access Sch Last Updated"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_CrisisFreeAccessSchLastUpdated_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PinRequiredSchLastUpdated, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_PinRequiredSchLastUpdated_Header", "Pin Required Sch Last Updated"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_PinRequiredSchLastUpdated_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisableForcedOpenSchLastUpdated, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DisableForcedOpenSchLastUpdated_Header", "Disable Forced Open Sch Last Updated"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DisableForcedOpenSchLastUpdated_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisableOpenTooLongSchLastUpdated, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DisableOpenTooLongSchLastUpdated_Header", "Disable Open Too Long Sch Last Updated"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DisableOpenTooLongSchLastUpdated_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AuxOutputSchLastUpdated, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_AuxOutputSchLastUpdated_Header", "Aux Output Sch Last Updated"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_AuxOutputSchLastUpdated_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AuxOutputLastUpdated, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_AuxOutputLastUpdated_Header", "Aux Output Last Updated"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_AuxOutputLastUpdated_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2SchLastUpdated, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_Relay2SchLastUpdated_Header", "Relay 2 Sch Last Updated"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_Relay2SchLastUpdated_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ForcedOpenAlertLastUpdated, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_ForcedOpenAlertLastUpdated_Header", "Forced Open Alert Last Updated"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_ForcedOpenAlertLastUpdated_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.OpenTooLongAlertLastUpdated, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_OpenTooLongAlertLastUpdated_Header", "Open Too Long Alert Last Updated"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_OpenTooLongAlertLastUpdated_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InvalidAccessAttemptAlertLastUpdated, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_InvalidAccessAttemptAlertLastUpdated_Header", "Invalid Access Attempt Alert Last Updated"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_InvalidAccessAttemptAlertLastUpdated_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackViolationAlertLastUpdated, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_PassbackViolationAlertLastUpdated_Header", "Passback Violation Alert Last Updated"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_PassbackViolationAlertLastUpdated_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DuressAlertLastUpdated, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DuressAlertLastUpdated_Header", "Duress Alert Last Updated"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DuressAlertLastUpdated_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.MissedHeartbeatAlertLastUpdated, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_MissedHeartbeatAlertLastUpdated_Header", "Missed Heartbeat Alert Last Updated"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_MissedHeartbeatAlertLastUpdated_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGrantedAlertLastUpdated, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_AccessGrantedAlertLastUpdated_Header", "Access Granted Alert Last Updated"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_AccessGrantedAlertLastUpdated_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DoorGroupAlertLastUpdated, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DoorGroupAlertLastUpdated_Header", "Door Group Alert Last Updated"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DoorGroupAlertLastUpdated_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.UnlockedByIogLastUpdated, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_UnlockedByIogLastUpdated_Header", "Unlocked By Iog Last Updated"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_UnlockedByIogLastUpdated_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LockedByIogLastUpdated, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_LockedByIogLastUpdated_Header", "Locked By Iog Last Updated"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_LockedByIogLastUpdated_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisarmIog1LastUpdated, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DisarmIog1LastUpdated_Header", "Disarm Iog 1 Last Updated"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DisarmIog1LastUpdated_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisarmIog2LastUpdated, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DisarmIog2LastUpdated_Header", "Disarm Iog 2 Last Updated"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DisarmIog2LastUpdated_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisarmIog3LastUpdated, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DisarmIog3LastUpdated_Header", "Disarm Iog 3 Last Updated"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DisarmIog3LastUpdated_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisarmIog4LastUpdated, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DisarmIog4LastUpdated_Header", "Disarm Iog 4 Last Updated"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_DisarmIog4LastUpdated_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuNumber, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_CpuNumber_Header", "Cpu Number"), false, typeof(short), 5, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_CpuNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuUid, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_CpuUid_Header", "Cpu Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_CpuUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ServerAddress, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_ServerAddress_Header", "Server Address"), false, typeof(string), 255, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_ServerAddress_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IsConnected, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_IsConnected_Header", "Is Connected"), false, typeof(bool), -1, GetResourceMessage("GCS_AccessPortal_PanelLoadDataChangesForCpuPDSA_IsConnected_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      
      return props;
    }
    #endregion

    #region Initialize Entity
    /// <summary>
    /// This method is called from the CreateNewEntity Method. All the properties for the Entity are set to default values here by the code generator.
    /// </summary>
    protected override void InitializeEntity()
    {
      Entity.AccessPortalUid = Guid.Empty;
      Entity.ClusterUid = Guid.Empty;
      Entity.GalaxyPanelUid = Guid.Empty;
      Entity.GalaxyInterfaceBoardUid = Guid.Empty;
      Entity.GalaxyInterfaceBoardSectionUid = Guid.Empty;
      Entity.GalaxyHardwareModuleUid = Guid.Empty;
      Entity.GalaxyInterfaceBoardSectionNodeUid = Guid.Empty;
      Entity.PortalName = string.Empty;
      Entity.ClusterGroupId = 0;
      Entity.ClusterNumber = 0;
      Entity.PanelNumber = 0;
      Entity.BoardNumber = 0;
      Entity.SectionNumber = 0;
      Entity.ModuleNumber = 0;
      Entity.NodeNumber = 0;
      Entity.DoorNumber = 0;
      Entity.AccessPortalTypeDescription = string.Empty;
      Entity.ReaderTypeName = string.Empty;
      Entity.PanelDataFormatCode = 0;
      Entity.DataFormatName = string.Empty;
      Entity.AccessPortalBoardSectionMode = 0;
      Entity.AccessPortalBoardSectionModeDisplay = string.Empty;
      Entity.AccessPortalPanelModelTypeCode = string.Empty;
      Entity.AccessPortalCpuTypeCode = string.Empty;
      Entity.AccessPortalBoardTypeModel = string.Empty;
      Entity.AccessPortalBoardTypeTypeCode = 0;
      Entity.AccessPortalBoardTypeDisplay = string.Empty;
      Entity.UnlockDelay = 0;
      Entity.UnlockDuration = 0;
      Entity.RecloseDuration = 0;
      Entity.AllowPassbackAccess = false;
      Entity.RequireTwoValidCredentials = false;
      Entity.UnlockOnREX = false;
      Entity.SuppressIllegalOpenLog = false;
      Entity.SuppressOpenTooLongLog = false;
      Entity.SuppressClosedLog = false;
      Entity.SuppressREXLog = false;
      Entity.GenerateDoorContactChangeLogs = false;
      Entity.LockWhenDoorCloses = false;
      Entity.EnableDuress = false;
      Entity.DoorGroupNotify = false;
      Entity.DoorGroupCanDisable = false;
      Entity.RelayOneOnDuringArmDelay = false;
      Entity.RequireValidAccessForAutoUnlock = false;
      Entity.PINSpecifiesRecloseDuration = false;
      Entity.ValidAccessRequiresDoorOpen = false;
      Entity.DontDecrementLimitedSwipeExpireCount = false;
      Entity.IgnoreNotInSystem = false;
      Entity.ReaderSendsHeartbeat = false;
      Entity.PropertiesLastUpdated = DateTimeOffset.Now;
      Entity.AutoForgivePassbackCode = 0;
      Entity.AutoForgivePassbackDisplay = string.Empty;
      Entity.PinRequiredModeCode = 0;
      Entity.PinRequiredModeDisplay = string.Empty;
      Entity.ContactSupervisionCode = 0;
      Entity.ContactSupervisionDisplay = string.Empty;
      Entity.DeferToServerCode = 0;
      Entity.DeferToServerDisplay = string.Empty;
      Entity.NoServerReplyCode = 0;
      Entity.NoServerReplyDisplay = string.Empty;
      Entity.LockPushButtonCode = 0;
      Entity.LockPushButtonDisplay = string.Empty;
      Entity.MultiFactorMode = 0;
      Entity.MultiFactorModeDisplay = string.Empty;
      Entity.ElevatorControlTypeCode = 0;
      Entity.ElevatorControlTypeDisplay = string.Empty;
      Entity.ElevatorRelayBoardNumber = 0;
      Entity.ElevatorRelaySectionNumber = 0;
      Entity.PassbackIntoAreaNumber = 0;
      Entity.PassbackFromAreaNumber = 0;
      Entity.FreeAccessScheduleNumber = 0;
      Entity.FreeAccessScheduleDisplay = string.Empty;
      Entity.CrisisFreeAccessScheduleNumber = 0;
      Entity.CrisisFreeAccessScheduleDisplay = string.Empty;
      Entity.PinRequiredScheduleNumber = 0;
      Entity.PinRequiredScheduleDisplay = string.Empty;
      Entity.DisableForcedOpenScheduleNumber = 0;
      Entity.DisableForcedOpenScheduleDisplay = string.Empty;
      Entity.DisableOpenTooLongScheduleNumber = 0;
      Entity.DisableOpenTooLongScheduleDisplay = string.Empty;
      Entity.AuxiliaryOutputScheduleNumber = 0;
      Entity.AuxiliaryOutputScheduleDisplay = string.Empty;
      Entity.Relay2ActivationDelay = 0;
      Entity.Relay2ActivationDuration = 0;
      Entity.Relay2TriggerAccessGranted = false;
      Entity.Relay2TriggerDuress = false;
      Entity.Relay2TriggerForcedOpen = false;
      Entity.Relay2TriggerInvalidAttempt = false;
      Entity.Relay2TriggerOpenTooLong = false;
      Entity.Relay2TriggerPassbackViolation = false;
      Entity.Relay2ModeCode = 0;
      Entity.Relay2ModeDisplay = string.Empty;
      Entity.Relay2ScheduleNumber = 0;
      Entity.Relay2ScheduleDisplay = string.Empty;
      Entity.ForcedOpenIOGroupNumber = 0;
      Entity.ForcedOpenIOGroupOffset = 0;
      Entity.OpenTooLongIOGroupNumber = 0;
      Entity.OpenTooLongIOGroupOffset = 0;
      Entity.InvalidAccessAttemptIOGroupNumber = 0;
      Entity.InvalidAccessAttemptIOGroupOffset = 0;
      Entity.PassbackViolationIOGroupNumber = 0;
      Entity.PassbackViolationIOGroupOffset = 0;
      Entity.DuressIOGroupNumber = 0;
      Entity.DuressIOGroupOffset = 0;
      Entity.MissedHeartbeatIOGroupNumber = 0;
      Entity.MissedHeartbeatIOGroupOffset = 0;
      Entity.AccessGrantedIOGroupNumber = 0;
      Entity.AccessGrantedIOGroupOffset = 0;
      Entity.DoorGroupIOGroupNumber = 0;
      Entity.DoorGroupIOGroupOffset = 0;
      Entity.LockedByIOGroupNumber = 0;
      Entity.UnlockedByIOGroupNumber = 0;
      Entity.DisarmIOGroupNumber1 = 0;
      Entity.DisarmIOGroupNumber2 = 0;
      Entity.DisarmIOGroupNumber3 = 0;
      Entity.DisarmIOGroupNumber4 = 0;
      Entity.AccessPortalLastUpdated = DateTimeOffset.Now;
      Entity.HardwareAddressLastUpdated = DateTimeOffset.Now;
      Entity.PassbackIntoAreaLastUpdated = DateTimeOffset.Now;
      Entity.PassbackFromAreaLastUpdated = DateTimeOffset.Now;
      Entity.FreeAccessSchLastUpdated = DateTimeOffset.Now;
      Entity.CrisisFreeAccessSchLastUpdated = DateTimeOffset.Now;
      Entity.PinRequiredSchLastUpdated = DateTimeOffset.Now;
      Entity.DisableForcedOpenSchLastUpdated = DateTimeOffset.Now;
      Entity.DisableOpenTooLongSchLastUpdated = DateTimeOffset.Now;
      Entity.AuxOutputSchLastUpdated = DateTimeOffset.Now;
      Entity.AuxOutputLastUpdated = DateTimeOffset.Now;
      Entity.Relay2SchLastUpdated = DateTimeOffset.Now;
      Entity.ForcedOpenAlertLastUpdated = DateTimeOffset.Now;
      Entity.OpenTooLongAlertLastUpdated = DateTimeOffset.Now;
      Entity.InvalidAccessAttemptAlertLastUpdated = DateTimeOffset.Now;
      Entity.PassbackViolationAlertLastUpdated = DateTimeOffset.Now;
      Entity.DuressAlertLastUpdated = DateTimeOffset.Now;
      Entity.MissedHeartbeatAlertLastUpdated = DateTimeOffset.Now;
      Entity.AccessGrantedAlertLastUpdated = DateTimeOffset.Now;
      Entity.DoorGroupAlertLastUpdated = DateTimeOffset.Now;
      Entity.UnlockedByIogLastUpdated = DateTimeOffset.Now;
      Entity.LockedByIogLastUpdated = DateTimeOffset.Now;
      Entity.DisarmIog1LastUpdated = DateTimeOffset.Now;
      Entity.DisarmIog2LastUpdated = DateTimeOffset.Now;
      Entity.DisarmIog3LastUpdated = DateTimeOffset.Now;
      Entity.DisarmIog4LastUpdated = DateTimeOffset.Now;
      Entity.CpuNumber = 0;
      Entity.CpuUid = Guid.Empty;
      Entity.ServerAddress = string.Empty;
      Entity.IsConnected = false;

      Entity.ResetAllIsDirtyProperties();
    }
    #endregion
    
    #region InitProperties Method
    /// <summary>
    /// Called by the constructor to create the PDSAProperties collection of all properties that will be validated.
    /// </summary>
    protected override void InitProperties()
    {
      // Set the Properties collection to the collection of Entity Properties
      Properties = CreateProperties();
    }
    #endregion

    #region EntityDataToProperties Method
    /// <summary>
    /// Moves the Entity class data into the Properties collection.
    /// </summary>
    protected override void EntityDataToProperties()
    {
      if (Properties == null)
        InitProperties();
      
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalUid).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalUid).Value = Entity.AccessPortalUid;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterUid).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterUid).Value = Entity.ClusterUid;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.GalaxyPanelUid).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.GalaxyPanelUid).Value = Entity.GalaxyPanelUid;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.GalaxyInterfaceBoardUid).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.GalaxyInterfaceBoardUid).Value = Entity.GalaxyInterfaceBoardUid;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionUid).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionUid).Value = Entity.GalaxyInterfaceBoardSectionUid;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.GalaxyHardwareModuleUid).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.GalaxyHardwareModuleUid).Value = Entity.GalaxyHardwareModuleUid;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionNodeUid).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionNodeUid).Value = Entity.GalaxyInterfaceBoardSectionNodeUid;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PortalName).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PortalName).Value = Entity.PortalName;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterGroupId).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterGroupId).Value = Entity.ClusterGroupId;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterNumber).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterNumber).Value = Entity.ClusterNumber;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PanelNumber).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PanelNumber).Value = Entity.PanelNumber;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.BoardNumber).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.BoardNumber).Value = Entity.BoardNumber;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.SectionNumber).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.SectionNumber).Value = Entity.SectionNumber;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ModuleNumber).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ModuleNumber).Value = Entity.ModuleNumber;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.NodeNumber).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.NodeNumber).Value = Entity.NodeNumber;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DoorNumber).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DoorNumber).Value = Entity.DoorNumber;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalTypeDescription).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalTypeDescription).Value = Entity.AccessPortalTypeDescription;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ReaderTypeName).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ReaderTypeName).Value = Entity.ReaderTypeName;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PanelDataFormatCode).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PanelDataFormatCode).Value = Entity.PanelDataFormatCode;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DataFormatName).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DataFormatName).Value = Entity.DataFormatName;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalBoardSectionMode).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalBoardSectionMode).Value = Entity.AccessPortalBoardSectionMode;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalBoardSectionModeDisplay).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalBoardSectionModeDisplay).Value = Entity.AccessPortalBoardSectionModeDisplay;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalPanelModelTypeCode).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalPanelModelTypeCode).Value = Entity.AccessPortalPanelModelTypeCode;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalCpuTypeCode).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalCpuTypeCode).Value = Entity.AccessPortalCpuTypeCode;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalBoardTypeModel).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalBoardTypeModel).Value = Entity.AccessPortalBoardTypeModel;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalBoardTypeTypeCode).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalBoardTypeTypeCode).Value = Entity.AccessPortalBoardTypeTypeCode;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalBoardTypeDisplay).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalBoardTypeDisplay).Value = Entity.AccessPortalBoardTypeDisplay;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.UnlockDelay).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.UnlockDelay).Value = Entity.UnlockDelay;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.UnlockDuration).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.UnlockDuration).Value = Entity.UnlockDuration;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.RecloseDuration).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.RecloseDuration).Value = Entity.RecloseDuration;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AllowPassbackAccess).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AllowPassbackAccess).Value = Entity.AllowPassbackAccess;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.RequireTwoValidCredentials).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.RequireTwoValidCredentials).Value = Entity.RequireTwoValidCredentials;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.UnlockOnREX).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.UnlockOnREX).Value = Entity.UnlockOnREX;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.SuppressIllegalOpenLog).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.SuppressIllegalOpenLog).Value = Entity.SuppressIllegalOpenLog;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.SuppressOpenTooLongLog).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.SuppressOpenTooLongLog).Value = Entity.SuppressOpenTooLongLog;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.SuppressClosedLog).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.SuppressClosedLog).Value = Entity.SuppressClosedLog;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.SuppressREXLog).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.SuppressREXLog).Value = Entity.SuppressREXLog;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.GenerateDoorContactChangeLogs).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.GenerateDoorContactChangeLogs).Value = Entity.GenerateDoorContactChangeLogs;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LockWhenDoorCloses).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LockWhenDoorCloses).Value = Entity.LockWhenDoorCloses;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.EnableDuress).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.EnableDuress).Value = Entity.EnableDuress;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DoorGroupNotify).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DoorGroupNotify).Value = Entity.DoorGroupNotify;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DoorGroupCanDisable).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DoorGroupCanDisable).Value = Entity.DoorGroupCanDisable;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.RelayOneOnDuringArmDelay).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.RelayOneOnDuringArmDelay).Value = Entity.RelayOneOnDuringArmDelay;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.RequireValidAccessForAutoUnlock).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.RequireValidAccessForAutoUnlock).Value = Entity.RequireValidAccessForAutoUnlock;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PINSpecifiesRecloseDuration).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PINSpecifiesRecloseDuration).Value = Entity.PINSpecifiesRecloseDuration;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ValidAccessRequiresDoorOpen).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ValidAccessRequiresDoorOpen).Value = Entity.ValidAccessRequiresDoorOpen;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DontDecrementLimitedSwipeExpireCount).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DontDecrementLimitedSwipeExpireCount).Value = Entity.DontDecrementLimitedSwipeExpireCount;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IgnoreNotInSystem).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IgnoreNotInSystem).Value = Entity.IgnoreNotInSystem;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ReaderSendsHeartbeat).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ReaderSendsHeartbeat).Value = Entity.ReaderSendsHeartbeat;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PropertiesLastUpdated).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PropertiesLastUpdated).Value = Entity.PropertiesLastUpdated;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AutoForgivePassbackCode).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AutoForgivePassbackCode).Value = Entity.AutoForgivePassbackCode;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AutoForgivePassbackDisplay).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AutoForgivePassbackDisplay).Value = Entity.AutoForgivePassbackDisplay;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PinRequiredModeCode).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PinRequiredModeCode).Value = Entity.PinRequiredModeCode;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PinRequiredModeDisplay).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PinRequiredModeDisplay).Value = Entity.PinRequiredModeDisplay;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ContactSupervisionCode).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ContactSupervisionCode).Value = Entity.ContactSupervisionCode;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ContactSupervisionDisplay).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ContactSupervisionDisplay).Value = Entity.ContactSupervisionDisplay;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DeferToServerCode).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DeferToServerCode).Value = Entity.DeferToServerCode;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DeferToServerDisplay).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DeferToServerDisplay).Value = Entity.DeferToServerDisplay;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.NoServerReplyCode).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.NoServerReplyCode).Value = Entity.NoServerReplyCode;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.NoServerReplyDisplay).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.NoServerReplyDisplay).Value = Entity.NoServerReplyDisplay;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LockPushButtonCode).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LockPushButtonCode).Value = Entity.LockPushButtonCode;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LockPushButtonDisplay).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LockPushButtonDisplay).Value = Entity.LockPushButtonDisplay;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.MultiFactorMode).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.MultiFactorMode).Value = Entity.MultiFactorMode;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.MultiFactorModeDisplay).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.MultiFactorModeDisplay).Value = Entity.MultiFactorModeDisplay;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ElevatorControlTypeCode).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ElevatorControlTypeCode).Value = Entity.ElevatorControlTypeCode;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ElevatorControlTypeDisplay).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ElevatorControlTypeDisplay).Value = Entity.ElevatorControlTypeDisplay;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ElevatorRelayBoardNumber).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ElevatorRelayBoardNumber).Value = Entity.ElevatorRelayBoardNumber;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ElevatorRelaySectionNumber).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ElevatorRelaySectionNumber).Value = Entity.ElevatorRelaySectionNumber;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackIntoAreaNumber).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackIntoAreaNumber).Value = Entity.PassbackIntoAreaNumber;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackFromAreaNumber).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackFromAreaNumber).Value = Entity.PassbackFromAreaNumber;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.FreeAccessScheduleNumber).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.FreeAccessScheduleNumber).Value = Entity.FreeAccessScheduleNumber;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.FreeAccessScheduleDisplay).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.FreeAccessScheduleDisplay).Value = Entity.FreeAccessScheduleDisplay;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CrisisFreeAccessScheduleNumber).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CrisisFreeAccessScheduleNumber).Value = Entity.CrisisFreeAccessScheduleNumber;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CrisisFreeAccessScheduleDisplay).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CrisisFreeAccessScheduleDisplay).Value = Entity.CrisisFreeAccessScheduleDisplay;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PinRequiredScheduleNumber).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PinRequiredScheduleNumber).Value = Entity.PinRequiredScheduleNumber;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PinRequiredScheduleDisplay).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PinRequiredScheduleDisplay).Value = Entity.PinRequiredScheduleDisplay;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisableForcedOpenScheduleNumber).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisableForcedOpenScheduleNumber).Value = Entity.DisableForcedOpenScheduleNumber;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisableForcedOpenScheduleDisplay).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisableForcedOpenScheduleDisplay).Value = Entity.DisableForcedOpenScheduleDisplay;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisableOpenTooLongScheduleNumber).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisableOpenTooLongScheduleNumber).Value = Entity.DisableOpenTooLongScheduleNumber;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisableOpenTooLongScheduleDisplay).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisableOpenTooLongScheduleDisplay).Value = Entity.DisableOpenTooLongScheduleDisplay;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AuxiliaryOutputScheduleNumber).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AuxiliaryOutputScheduleNumber).Value = Entity.AuxiliaryOutputScheduleNumber;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AuxiliaryOutputScheduleDisplay).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AuxiliaryOutputScheduleDisplay).Value = Entity.AuxiliaryOutputScheduleDisplay;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2ActivationDelay).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2ActivationDelay).Value = Entity.Relay2ActivationDelay;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2ActivationDuration).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2ActivationDuration).Value = Entity.Relay2ActivationDuration;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2TriggerAccessGranted).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2TriggerAccessGranted).Value = Entity.Relay2TriggerAccessGranted;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2TriggerDuress).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2TriggerDuress).Value = Entity.Relay2TriggerDuress;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2TriggerForcedOpen).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2TriggerForcedOpen).Value = Entity.Relay2TriggerForcedOpen;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2TriggerInvalidAttempt).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2TriggerInvalidAttempt).Value = Entity.Relay2TriggerInvalidAttempt;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2TriggerOpenTooLong).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2TriggerOpenTooLong).Value = Entity.Relay2TriggerOpenTooLong;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2TriggerPassbackViolation).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2TriggerPassbackViolation).Value = Entity.Relay2TriggerPassbackViolation;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2ModeCode).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2ModeCode).Value = Entity.Relay2ModeCode;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2ModeDisplay).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2ModeDisplay).Value = Entity.Relay2ModeDisplay;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2ScheduleNumber).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2ScheduleNumber).Value = Entity.Relay2ScheduleNumber;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2ScheduleDisplay).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2ScheduleDisplay).Value = Entity.Relay2ScheduleDisplay;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ForcedOpenIOGroupNumber).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ForcedOpenIOGroupNumber).Value = Entity.ForcedOpenIOGroupNumber;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ForcedOpenIOGroupOffset).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ForcedOpenIOGroupOffset).Value = Entity.ForcedOpenIOGroupOffset;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.OpenTooLongIOGroupNumber).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.OpenTooLongIOGroupNumber).Value = Entity.OpenTooLongIOGroupNumber;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.OpenTooLongIOGroupOffset).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.OpenTooLongIOGroupOffset).Value = Entity.OpenTooLongIOGroupOffset;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InvalidAccessAttemptIOGroupNumber).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InvalidAccessAttemptIOGroupNumber).Value = Entity.InvalidAccessAttemptIOGroupNumber;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InvalidAccessAttemptIOGroupOffset).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InvalidAccessAttemptIOGroupOffset).Value = Entity.InvalidAccessAttemptIOGroupOffset;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackViolationIOGroupNumber).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackViolationIOGroupNumber).Value = Entity.PassbackViolationIOGroupNumber;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackViolationIOGroupOffset).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackViolationIOGroupOffset).Value = Entity.PassbackViolationIOGroupOffset;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DuressIOGroupNumber).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DuressIOGroupNumber).Value = Entity.DuressIOGroupNumber;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DuressIOGroupOffset).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DuressIOGroupOffset).Value = Entity.DuressIOGroupOffset;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.MissedHeartbeatIOGroupNumber).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.MissedHeartbeatIOGroupNumber).Value = Entity.MissedHeartbeatIOGroupNumber;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.MissedHeartbeatIOGroupOffset).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.MissedHeartbeatIOGroupOffset).Value = Entity.MissedHeartbeatIOGroupOffset;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGrantedIOGroupNumber).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGrantedIOGroupNumber).Value = Entity.AccessGrantedIOGroupNumber;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGrantedIOGroupOffset).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGrantedIOGroupOffset).Value = Entity.AccessGrantedIOGroupOffset;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DoorGroupIOGroupNumber).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DoorGroupIOGroupNumber).Value = Entity.DoorGroupIOGroupNumber;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DoorGroupIOGroupOffset).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DoorGroupIOGroupOffset).Value = Entity.DoorGroupIOGroupOffset;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LockedByIOGroupNumber).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LockedByIOGroupNumber).Value = Entity.LockedByIOGroupNumber;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.UnlockedByIOGroupNumber).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.UnlockedByIOGroupNumber).Value = Entity.UnlockedByIOGroupNumber;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisarmIOGroupNumber1).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisarmIOGroupNumber1).Value = Entity.DisarmIOGroupNumber1;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisarmIOGroupNumber2).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisarmIOGroupNumber2).Value = Entity.DisarmIOGroupNumber2;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisarmIOGroupNumber3).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisarmIOGroupNumber3).Value = Entity.DisarmIOGroupNumber3;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisarmIOGroupNumber4).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisarmIOGroupNumber4).Value = Entity.DisarmIOGroupNumber4;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalLastUpdated).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalLastUpdated).Value = Entity.AccessPortalLastUpdated;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.HardwareAddressLastUpdated).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.HardwareAddressLastUpdated).Value = Entity.HardwareAddressLastUpdated;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackIntoAreaLastUpdated).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackIntoAreaLastUpdated).Value = Entity.PassbackIntoAreaLastUpdated;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackFromAreaLastUpdated).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackFromAreaLastUpdated).Value = Entity.PassbackFromAreaLastUpdated;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.FreeAccessSchLastUpdated).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.FreeAccessSchLastUpdated).Value = Entity.FreeAccessSchLastUpdated;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CrisisFreeAccessSchLastUpdated).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CrisisFreeAccessSchLastUpdated).Value = Entity.CrisisFreeAccessSchLastUpdated;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PinRequiredSchLastUpdated).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PinRequiredSchLastUpdated).Value = Entity.PinRequiredSchLastUpdated;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisableForcedOpenSchLastUpdated).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisableForcedOpenSchLastUpdated).Value = Entity.DisableForcedOpenSchLastUpdated;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisableOpenTooLongSchLastUpdated).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisableOpenTooLongSchLastUpdated).Value = Entity.DisableOpenTooLongSchLastUpdated;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AuxOutputSchLastUpdated).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AuxOutputSchLastUpdated).Value = Entity.AuxOutputSchLastUpdated;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AuxOutputLastUpdated).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AuxOutputLastUpdated).Value = Entity.AuxOutputLastUpdated;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2SchLastUpdated).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2SchLastUpdated).Value = Entity.Relay2SchLastUpdated;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ForcedOpenAlertLastUpdated).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ForcedOpenAlertLastUpdated).Value = Entity.ForcedOpenAlertLastUpdated;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.OpenTooLongAlertLastUpdated).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.OpenTooLongAlertLastUpdated).Value = Entity.OpenTooLongAlertLastUpdated;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InvalidAccessAttemptAlertLastUpdated).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InvalidAccessAttemptAlertLastUpdated).Value = Entity.InvalidAccessAttemptAlertLastUpdated;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackViolationAlertLastUpdated).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackViolationAlertLastUpdated).Value = Entity.PassbackViolationAlertLastUpdated;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DuressAlertLastUpdated).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DuressAlertLastUpdated).Value = Entity.DuressAlertLastUpdated;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.MissedHeartbeatAlertLastUpdated).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.MissedHeartbeatAlertLastUpdated).Value = Entity.MissedHeartbeatAlertLastUpdated;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGrantedAlertLastUpdated).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGrantedAlertLastUpdated).Value = Entity.AccessGrantedAlertLastUpdated;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DoorGroupAlertLastUpdated).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DoorGroupAlertLastUpdated).Value = Entity.DoorGroupAlertLastUpdated;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.UnlockedByIogLastUpdated).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.UnlockedByIogLastUpdated).Value = Entity.UnlockedByIogLastUpdated;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LockedByIogLastUpdated).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LockedByIogLastUpdated).Value = Entity.LockedByIogLastUpdated;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisarmIog1LastUpdated).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisarmIog1LastUpdated).Value = Entity.DisarmIog1LastUpdated;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisarmIog2LastUpdated).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisarmIog2LastUpdated).Value = Entity.DisarmIog2LastUpdated;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisarmIog3LastUpdated).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisarmIog3LastUpdated).Value = Entity.DisarmIog3LastUpdated;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisarmIog4LastUpdated).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisarmIog4LastUpdated).Value = Entity.DisarmIog4LastUpdated;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuNumber).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuNumber).Value = Entity.CpuNumber;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuUid).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuUid).Value = Entity.CpuUid;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ServerAddress).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ServerAddress).Value = Entity.ServerAddress;
      if(!Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IsConnected).SetAsNull)
        Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IsConnected).Value = Entity.IsConnected;
    }

    /// <summary>
    /// Moves the Properties collection objects into the Entity properties
    /// </summary>
    protected override void PropertiesToEntityData()
    {
      if (Properties == null)
        InitProperties();

      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalUid).IsNull == false)
        Entity.AccessPortalUid = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalUid).GetAsGuid();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterUid).IsNull == false)
        Entity.ClusterUid = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterUid).GetAsGuid();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.GalaxyPanelUid).IsNull == false)
        Entity.GalaxyPanelUid = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.GalaxyPanelUid).GetAsGuid();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.GalaxyInterfaceBoardUid).IsNull == false)
        Entity.GalaxyInterfaceBoardUid = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.GalaxyInterfaceBoardUid).GetAsGuid();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionUid).IsNull == false)
        Entity.GalaxyInterfaceBoardSectionUid = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionUid).GetAsGuid();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.GalaxyHardwareModuleUid).IsNull == false)
        Entity.GalaxyHardwareModuleUid = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.GalaxyHardwareModuleUid).GetAsGuid();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionNodeUid).IsNull == false)
        Entity.GalaxyInterfaceBoardSectionNodeUid = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionNodeUid).GetAsGuid();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PortalName).IsNull == false)
        Entity.PortalName = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PortalName).GetAsString();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterGroupId).IsNull == false)
        Entity.ClusterGroupId = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterGroupId).GetAsInteger();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterNumber).IsNull == false)
        Entity.ClusterNumber = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterNumber).GetAsInteger();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PanelNumber).IsNull == false)
        Entity.PanelNumber = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PanelNumber).GetAsInteger();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.BoardNumber).IsNull == false)
        Entity.BoardNumber = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.BoardNumber).GetAsShort();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.SectionNumber).IsNull == false)
        Entity.SectionNumber = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.SectionNumber).GetAsShort();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ModuleNumber).IsNull == false)
        Entity.ModuleNumber = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ModuleNumber).GetAsShort();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.NodeNumber).IsNull == false)
        Entity.NodeNumber = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.NodeNumber).GetAsShort();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DoorNumber).IsNull == false)
        Entity.DoorNumber = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DoorNumber).GetAsShort();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalTypeDescription).IsNull == false)
        Entity.AccessPortalTypeDescription = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalTypeDescription).GetAsString();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ReaderTypeName).IsNull == false)
        Entity.ReaderTypeName = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ReaderTypeName).GetAsString();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PanelDataFormatCode).IsNull == false)
        Entity.PanelDataFormatCode = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PanelDataFormatCode).GetAsInteger();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DataFormatName).IsNull == false)
        Entity.DataFormatName = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DataFormatName).GetAsString();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalBoardSectionMode).IsNull == false)
        Entity.AccessPortalBoardSectionMode = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalBoardSectionMode).GetAsShort();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalBoardSectionModeDisplay).IsNull == false)
        Entity.AccessPortalBoardSectionModeDisplay = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalBoardSectionModeDisplay).GetAsString();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalPanelModelTypeCode).IsNull == false)
        Entity.AccessPortalPanelModelTypeCode = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalPanelModelTypeCode).GetAsString();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalCpuTypeCode).IsNull == false)
        Entity.AccessPortalCpuTypeCode = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalCpuTypeCode).GetAsString();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalBoardTypeModel).IsNull == false)
        Entity.AccessPortalBoardTypeModel = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalBoardTypeModel).GetAsString();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalBoardTypeTypeCode).IsNull == false)
        Entity.AccessPortalBoardTypeTypeCode = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalBoardTypeTypeCode).GetAsShort();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalBoardTypeDisplay).IsNull == false)
        Entity.AccessPortalBoardTypeDisplay = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalBoardTypeDisplay).GetAsString();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.UnlockDelay).IsNull == false)
        Entity.UnlockDelay = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.UnlockDelay).GetAsInteger();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.UnlockDuration).IsNull == false)
        Entity.UnlockDuration = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.UnlockDuration).GetAsInteger();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.RecloseDuration).IsNull == false)
        Entity.RecloseDuration = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.RecloseDuration).GetAsInteger();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AllowPassbackAccess).IsNull == false)
        Entity.AllowPassbackAccess = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AllowPassbackAccess).GetAsBool();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.RequireTwoValidCredentials).IsNull == false)
        Entity.RequireTwoValidCredentials = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.RequireTwoValidCredentials).GetAsBool();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.UnlockOnREX).IsNull == false)
        Entity.UnlockOnREX = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.UnlockOnREX).GetAsBool();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.SuppressIllegalOpenLog).IsNull == false)
        Entity.SuppressIllegalOpenLog = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.SuppressIllegalOpenLog).GetAsBool();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.SuppressOpenTooLongLog).IsNull == false)
        Entity.SuppressOpenTooLongLog = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.SuppressOpenTooLongLog).GetAsBool();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.SuppressClosedLog).IsNull == false)
        Entity.SuppressClosedLog = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.SuppressClosedLog).GetAsBool();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.SuppressREXLog).IsNull == false)
        Entity.SuppressREXLog = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.SuppressREXLog).GetAsBool();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.GenerateDoorContactChangeLogs).IsNull == false)
        Entity.GenerateDoorContactChangeLogs = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.GenerateDoorContactChangeLogs).GetAsBool();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LockWhenDoorCloses).IsNull == false)
        Entity.LockWhenDoorCloses = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LockWhenDoorCloses).GetAsBool();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.EnableDuress).IsNull == false)
        Entity.EnableDuress = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.EnableDuress).GetAsBool();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DoorGroupNotify).IsNull == false)
        Entity.DoorGroupNotify = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DoorGroupNotify).GetAsBool();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DoorGroupCanDisable).IsNull == false)
        Entity.DoorGroupCanDisable = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DoorGroupCanDisable).GetAsBool();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.RelayOneOnDuringArmDelay).IsNull == false)
        Entity.RelayOneOnDuringArmDelay = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.RelayOneOnDuringArmDelay).GetAsBool();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.RequireValidAccessForAutoUnlock).IsNull == false)
        Entity.RequireValidAccessForAutoUnlock = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.RequireValidAccessForAutoUnlock).GetAsBool();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PINSpecifiesRecloseDuration).IsNull == false)
        Entity.PINSpecifiesRecloseDuration = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PINSpecifiesRecloseDuration).GetAsBool();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ValidAccessRequiresDoorOpen).IsNull == false)
        Entity.ValidAccessRequiresDoorOpen = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ValidAccessRequiresDoorOpen).GetAsBool();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DontDecrementLimitedSwipeExpireCount).IsNull == false)
        Entity.DontDecrementLimitedSwipeExpireCount = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DontDecrementLimitedSwipeExpireCount).GetAsBool();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IgnoreNotInSystem).IsNull == false)
        Entity.IgnoreNotInSystem = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IgnoreNotInSystem).GetAsBool();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ReaderSendsHeartbeat).IsNull == false)
        Entity.ReaderSendsHeartbeat = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ReaderSendsHeartbeat).GetAsBool();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PropertiesLastUpdated).IsNull == false)
        Entity.PropertiesLastUpdated = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PropertiesLastUpdated).GetAsDateTimeOffset();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AutoForgivePassbackCode).IsNull == false)
        Entity.AutoForgivePassbackCode = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AutoForgivePassbackCode).GetAsShort();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AutoForgivePassbackDisplay).IsNull == false)
        Entity.AutoForgivePassbackDisplay = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AutoForgivePassbackDisplay).GetAsString();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PinRequiredModeCode).IsNull == false)
        Entity.PinRequiredModeCode = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PinRequiredModeCode).GetAsShort();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PinRequiredModeDisplay).IsNull == false)
        Entity.PinRequiredModeDisplay = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PinRequiredModeDisplay).GetAsString();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ContactSupervisionCode).IsNull == false)
        Entity.ContactSupervisionCode = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ContactSupervisionCode).GetAsShort();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ContactSupervisionDisplay).IsNull == false)
        Entity.ContactSupervisionDisplay = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ContactSupervisionDisplay).GetAsString();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DeferToServerCode).IsNull == false)
        Entity.DeferToServerCode = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DeferToServerCode).GetAsShort();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DeferToServerDisplay).IsNull == false)
        Entity.DeferToServerDisplay = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DeferToServerDisplay).GetAsString();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.NoServerReplyCode).IsNull == false)
        Entity.NoServerReplyCode = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.NoServerReplyCode).GetAsShort();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.NoServerReplyDisplay).IsNull == false)
        Entity.NoServerReplyDisplay = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.NoServerReplyDisplay).GetAsString();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LockPushButtonCode).IsNull == false)
        Entity.LockPushButtonCode = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LockPushButtonCode).GetAsShort();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LockPushButtonDisplay).IsNull == false)
        Entity.LockPushButtonDisplay = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LockPushButtonDisplay).GetAsString();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.MultiFactorMode).IsNull == false)
        Entity.MultiFactorMode = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.MultiFactorMode).GetAsShort();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.MultiFactorModeDisplay).IsNull == false)
        Entity.MultiFactorModeDisplay = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.MultiFactorModeDisplay).GetAsString();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ElevatorControlTypeCode).IsNull == false)
        Entity.ElevatorControlTypeCode = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ElevatorControlTypeCode).GetAsShort();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ElevatorControlTypeDisplay).IsNull == false)
        Entity.ElevatorControlTypeDisplay = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ElevatorControlTypeDisplay).GetAsString();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ElevatorRelayBoardNumber).IsNull == false)
        Entity.ElevatorRelayBoardNumber = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ElevatorRelayBoardNumber).GetAsShort();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ElevatorRelaySectionNumber).IsNull == false)
        Entity.ElevatorRelaySectionNumber = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ElevatorRelaySectionNumber).GetAsShort();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackIntoAreaNumber).IsNull == false)
        Entity.PassbackIntoAreaNumber = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackIntoAreaNumber).GetAsInteger();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackFromAreaNumber).IsNull == false)
        Entity.PassbackFromAreaNumber = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackFromAreaNumber).GetAsInteger();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.FreeAccessScheduleNumber).IsNull == false)
        Entity.FreeAccessScheduleNumber = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.FreeAccessScheduleNumber).GetAsInteger();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.FreeAccessScheduleDisplay).IsNull == false)
        Entity.FreeAccessScheduleDisplay = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.FreeAccessScheduleDisplay).GetAsString();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CrisisFreeAccessScheduleNumber).IsNull == false)
        Entity.CrisisFreeAccessScheduleNumber = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CrisisFreeAccessScheduleNumber).GetAsInteger();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CrisisFreeAccessScheduleDisplay).IsNull == false)
        Entity.CrisisFreeAccessScheduleDisplay = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CrisisFreeAccessScheduleDisplay).GetAsString();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PinRequiredScheduleNumber).IsNull == false)
        Entity.PinRequiredScheduleNumber = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PinRequiredScheduleNumber).GetAsInteger();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PinRequiredScheduleDisplay).IsNull == false)
        Entity.PinRequiredScheduleDisplay = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PinRequiredScheduleDisplay).GetAsString();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisableForcedOpenScheduleNumber).IsNull == false)
        Entity.DisableForcedOpenScheduleNumber = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisableForcedOpenScheduleNumber).GetAsInteger();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisableForcedOpenScheduleDisplay).IsNull == false)
        Entity.DisableForcedOpenScheduleDisplay = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisableForcedOpenScheduleDisplay).GetAsString();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisableOpenTooLongScheduleNumber).IsNull == false)
        Entity.DisableOpenTooLongScheduleNumber = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisableOpenTooLongScheduleNumber).GetAsInteger();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisableOpenTooLongScheduleDisplay).IsNull == false)
        Entity.DisableOpenTooLongScheduleDisplay = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisableOpenTooLongScheduleDisplay).GetAsString();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AuxiliaryOutputScheduleNumber).IsNull == false)
        Entity.AuxiliaryOutputScheduleNumber = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AuxiliaryOutputScheduleNumber).GetAsInteger();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AuxiliaryOutputScheduleDisplay).IsNull == false)
        Entity.AuxiliaryOutputScheduleDisplay = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AuxiliaryOutputScheduleDisplay).GetAsString();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2ActivationDelay).IsNull == false)
        Entity.Relay2ActivationDelay = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2ActivationDelay).GetAsInteger();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2ActivationDuration).IsNull == false)
        Entity.Relay2ActivationDuration = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2ActivationDuration).GetAsInteger();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2TriggerAccessGranted).IsNull == false)
        Entity.Relay2TriggerAccessGranted = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2TriggerAccessGranted).GetAsBool();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2TriggerDuress).IsNull == false)
        Entity.Relay2TriggerDuress = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2TriggerDuress).GetAsBool();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2TriggerForcedOpen).IsNull == false)
        Entity.Relay2TriggerForcedOpen = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2TriggerForcedOpen).GetAsBool();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2TriggerInvalidAttempt).IsNull == false)
        Entity.Relay2TriggerInvalidAttempt = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2TriggerInvalidAttempt).GetAsBool();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2TriggerOpenTooLong).IsNull == false)
        Entity.Relay2TriggerOpenTooLong = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2TriggerOpenTooLong).GetAsBool();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2TriggerPassbackViolation).IsNull == false)
        Entity.Relay2TriggerPassbackViolation = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2TriggerPassbackViolation).GetAsBool();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2ModeCode).IsNull == false)
        Entity.Relay2ModeCode = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2ModeCode).GetAsShort();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2ModeDisplay).IsNull == false)
        Entity.Relay2ModeDisplay = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2ModeDisplay).GetAsString();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2ScheduleNumber).IsNull == false)
        Entity.Relay2ScheduleNumber = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2ScheduleNumber).GetAsInteger();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2ScheduleDisplay).IsNull == false)
        Entity.Relay2ScheduleDisplay = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2ScheduleDisplay).GetAsString();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ForcedOpenIOGroupNumber).IsNull == false)
        Entity.ForcedOpenIOGroupNumber = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ForcedOpenIOGroupNumber).GetAsInteger();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ForcedOpenIOGroupOffset).IsNull == false)
        Entity.ForcedOpenIOGroupOffset = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ForcedOpenIOGroupOffset).GetAsShort();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.OpenTooLongIOGroupNumber).IsNull == false)
        Entity.OpenTooLongIOGroupNumber = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.OpenTooLongIOGroupNumber).GetAsInteger();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.OpenTooLongIOGroupOffset).IsNull == false)
        Entity.OpenTooLongIOGroupOffset = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.OpenTooLongIOGroupOffset).GetAsShort();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InvalidAccessAttemptIOGroupNumber).IsNull == false)
        Entity.InvalidAccessAttemptIOGroupNumber = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InvalidAccessAttemptIOGroupNumber).GetAsInteger();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InvalidAccessAttemptIOGroupOffset).IsNull == false)
        Entity.InvalidAccessAttemptIOGroupOffset = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InvalidAccessAttemptIOGroupOffset).GetAsShort();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackViolationIOGroupNumber).IsNull == false)
        Entity.PassbackViolationIOGroupNumber = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackViolationIOGroupNumber).GetAsInteger();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackViolationIOGroupOffset).IsNull == false)
        Entity.PassbackViolationIOGroupOffset = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackViolationIOGroupOffset).GetAsShort();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DuressIOGroupNumber).IsNull == false)
        Entity.DuressIOGroupNumber = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DuressIOGroupNumber).GetAsInteger();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DuressIOGroupOffset).IsNull == false)
        Entity.DuressIOGroupOffset = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DuressIOGroupOffset).GetAsShort();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.MissedHeartbeatIOGroupNumber).IsNull == false)
        Entity.MissedHeartbeatIOGroupNumber = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.MissedHeartbeatIOGroupNumber).GetAsInteger();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.MissedHeartbeatIOGroupOffset).IsNull == false)
        Entity.MissedHeartbeatIOGroupOffset = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.MissedHeartbeatIOGroupOffset).GetAsShort();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGrantedIOGroupNumber).IsNull == false)
        Entity.AccessGrantedIOGroupNumber = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGrantedIOGroupNumber).GetAsInteger();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGrantedIOGroupOffset).IsNull == false)
        Entity.AccessGrantedIOGroupOffset = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGrantedIOGroupOffset).GetAsShort();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DoorGroupIOGroupNumber).IsNull == false)
        Entity.DoorGroupIOGroupNumber = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DoorGroupIOGroupNumber).GetAsInteger();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DoorGroupIOGroupOffset).IsNull == false)
        Entity.DoorGroupIOGroupOffset = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DoorGroupIOGroupOffset).GetAsShort();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LockedByIOGroupNumber).IsNull == false)
        Entity.LockedByIOGroupNumber = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LockedByIOGroupNumber).GetAsInteger();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.UnlockedByIOGroupNumber).IsNull == false)
        Entity.UnlockedByIOGroupNumber = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.UnlockedByIOGroupNumber).GetAsInteger();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisarmIOGroupNumber1).IsNull == false)
        Entity.DisarmIOGroupNumber1 = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisarmIOGroupNumber1).GetAsInteger();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisarmIOGroupNumber2).IsNull == false)
        Entity.DisarmIOGroupNumber2 = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisarmIOGroupNumber2).GetAsInteger();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisarmIOGroupNumber3).IsNull == false)
        Entity.DisarmIOGroupNumber3 = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisarmIOGroupNumber3).GetAsInteger();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisarmIOGroupNumber4).IsNull == false)
        Entity.DisarmIOGroupNumber4 = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisarmIOGroupNumber4).GetAsInteger();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalLastUpdated).IsNull == false)
        Entity.AccessPortalLastUpdated = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessPortalLastUpdated).GetAsDateTimeOffset();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.HardwareAddressLastUpdated).IsNull == false)
        Entity.HardwareAddressLastUpdated = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.HardwareAddressLastUpdated).GetAsDateTimeOffset();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackIntoAreaLastUpdated).IsNull == false)
        Entity.PassbackIntoAreaLastUpdated = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackIntoAreaLastUpdated).GetAsDateTimeOffset();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackFromAreaLastUpdated).IsNull == false)
        Entity.PassbackFromAreaLastUpdated = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackFromAreaLastUpdated).GetAsDateTimeOffset();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.FreeAccessSchLastUpdated).IsNull == false)
        Entity.FreeAccessSchLastUpdated = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.FreeAccessSchLastUpdated).GetAsDateTimeOffset();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CrisisFreeAccessSchLastUpdated).IsNull == false)
        Entity.CrisisFreeAccessSchLastUpdated = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CrisisFreeAccessSchLastUpdated).GetAsDateTimeOffset();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PinRequiredSchLastUpdated).IsNull == false)
        Entity.PinRequiredSchLastUpdated = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PinRequiredSchLastUpdated).GetAsDateTimeOffset();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisableForcedOpenSchLastUpdated).IsNull == false)
        Entity.DisableForcedOpenSchLastUpdated = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisableForcedOpenSchLastUpdated).GetAsDateTimeOffset();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisableOpenTooLongSchLastUpdated).IsNull == false)
        Entity.DisableOpenTooLongSchLastUpdated = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisableOpenTooLongSchLastUpdated).GetAsDateTimeOffset();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AuxOutputSchLastUpdated).IsNull == false)
        Entity.AuxOutputSchLastUpdated = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AuxOutputSchLastUpdated).GetAsDateTimeOffset();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AuxOutputLastUpdated).IsNull == false)
        Entity.AuxOutputLastUpdated = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AuxOutputLastUpdated).GetAsDateTimeOffset();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2SchLastUpdated).IsNull == false)
        Entity.Relay2SchLastUpdated = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.Relay2SchLastUpdated).GetAsDateTimeOffset();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ForcedOpenAlertLastUpdated).IsNull == false)
        Entity.ForcedOpenAlertLastUpdated = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ForcedOpenAlertLastUpdated).GetAsDateTimeOffset();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.OpenTooLongAlertLastUpdated).IsNull == false)
        Entity.OpenTooLongAlertLastUpdated = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.OpenTooLongAlertLastUpdated).GetAsDateTimeOffset();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InvalidAccessAttemptAlertLastUpdated).IsNull == false)
        Entity.InvalidAccessAttemptAlertLastUpdated = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InvalidAccessAttemptAlertLastUpdated).GetAsDateTimeOffset();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackViolationAlertLastUpdated).IsNull == false)
        Entity.PassbackViolationAlertLastUpdated = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackViolationAlertLastUpdated).GetAsDateTimeOffset();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DuressAlertLastUpdated).IsNull == false)
        Entity.DuressAlertLastUpdated = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DuressAlertLastUpdated).GetAsDateTimeOffset();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.MissedHeartbeatAlertLastUpdated).IsNull == false)
        Entity.MissedHeartbeatAlertLastUpdated = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.MissedHeartbeatAlertLastUpdated).GetAsDateTimeOffset();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGrantedAlertLastUpdated).IsNull == false)
        Entity.AccessGrantedAlertLastUpdated = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGrantedAlertLastUpdated).GetAsDateTimeOffset();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DoorGroupAlertLastUpdated).IsNull == false)
        Entity.DoorGroupAlertLastUpdated = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DoorGroupAlertLastUpdated).GetAsDateTimeOffset();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.UnlockedByIogLastUpdated).IsNull == false)
        Entity.UnlockedByIogLastUpdated = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.UnlockedByIogLastUpdated).GetAsDateTimeOffset();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LockedByIogLastUpdated).IsNull == false)
        Entity.LockedByIogLastUpdated = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LockedByIogLastUpdated).GetAsDateTimeOffset();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisarmIog1LastUpdated).IsNull == false)
        Entity.DisarmIog1LastUpdated = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisarmIog1LastUpdated).GetAsDateTimeOffset();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisarmIog2LastUpdated).IsNull == false)
        Entity.DisarmIog2LastUpdated = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisarmIog2LastUpdated).GetAsDateTimeOffset();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisarmIog3LastUpdated).IsNull == false)
        Entity.DisarmIog3LastUpdated = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisarmIog3LastUpdated).GetAsDateTimeOffset();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisarmIog4LastUpdated).IsNull == false)
        Entity.DisarmIog4LastUpdated = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DisarmIog4LastUpdated).GetAsDateTimeOffset();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuNumber).IsNull == false)
        Entity.CpuNumber = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuNumber).GetAsShort();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuUid).IsNull == false)
        Entity.CpuUid = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuUid).GetAsGuid();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ServerAddress).IsNull == false)
        Entity.ServerAddress = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ServerAddress).GetAsString();
      if(Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IsConnected).IsNull == false)
        Entity.IsConnected = Properties.GetByName(AccessPortal_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IsConnected).GetAsBool();
    }
    #endregion
    
    #region ColumnNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the AccessPortal_PanelLoadDataChangesForCpuPDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ColumnNames
    {
    /// <summary>
    /// Returns 'AccessPortalUid'
    /// </summary>
    public static string AccessPortalUid = "AccessPortalUid";
    /// <summary>
    /// Returns 'ClusterUid'
    /// </summary>
    public static string ClusterUid = "ClusterUid";
    /// <summary>
    /// Returns 'GalaxyPanelUid'
    /// </summary>
    public static string GalaxyPanelUid = "GalaxyPanelUid";
    /// <summary>
    /// Returns 'GalaxyInterfaceBoardUid'
    /// </summary>
    public static string GalaxyInterfaceBoardUid = "GalaxyInterfaceBoardUid";
    /// <summary>
    /// Returns 'GalaxyInterfaceBoardSectionUid'
    /// </summary>
    public static string GalaxyInterfaceBoardSectionUid = "GalaxyInterfaceBoardSectionUid";
    /// <summary>
    /// Returns 'GalaxyHardwareModuleUid'
    /// </summary>
    public static string GalaxyHardwareModuleUid = "GalaxyHardwareModuleUid";
    /// <summary>
    /// Returns 'GalaxyInterfaceBoardSectionNodeUid'
    /// </summary>
    public static string GalaxyInterfaceBoardSectionNodeUid = "GalaxyInterfaceBoardSectionNodeUid";
    /// <summary>
    /// Returns 'PortalName'
    /// </summary>
    public static string PortalName = "PortalName";
    /// <summary>
    /// Returns 'ClusterGroupId'
    /// </summary>
    public static string ClusterGroupId = "ClusterGroupId";
    /// <summary>
    /// Returns 'ClusterNumber'
    /// </summary>
    public static string ClusterNumber = "ClusterNumber";
    /// <summary>
    /// Returns 'PanelNumber'
    /// </summary>
    public static string PanelNumber = "PanelNumber";
    /// <summary>
    /// Returns 'BoardNumber'
    /// </summary>
    public static string BoardNumber = "BoardNumber";
    /// <summary>
    /// Returns 'SectionNumber'
    /// </summary>
    public static string SectionNumber = "SectionNumber";
    /// <summary>
    /// Returns 'ModuleNumber'
    /// </summary>
    public static string ModuleNumber = "ModuleNumber";
    /// <summary>
    /// Returns 'NodeNumber'
    /// </summary>
    public static string NodeNumber = "NodeNumber";
    /// <summary>
    /// Returns 'DoorNumber'
    /// </summary>
    public static string DoorNumber = "DoorNumber";
    /// <summary>
    /// Returns 'AccessPortalTypeDescription'
    /// </summary>
    public static string AccessPortalTypeDescription = "AccessPortalTypeDescription";
    /// <summary>
    /// Returns 'ReaderTypeName'
    /// </summary>
    public static string ReaderTypeName = "ReaderTypeName";
    /// <summary>
    /// Returns 'PanelDataFormatCode'
    /// </summary>
    public static string PanelDataFormatCode = "PanelDataFormatCode";
    /// <summary>
    /// Returns 'DataFormatName'
    /// </summary>
    public static string DataFormatName = "DataFormatName";
    /// <summary>
    /// Returns 'AccessPortalBoardSectionMode'
    /// </summary>
    public static string AccessPortalBoardSectionMode = "AccessPortalBoardSectionMode";
    /// <summary>
    /// Returns 'AccessPortalBoardSectionModeDisplay'
    /// </summary>
    public static string AccessPortalBoardSectionModeDisplay = "AccessPortalBoardSectionModeDisplay";
    /// <summary>
    /// Returns 'AccessPortalPanelModelTypeCode'
    /// </summary>
    public static string AccessPortalPanelModelTypeCode = "AccessPortalPanelModelTypeCode";
    /// <summary>
    /// Returns 'AccessPortalCpuTypeCode'
    /// </summary>
    public static string AccessPortalCpuTypeCode = "AccessPortalCpuTypeCode";
    /// <summary>
    /// Returns 'AccessPortalBoardTypeModel'
    /// </summary>
    public static string AccessPortalBoardTypeModel = "AccessPortalBoardTypeModel";
    /// <summary>
    /// Returns 'AccessPortalBoardTypeTypeCode'
    /// </summary>
    public static string AccessPortalBoardTypeTypeCode = "AccessPortalBoardTypeTypeCode";
    /// <summary>
    /// Returns 'AccessPortalBoardTypeDisplay'
    /// </summary>
    public static string AccessPortalBoardTypeDisplay = "AccessPortalBoardTypeDisplay";
    /// <summary>
    /// Returns 'UnlockDelay'
    /// </summary>
    public static string UnlockDelay = "UnlockDelay";
    /// <summary>
    /// Returns 'UnlockDuration'
    /// </summary>
    public static string UnlockDuration = "UnlockDuration";
    /// <summary>
    /// Returns 'RecloseDuration'
    /// </summary>
    public static string RecloseDuration = "RecloseDuration";
    /// <summary>
    /// Returns 'AllowPassbackAccess'
    /// </summary>
    public static string AllowPassbackAccess = "AllowPassbackAccess";
    /// <summary>
    /// Returns 'RequireTwoValidCredentials'
    /// </summary>
    public static string RequireTwoValidCredentials = "RequireTwoValidCredentials";
    /// <summary>
    /// Returns 'UnlockOnREX'
    /// </summary>
    public static string UnlockOnREX = "UnlockOnREX";
    /// <summary>
    /// Returns 'SuppressIllegalOpenLog'
    /// </summary>
    public static string SuppressIllegalOpenLog = "SuppressIllegalOpenLog";
    /// <summary>
    /// Returns 'SuppressOpenTooLongLog'
    /// </summary>
    public static string SuppressOpenTooLongLog = "SuppressOpenTooLongLog";
    /// <summary>
    /// Returns 'SuppressClosedLog'
    /// </summary>
    public static string SuppressClosedLog = "SuppressClosedLog";
    /// <summary>
    /// Returns 'SuppressREXLog'
    /// </summary>
    public static string SuppressREXLog = "SuppressREXLog";
    /// <summary>
    /// Returns 'GenerateDoorContactChangeLogs'
    /// </summary>
    public static string GenerateDoorContactChangeLogs = "GenerateDoorContactChangeLogs";
    /// <summary>
    /// Returns 'LockWhenDoorCloses'
    /// </summary>
    public static string LockWhenDoorCloses = "LockWhenDoorCloses";
    /// <summary>
    /// Returns 'EnableDuress'
    /// </summary>
    public static string EnableDuress = "EnableDuress";
    /// <summary>
    /// Returns 'DoorGroupNotify'
    /// </summary>
    public static string DoorGroupNotify = "DoorGroupNotify";
    /// <summary>
    /// Returns 'DoorGroupCanDisable'
    /// </summary>
    public static string DoorGroupCanDisable = "DoorGroupCanDisable";
    /// <summary>
    /// Returns 'RelayOneOnDuringArmDelay'
    /// </summary>
    public static string RelayOneOnDuringArmDelay = "RelayOneOnDuringArmDelay";
    /// <summary>
    /// Returns 'RequireValidAccessForAutoUnlock'
    /// </summary>
    public static string RequireValidAccessForAutoUnlock = "RequireValidAccessForAutoUnlock";
    /// <summary>
    /// Returns 'PINSpecifiesRecloseDuration'
    /// </summary>
    public static string PINSpecifiesRecloseDuration = "PINSpecifiesRecloseDuration";
    /// <summary>
    /// Returns 'ValidAccessRequiresDoorOpen'
    /// </summary>
    public static string ValidAccessRequiresDoorOpen = "ValidAccessRequiresDoorOpen";
    /// <summary>
    /// Returns 'DontDecrementLimitedSwipeExpireCount'
    /// </summary>
    public static string DontDecrementLimitedSwipeExpireCount = "DontDecrementLimitedSwipeExpireCount";
    /// <summary>
    /// Returns 'IgnoreNotInSystem'
    /// </summary>
    public static string IgnoreNotInSystem = "IgnoreNotInSystem";
    /// <summary>
    /// Returns 'ReaderSendsHeartbeat'
    /// </summary>
    public static string ReaderSendsHeartbeat = "ReaderSendsHeartbeat";
    /// <summary>
    /// Returns 'PropertiesLastUpdated'
    /// </summary>
    public static string PropertiesLastUpdated = "PropertiesLastUpdated";
    /// <summary>
    /// Returns 'AutoForgivePassbackCode'
    /// </summary>
    public static string AutoForgivePassbackCode = "AutoForgivePassbackCode";
    /// <summary>
    /// Returns 'AutoForgivePassbackDisplay'
    /// </summary>
    public static string AutoForgivePassbackDisplay = "AutoForgivePassbackDisplay";
    /// <summary>
    /// Returns 'PinRequiredModeCode'
    /// </summary>
    public static string PinRequiredModeCode = "PinRequiredModeCode";
    /// <summary>
    /// Returns 'PinRequiredModeDisplay'
    /// </summary>
    public static string PinRequiredModeDisplay = "PinRequiredModeDisplay";
    /// <summary>
    /// Returns 'ContactSupervisionCode'
    /// </summary>
    public static string ContactSupervisionCode = "ContactSupervisionCode";
    /// <summary>
    /// Returns 'ContactSupervisionDisplay'
    /// </summary>
    public static string ContactSupervisionDisplay = "ContactSupervisionDisplay";
    /// <summary>
    /// Returns 'DeferToServerCode'
    /// </summary>
    public static string DeferToServerCode = "DeferToServerCode";
    /// <summary>
    /// Returns 'DeferToServerDisplay'
    /// </summary>
    public static string DeferToServerDisplay = "DeferToServerDisplay";
    /// <summary>
    /// Returns 'NoServerReplyCode'
    /// </summary>
    public static string NoServerReplyCode = "NoServerReplyCode";
    /// <summary>
    /// Returns 'NoServerReplyDisplay'
    /// </summary>
    public static string NoServerReplyDisplay = "NoServerReplyDisplay";
    /// <summary>
    /// Returns 'LockPushButtonCode'
    /// </summary>
    public static string LockPushButtonCode = "LockPushButtonCode";
    /// <summary>
    /// Returns 'LockPushButtonDisplay'
    /// </summary>
    public static string LockPushButtonDisplay = "LockPushButtonDisplay";
    /// <summary>
    /// Returns 'MultiFactorMode'
    /// </summary>
    public static string MultiFactorMode = "MultiFactorMode";
    /// <summary>
    /// Returns 'MultiFactorModeDisplay'
    /// </summary>
    public static string MultiFactorModeDisplay = "MultiFactorModeDisplay";
    /// <summary>
    /// Returns 'ElevatorControlTypeCode'
    /// </summary>
    public static string ElevatorControlTypeCode = "ElevatorControlTypeCode";
    /// <summary>
    /// Returns 'ElevatorControlTypeDisplay'
    /// </summary>
    public static string ElevatorControlTypeDisplay = "ElevatorControlTypeDisplay";
    /// <summary>
    /// Returns 'ElevatorRelayBoardNumber'
    /// </summary>
    public static string ElevatorRelayBoardNumber = "ElevatorRelayBoardNumber";
    /// <summary>
    /// Returns 'ElevatorRelaySectionNumber'
    /// </summary>
    public static string ElevatorRelaySectionNumber = "ElevatorRelaySectionNumber";
    /// <summary>
    /// Returns 'PassbackIntoAreaNumber'
    /// </summary>
    public static string PassbackIntoAreaNumber = "PassbackIntoAreaNumber";
    /// <summary>
    /// Returns 'PassbackFromAreaNumber'
    /// </summary>
    public static string PassbackFromAreaNumber = "PassbackFromAreaNumber";
    /// <summary>
    /// Returns 'FreeAccessScheduleNumber'
    /// </summary>
    public static string FreeAccessScheduleNumber = "FreeAccessScheduleNumber";
    /// <summary>
    /// Returns 'FreeAccessScheduleDisplay'
    /// </summary>
    public static string FreeAccessScheduleDisplay = "FreeAccessScheduleDisplay";
    /// <summary>
    /// Returns 'CrisisFreeAccessScheduleNumber'
    /// </summary>
    public static string CrisisFreeAccessScheduleNumber = "CrisisFreeAccessScheduleNumber";
    /// <summary>
    /// Returns 'CrisisFreeAccessScheduleDisplay'
    /// </summary>
    public static string CrisisFreeAccessScheduleDisplay = "CrisisFreeAccessScheduleDisplay";
    /// <summary>
    /// Returns 'PinRequiredScheduleNumber'
    /// </summary>
    public static string PinRequiredScheduleNumber = "PinRequiredScheduleNumber";
    /// <summary>
    /// Returns 'PinRequiredScheduleDisplay'
    /// </summary>
    public static string PinRequiredScheduleDisplay = "PinRequiredScheduleDisplay";
    /// <summary>
    /// Returns 'DisableForcedOpenScheduleNumber'
    /// </summary>
    public static string DisableForcedOpenScheduleNumber = "DisableForcedOpenScheduleNumber";
    /// <summary>
    /// Returns 'DisableForcedOpenScheduleDisplay'
    /// </summary>
    public static string DisableForcedOpenScheduleDisplay = "DisableForcedOpenScheduleDisplay";
    /// <summary>
    /// Returns 'DisableOpenTooLongScheduleNumber'
    /// </summary>
    public static string DisableOpenTooLongScheduleNumber = "DisableOpenTooLongScheduleNumber";
    /// <summary>
    /// Returns 'DisableOpenTooLongScheduleDisplay'
    /// </summary>
    public static string DisableOpenTooLongScheduleDisplay = "DisableOpenTooLongScheduleDisplay";
    /// <summary>
    /// Returns 'AuxiliaryOutputScheduleNumber'
    /// </summary>
    public static string AuxiliaryOutputScheduleNumber = "AuxiliaryOutputScheduleNumber";
    /// <summary>
    /// Returns 'AuxiliaryOutputScheduleDisplay'
    /// </summary>
    public static string AuxiliaryOutputScheduleDisplay = "AuxiliaryOutputScheduleDisplay";
    /// <summary>
    /// Returns 'Relay2ActivationDelay'
    /// </summary>
    public static string Relay2ActivationDelay = "Relay2ActivationDelay";
    /// <summary>
    /// Returns 'Relay2ActivationDuration'
    /// </summary>
    public static string Relay2ActivationDuration = "Relay2ActivationDuration";
    /// <summary>
    /// Returns 'Relay2TriggerAccessGranted'
    /// </summary>
    public static string Relay2TriggerAccessGranted = "Relay2TriggerAccessGranted";
    /// <summary>
    /// Returns 'Relay2TriggerDuress'
    /// </summary>
    public static string Relay2TriggerDuress = "Relay2TriggerDuress";
    /// <summary>
    /// Returns 'Relay2TriggerForcedOpen'
    /// </summary>
    public static string Relay2TriggerForcedOpen = "Relay2TriggerForcedOpen";
    /// <summary>
    /// Returns 'Relay2TriggerInvalidAttempt'
    /// </summary>
    public static string Relay2TriggerInvalidAttempt = "Relay2TriggerInvalidAttempt";
    /// <summary>
    /// Returns 'Relay2TriggerOpenTooLong'
    /// </summary>
    public static string Relay2TriggerOpenTooLong = "Relay2TriggerOpenTooLong";
    /// <summary>
    /// Returns 'Relay2TriggerPassbackViolation'
    /// </summary>
    public static string Relay2TriggerPassbackViolation = "Relay2TriggerPassbackViolation";
    /// <summary>
    /// Returns 'Relay2ModeCode'
    /// </summary>
    public static string Relay2ModeCode = "Relay2ModeCode";
    /// <summary>
    /// Returns 'Relay2ModeDisplay'
    /// </summary>
    public static string Relay2ModeDisplay = "Relay2ModeDisplay";
    /// <summary>
    /// Returns 'Relay2ScheduleNumber'
    /// </summary>
    public static string Relay2ScheduleNumber = "Relay2ScheduleNumber";
    /// <summary>
    /// Returns 'Relay2ScheduleDisplay'
    /// </summary>
    public static string Relay2ScheduleDisplay = "Relay2ScheduleDisplay";
    /// <summary>
    /// Returns 'ForcedOpenIOGroupNumber'
    /// </summary>
    public static string ForcedOpenIOGroupNumber = "ForcedOpenIOGroupNumber";
    /// <summary>
    /// Returns 'ForcedOpenIOGroupOffset'
    /// </summary>
    public static string ForcedOpenIOGroupOffset = "ForcedOpenIOGroupOffset";
    /// <summary>
    /// Returns 'OpenTooLongIOGroupNumber'
    /// </summary>
    public static string OpenTooLongIOGroupNumber = "OpenTooLongIOGroupNumber";
    /// <summary>
    /// Returns 'OpenTooLongIOGroupOffset'
    /// </summary>
    public static string OpenTooLongIOGroupOffset = "OpenTooLongIOGroupOffset";
    /// <summary>
    /// Returns 'InvalidAccessAttemptIOGroupNumber'
    /// </summary>
    public static string InvalidAccessAttemptIOGroupNumber = "InvalidAccessAttemptIOGroupNumber";
    /// <summary>
    /// Returns 'InvalidAccessAttemptIOGroupOffset'
    /// </summary>
    public static string InvalidAccessAttemptIOGroupOffset = "InvalidAccessAttemptIOGroupOffset";
    /// <summary>
    /// Returns 'PassbackViolationIOGroupNumber'
    /// </summary>
    public static string PassbackViolationIOGroupNumber = "PassbackViolationIOGroupNumber";
    /// <summary>
    /// Returns 'PassbackViolationIOGroupOffset'
    /// </summary>
    public static string PassbackViolationIOGroupOffset = "PassbackViolationIOGroupOffset";
    /// <summary>
    /// Returns 'DuressIOGroupNumber'
    /// </summary>
    public static string DuressIOGroupNumber = "DuressIOGroupNumber";
    /// <summary>
    /// Returns 'DuressIOGroupOffset'
    /// </summary>
    public static string DuressIOGroupOffset = "DuressIOGroupOffset";
    /// <summary>
    /// Returns 'MissedHeartbeatIOGroupNumber'
    /// </summary>
    public static string MissedHeartbeatIOGroupNumber = "MissedHeartbeatIOGroupNumber";
    /// <summary>
    /// Returns 'MissedHeartbeatIOGroupOffset'
    /// </summary>
    public static string MissedHeartbeatIOGroupOffset = "MissedHeartbeatIOGroupOffset";
    /// <summary>
    /// Returns 'AccessGrantedIOGroupNumber'
    /// </summary>
    public static string AccessGrantedIOGroupNumber = "AccessGrantedIOGroupNumber";
    /// <summary>
    /// Returns 'AccessGrantedIOGroupOffset'
    /// </summary>
    public static string AccessGrantedIOGroupOffset = "AccessGrantedIOGroupOffset";
    /// <summary>
    /// Returns 'DoorGroupIOGroupNumber'
    /// </summary>
    public static string DoorGroupIOGroupNumber = "DoorGroupIOGroupNumber";
    /// <summary>
    /// Returns 'DoorGroupIOGroupOffset'
    /// </summary>
    public static string DoorGroupIOGroupOffset = "DoorGroupIOGroupOffset";
    /// <summary>
    /// Returns 'LockedByIOGroupNumber'
    /// </summary>
    public static string LockedByIOGroupNumber = "LockedByIOGroupNumber";
    /// <summary>
    /// Returns 'UnlockedByIOGroupNumber'
    /// </summary>
    public static string UnlockedByIOGroupNumber = "UnlockedByIOGroupNumber";
    /// <summary>
    /// Returns 'DisarmIOGroupNumber1'
    /// </summary>
    public static string DisarmIOGroupNumber1 = "DisarmIOGroupNumber1";
    /// <summary>
    /// Returns 'DisarmIOGroupNumber2'
    /// </summary>
    public static string DisarmIOGroupNumber2 = "DisarmIOGroupNumber2";
    /// <summary>
    /// Returns 'DisarmIOGroupNumber3'
    /// </summary>
    public static string DisarmIOGroupNumber3 = "DisarmIOGroupNumber3";
    /// <summary>
    /// Returns 'DisarmIOGroupNumber4'
    /// </summary>
    public static string DisarmIOGroupNumber4 = "DisarmIOGroupNumber4";
    /// <summary>
    /// Returns 'AccessPortalLastUpdated'
    /// </summary>
    public static string AccessPortalLastUpdated = "AccessPortalLastUpdated";
    /// <summary>
    /// Returns 'HardwareAddressLastUpdated'
    /// </summary>
    public static string HardwareAddressLastUpdated = "HardwareAddressLastUpdated";
    /// <summary>
    /// Returns 'PassbackIntoAreaLastUpdated'
    /// </summary>
    public static string PassbackIntoAreaLastUpdated = "PassbackIntoAreaLastUpdated";
    /// <summary>
    /// Returns 'PassbackFromAreaLastUpdated'
    /// </summary>
    public static string PassbackFromAreaLastUpdated = "PassbackFromAreaLastUpdated";
    /// <summary>
    /// Returns 'FreeAccessSchLastUpdated'
    /// </summary>
    public static string FreeAccessSchLastUpdated = "FreeAccessSchLastUpdated";
    /// <summary>
    /// Returns 'CrisisFreeAccessSchLastUpdated'
    /// </summary>
    public static string CrisisFreeAccessSchLastUpdated = "CrisisFreeAccessSchLastUpdated";
    /// <summary>
    /// Returns 'PinRequiredSchLastUpdated'
    /// </summary>
    public static string PinRequiredSchLastUpdated = "PinRequiredSchLastUpdated";
    /// <summary>
    /// Returns 'DisableForcedOpenSchLastUpdated'
    /// </summary>
    public static string DisableForcedOpenSchLastUpdated = "DisableForcedOpenSchLastUpdated";
    /// <summary>
    /// Returns 'DisableOpenTooLongSchLastUpdated'
    /// </summary>
    public static string DisableOpenTooLongSchLastUpdated = "DisableOpenTooLongSchLastUpdated";
    /// <summary>
    /// Returns 'AuxOutputSchLastUpdated'
    /// </summary>
    public static string AuxOutputSchLastUpdated = "AuxOutputSchLastUpdated";
    /// <summary>
    /// Returns 'AuxOutputLastUpdated'
    /// </summary>
    public static string AuxOutputLastUpdated = "AuxOutputLastUpdated";
    /// <summary>
    /// Returns 'Relay2SchLastUpdated'
    /// </summary>
    public static string Relay2SchLastUpdated = "Relay2SchLastUpdated";
    /// <summary>
    /// Returns 'ForcedOpenAlertLastUpdated'
    /// </summary>
    public static string ForcedOpenAlertLastUpdated = "ForcedOpenAlertLastUpdated";
    /// <summary>
    /// Returns 'OpenTooLongAlertLastUpdated'
    /// </summary>
    public static string OpenTooLongAlertLastUpdated = "OpenTooLongAlertLastUpdated";
    /// <summary>
    /// Returns 'InvalidAccessAttemptAlertLastUpdated'
    /// </summary>
    public static string InvalidAccessAttemptAlertLastUpdated = "InvalidAccessAttemptAlertLastUpdated";
    /// <summary>
    /// Returns 'PassbackViolationAlertLastUpdated'
    /// </summary>
    public static string PassbackViolationAlertLastUpdated = "PassbackViolationAlertLastUpdated";
    /// <summary>
    /// Returns 'DuressAlertLastUpdated'
    /// </summary>
    public static string DuressAlertLastUpdated = "DuressAlertLastUpdated";
    /// <summary>
    /// Returns 'MissedHeartbeatAlertLastUpdated'
    /// </summary>
    public static string MissedHeartbeatAlertLastUpdated = "MissedHeartbeatAlertLastUpdated";
    /// <summary>
    /// Returns 'AccessGrantedAlertLastUpdated'
    /// </summary>
    public static string AccessGrantedAlertLastUpdated = "AccessGrantedAlertLastUpdated";
    /// <summary>
    /// Returns 'DoorGroupAlertLastUpdated'
    /// </summary>
    public static string DoorGroupAlertLastUpdated = "DoorGroupAlertLastUpdated";
    /// <summary>
    /// Returns 'UnlockedByIogLastUpdated'
    /// </summary>
    public static string UnlockedByIogLastUpdated = "UnlockedByIogLastUpdated";
    /// <summary>
    /// Returns 'LockedByIogLastUpdated'
    /// </summary>
    public static string LockedByIogLastUpdated = "LockedByIogLastUpdated";
    /// <summary>
    /// Returns 'DisarmIog1LastUpdated'
    /// </summary>
    public static string DisarmIog1LastUpdated = "DisarmIog1LastUpdated";
    /// <summary>
    /// Returns 'DisarmIog2LastUpdated'
    /// </summary>
    public static string DisarmIog2LastUpdated = "DisarmIog2LastUpdated";
    /// <summary>
    /// Returns 'DisarmIog3LastUpdated'
    /// </summary>
    public static string DisarmIog3LastUpdated = "DisarmIog3LastUpdated";
    /// <summary>
    /// Returns 'DisarmIog4LastUpdated'
    /// </summary>
    public static string DisarmIog4LastUpdated = "DisarmIog4LastUpdated";
    /// <summary>
    /// Returns 'CpuNumber'
    /// </summary>
    public static string CpuNumber = "CpuNumber";
    /// <summary>
    /// Returns 'CpuUid'
    /// </summary>
    public static string CpuUid = "CpuUid";
    /// <summary>
    /// Returns 'ServerAddress'
    /// </summary>
    public static string ServerAddress = "ServerAddress";
    /// <summary>
    /// Returns 'IsConnected'
    /// </summary>
    public static string IsConnected = "IsConnected";
    }
    #endregion
  }
}
