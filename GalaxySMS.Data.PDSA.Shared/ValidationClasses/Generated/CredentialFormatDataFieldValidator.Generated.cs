using System;

using PDSA.Common;
using PDSA.Validation;

using GalaxySMS.EntityLayer;

namespace GalaxySMS.ValidationLayer
{
  /// <summary>
  /// Used to validate all properties of the CredentialFormatDataFieldPDSA class.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public partial class CredentialFormatDataFieldPDSAValidator : PDSAValidatorBase
  {
    #region Public Entity Property
    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    private CredentialFormatDataFieldPDSA _Entity = null;

    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    public new CredentialFormatDataFieldPDSA Entity
    {
      get { return _Entity; }
      set
      {
        _Entity = value;
        base.Entity = value;
      }
    }
    #endregion
    
    #region Clone Entity Class
    /// <summary>
    /// Clones the current CredentialFormatDataFieldPDSA
    /// </summary>
    /// <returns>A cloned CredentialFormatDataFieldPDSA object</returns>
    public CredentialFormatDataFieldPDSA CloneEntity()
    {
      return CloneEntity(this.Entity);
    }
    
    /// <summary>
    /// Clones the passed in CredentialFormatDataFieldPDSA
    /// </summary>
    /// <param name="entityToClone">The CredentialFormatDataFieldPDSA entity to clone</param>
    /// <returns>A cloned CredentialFormatDataFieldPDSA object</returns>
    public CredentialFormatDataFieldPDSA CloneEntity(CredentialFormatDataFieldPDSA entityToClone)
    {
      CredentialFormatDataFieldPDSA newEntity = new CredentialFormatDataFieldPDSA();

      newEntity.CredentialFormatDataFieldUid = entityToClone.CredentialFormatDataFieldUid;
      newEntity.CredentialFormatUid = entityToClone.CredentialFormatUid;
      newEntity.DisplayResourceKey = entityToClone.DisplayResourceKey;
      newEntity.DescriptionResourceKey = entityToClone.DescriptionResourceKey;
      newEntity.FieldName = entityToClone.FieldName;
      newEntity.Display = entityToClone.Display;
      newEntity.Description = entityToClone.Description;
      newEntity.StartsAt = entityToClone.StartsAt;
      newEntity.BitLength = entityToClone.BitLength;
      newEntity.MinimumValue = entityToClone.MinimumValue;
      newEntity.MaximumValue = entityToClone.MaximumValue;
      newEntity.FieldNumber = entityToClone.FieldNumber;
      newEntity.IsReadOnly = entityToClone.IsReadOnly;
      newEntity.IsVisible = entityToClone.IsVisible;
      newEntity.DefaultValue = entityToClone.DefaultValue;
      newEntity.InsertName = entityToClone.InsertName;
      newEntity.InsertDate = entityToClone.InsertDate;
      newEntity.UpdateName = entityToClone.UpdateName;
      newEntity.UpdateDate = entityToClone.UpdateDate;
      newEntity.ConcurrencyValue = entityToClone.ConcurrencyValue;

      return newEntity;
    }
    #endregion

    #region CreateProperties Method
    /// <summary>
    /// Creates the collection of PDSAProperty objects. These are used to control validation and null handling.
    /// </summary>
    /// <returns>A collection of PDSAProperty objects</returns>
    public override PDSAProperties CreateProperties()
    {
      PDSAProperties props = new PDSAProperties();
      
      props.Add(PDSAProperty.Create(CredentialFormatDataFieldPDSAValidator.ColumnNames.CredentialFormatDataFieldUid, GetResourceMessage("GCS_CredentialFormatDataFieldPDSA_CredentialFormatDataFieldUid_Header", "Credential Format Data Field Uid"), true, typeof(Guid), -1, GetResourceMessage("GCS_CredentialFormatDataFieldPDSA_CredentialFormatDataFieldUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(CredentialFormatDataFieldPDSAValidator.ColumnNames.CredentialFormatUid, GetResourceMessage("GCS_CredentialFormatDataFieldPDSA_CredentialFormatUid_Header", "Credential Format Uid"), true, typeof(Guid), -1, GetResourceMessage("GCS_CredentialFormatDataFieldPDSA_CredentialFormatUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(CredentialFormatDataFieldPDSAValidator.ColumnNames.DisplayResourceKey, GetResourceMessage("GCS_CredentialFormatDataFieldPDSA_DisplayResourceKey_Header", "Display Resource Key"), false, typeof(Guid), -1, GetResourceMessage("GCS_CredentialFormatDataFieldPDSA_DisplayResourceKey_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(CredentialFormatDataFieldPDSAValidator.ColumnNames.DescriptionResourceKey, GetResourceMessage("GCS_CredentialFormatDataFieldPDSA_DescriptionResourceKey_Header", "Description Resource Key"), false, typeof(Guid), -1, GetResourceMessage("GCS_CredentialFormatDataFieldPDSA_DescriptionResourceKey_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(CredentialFormatDataFieldPDSAValidator.ColumnNames.FieldName, GetResourceMessage("GCS_CredentialFormatDataFieldPDSA_FieldName_Header", "Field Name"), true, typeof(string), 65, GetResourceMessage("GCS_CredentialFormatDataFieldPDSA_FieldName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(CredentialFormatDataFieldPDSAValidator.ColumnNames.Display, GetResourceMessage("GCS_CredentialFormatDataFieldPDSA_Display_Header", "Display"), true, typeof(string), 65, GetResourceMessage("GCS_CredentialFormatDataFieldPDSA_Display_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(CredentialFormatDataFieldPDSAValidator.ColumnNames.Description, GetResourceMessage("GCS_CredentialFormatDataFieldPDSA_Description_Header", "Description"), true, typeof(string), 1000, GetResourceMessage("GCS_CredentialFormatDataFieldPDSA_Description_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(CredentialFormatDataFieldPDSAValidator.ColumnNames.StartsAt, GetResourceMessage("GCS_CredentialFormatDataFieldPDSA_StartsAt_Header", "Starts At"), true, typeof(short), 5, GetResourceMessage("GCS_CredentialFormatDataFieldPDSA_StartsAt_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(CredentialFormatDataFieldPDSAValidator.ColumnNames.BitLength, GetResourceMessage("GCS_CredentialFormatDataFieldPDSA_BitLength_Header", "Bit Length"), true, typeof(short), 5, GetResourceMessage("GCS_CredentialFormatDataFieldPDSA_BitLength_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(CredentialFormatDataFieldPDSAValidator.ColumnNames.MinimumValue, GetResourceMessage("GCS_CredentialFormatDataFieldPDSA_MinimumValue_Header", "Minimum Value"), true, typeof(ulong), 10, GetResourceMessage("GCS_CredentialFormatDataFieldPDSA_MinimumValue_Req", PDSAValidationMessages.MustBeFilledIn), ulong.MinValue, ulong.MaxValue, 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(CredentialFormatDataFieldPDSAValidator.ColumnNames.MaximumValue, GetResourceMessage("GCS_CredentialFormatDataFieldPDSA_MaximumValue_Header", "Maximum Value"), true, typeof(ulong), 10, GetResourceMessage("GCS_CredentialFormatDataFieldPDSA_MaximumValue_Req", PDSAValidationMessages.MustBeFilledIn), ulong.MinValue, ulong.MaxValue, 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(CredentialFormatDataFieldPDSAValidator.ColumnNames.FieldNumber, GetResourceMessage("GCS_CredentialFormatDataFieldPDSA_FieldNumber_Header", "Field Number"), true, typeof(short), 5, GetResourceMessage("GCS_CredentialFormatDataFieldPDSA_FieldNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(CredentialFormatDataFieldPDSAValidator.ColumnNames.IsReadOnly, GetResourceMessage("GCS_CredentialFormatDataFieldPDSA_IsReadOnly_Header", "Is Read Only"), true, typeof(bool), -1, GetResourceMessage("GCS_CredentialFormatDataFieldPDSA_IsReadOnly_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(CredentialFormatDataFieldPDSAValidator.ColumnNames.IsVisible, GetResourceMessage("GCS_CredentialFormatDataFieldPDSA_IsVisible_Header", "Is Visible"), true, typeof(bool), -1, GetResourceMessage("GCS_CredentialFormatDataFieldPDSA_IsVisible_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(CredentialFormatDataFieldPDSAValidator.ColumnNames.DefaultValue, GetResourceMessage("GCS_CredentialFormatDataFieldPDSA_DefaultValue_Header", "Default Value"), true, typeof(ulong), 10, GetResourceMessage("GCS_CredentialFormatDataFieldPDSA_DefaultValue_Req", PDSAValidationMessages.MustBeFilledIn), ulong.MinValue, ulong.MaxValue, 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(CredentialFormatDataFieldPDSAValidator.ColumnNames.InsertName, GetResourceMessage("GCS_CredentialFormatDataFieldPDSA_InsertName_Header", "Insert Name"), true, typeof(string), 50, GetResourceMessage("GCS_CredentialFormatDataFieldPDSA_InsertName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(CredentialFormatDataFieldPDSAValidator.ColumnNames.InsertDate, GetResourceMessage("GCS_CredentialFormatDataFieldPDSA_InsertDate_Header", "Insert Date"), true, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_CredentialFormatDataFieldPDSA_InsertDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(CredentialFormatDataFieldPDSAValidator.ColumnNames.UpdateName, GetResourceMessage("GCS_CredentialFormatDataFieldPDSA_UpdateName_Header", "Update Name"), true, typeof(string), 50, GetResourceMessage("GCS_CredentialFormatDataFieldPDSA_UpdateName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(CredentialFormatDataFieldPDSAValidator.ColumnNames.UpdateDate, GetResourceMessage("GCS_CredentialFormatDataFieldPDSA_UpdateDate_Header", "Update Date"), true, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_CredentialFormatDataFieldPDSA_UpdateDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(CredentialFormatDataFieldPDSAValidator.ColumnNames.ConcurrencyValue, GetResourceMessage("GCS_CredentialFormatDataFieldPDSA_ConcurrencyValue_Header", "Concurrency Value"), true, typeof(short), 5, GetResourceMessage("GCS_CredentialFormatDataFieldPDSA_ConcurrencyValue_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      
      return props;
    }
    #endregion

    #region Initialize Entity
    /// <summary>
    /// This method is called from the CreateNewEntity Method. All the properties for the Entity are set to default values here by the code generator.
    /// </summary>
    protected override void InitializeEntity()
    {
      Entity.CredentialFormatDataFieldUid = Guid.Empty;
      Entity.CredentialFormatUid = Guid.Empty;
      Entity.DisplayResourceKey = Guid.Empty;
      Entity.DescriptionResourceKey = Guid.Empty;
      Entity.FieldName = string.Empty;
      Entity.Display = string.Empty;
      Entity.Description = string.Empty;
      Entity.StartsAt = 0;
      Entity.BitLength = 0;
      Entity.MinimumValue = 0;
      Entity.MaximumValue = 0;
      Entity.FieldNumber = 0;
      Entity.IsReadOnly = false;
      Entity.IsVisible = false;
      Entity.DefaultValue = 0;
      Entity.InsertName = string.Empty;
      Entity.InsertDate = DateTimeOffset.Now;
      Entity.UpdateName = string.Empty;
      Entity.UpdateDate = DateTimeOffset.Now;
      Entity.ConcurrencyValue = 0;

      Entity.ResetAllIsDirtyProperties();
    }
    #endregion
    
    #region InitProperties Method
    /// <summary>
    /// Called by the constructor to create the PDSAProperties collection of all properties that will be validated.
    /// </summary>
    protected override void InitProperties()
    {
      // Set the Properties collection to the collection of Entity Properties
      Properties = CreateProperties();
    }
    #endregion

    #region EntityDataToProperties Method
    /// <summary>
    /// Moves the Entity class data into the Properties collection.
    /// </summary>
    protected override void EntityDataToProperties()
    {
      if (Properties == null)
        InitProperties();
      
      if(!Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.CredentialFormatDataFieldUid).SetAsNull)
        Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.CredentialFormatDataFieldUid).Value = Entity.CredentialFormatDataFieldUid;
      if(!Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.CredentialFormatUid).SetAsNull)
        Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.CredentialFormatUid).Value = Entity.CredentialFormatUid;
      if(!Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.DisplayResourceKey).SetAsNull)
        Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.DisplayResourceKey).Value = Entity.DisplayResourceKey;
      if(!Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.DescriptionResourceKey).SetAsNull)
        Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.DescriptionResourceKey).Value = Entity.DescriptionResourceKey;
      if(!Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.FieldName).SetAsNull)
        Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.FieldName).Value = Entity.FieldName;
      if(!Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.Display).SetAsNull)
        Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.Display).Value = Entity.Display;
      if(!Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.Description).SetAsNull)
        Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.Description).Value = Entity.Description;
      if(!Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.StartsAt).SetAsNull)
        Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.StartsAt).Value = Entity.StartsAt;
      if(!Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.BitLength).SetAsNull)
        Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.BitLength).Value = Entity.BitLength;
      if(!Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.MinimumValue).SetAsNull)
        Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.MinimumValue).Value = Entity.MinimumValue;
      if(!Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.MaximumValue).SetAsNull)
        Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.MaximumValue).Value = Entity.MaximumValue;
      if(!Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.FieldNumber).SetAsNull)
        Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.FieldNumber).Value = Entity.FieldNumber;
      if(!Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.IsReadOnly).SetAsNull)
        Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.IsReadOnly).Value = Entity.IsReadOnly;
      if(!Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.IsVisible).SetAsNull)
        Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.IsVisible).Value = Entity.IsVisible;
      if(!Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.DefaultValue).SetAsNull)
        Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.DefaultValue).Value = Entity.DefaultValue;
      if(!Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.InsertName).SetAsNull)
        Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.InsertName).Value = Entity.InsertName;
      if(!Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.InsertDate).SetAsNull)
        Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.InsertDate).Value = Entity.InsertDate;
      if(!Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.UpdateName).SetAsNull)
        Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.UpdateName).Value = Entity.UpdateName;
      if(!Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.UpdateDate).SetAsNull)
        Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.UpdateDate).Value = Entity.UpdateDate;
      if(!Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.ConcurrencyValue).SetAsNull)
        Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.ConcurrencyValue).Value = Entity.ConcurrencyValue;
    }

    /// <summary>
    /// Moves the Properties collection objects into the Entity properties
    /// </summary>
    protected override void PropertiesToEntityData()
    {
      if (Properties == null)
        InitProperties();

      if(Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.CredentialFormatDataFieldUid).IsNull == false)
        Entity.CredentialFormatDataFieldUid = Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.CredentialFormatDataFieldUid).GetAsGuid();
      if(Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.CredentialFormatUid).IsNull == false)
        Entity.CredentialFormatUid = Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.CredentialFormatUid).GetAsGuid();
      if(Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.DisplayResourceKey).IsNull == false)
        Entity.DisplayResourceKey = Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.DisplayResourceKey).GetAsGuid();
      if(Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.DescriptionResourceKey).IsNull == false)
        Entity.DescriptionResourceKey = Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.DescriptionResourceKey).GetAsGuid();
      if(Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.FieldName).IsNull == false)
        Entity.FieldName = Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.FieldName).GetAsString();
      if(Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.Display).IsNull == false)
        Entity.Display = Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.Display).GetAsString();
      if(Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.Description).IsNull == false)
        Entity.Description = Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.Description).GetAsString();
      if(Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.StartsAt).IsNull == false)
        Entity.StartsAt = Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.StartsAt).GetAsShort();
      if(Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.BitLength).IsNull == false)
        Entity.BitLength = Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.BitLength).GetAsShort();
      if(Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.MinimumValue).IsNull == false)
        Entity.MinimumValue = (ulong)Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.MinimumValue).GetAsLong();
      if(Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.MaximumValue).IsNull == false)
        Entity.MaximumValue = (ulong)Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.MaximumValue).GetAsLong();
      if(Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.FieldNumber).IsNull == false)
        Entity.FieldNumber = Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.FieldNumber).GetAsShort();
      if(Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.IsReadOnly).IsNull == false)
        Entity.IsReadOnly = Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.IsReadOnly).GetAsBool();
      if(Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.IsVisible).IsNull == false)
        Entity.IsVisible = Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.IsVisible).GetAsBool();
      if(Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.DefaultValue).IsNull == false)
        Entity.DefaultValue = (ulong)Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.DefaultValue).GetAsLong();
      if(Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.InsertName).IsNull == false)
        Entity.InsertName = Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.InsertName).GetAsString();
      if(Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.InsertDate).IsNull == false)
        Entity.InsertDate = Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.InsertDate).GetAsDateTimeOffset();
      if(Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.UpdateName).IsNull == false)
        Entity.UpdateName = Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.UpdateName).GetAsString();
      if(Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.UpdateDate).IsNull == false)
        Entity.UpdateDate = Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.UpdateDate).GetAsDateTimeOffset();
      if(Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.ConcurrencyValue).IsNull == false)
        Entity.ConcurrencyValue = Properties.GetByName(CredentialFormatDataFieldPDSAValidator.ColumnNames.ConcurrencyValue).GetAsShort();
    }
    #endregion
    
    #region ColumnNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the CredentialFormatDataFieldPDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ColumnNames
    {
    /// <summary>
    /// Returns 'CredentialFormatDataFieldUid'
    /// </summary>
    public static string CredentialFormatDataFieldUid = "CredentialFormatDataFieldUid";
    /// <summary>
    /// Returns 'CredentialFormatUid'
    /// </summary>
    public static string CredentialFormatUid = "CredentialFormatUid";
    /// <summary>
    /// Returns 'DisplayResourceKey'
    /// </summary>
    public static string DisplayResourceKey = "DisplayResourceKey";
    /// <summary>
    /// Returns 'DescriptionResourceKey'
    /// </summary>
    public static string DescriptionResourceKey = "DescriptionResourceKey";
    /// <summary>
    /// Returns 'FieldName'
    /// </summary>
    public static string FieldName = "FieldName";
    /// <summary>
    /// Returns 'Display'
    /// </summary>
    public static string Display = "Display";
    /// <summary>
    /// Returns 'Description'
    /// </summary>
    public static string Description = "Description";
    /// <summary>
    /// Returns 'StartsAt'
    /// </summary>
    public static string StartsAt = "StartsAt";
    /// <summary>
    /// Returns 'BitLength'
    /// </summary>
    public static string BitLength = "BitLength";
    /// <summary>
    /// Returns 'MinimumValue'
    /// </summary>
    public static string MinimumValue = "MinimumValue";
    /// <summary>
    /// Returns 'MaximumValue'
    /// </summary>
    public static string MaximumValue = "MaximumValue";
    /// <summary>
    /// Returns 'FieldNumber'
    /// </summary>
    public static string FieldNumber = "FieldNumber";
    /// <summary>
    /// Returns 'IsReadOnly'
    /// </summary>
    public static string IsReadOnly = "IsReadOnly";
    /// <summary>
    /// Returns 'IsVisible'
    /// </summary>
    public static string IsVisible = "IsVisible";
    /// <summary>
    /// Returns 'DefaultValue'
    /// </summary>
    public static string DefaultValue = "DefaultValue";
    /// <summary>
    /// Returns 'InsertName'
    /// </summary>
    public static string InsertName = "InsertName";
    /// <summary>
    /// Returns 'InsertDate'
    /// </summary>
    public static string InsertDate = "InsertDate";
    /// <summary>
    /// Returns 'UpdateName'
    /// </summary>
    public static string UpdateName = "UpdateName";
    /// <summary>
    /// Returns 'UpdateDate'
    /// </summary>
    public static string UpdateDate = "UpdateDate";
    /// <summary>
    /// Returns 'ConcurrencyValue'
    /// </summary>
    public static string ConcurrencyValue = "ConcurrencyValue";
    }
    #endregion
  }
}
