using System;

using PDSA.Common;
using PDSA.Validation;

using GalaxySMS.EntityLayer;

namespace GalaxySMS.ValidationLayer
{
  /// <summary>
  /// Used to validate all properties of the AssaDayPeriodPDSA class.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public partial class AssaDayPeriodPDSAValidator : PDSAValidatorBase
  {
    #region Public Entity Property
    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    private AssaDayPeriodPDSA _Entity = null;

    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    public new AssaDayPeriodPDSA Entity
    {
      get { return _Entity; }
      set
      {
        _Entity = value;
        base.Entity = value;
      }
    }
    #endregion
    
    #region Clone Entity Class
    /// <summary>
    /// Clones the current AssaDayPeriodPDSA
    /// </summary>
    /// <returns>A cloned AssaDayPeriodPDSA object</returns>
    public AssaDayPeriodPDSA CloneEntity()
    {
      return CloneEntity(this.Entity);
    }
    
    /// <summary>
    /// Clones the passed in AssaDayPeriodPDSA
    /// </summary>
    /// <param name="entityToClone">The AssaDayPeriodPDSA entity to clone</param>
    /// <returns>A cloned AssaDayPeriodPDSA object</returns>
    public AssaDayPeriodPDSA CloneEntity(AssaDayPeriodPDSA entityToClone)
    {
      AssaDayPeriodPDSA newEntity = new AssaDayPeriodPDSA();

      newEntity.AssaDayPeriodUid = entityToClone.AssaDayPeriodUid;
      newEntity.EntityId = entityToClone.EntityId;
      newEntity.Name = entityToClone.Name;
      newEntity.Sunday = entityToClone.Sunday;
      newEntity.Monday = entityToClone.Monday;
      newEntity.Tuesday = entityToClone.Tuesday;
      newEntity.Wednesday = entityToClone.Wednesday;
      newEntity.Thursday = entityToClone.Thursday;
      newEntity.Friday = entityToClone.Friday;
      newEntity.Saturday = entityToClone.Saturday;
      newEntity.InsertName = entityToClone.InsertName;
      newEntity.InsertDate = entityToClone.InsertDate;
      newEntity.UpdateName = entityToClone.UpdateName;
      newEntity.UpdateDate = entityToClone.UpdateDate;
      newEntity.ConcurrencyValue = entityToClone.ConcurrencyValue;
      newEntity.AssaDsrDayPeriodId = entityToClone.AssaDsrDayPeriodId;

      return newEntity;
    }
    #endregion

    #region CreateProperties Method
    /// <summary>
    /// Creates the collection of PDSAProperty objects. These are used to control validation and null handling.
    /// </summary>
    /// <returns>A collection of PDSAProperty objects</returns>
    public override PDSAProperties CreateProperties()
    {
      PDSAProperties props = new PDSAProperties();
      
      props.Add(PDSAProperty.Create(AssaDayPeriodPDSAValidator.ColumnNames.AssaDayPeriodUid, GetResourceMessage("GCS_AssaDayPeriodPDSA_AssaDayPeriodUid_Header", "Assa Day Period Uid"), true, typeof(Guid), -1, GetResourceMessage("GCS_AssaDayPeriodPDSA_AssaDayPeriodUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.NewGuid(), @"", ""));
      props.Add(PDSAProperty.Create(AssaDayPeriodPDSAValidator.ColumnNames.EntityId, GetResourceMessage("GCS_AssaDayPeriodPDSA_EntityId_Header", "Entity Id"), true, typeof(Guid), -1, GetResourceMessage("GCS_AssaDayPeriodPDSA_EntityId_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.NewGuid(), @"", ""));
      props.Add(PDSAProperty.Create(AssaDayPeriodPDSAValidator.ColumnNames.Name, GetResourceMessage("GCS_AssaDayPeriodPDSA_Name_Header", "Name"), true, typeof(string), 65, GetResourceMessage("GCS_AssaDayPeriodPDSA_Name_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AssaDayPeriodPDSAValidator.ColumnNames.Sunday, GetResourceMessage("GCS_AssaDayPeriodPDSA_Sunday_Header", "Sunday"), true, typeof(bool?), -1, GetResourceMessage("GCS_AssaDayPeriodPDSA_Sunday_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(AssaDayPeriodPDSAValidator.ColumnNames.Monday, GetResourceMessage("GCS_AssaDayPeriodPDSA_Monday_Header", "Monday"), true, typeof(bool?), -1, GetResourceMessage("GCS_AssaDayPeriodPDSA_Monday_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(AssaDayPeriodPDSAValidator.ColumnNames.Tuesday, GetResourceMessage("GCS_AssaDayPeriodPDSA_Tuesday_Header", "Tuesday"), true, typeof(bool?), -1, GetResourceMessage("GCS_AssaDayPeriodPDSA_Tuesday_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(AssaDayPeriodPDSAValidator.ColumnNames.Wednesday, GetResourceMessage("GCS_AssaDayPeriodPDSA_Wednesday_Header", "Wednesday"), true, typeof(bool?), -1, GetResourceMessage("GCS_AssaDayPeriodPDSA_Wednesday_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(AssaDayPeriodPDSAValidator.ColumnNames.Thursday, GetResourceMessage("GCS_AssaDayPeriodPDSA_Thursday_Header", "Thursday"), true, typeof(bool?), -1, GetResourceMessage("GCS_AssaDayPeriodPDSA_Thursday_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(AssaDayPeriodPDSAValidator.ColumnNames.Friday, GetResourceMessage("GCS_AssaDayPeriodPDSA_Friday_Header", "Friday"), true, typeof(bool?), -1, GetResourceMessage("GCS_AssaDayPeriodPDSA_Friday_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(AssaDayPeriodPDSAValidator.ColumnNames.Saturday, GetResourceMessage("GCS_AssaDayPeriodPDSA_Saturday_Header", "Saturday"), true, typeof(bool?), -1, GetResourceMessage("GCS_AssaDayPeriodPDSA_Saturday_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(AssaDayPeriodPDSAValidator.ColumnNames.InsertName, GetResourceMessage("GCS_AssaDayPeriodPDSA_InsertName_Header", "Insert Name"), true, typeof(string), 50, GetResourceMessage("GCS_AssaDayPeriodPDSA_InsertName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AssaDayPeriodPDSAValidator.ColumnNames.InsertDate, GetResourceMessage("GCS_AssaDayPeriodPDSA_InsertDate_Header", "Insert Date"), true, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_AssaDayPeriodPDSA_InsertDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(AssaDayPeriodPDSAValidator.ColumnNames.UpdateName, GetResourceMessage("GCS_AssaDayPeriodPDSA_UpdateName_Header", "Update Name"), true, typeof(string), 50, GetResourceMessage("GCS_AssaDayPeriodPDSA_UpdateName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AssaDayPeriodPDSAValidator.ColumnNames.UpdateDate, GetResourceMessage("GCS_AssaDayPeriodPDSA_UpdateDate_Header", "Update Date"), true, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_AssaDayPeriodPDSA_UpdateDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(AssaDayPeriodPDSAValidator.ColumnNames.ConcurrencyValue, GetResourceMessage("GCS_AssaDayPeriodPDSA_ConcurrencyValue_Header", "Concurrency Value"), true, typeof(short), 5, GetResourceMessage("GCS_AssaDayPeriodPDSA_ConcurrencyValue_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AssaDayPeriodPDSAValidator.ColumnNames.AssaDsrDayPeriodId, GetResourceMessage("GCS_AssaDayPeriodPDSA_AssaDsrDayPeriodId_Header", "Assa Dsr Day Period Id"), true, typeof(string), 100, GetResourceMessage("GCS_AssaDayPeriodPDSA_AssaDsrDayPeriodId_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      
      return props;
    }
    #endregion

    #region Initialize Entity
    /// <summary>
    /// This method is called from the CreateNewEntity Method. All the properties for the Entity are set to default values here by the code generator.
    /// </summary>
    protected override void InitializeEntity()
    {
      Entity.AssaDayPeriodUid = Guid.NewGuid();
      Entity.EntityId = Guid.NewGuid();
      Entity.Name = string.Empty;
      Entity.Sunday = false;
      Entity.Monday = false;
      Entity.Tuesday = false;
      Entity.Wednesday = false;
      Entity.Thursday = false;
      Entity.Friday = false;
      Entity.Saturday = false;
      Entity.InsertName = string.Empty;
      Entity.InsertDate = DateTimeOffset.Now;
      Entity.UpdateName = string.Empty;
      Entity.UpdateDate = DateTimeOffset.Now;
      Entity.ConcurrencyValue = 0;
      Entity.AssaDsrDayPeriodId = string.Empty;

      Entity.ResetAllIsDirtyProperties();
    }
    #endregion
    
    #region InitProperties Method
    /// <summary>
    /// Called by the constructor to create the PDSAProperties collection of all properties that will be validated.
    /// </summary>
    protected override void InitProperties()
    {
      // Set the Properties collection to the collection of Entity Properties
      Properties = CreateProperties();
    }
    #endregion

    #region EntityDataToProperties Method
    /// <summary>
    /// Moves the Entity class data into the Properties collection.
    /// </summary>
    protected override void EntityDataToProperties()
    {
      if (Properties == null)
        InitProperties();
      
      if(!Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.AssaDayPeriodUid).SetAsNull)
        Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.AssaDayPeriodUid).Value = Entity.AssaDayPeriodUid;
      if(!Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.EntityId).SetAsNull)
        Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.EntityId).Value = Entity.EntityId;
      if(!Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.Name).SetAsNull)
        Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.Name).Value = Entity.Name;
      if(!Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.Sunday).SetAsNull)
        Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.Sunday).Value = Entity.Sunday;
      if(!Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.Monday).SetAsNull)
        Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.Monday).Value = Entity.Monday;
      if(!Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.Tuesday).SetAsNull)
        Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.Tuesday).Value = Entity.Tuesday;
      if(!Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.Wednesday).SetAsNull)
        Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.Wednesday).Value = Entity.Wednesday;
      if(!Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.Thursday).SetAsNull)
        Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.Thursday).Value = Entity.Thursday;
      if(!Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.Friday).SetAsNull)
        Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.Friday).Value = Entity.Friday;
      if(!Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.Saturday).SetAsNull)
        Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.Saturday).Value = Entity.Saturday;
      if(!Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.InsertName).SetAsNull)
        Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.InsertName).Value = Entity.InsertName;
      if(!Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.InsertDate).SetAsNull)
        Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.InsertDate).Value = Entity.InsertDate;
      if(!Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.UpdateName).SetAsNull)
        Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.UpdateName).Value = Entity.UpdateName;
      if(!Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.UpdateDate).SetAsNull)
        Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.UpdateDate).Value = Entity.UpdateDate;
      if(!Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.ConcurrencyValue).SetAsNull)
        Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.ConcurrencyValue).Value = Entity.ConcurrencyValue;
      if(!Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.AssaDsrDayPeriodId).SetAsNull)
        Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.AssaDsrDayPeriodId).Value = Entity.AssaDsrDayPeriodId;
    }

    /// <summary>
    /// Moves the Properties collection objects into the Entity properties
    /// </summary>
    protected override void PropertiesToEntityData()
    {
      if (Properties == null)
        InitProperties();

      if(Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.AssaDayPeriodUid).IsNull == false)
        Entity.AssaDayPeriodUid = Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.AssaDayPeriodUid).GetAsGuid();
      if(Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.EntityId).IsNull == false)
        Entity.EntityId = Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.EntityId).GetAsGuid();
      if(Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.Name).IsNull == false)
        Entity.Name = Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.Name).GetAsString();
      if(Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.Sunday).IsNull == false)
        Entity.Sunday = Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.Sunday).GetValueAsBoolean();
      if(Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.Monday).IsNull == false)
        Entity.Monday = Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.Monday).GetValueAsBoolean();
      if(Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.Tuesday).IsNull == false)
        Entity.Tuesday = Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.Tuesday).GetValueAsBoolean();
      if(Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.Wednesday).IsNull == false)
        Entity.Wednesday = Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.Wednesday).GetValueAsBoolean();
      if(Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.Thursday).IsNull == false)
        Entity.Thursday = Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.Thursday).GetValueAsBoolean();
      if(Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.Friday).IsNull == false)
        Entity.Friday = Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.Friday).GetValueAsBoolean();
      if(Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.Saturday).IsNull == false)
        Entity.Saturday = Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.Saturday).GetValueAsBoolean();
      if(Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.InsertName).IsNull == false)
        Entity.InsertName = Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.InsertName).GetAsString();
      if(Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.InsertDate).IsNull == false)
        Entity.InsertDate = Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.InsertDate).GetAsDateTimeOffset();
      if(Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.UpdateName).IsNull == false)
        Entity.UpdateName = Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.UpdateName).GetAsString();
      if(Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.UpdateDate).IsNull == false)
        Entity.UpdateDate = Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.UpdateDate).GetAsDateTimeOffset();
      if(Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.ConcurrencyValue).IsNull == false)
        Entity.ConcurrencyValue = Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.ConcurrencyValue).GetAsShort();
      if(Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.AssaDsrDayPeriodId).IsNull == false)
        Entity.AssaDsrDayPeriodId = Properties.GetByName(AssaDayPeriodPDSAValidator.ColumnNames.AssaDsrDayPeriodId).GetAsString();
    }
    #endregion
    
    #region ColumnNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the AssaDayPeriodPDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ColumnNames
    {
    /// <summary>
    /// Returns 'AssaDayPeriodUid'
    /// </summary>
    public static string AssaDayPeriodUid = "AssaDayPeriodUid";
    /// <summary>
    /// Returns 'EntityId'
    /// </summary>
    public static string EntityId = "EntityId";
    /// <summary>
    /// Returns 'Name'
    /// </summary>
    public static string Name = "Name";
    /// <summary>
    /// Returns 'Sunday'
    /// </summary>
    public static string Sunday = "Sunday";
    /// <summary>
    /// Returns 'Monday'
    /// </summary>
    public static string Monday = "Monday";
    /// <summary>
    /// Returns 'Tuesday'
    /// </summary>
    public static string Tuesday = "Tuesday";
    /// <summary>
    /// Returns 'Wednesday'
    /// </summary>
    public static string Wednesday = "Wednesday";
    /// <summary>
    /// Returns 'Thursday'
    /// </summary>
    public static string Thursday = "Thursday";
    /// <summary>
    /// Returns 'Friday'
    /// </summary>
    public static string Friday = "Friday";
    /// <summary>
    /// Returns 'Saturday'
    /// </summary>
    public static string Saturday = "Saturday";
    /// <summary>
    /// Returns 'InsertName'
    /// </summary>
    public static string InsertName = "InsertName";
    /// <summary>
    /// Returns 'InsertDate'
    /// </summary>
    public static string InsertDate = "InsertDate";
    /// <summary>
    /// Returns 'UpdateName'
    /// </summary>
    public static string UpdateName = "UpdateName";
    /// <summary>
    /// Returns 'UpdateDate'
    /// </summary>
    public static string UpdateDate = "UpdateDate";
    /// <summary>
    /// Returns 'ConcurrencyValue'
    /// </summary>
    public static string ConcurrencyValue = "ConcurrencyValue";
    /// <summary>
    /// Returns 'AssaDsrDayPeriodId'
    /// </summary>
    public static string AssaDsrDayPeriodId = "AssaDsrDayPeriodId";
    }
    #endregion
  }
}
