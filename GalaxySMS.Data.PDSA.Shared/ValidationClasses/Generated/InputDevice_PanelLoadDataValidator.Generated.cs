using System;

using PDSA.Validation;

using GalaxySMS.EntityLayer;

namespace GalaxySMS.ValidationLayer
{
  /// <summary>
  /// Used to validate all properties of the InputDevice_PanelLoadDataPDSA class.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public partial class InputDevice_PanelLoadDataPDSAValidator : PDSAValidatorBase
  {
    #region Public Entity Property
    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    private InputDevice_PanelLoadDataPDSA _Entity = null;

    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    public new InputDevice_PanelLoadDataPDSA Entity
    {
      get { return _Entity; }
      set
      {
        _Entity = value;
        base.Entity = value;
      }
    }
    #endregion
    
    #region Clone Entity Class
    /// <summary>
    /// Clones the current InputDevice_PanelLoadDataPDSA
    /// </summary>
    /// <returns>A cloned InputDevice_PanelLoadDataPDSA object</returns>
    public InputDevice_PanelLoadDataPDSA CloneEntity()
    {
      return CloneEntity(this.Entity);
    }
    
    /// <summary>
    /// Clones the passed in InputDevice_PanelLoadDataPDSA
    /// </summary>
    /// <param name="entityToClone">The InputDevice_PanelLoadDataPDSA entity to clone</param>
    /// <returns>A cloned InputDevice_PanelLoadDataPDSA object</returns>
    public InputDevice_PanelLoadDataPDSA CloneEntity(InputDevice_PanelLoadDataPDSA entityToClone)
    {
      InputDevice_PanelLoadDataPDSA newEntity = new InputDevice_PanelLoadDataPDSA();

      newEntity.InputDeviceUid = entityToClone.InputDeviceUid;
      newEntity.ClusterUid = entityToClone.ClusterUid;
      newEntity.GalaxyPanelUid = entityToClone.GalaxyPanelUid;
      newEntity.GalaxyInterfaceBoardUid = entityToClone.GalaxyInterfaceBoardUid;
      newEntity.GalaxyInterfaceBoardSectionUid = entityToClone.GalaxyInterfaceBoardSectionUid;
      newEntity.GalaxyHardwareModuleUid = entityToClone.GalaxyHardwareModuleUid;
      newEntity.GalaxyInterfaceBoardSectionNodeUid = entityToClone.GalaxyInterfaceBoardSectionNodeUid;
      newEntity.InputName = entityToClone.InputName;
      newEntity.ClusterGroupId = entityToClone.ClusterGroupId;
      newEntity.ClusterNumber = entityToClone.ClusterNumber;
      newEntity.PanelNumber = entityToClone.PanelNumber;
      newEntity.BoardNumber = entityToClone.BoardNumber;
      newEntity.SectionNumber = entityToClone.SectionNumber;
      newEntity.ModuleNumber = entityToClone.ModuleNumber;
      newEntity.NodeNumber = entityToClone.NodeNumber;
      newEntity.IsInputActive = entityToClone.IsInputActive;
      newEntity.InputDeviceBoardSectionMode = entityToClone.InputDeviceBoardSectionMode;
      newEntity.IsNodeActive = entityToClone.IsNodeActive;
      newEntity.InputDeviceBoardSectionModeDisplay = entityToClone.InputDeviceBoardSectionModeDisplay;
      newEntity.IsModuleActive = entityToClone.IsModuleActive;
      newEntity.InputDevicePanelModelTypeCode = entityToClone.InputDevicePanelModelTypeCode;
      newEntity.InputDeviceCpuTypeCode = entityToClone.InputDeviceCpuTypeCode;
      newEntity.InputDeviceBoardTypeModel = entityToClone.InputDeviceBoardTypeModel;
      newEntity.InputDeviceBoardTypeTypeCode = entityToClone.InputDeviceBoardTypeTypeCode;
      newEntity.InputDeviceBoardTypeDisplay = entityToClone.InputDeviceBoardTypeDisplay;
      newEntity.SupervisionTypeDisplay = entityToClone.SupervisionTypeDisplay;
      newEntity.HasSeriesResistor = entityToClone.HasSeriesResistor;
      newEntity.HasParallelResistor = entityToClone.HasParallelResistor;
      newEntity.IsNormalOpen = entityToClone.IsNormalOpen;
      newEntity.TroubleShortThreshold = entityToClone.TroubleShortThreshold;
      newEntity.TroubleOpenThreshold = entityToClone.TroubleOpenThreshold;
      newEntity.NormalChangeThreshold = entityToClone.NormalChangeThreshold;
      newEntity.AlternateNormalChangeThreshold = entityToClone.AlternateNormalChangeThreshold;
      newEntity.AlternateTroubleOpenThreshold = entityToClone.AlternateTroubleOpenThreshold;
      newEntity.AlternateTroubleShortThreshold = entityToClone.AlternateTroubleShortThreshold;
      newEntity.AlternateVoltagesEnabled = entityToClone.AlternateVoltagesEnabled;
      newEntity.GalaxyInputModeDisplay = entityToClone.GalaxyInputModeDisplay;
      newEntity.GalaxyInputModeCode = entityToClone.GalaxyInputModeCode;
      newEntity.GalaxyInputDelayTypeDisplay = entityToClone.GalaxyInputDelayTypeDisplay;
      newEntity.GalaxyInputDelayTypeCode = entityToClone.GalaxyInputDelayTypeCode;
      newEntity.MainIOGroupTag = entityToClone.MainIOGroupTag;
      newEntity.MainIOGroupDisplay = entityToClone.MainIOGroupDisplay;
      newEntity.MainIOGroupNumber = entityToClone.MainIOGroupNumber;
      newEntity.MainIOGroupIsLocal = entityToClone.MainIOGroupIsLocal;
      newEntity.MainIOGroupOffset = entityToClone.MainIOGroupOffset;
      newEntity.DelayDuration = entityToClone.DelayDuration;
      newEntity.DisableDisarmedOnOffLogEvents = entityToClone.DisableDisarmedOnOffLogEvents;
      newEntity.ArmControlScheduleDisplay = entityToClone.ArmControlScheduleDisplay;
      newEntity.GalaxyInputDevicePropertiesLastUpdated = entityToClone.GalaxyInputDevicePropertiesLastUpdated;
      newEntity.MainIOGroupLastUpdated = entityToClone.MainIOGroupLastUpdated;
      newEntity.ArmingIOGroup1LastUpdated = entityToClone.ArmingIOGroup1LastUpdated;
      newEntity.ArmingIOGroup2LastUpdated = entityToClone.ArmingIOGroup2LastUpdated;
      newEntity.ArmControlScheduleNumber = entityToClone.ArmControlScheduleNumber;
      newEntity.ArmingIOGroup3LastUpdated = entityToClone.ArmingIOGroup3LastUpdated;
      newEntity.ArmingIOGroup4LastUpdated = entityToClone.ArmingIOGroup4LastUpdated;
      newEntity.MainScheduleLastUpdated = entityToClone.MainScheduleLastUpdated;
      newEntity.ArmingIOGroup1Display = entityToClone.ArmingIOGroup1Display;
      newEntity.ArmingIOGroupNumber1 = entityToClone.ArmingIOGroupNumber1;
      newEntity.ArmingIOGroup1IsLocal = entityToClone.ArmingIOGroup1IsLocal;
      newEntity.ArmingIOGroup2Display = entityToClone.ArmingIOGroup2Display;
      newEntity.ArmingIOGroupNumber2 = entityToClone.ArmingIOGroupNumber2;
      newEntity.ArmingIOGroup2IsLocal = entityToClone.ArmingIOGroup2IsLocal;
      newEntity.ArmingIOGroup3Display = entityToClone.ArmingIOGroup3Display;
      newEntity.ArmingIOGroupNumber3 = entityToClone.ArmingIOGroupNumber3;
      newEntity.ArmingIOGroup3IsLocal = entityToClone.ArmingIOGroup3IsLocal;
      newEntity.ArmingIOGroup4Display = entityToClone.ArmingIOGroup4Display;
      newEntity.ArmingIOGroupNumber4 = entityToClone.ArmingIOGroupNumber4;
      newEntity.ArmingIOGroup4IsLocal = entityToClone.ArmingIOGroup4IsLocal;
      newEntity.CpuNumber = entityToClone.CpuNumber;
      newEntity.CpuUid = entityToClone.CpuUid;
      newEntity.ServerAddress = entityToClone.ServerAddress;
      newEntity.IsConnected = entityToClone.IsConnected;

      return newEntity;
    }
    #endregion

    #region CreateProperties Method
    /// <summary>
    /// Creates the collection of PDSAProperty objects. These are used to control validation and null handling.
    /// </summary>
    /// <returns>A collection of PDSAProperty objects</returns>
    public override PDSAProperties CreateProperties()
    {
      PDSAProperties props = new PDSAProperties();
      
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputDeviceUid, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_InputDeviceUid_Header", "Input Device Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_InputDeviceUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ClusterUid, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ClusterUid_Header", "Cluster Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ClusterUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyPanelUid, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_GalaxyPanelUid_Header", "Galaxy Panel Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_GalaxyPanelUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInterfaceBoardUid, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_GalaxyInterfaceBoardUid_Header", "Galaxy Interface Board Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_GalaxyInterfaceBoardUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionUid, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_GalaxyInterfaceBoardSectionUid_Header", "Galaxy Interface Board Section Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_GalaxyInterfaceBoardSectionUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyHardwareModuleUid, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_GalaxyHardwareModuleUid_Header", "Galaxy Hardware Module Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_GalaxyHardwareModuleUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionNodeUid, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_GalaxyInterfaceBoardSectionNodeUid_Header", "Galaxy Interface Board Section Node Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_GalaxyInterfaceBoardSectionNodeUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputName, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_InputName_Header", "Input Name"), false, typeof(string), 65, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_InputName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ClusterGroupId, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ClusterGroupId_Header", "Cluster Group Id"), false, typeof(int), 10, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ClusterGroupId_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ClusterNumber, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ClusterNumber_Header", "Cluster Number"), false, typeof(int), 10, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ClusterNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.PanelNumber, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_PanelNumber_Header", "Panel Number"), false, typeof(int), 10, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_PanelNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.BoardNumber, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_BoardNumber_Header", "Board Number"), false, typeof(short), 5, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_BoardNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.SectionNumber, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_SectionNumber_Header", "Section Number"), false, typeof(short), 5, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_SectionNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ModuleNumber, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ModuleNumber_Header", "Module Number"), false, typeof(short), 5, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ModuleNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.NodeNumber, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_NodeNumber_Header", "Node Number"), false, typeof(short), 5, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_NodeNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.IsInputActive, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_IsInputActive_Header", "Is Input Active"), false, typeof(bool), -1, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_IsInputActive_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputDeviceBoardSectionMode, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_InputDeviceBoardSectionMode_Header", "Input Device Board Section Mode"), false, typeof(short), 5, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_InputDeviceBoardSectionMode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.IsNodeActive, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_IsNodeActive_Header", "Is Node Active"), false, typeof(bool), -1, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_IsNodeActive_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputDeviceBoardSectionModeDisplay, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_InputDeviceBoardSectionModeDisplay_Header", "Input Device Board Section Mode Display"), false, typeof(string), 65, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_InputDeviceBoardSectionModeDisplay_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.IsModuleActive, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_IsModuleActive_Header", "Is Module Active"), false, typeof(bool), -1, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_IsModuleActive_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputDevicePanelModelTypeCode, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_InputDevicePanelModelTypeCode_Header", "Input Device Panel Model Type Code"), false, typeof(string), 16, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_InputDevicePanelModelTypeCode_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputDeviceCpuTypeCode, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_InputDeviceCpuTypeCode_Header", "Input Device Cpu Type Code"), false, typeof(string), 16, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_InputDeviceCpuTypeCode_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputDeviceBoardTypeModel, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_InputDeviceBoardTypeModel_Header", "Input Device Board Type Model"), false, typeof(string), 65, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_InputDeviceBoardTypeModel_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputDeviceBoardTypeTypeCode, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_InputDeviceBoardTypeTypeCode_Header", "Input Device Board Type Type Code"), false, typeof(short), 5, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_InputDeviceBoardTypeTypeCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputDeviceBoardTypeDisplay, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_InputDeviceBoardTypeDisplay_Header", "Input Device Board Type Display"), false, typeof(string), 65, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_InputDeviceBoardTypeDisplay_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.SupervisionTypeDisplay, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_SupervisionTypeDisplay_Header", "Supervision Type Display"), false, typeof(string), 65, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_SupervisionTypeDisplay_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.HasSeriesResistor, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_HasSeriesResistor_Header", "Has Series Resistor"), false, typeof(bool), -1, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_HasSeriesResistor_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.HasParallelResistor, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_HasParallelResistor_Header", "Has Parallel Resistor"), false, typeof(bool), -1, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_HasParallelResistor_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.IsNormalOpen, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_IsNormalOpen_Header", "Is Normal Open"), false, typeof(bool), -1, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_IsNormalOpen_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.TroubleShortThreshold, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_TroubleShortThreshold_Header", "Trouble Short Threshold"), false, typeof(short), 5, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_TroubleShortThreshold_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.TroubleOpenThreshold, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_TroubleOpenThreshold_Header", "Trouble Open Threshold"), false, typeof(short), 5, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_TroubleOpenThreshold_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.NormalChangeThreshold, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_NormalChangeThreshold_Header", "Normal Change Threshold"), false, typeof(short), 5, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_NormalChangeThreshold_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.AlternateNormalChangeThreshold, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_AlternateNormalChangeThreshold_Header", "Alternate Normal Change Threshold"), false, typeof(short), 5, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_AlternateNormalChangeThreshold_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.AlternateTroubleOpenThreshold, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_AlternateTroubleOpenThreshold_Header", "Alternate Trouble Open Threshold"), false, typeof(short), 5, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_AlternateTroubleOpenThreshold_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.AlternateTroubleShortThreshold, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_AlternateTroubleShortThreshold_Header", "Alternate Trouble Short Threshold"), false, typeof(short), 5, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_AlternateTroubleShortThreshold_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.AlternateVoltagesEnabled, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_AlternateVoltagesEnabled_Header", "Alternate Voltages Enabled"), false, typeof(bool), -1, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_AlternateVoltagesEnabled_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInputModeDisplay, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_GalaxyInputModeDisplay_Header", "Galaxy Input Mode Display"), false, typeof(string), 65, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_GalaxyInputModeDisplay_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInputModeCode, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_GalaxyInputModeCode_Header", "Galaxy Input Mode Code"), false, typeof(short), 5, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_GalaxyInputModeCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInputDelayTypeDisplay, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_GalaxyInputDelayTypeDisplay_Header", "Galaxy Input Delay Type Display"), false, typeof(string), 65, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_GalaxyInputDelayTypeDisplay_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInputDelayTypeCode, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_GalaxyInputDelayTypeCode_Header", "Galaxy Input Delay Type Code"), false, typeof(short), 5, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_GalaxyInputDelayTypeCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.MainIOGroupTag, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_MainIOGroupTag_Header", "Main IO Group Tag"), false, typeof(string), 65, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_MainIOGroupTag_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.MainIOGroupDisplay, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_MainIOGroupDisplay_Header", "Main IO Group Display"), false, typeof(string), 65, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_MainIOGroupDisplay_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.MainIOGroupNumber, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_MainIOGroupNumber_Header", "Main IO Group Number"), false, typeof(int), 10, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_MainIOGroupNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.MainIOGroupIsLocal, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_MainIOGroupIsLocal_Header", "Main IO Group Is Local"), false, typeof(bool), -1, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_MainIOGroupIsLocal_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.MainIOGroupOffset, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_MainIOGroupOffset_Header", "Main IO Group Offset"), false, typeof(short), 5, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_MainIOGroupOffset_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.DelayDuration, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_DelayDuration_Header", "Delay Duration"), false, typeof(int), 10, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_DelayDuration_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.DisableDisarmedOnOffLogEvents, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_DisableDisarmedOnOffLogEvents_Header", "Disable Disarmed On Off Log Events"), false, typeof(bool), -1, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_DisableDisarmedOnOffLogEvents_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmControlScheduleDisplay, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ArmControlScheduleDisplay_Header", "Arm Control Schedule Display"), false, typeof(string), 65, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ArmControlScheduleDisplay_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInputDevicePropertiesLastUpdated, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_GalaxyInputDevicePropertiesLastUpdated_Header", "Galaxy Input Device Properties Last Updated"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_GalaxyInputDevicePropertiesLastUpdated_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.MainIOGroupLastUpdated, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_MainIOGroupLastUpdated_Header", "Main IO Group Last Updated"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_MainIOGroupLastUpdated_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup1LastUpdated, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ArmingIOGroup1LastUpdated_Header", "Arming IO Group 1 Last Updated"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ArmingIOGroup1LastUpdated_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup2LastUpdated, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ArmingIOGroup2LastUpdated_Header", "Arming IO Group 2 Last Updated"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ArmingIOGroup2LastUpdated_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmControlScheduleNumber, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ArmControlScheduleNumber_Header", "Arm Control Schedule Number"), false, typeof(int), 10, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ArmControlScheduleNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup3LastUpdated, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ArmingIOGroup3LastUpdated_Header", "Arming IO Group 3 Last Updated"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ArmingIOGroup3LastUpdated_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup4LastUpdated, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ArmingIOGroup4LastUpdated_Header", "Arming IO Group 4 Last Updated"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ArmingIOGroup4LastUpdated_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.MainScheduleLastUpdated, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_MainScheduleLastUpdated_Header", "Main Schedule Last Updated"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_MainScheduleLastUpdated_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup1Display, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ArmingIOGroup1Display_Header", "Arming IO Group 1 Display"), false, typeof(string), 65, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ArmingIOGroup1Display_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroupNumber1, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ArmingIOGroupNumber1_Header", "Arming IO Group Number 1"), false, typeof(int), 10, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ArmingIOGroupNumber1_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup1IsLocal, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ArmingIOGroup1IsLocal_Header", "Arming IO Group 1 Is Local"), false, typeof(bool), -1, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ArmingIOGroup1IsLocal_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup2Display, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ArmingIOGroup2Display_Header", "Arming IO Group 2 Display"), false, typeof(string), 65, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ArmingIOGroup2Display_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroupNumber2, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ArmingIOGroupNumber2_Header", "Arming IO Group Number 2"), false, typeof(int), 10, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ArmingIOGroupNumber2_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup2IsLocal, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ArmingIOGroup2IsLocal_Header", "Arming IO Group 2 Is Local"), false, typeof(bool), -1, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ArmingIOGroup2IsLocal_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup3Display, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ArmingIOGroup3Display_Header", "Arming IO Group 3 Display"), false, typeof(string), 65, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ArmingIOGroup3Display_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroupNumber3, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ArmingIOGroupNumber3_Header", "Arming IO Group Number 3"), false, typeof(int), 10, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ArmingIOGroupNumber3_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup3IsLocal, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ArmingIOGroup3IsLocal_Header", "Arming IO Group 3 Is Local"), false, typeof(bool), -1, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ArmingIOGroup3IsLocal_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup4Display, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ArmingIOGroup4Display_Header", "Arming IO Group 4 Display"), false, typeof(string), 65, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ArmingIOGroup4Display_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroupNumber4, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ArmingIOGroupNumber4_Header", "Arming IO Group Number 4"), false, typeof(int), 10, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ArmingIOGroupNumber4_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup4IsLocal, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ArmingIOGroup4IsLocal_Header", "Arming IO Group 4 Is Local"), false, typeof(bool), -1, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ArmingIOGroup4IsLocal_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.CpuNumber, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_CpuNumber_Header", "Cpu Number"), false, typeof(int), 10, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_CpuNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.CpuUid, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_CpuUid_Header", "Cpu Uid"), false, typeof(string), 36, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_CpuUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ServerAddress, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ServerAddress_Header", "Server Address"), false, typeof(string), 1, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_ServerAddress_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.IsConnected, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_IsConnected_Header", "Is Connected"), false, typeof(int), 10, GetResourceMessage("GCS_InputDevice_PanelLoadDataPDSA_IsConnected_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      
      return props;
    }
    #endregion

    #region Initialize Entity
    /// <summary>
    /// This method is called from the CreateNewEntity Method. All the properties for the Entity are set to default values here by the code generator.
    /// </summary>
    protected override void InitializeEntity()
    {
      Entity.InputDeviceUid = Guid.Empty;
      Entity.ClusterUid = Guid.Empty;
      Entity.GalaxyPanelUid = Guid.Empty;
      Entity.GalaxyInterfaceBoardUid = Guid.Empty;
      Entity.GalaxyInterfaceBoardSectionUid = Guid.Empty;
      Entity.GalaxyHardwareModuleUid = Guid.Empty;
      Entity.GalaxyInterfaceBoardSectionNodeUid = Guid.Empty;
      Entity.InputName = string.Empty;
      Entity.ClusterGroupId = 0;
      Entity.ClusterNumber = 0;
      Entity.PanelNumber = 0;
      Entity.BoardNumber = 0;
      Entity.SectionNumber = 0;
      Entity.ModuleNumber = 0;
      Entity.NodeNumber = 0;
      Entity.IsInputActive = false;
      Entity.InputDeviceBoardSectionMode = 0;
      Entity.IsNodeActive = false;
      Entity.InputDeviceBoardSectionModeDisplay = string.Empty;
      Entity.IsModuleActive = false;
      Entity.InputDevicePanelModelTypeCode = string.Empty;
      Entity.InputDeviceCpuTypeCode = string.Empty;
      Entity.InputDeviceBoardTypeModel = string.Empty;
      Entity.InputDeviceBoardTypeTypeCode = 0;
      Entity.InputDeviceBoardTypeDisplay = string.Empty;
      Entity.SupervisionTypeDisplay = string.Empty;
      Entity.HasSeriesResistor = false;
      Entity.HasParallelResistor = false;
      Entity.IsNormalOpen = false;
      Entity.TroubleShortThreshold = 0;
      Entity.TroubleOpenThreshold = 0;
      Entity.NormalChangeThreshold = 0;
      Entity.AlternateNormalChangeThreshold = 0;
      Entity.AlternateTroubleOpenThreshold = 0;
      Entity.AlternateTroubleShortThreshold = 0;
      Entity.AlternateVoltagesEnabled = false;
      Entity.GalaxyInputModeDisplay = string.Empty;
      Entity.GalaxyInputModeCode = 0;
      Entity.GalaxyInputDelayTypeDisplay = string.Empty;
      Entity.GalaxyInputDelayTypeCode = 0;
      Entity.MainIOGroupTag = string.Empty;
      Entity.MainIOGroupDisplay = string.Empty;
      Entity.MainIOGroupNumber = 0;
      Entity.MainIOGroupIsLocal = false;
      Entity.MainIOGroupOffset = 0;
      Entity.DelayDuration = 0;
      Entity.DisableDisarmedOnOffLogEvents = false;
      Entity.ArmControlScheduleDisplay = string.Empty;
      Entity.GalaxyInputDevicePropertiesLastUpdated = DateTimeOffset.Now;
      Entity.MainIOGroupLastUpdated = DateTimeOffset.Now;
      Entity.ArmingIOGroup1LastUpdated = DateTimeOffset.Now;
      Entity.ArmingIOGroup2LastUpdated = DateTimeOffset.Now;
      Entity.ArmControlScheduleNumber = 0;
      Entity.ArmingIOGroup3LastUpdated = DateTimeOffset.Now;
      Entity.ArmingIOGroup4LastUpdated = DateTimeOffset.Now;
      Entity.MainScheduleLastUpdated = DateTimeOffset.Now;
      Entity.ArmingIOGroup1Display = string.Empty;
      Entity.ArmingIOGroupNumber1 = 0;
      Entity.ArmingIOGroup1IsLocal = false;
      Entity.ArmingIOGroup2Display = string.Empty;
      Entity.ArmingIOGroupNumber2 = 0;
      Entity.ArmingIOGroup2IsLocal = false;
      Entity.ArmingIOGroup3Display = string.Empty;
      Entity.ArmingIOGroupNumber3 = 0;
      Entity.ArmingIOGroup3IsLocal = false;
      Entity.ArmingIOGroup4Display = string.Empty;
      Entity.ArmingIOGroupNumber4 = 0;
      Entity.ArmingIOGroup4IsLocal = false;
      Entity.CpuNumber = 0;
      Entity.CpuUid = Guid.Empty;
      Entity.ServerAddress = string.Empty;
      Entity.IsConnected = 0;

      Entity.ResetAllIsDirtyProperties();
    }
    #endregion
    
    #region InitProperties Method
    /// <summary>
    /// Called by the constructor to create the PDSAProperties collection of all properties that will be validated.
    /// </summary>
    protected override void InitProperties()
    {
      // Set the Properties collection to the collection of Entity Properties
      Properties = CreateProperties();
    }
    #endregion

    #region EntityDataToProperties Method
    /// <summary>
    /// Moves the Entity class data into the Properties collection.
    /// </summary>
    protected override void EntityDataToProperties()
    {
      if (Properties == null)
        InitProperties();
      
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputDeviceUid).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputDeviceUid).Value = Entity.InputDeviceUid;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ClusterUid).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ClusterUid).Value = Entity.ClusterUid;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyPanelUid).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyPanelUid).Value = Entity.GalaxyPanelUid;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInterfaceBoardUid).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInterfaceBoardUid).Value = Entity.GalaxyInterfaceBoardUid;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionUid).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionUid).Value = Entity.GalaxyInterfaceBoardSectionUid;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyHardwareModuleUid).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyHardwareModuleUid).Value = Entity.GalaxyHardwareModuleUid;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionNodeUid).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionNodeUid).Value = Entity.GalaxyInterfaceBoardSectionNodeUid;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputName).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputName).Value = Entity.InputName;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ClusterGroupId).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ClusterGroupId).Value = Entity.ClusterGroupId;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ClusterNumber).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ClusterNumber).Value = Entity.ClusterNumber;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.PanelNumber).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.PanelNumber).Value = Entity.PanelNumber;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.BoardNumber).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.BoardNumber).Value = Entity.BoardNumber;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.SectionNumber).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.SectionNumber).Value = Entity.SectionNumber;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ModuleNumber).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ModuleNumber).Value = Entity.ModuleNumber;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.NodeNumber).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.NodeNumber).Value = Entity.NodeNumber;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.IsInputActive).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.IsInputActive).Value = Entity.IsInputActive;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputDeviceBoardSectionMode).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputDeviceBoardSectionMode).Value = Entity.InputDeviceBoardSectionMode;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.IsNodeActive).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.IsNodeActive).Value = Entity.IsNodeActive;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputDeviceBoardSectionModeDisplay).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputDeviceBoardSectionModeDisplay).Value = Entity.InputDeviceBoardSectionModeDisplay;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.IsModuleActive).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.IsModuleActive).Value = Entity.IsModuleActive;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputDevicePanelModelTypeCode).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputDevicePanelModelTypeCode).Value = Entity.InputDevicePanelModelTypeCode;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputDeviceCpuTypeCode).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputDeviceCpuTypeCode).Value = Entity.InputDeviceCpuTypeCode;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputDeviceBoardTypeModel).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputDeviceBoardTypeModel).Value = Entity.InputDeviceBoardTypeModel;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputDeviceBoardTypeTypeCode).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputDeviceBoardTypeTypeCode).Value = Entity.InputDeviceBoardTypeTypeCode;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputDeviceBoardTypeDisplay).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputDeviceBoardTypeDisplay).Value = Entity.InputDeviceBoardTypeDisplay;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.SupervisionTypeDisplay).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.SupervisionTypeDisplay).Value = Entity.SupervisionTypeDisplay;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.HasSeriesResistor).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.HasSeriesResistor).Value = Entity.HasSeriesResistor;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.HasParallelResistor).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.HasParallelResistor).Value = Entity.HasParallelResistor;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.IsNormalOpen).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.IsNormalOpen).Value = Entity.IsNormalOpen;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.TroubleShortThreshold).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.TroubleShortThreshold).Value = Entity.TroubleShortThreshold;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.TroubleOpenThreshold).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.TroubleOpenThreshold).Value = Entity.TroubleOpenThreshold;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.NormalChangeThreshold).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.NormalChangeThreshold).Value = Entity.NormalChangeThreshold;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.AlternateNormalChangeThreshold).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.AlternateNormalChangeThreshold).Value = Entity.AlternateNormalChangeThreshold;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.AlternateTroubleOpenThreshold).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.AlternateTroubleOpenThreshold).Value = Entity.AlternateTroubleOpenThreshold;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.AlternateTroubleShortThreshold).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.AlternateTroubleShortThreshold).Value = Entity.AlternateTroubleShortThreshold;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.AlternateVoltagesEnabled).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.AlternateVoltagesEnabled).Value = Entity.AlternateVoltagesEnabled;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInputModeDisplay).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInputModeDisplay).Value = Entity.GalaxyInputModeDisplay;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInputModeCode).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInputModeCode).Value = Entity.GalaxyInputModeCode;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInputDelayTypeDisplay).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInputDelayTypeDisplay).Value = Entity.GalaxyInputDelayTypeDisplay;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInputDelayTypeCode).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInputDelayTypeCode).Value = Entity.GalaxyInputDelayTypeCode;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.MainIOGroupTag).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.MainIOGroupTag).Value = Entity.MainIOGroupTag;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.MainIOGroupDisplay).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.MainIOGroupDisplay).Value = Entity.MainIOGroupDisplay;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.MainIOGroupNumber).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.MainIOGroupNumber).Value = Entity.MainIOGroupNumber;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.MainIOGroupIsLocal).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.MainIOGroupIsLocal).Value = Entity.MainIOGroupIsLocal;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.MainIOGroupOffset).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.MainIOGroupOffset).Value = Entity.MainIOGroupOffset;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.DelayDuration).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.DelayDuration).Value = Entity.DelayDuration;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.DisableDisarmedOnOffLogEvents).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.DisableDisarmedOnOffLogEvents).Value = Entity.DisableDisarmedOnOffLogEvents;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmControlScheduleDisplay).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmControlScheduleDisplay).Value = Entity.ArmControlScheduleDisplay;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInputDevicePropertiesLastUpdated).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInputDevicePropertiesLastUpdated).Value = Entity.GalaxyInputDevicePropertiesLastUpdated;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.MainIOGroupLastUpdated).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.MainIOGroupLastUpdated).Value = Entity.MainIOGroupLastUpdated;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup1LastUpdated).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup1LastUpdated).Value = Entity.ArmingIOGroup1LastUpdated;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup2LastUpdated).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup2LastUpdated).Value = Entity.ArmingIOGroup2LastUpdated;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmControlScheduleNumber).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmControlScheduleNumber).Value = Entity.ArmControlScheduleNumber;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup3LastUpdated).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup3LastUpdated).Value = Entity.ArmingIOGroup3LastUpdated;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup4LastUpdated).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup4LastUpdated).Value = Entity.ArmingIOGroup4LastUpdated;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.MainScheduleLastUpdated).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.MainScheduleLastUpdated).Value = Entity.MainScheduleLastUpdated;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup1Display).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup1Display).Value = Entity.ArmingIOGroup1Display;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroupNumber1).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroupNumber1).Value = Entity.ArmingIOGroupNumber1;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup1IsLocal).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup1IsLocal).Value = Entity.ArmingIOGroup1IsLocal;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup2Display).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup2Display).Value = Entity.ArmingIOGroup2Display;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroupNumber2).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroupNumber2).Value = Entity.ArmingIOGroupNumber2;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup2IsLocal).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup2IsLocal).Value = Entity.ArmingIOGroup2IsLocal;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup3Display).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup3Display).Value = Entity.ArmingIOGroup3Display;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroupNumber3).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroupNumber3).Value = Entity.ArmingIOGroupNumber3;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup3IsLocal).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup3IsLocal).Value = Entity.ArmingIOGroup3IsLocal;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup4Display).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup4Display).Value = Entity.ArmingIOGroup4Display;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroupNumber4).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroupNumber4).Value = Entity.ArmingIOGroupNumber4;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup4IsLocal).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup4IsLocal).Value = Entity.ArmingIOGroup4IsLocal;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.CpuNumber).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.CpuNumber).Value = Entity.CpuNumber;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.CpuUid).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.CpuUid).Value = Entity.CpuUid;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ServerAddress).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ServerAddress).Value = Entity.ServerAddress;
      if(!Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.IsConnected).SetAsNull)
        Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.IsConnected).Value = Entity.IsConnected;
    }

    /// <summary>
    /// Moves the Properties collection objects into the Entity properties
    /// </summary>
    protected override void PropertiesToEntityData()
    {
      if (Properties == null)
        InitProperties();

      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputDeviceUid).IsNull == false)
        Entity.InputDeviceUid = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputDeviceUid).GetAsGuid();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ClusterUid).IsNull == false)
        Entity.ClusterUid = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ClusterUid).GetAsGuid();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyPanelUid).IsNull == false)
        Entity.GalaxyPanelUid = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyPanelUid).GetAsGuid();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInterfaceBoardUid).IsNull == false)
        Entity.GalaxyInterfaceBoardUid = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInterfaceBoardUid).GetAsGuid();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionUid).IsNull == false)
        Entity.GalaxyInterfaceBoardSectionUid = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionUid).GetAsGuid();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyHardwareModuleUid).IsNull == false)
        Entity.GalaxyHardwareModuleUid = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyHardwareModuleUid).GetAsGuid();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionNodeUid).IsNull == false)
        Entity.GalaxyInterfaceBoardSectionNodeUid = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionNodeUid).GetAsGuid();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputName).IsNull == false)
        Entity.InputName = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputName).GetAsString();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ClusterGroupId).IsNull == false)
        Entity.ClusterGroupId = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ClusterGroupId).GetAsInteger();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ClusterNumber).IsNull == false)
        Entity.ClusterNumber = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ClusterNumber).GetAsInteger();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.PanelNumber).IsNull == false)
        Entity.PanelNumber = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.PanelNumber).GetAsInteger();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.BoardNumber).IsNull == false)
        Entity.BoardNumber = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.BoardNumber).GetAsShort();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.SectionNumber).IsNull == false)
        Entity.SectionNumber = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.SectionNumber).GetAsShort();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ModuleNumber).IsNull == false)
        Entity.ModuleNumber = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ModuleNumber).GetAsShort();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.NodeNumber).IsNull == false)
        Entity.NodeNumber = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.NodeNumber).GetAsShort();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.IsInputActive).IsNull == false)
        Entity.IsInputActive = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.IsInputActive).GetAsBool();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputDeviceBoardSectionMode).IsNull == false)
        Entity.InputDeviceBoardSectionMode = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputDeviceBoardSectionMode).GetAsShort();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.IsNodeActive).IsNull == false)
        Entity.IsNodeActive = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.IsNodeActive).GetAsBool();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputDeviceBoardSectionModeDisplay).IsNull == false)
        Entity.InputDeviceBoardSectionModeDisplay = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputDeviceBoardSectionModeDisplay).GetAsString();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.IsModuleActive).IsNull == false)
        Entity.IsModuleActive = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.IsModuleActive).GetAsBool();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputDevicePanelModelTypeCode).IsNull == false)
        Entity.InputDevicePanelModelTypeCode = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputDevicePanelModelTypeCode).GetAsString();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputDeviceCpuTypeCode).IsNull == false)
        Entity.InputDeviceCpuTypeCode = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputDeviceCpuTypeCode).GetAsString();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputDeviceBoardTypeModel).IsNull == false)
        Entity.InputDeviceBoardTypeModel = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputDeviceBoardTypeModel).GetAsString();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputDeviceBoardTypeTypeCode).IsNull == false)
        Entity.InputDeviceBoardTypeTypeCode = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputDeviceBoardTypeTypeCode).GetAsShort();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputDeviceBoardTypeDisplay).IsNull == false)
        Entity.InputDeviceBoardTypeDisplay = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.InputDeviceBoardTypeDisplay).GetAsString();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.SupervisionTypeDisplay).IsNull == false)
        Entity.SupervisionTypeDisplay = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.SupervisionTypeDisplay).GetAsString();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.HasSeriesResistor).IsNull == false)
        Entity.HasSeriesResistor = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.HasSeriesResistor).GetAsBool();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.HasParallelResistor).IsNull == false)
        Entity.HasParallelResistor = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.HasParallelResistor).GetAsBool();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.IsNormalOpen).IsNull == false)
        Entity.IsNormalOpen = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.IsNormalOpen).GetAsBool();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.TroubleShortThreshold).IsNull == false)
        Entity.TroubleShortThreshold = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.TroubleShortThreshold).GetAsShort();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.TroubleOpenThreshold).IsNull == false)
        Entity.TroubleOpenThreshold = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.TroubleOpenThreshold).GetAsShort();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.NormalChangeThreshold).IsNull == false)
        Entity.NormalChangeThreshold = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.NormalChangeThreshold).GetAsShort();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.AlternateNormalChangeThreshold).IsNull == false)
        Entity.AlternateNormalChangeThreshold = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.AlternateNormalChangeThreshold).GetAsShort();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.AlternateTroubleOpenThreshold).IsNull == false)
        Entity.AlternateTroubleOpenThreshold = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.AlternateTroubleOpenThreshold).GetAsShort();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.AlternateTroubleShortThreshold).IsNull == false)
        Entity.AlternateTroubleShortThreshold = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.AlternateTroubleShortThreshold).GetAsShort();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.AlternateVoltagesEnabled).IsNull == false)
        Entity.AlternateVoltagesEnabled = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.AlternateVoltagesEnabled).GetAsBool();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInputModeDisplay).IsNull == false)
        Entity.GalaxyInputModeDisplay = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInputModeDisplay).GetAsString();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInputModeCode).IsNull == false)
        Entity.GalaxyInputModeCode = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInputModeCode).GetAsShort();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInputDelayTypeDisplay).IsNull == false)
        Entity.GalaxyInputDelayTypeDisplay = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInputDelayTypeDisplay).GetAsString();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInputDelayTypeCode).IsNull == false)
        Entity.GalaxyInputDelayTypeCode = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInputDelayTypeCode).GetAsShort();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.MainIOGroupTag).IsNull == false)
        Entity.MainIOGroupTag = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.MainIOGroupTag).GetAsString();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.MainIOGroupDisplay).IsNull == false)
        Entity.MainIOGroupDisplay = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.MainIOGroupDisplay).GetAsString();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.MainIOGroupNumber).IsNull == false)
        Entity.MainIOGroupNumber = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.MainIOGroupNumber).GetAsInteger();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.MainIOGroupIsLocal).IsNull == false)
        Entity.MainIOGroupIsLocal = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.MainIOGroupIsLocal).GetAsBool();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.MainIOGroupOffset).IsNull == false)
        Entity.MainIOGroupOffset = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.MainIOGroupOffset).GetAsShort();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.DelayDuration).IsNull == false)
        Entity.DelayDuration = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.DelayDuration).GetAsInteger();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.DisableDisarmedOnOffLogEvents).IsNull == false)
        Entity.DisableDisarmedOnOffLogEvents = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.DisableDisarmedOnOffLogEvents).GetAsBool();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmControlScheduleDisplay).IsNull == false)
        Entity.ArmControlScheduleDisplay = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmControlScheduleDisplay).GetAsString();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInputDevicePropertiesLastUpdated).IsNull == false)
        Entity.GalaxyInputDevicePropertiesLastUpdated = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInputDevicePropertiesLastUpdated).GetAsDateTimeOffset();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.MainIOGroupLastUpdated).IsNull == false)
        Entity.MainIOGroupLastUpdated = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.MainIOGroupLastUpdated).GetAsDateTimeOffset();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup1LastUpdated).IsNull == false)
        Entity.ArmingIOGroup1LastUpdated = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup1LastUpdated).GetAsDateTimeOffset();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup2LastUpdated).IsNull == false)
        Entity.ArmingIOGroup2LastUpdated = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup2LastUpdated).GetAsDateTimeOffset();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmControlScheduleNumber).IsNull == false)
        Entity.ArmControlScheduleNumber = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmControlScheduleNumber).GetAsInteger();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup3LastUpdated).IsNull == false)
        Entity.ArmingIOGroup3LastUpdated = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup3LastUpdated).GetAsDateTimeOffset();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup4LastUpdated).IsNull == false)
        Entity.ArmingIOGroup4LastUpdated = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup4LastUpdated).GetAsDateTimeOffset();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.MainScheduleLastUpdated).IsNull == false)
        Entity.MainScheduleLastUpdated = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.MainScheduleLastUpdated).GetAsDateTimeOffset();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup1Display).IsNull == false)
        Entity.ArmingIOGroup1Display = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup1Display).GetAsString();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroupNumber1).IsNull == false)
        Entity.ArmingIOGroupNumber1 = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroupNumber1).GetAsInteger();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup1IsLocal).IsNull == false)
        Entity.ArmingIOGroup1IsLocal = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup1IsLocal).GetAsBool();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup2Display).IsNull == false)
        Entity.ArmingIOGroup2Display = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup2Display).GetAsString();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroupNumber2).IsNull == false)
        Entity.ArmingIOGroupNumber2 = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroupNumber2).GetAsInteger();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup2IsLocal).IsNull == false)
        Entity.ArmingIOGroup2IsLocal = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup2IsLocal).GetAsBool();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup3Display).IsNull == false)
        Entity.ArmingIOGroup3Display = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup3Display).GetAsString();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroupNumber3).IsNull == false)
        Entity.ArmingIOGroupNumber3 = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroupNumber3).GetAsInteger();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup3IsLocal).IsNull == false)
        Entity.ArmingIOGroup3IsLocal = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup3IsLocal).GetAsBool();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup4Display).IsNull == false)
        Entity.ArmingIOGroup4Display = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup4Display).GetAsString();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroupNumber4).IsNull == false)
        Entity.ArmingIOGroupNumber4 = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroupNumber4).GetAsInteger();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup4IsLocal).IsNull == false)
        Entity.ArmingIOGroup4IsLocal = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ArmingIOGroup4IsLocal).GetAsBool();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.CpuNumber).IsNull == false)
        Entity.CpuNumber = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.CpuNumber).GetAsInteger();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.CpuUid).IsNull == false)
        Entity.CpuUid = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.CpuUid).GetAsGuid();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ServerAddress).IsNull == false)
        Entity.ServerAddress = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.ServerAddress).GetAsString();
      if(Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.IsConnected).IsNull == false)
        Entity.IsConnected = Properties.GetByName(InputDevice_PanelLoadDataPDSAValidator.ColumnNames.IsConnected).GetAsInteger();
    }
    #endregion
    
    #region ColumnNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the InputDevice_PanelLoadDataPDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ColumnNames
    {
    /// <summary>
    /// Returns 'InputDeviceUid'
    /// </summary>
    public static string InputDeviceUid = "InputDeviceUid";
    /// <summary>
    /// Returns 'ClusterUid'
    /// </summary>
    public static string ClusterUid = "ClusterUid";
    /// <summary>
    /// Returns 'GalaxyPanelUid'
    /// </summary>
    public static string GalaxyPanelUid = "GalaxyPanelUid";
    /// <summary>
    /// Returns 'GalaxyInterfaceBoardUid'
    /// </summary>
    public static string GalaxyInterfaceBoardUid = "GalaxyInterfaceBoardUid";
    /// <summary>
    /// Returns 'GalaxyInterfaceBoardSectionUid'
    /// </summary>
    public static string GalaxyInterfaceBoardSectionUid = "GalaxyInterfaceBoardSectionUid";
    /// <summary>
    /// Returns 'GalaxyHardwareModuleUid'
    /// </summary>
    public static string GalaxyHardwareModuleUid = "GalaxyHardwareModuleUid";
    /// <summary>
    /// Returns 'GalaxyInterfaceBoardSectionNodeUid'
    /// </summary>
    public static string GalaxyInterfaceBoardSectionNodeUid = "GalaxyInterfaceBoardSectionNodeUid";
    /// <summary>
    /// Returns 'InputName'
    /// </summary>
    public static string InputName = "InputName";
    /// <summary>
    /// Returns 'ClusterGroupId'
    /// </summary>
    public static string ClusterGroupId = "ClusterGroupId";
    /// <summary>
    /// Returns 'ClusterNumber'
    /// </summary>
    public static string ClusterNumber = "ClusterNumber";
    /// <summary>
    /// Returns 'PanelNumber'
    /// </summary>
    public static string PanelNumber = "PanelNumber";
    /// <summary>
    /// Returns 'BoardNumber'
    /// </summary>
    public static string BoardNumber = "BoardNumber";
    /// <summary>
    /// Returns 'SectionNumber'
    /// </summary>
    public static string SectionNumber = "SectionNumber";
    /// <summary>
    /// Returns 'ModuleNumber'
    /// </summary>
    public static string ModuleNumber = "ModuleNumber";
    /// <summary>
    /// Returns 'NodeNumber'
    /// </summary>
    public static string NodeNumber = "NodeNumber";
    /// <summary>
    /// Returns 'IsInputActive'
    /// </summary>
    public static string IsInputActive = "IsInputActive";
    /// <summary>
    /// Returns 'InputDeviceBoardSectionMode'
    /// </summary>
    public static string InputDeviceBoardSectionMode = "InputDeviceBoardSectionMode";
    /// <summary>
    /// Returns 'IsNodeActive'
    /// </summary>
    public static string IsNodeActive = "IsNodeActive";
    /// <summary>
    /// Returns 'InputDeviceBoardSectionModeDisplay'
    /// </summary>
    public static string InputDeviceBoardSectionModeDisplay = "InputDeviceBoardSectionModeDisplay";
    /// <summary>
    /// Returns 'IsModuleActive'
    /// </summary>
    public static string IsModuleActive = "IsModuleActive";
    /// <summary>
    /// Returns 'InputDevicePanelModelTypeCode'
    /// </summary>
    public static string InputDevicePanelModelTypeCode = "InputDevicePanelModelTypeCode";
    /// <summary>
    /// Returns 'InputDeviceCpuTypeCode'
    /// </summary>
    public static string InputDeviceCpuTypeCode = "InputDeviceCpuTypeCode";
    /// <summary>
    /// Returns 'InputDeviceBoardTypeModel'
    /// </summary>
    public static string InputDeviceBoardTypeModel = "InputDeviceBoardTypeModel";
    /// <summary>
    /// Returns 'InputDeviceBoardTypeTypeCode'
    /// </summary>
    public static string InputDeviceBoardTypeTypeCode = "InputDeviceBoardTypeTypeCode";
    /// <summary>
    /// Returns 'InputDeviceBoardTypeDisplay'
    /// </summary>
    public static string InputDeviceBoardTypeDisplay = "InputDeviceBoardTypeDisplay";
    /// <summary>
    /// Returns 'SupervisionTypeDisplay'
    /// </summary>
    public static string SupervisionTypeDisplay = "SupervisionTypeDisplay";
    /// <summary>
    /// Returns 'HasSeriesResistor'
    /// </summary>
    public static string HasSeriesResistor = "HasSeriesResistor";
    /// <summary>
    /// Returns 'HasParallelResistor'
    /// </summary>
    public static string HasParallelResistor = "HasParallelResistor";
    /// <summary>
    /// Returns 'IsNormalOpen'
    /// </summary>
    public static string IsNormalOpen = "IsNormalOpen";
    /// <summary>
    /// Returns 'TroubleShortThreshold'
    /// </summary>
    public static string TroubleShortThreshold = "TroubleShortThreshold";
    /// <summary>
    /// Returns 'TroubleOpenThreshold'
    /// </summary>
    public static string TroubleOpenThreshold = "TroubleOpenThreshold";
    /// <summary>
    /// Returns 'NormalChangeThreshold'
    /// </summary>
    public static string NormalChangeThreshold = "NormalChangeThreshold";
    /// <summary>
    /// Returns 'AlternateNormalChangeThreshold'
    /// </summary>
    public static string AlternateNormalChangeThreshold = "AlternateNormalChangeThreshold";
    /// <summary>
    /// Returns 'AlternateTroubleOpenThreshold'
    /// </summary>
    public static string AlternateTroubleOpenThreshold = "AlternateTroubleOpenThreshold";
    /// <summary>
    /// Returns 'AlternateTroubleShortThreshold'
    /// </summary>
    public static string AlternateTroubleShortThreshold = "AlternateTroubleShortThreshold";
    /// <summary>
    /// Returns 'AlternateVoltagesEnabled'
    /// </summary>
    public static string AlternateVoltagesEnabled = "AlternateVoltagesEnabled";
    /// <summary>
    /// Returns 'GalaxyInputModeDisplay'
    /// </summary>
    public static string GalaxyInputModeDisplay = "GalaxyInputModeDisplay";
    /// <summary>
    /// Returns 'GalaxyInputModeCode'
    /// </summary>
    public static string GalaxyInputModeCode = "GalaxyInputModeCode";
    /// <summary>
    /// Returns 'GalaxyInputDelayTypeDisplay'
    /// </summary>
    public static string GalaxyInputDelayTypeDisplay = "GalaxyInputDelayTypeDisplay";
    /// <summary>
    /// Returns 'GalaxyInputDelayTypeCode'
    /// </summary>
    public static string GalaxyInputDelayTypeCode = "GalaxyInputDelayTypeCode";
    /// <summary>
    /// Returns 'MainIOGroupTag'
    /// </summary>
    public static string MainIOGroupTag = "MainIOGroupTag";
    /// <summary>
    /// Returns 'MainIOGroupDisplay'
    /// </summary>
    public static string MainIOGroupDisplay = "MainIOGroupDisplay";
    /// <summary>
    /// Returns 'MainIOGroupNumber'
    /// </summary>
    public static string MainIOGroupNumber = "MainIOGroupNumber";
    /// <summary>
    /// Returns 'MainIOGroupIsLocal'
    /// </summary>
    public static string MainIOGroupIsLocal = "MainIOGroupIsLocal";
    /// <summary>
    /// Returns 'MainIOGroupOffset'
    /// </summary>
    public static string MainIOGroupOffset = "MainIOGroupOffset";
    /// <summary>
    /// Returns 'DelayDuration'
    /// </summary>
    public static string DelayDuration = "DelayDuration";
    /// <summary>
    /// Returns 'DisableDisarmedOnOffLogEvents'
    /// </summary>
    public static string DisableDisarmedOnOffLogEvents = "DisableDisarmedOnOffLogEvents";
    /// <summary>
    /// Returns 'ArmControlScheduleDisplay'
    /// </summary>
    public static string ArmControlScheduleDisplay = "ArmControlScheduleDisplay";
    /// <summary>
    /// Returns 'GalaxyInputDevicePropertiesLastUpdated'
    /// </summary>
    public static string GalaxyInputDevicePropertiesLastUpdated = "GalaxyInputDevicePropertiesLastUpdated";
    /// <summary>
    /// Returns 'MainIOGroupLastUpdated'
    /// </summary>
    public static string MainIOGroupLastUpdated = "MainIOGroupLastUpdated";
    /// <summary>
    /// Returns 'ArmingIOGroup1LastUpdated'
    /// </summary>
    public static string ArmingIOGroup1LastUpdated = "ArmingIOGroup1LastUpdated";
    /// <summary>
    /// Returns 'ArmingIOGroup2LastUpdated'
    /// </summary>
    public static string ArmingIOGroup2LastUpdated = "ArmingIOGroup2LastUpdated";
    /// <summary>
    /// Returns 'ArmControlScheduleNumber'
    /// </summary>
    public static string ArmControlScheduleNumber = "ArmControlScheduleNumber";
    /// <summary>
    /// Returns 'ArmingIOGroup3LastUpdated'
    /// </summary>
    public static string ArmingIOGroup3LastUpdated = "ArmingIOGroup3LastUpdated";
    /// <summary>
    /// Returns 'ArmingIOGroup4LastUpdated'
    /// </summary>
    public static string ArmingIOGroup4LastUpdated = "ArmingIOGroup4LastUpdated";
    /// <summary>
    /// Returns 'MainScheduleLastUpdated'
    /// </summary>
    public static string MainScheduleLastUpdated = "MainScheduleLastUpdated";
    /// <summary>
    /// Returns 'ArmingIOGroup1Display'
    /// </summary>
    public static string ArmingIOGroup1Display = "ArmingIOGroup1Display";
    /// <summary>
    /// Returns 'ArmingIOGroupNumber1'
    /// </summary>
    public static string ArmingIOGroupNumber1 = "ArmingIOGroupNumber1";
    /// <summary>
    /// Returns 'ArmingIOGroup1IsLocal'
    /// </summary>
    public static string ArmingIOGroup1IsLocal = "ArmingIOGroup1IsLocal";
    /// <summary>
    /// Returns 'ArmingIOGroup2Display'
    /// </summary>
    public static string ArmingIOGroup2Display = "ArmingIOGroup2Display";
    /// <summary>
    /// Returns 'ArmingIOGroupNumber2'
    /// </summary>
    public static string ArmingIOGroupNumber2 = "ArmingIOGroupNumber2";
    /// <summary>
    /// Returns 'ArmingIOGroup2IsLocal'
    /// </summary>
    public static string ArmingIOGroup2IsLocal = "ArmingIOGroup2IsLocal";
    /// <summary>
    /// Returns 'ArmingIOGroup3Display'
    /// </summary>
    public static string ArmingIOGroup3Display = "ArmingIOGroup3Display";
    /// <summary>
    /// Returns 'ArmingIOGroupNumber3'
    /// </summary>
    public static string ArmingIOGroupNumber3 = "ArmingIOGroupNumber3";
    /// <summary>
    /// Returns 'ArmingIOGroup3IsLocal'
    /// </summary>
    public static string ArmingIOGroup3IsLocal = "ArmingIOGroup3IsLocal";
    /// <summary>
    /// Returns 'ArmingIOGroup4Display'
    /// </summary>
    public static string ArmingIOGroup4Display = "ArmingIOGroup4Display";
    /// <summary>
    /// Returns 'ArmingIOGroupNumber4'
    /// </summary>
    public static string ArmingIOGroupNumber4 = "ArmingIOGroupNumber4";
    /// <summary>
    /// Returns 'ArmingIOGroup4IsLocal'
    /// </summary>
    public static string ArmingIOGroup4IsLocal = "ArmingIOGroup4IsLocal";
    /// <summary>
    /// Returns 'CpuNumber'
    /// </summary>
    public static string CpuNumber = "CpuNumber";
    /// <summary>
    /// Returns 'CpuUid'
    /// </summary>
    public static string CpuUid = "CpuUid";
    /// <summary>
    /// Returns 'ServerAddress'
    /// </summary>
    public static string ServerAddress = "ServerAddress";
    /// <summary>
    /// Returns 'IsConnected'
    /// </summary>
    public static string IsConnected = "IsConnected";
    }
    #endregion
  }
}
