using System;
using System.ComponentModel;
using System.Runtime.Serialization;


using PDSA.Validation;

namespace GalaxySMS.EntityLayer
{
  /// <summary>
  /// This class contains properties for each data value that makes up a UserDefinedTextPropertyRulesPDSA.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
  /// </summary>
  
  public partial class UserDefinedTextPropertyRulesPDSA : PDSAEntityBase
  {
    #region Private Variables
    private Guid _UserDefinedPropertyUid = Guid.Empty;
    private short _MinimumLength = 0;
    private short _MaximumLength = 0;
    private string _DefaultValue = string.Empty;
    private string _Mask = string.Empty;
    private string _ValidationRegEx = string.Empty;
    private bool _AllUpperCase = false;
    private bool _FirstCharacterUpperCase = false;
    private bool _IsRequired = false;
    private string _EmptyContent = string.Empty;
    private string _ValidationErrorMessage = string.Empty;
    private string _InsertName = string.Empty;
    private DateTimeOffset _InsertDate = DateTimeOffset.Now;
    private string _UpdateName = string.Empty;
    private DateTimeOffset _UpdateDate = DateTimeOffset.Now;
    private short _ConcurrencyValue = 0;
    private short _MaximumLengthLimit = 0;
    private Guid _UserDefinedPropertyUidOld = Guid.Empty;
    #endregion
    
    #region Public Properties
    /// <summary>
    /// Get/Set the User Defined Property Uid value
    /// </summary>
    
    [DataMember]
    
    public Guid UserDefinedPropertyUid 
    { 
      get { return _UserDefinedPropertyUid; }
      set 
      { 
        if(HasValueChanged(_UserDefinedPropertyUid, value, "UserDefinedPropertyUid"))
        {
          _UserDefinedPropertyUid = value; 
          RaisePropertyChanged("UserDefinedPropertyUid");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Minimum Length value
    /// </summary>
    
    [DataMember]
    
    public short MinimumLength 
    { 
      get { return _MinimumLength; }
      set 
      { 
        if(HasValueChanged(_MinimumLength, value, "MinimumLength"))
        {
          _MinimumLength = value; 
          RaisePropertyChanged("MinimumLength");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Maximum Length value
    /// </summary>
    
    [DataMember]
    
    public short MaximumLength 
    { 
      get { return _MaximumLength; }
      set 
      { 
        if(HasValueChanged(_MaximumLength, value, "MaximumLength"))
        {
          _MaximumLength = value; 
          RaisePropertyChanged("MaximumLength");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Default Value value
    /// </summary>
    
    [DataMember]
    
    public string DefaultValue 
    { 
      get { return _DefaultValue; }
      set 
      { 
        if(HasValueChanged(_DefaultValue, value, "DefaultValue"))
        {
          _DefaultValue = value; 
          RaisePropertyChanged("DefaultValue");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Mask value
    /// </summary>
    
    [DataMember]
    
    public string Mask 
    { 
      get { return _Mask; }
      set 
      { 
        if(HasValueChanged(_Mask, value, "Mask"))
        {
          _Mask = value; 
          RaisePropertyChanged("Mask");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Validation Reg Ex value
    /// </summary>
    
    [DataMember]
    
    public string ValidationRegEx 
    { 
      get { return _ValidationRegEx; }
      set 
      { 
        if(HasValueChanged(_ValidationRegEx, value, "ValidationRegEx"))
        {
          _ValidationRegEx = value; 
          RaisePropertyChanged("ValidationRegEx");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the All Upper Case value
    /// </summary>
    
    [DataMember]
    
    public bool AllUpperCase 
    { 
      get { return _AllUpperCase; }
      set 
      { 
        if(HasValueChanged(_AllUpperCase, value, "AllUpperCase"))
        {
          _AllUpperCase = value; 
          RaisePropertyChanged("AllUpperCase");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the First Character Upper Case value
    /// </summary>
    
    [DataMember]
    
    public bool FirstCharacterUpperCase 
    { 
      get { return _FirstCharacterUpperCase; }
      set 
      { 
        if(HasValueChanged(_FirstCharacterUpperCase, value, "FirstCharacterUpperCase"))
        {
          _FirstCharacterUpperCase = value; 
          RaisePropertyChanged("FirstCharacterUpperCase");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Is Required value
    /// </summary>
    
    [DataMember]
    
    public bool IsRequired 
    { 
      get { return _IsRequired; }
      set 
      { 
        if(HasValueChanged(_IsRequired, value, "IsRequired"))
        {
          _IsRequired = value; 
          RaisePropertyChanged("IsRequired");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Empty Content value
    /// </summary>
    
    [DataMember]
    
    public string EmptyContent 
    { 
      get { return _EmptyContent; }
      set 
      { 
        if(HasValueChanged(_EmptyContent, value, "EmptyContent"))
        {
          _EmptyContent = value; 
          RaisePropertyChanged("EmptyContent");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Validation Error Message value
    /// </summary>
    
    [DataMember]
    
    public string ValidationErrorMessage 
    { 
      get { return _ValidationErrorMessage; }
      set 
      { 
        if(HasValueChanged(_ValidationErrorMessage, value, "ValidationErrorMessage"))
        {
          _ValidationErrorMessage = value; 
          RaisePropertyChanged("ValidationErrorMessage");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Insert Name value
    /// </summary>
    
    [DataMember]
    
    public string InsertName 
    { 
      get { return _InsertName; }
      set 
      { 
        if(HasValueChanged(_InsertName, value, "InsertName"))
        {
          _InsertName = value; 
          RaisePropertyChanged("InsertName");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Insert Date value
    /// </summary>
    
    [DataMember]
    
    public DateTimeOffset InsertDate 
    { 
      get { return _InsertDate; }
      set 
      { 
        if(HasValueChanged(_InsertDate, value, "InsertDate"))
        {
          _InsertDate = value; 
          RaisePropertyChanged("InsertDate");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Update Name value
    /// </summary>
    
    [DataMember]
    
    public string UpdateName 
    { 
      get { return _UpdateName; }
      set 
      { 
        if(HasValueChanged(_UpdateName, value, "UpdateName"))
        {
          _UpdateName = value; 
          RaisePropertyChanged("UpdateName");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Update Date value
    /// </summary>
    
    [DataMember]
    
    public DateTimeOffset UpdateDate 
    { 
      get { return _UpdateDate; }
      set 
      { 
        if(HasValueChanged(_UpdateDate, value, "UpdateDate"))
        {
          _UpdateDate = value; 
          RaisePropertyChanged("UpdateDate");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Concurrency Value value
    /// </summary>
    
    [DataMember]
    
    public short ConcurrencyValue 
    { 
      get { return _ConcurrencyValue; }
      set 
      { 
        if(HasValueChanged(_ConcurrencyValue, value, "ConcurrencyValue"))
        {
          _ConcurrencyValue = value; 
          RaisePropertyChanged("ConcurrencyValue");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Maximum Length Limit value
    /// </summary>
    
    [DataMember]
    
    public short MaximumLengthLimit 
    { 
      get { return _MaximumLengthLimit; }
      set 
      { 
        if(HasValueChanged(_MaximumLengthLimit, value, "MaximumLengthLimit"))
        {
          _MaximumLengthLimit = value; 
          RaisePropertyChanged("MaximumLengthLimit");
        }
      } 
    }
        

        /// <summary>
    /// Get/Set the User Defined Property UidOld value
    /// </summary>
    
    public Guid UserDefinedPropertyUidOld
    { 
      get { return _UserDefinedPropertyUidOld; }
      set 
      { 
        if(HasValueChanged(_UserDefinedPropertyUidOld, value, "UserDefinedPropertyUid"))
        {
          _UserDefinedPropertyUidOld = value; 
          RaisePropertyChanged("UserDefinedPropertyUidOld");
        }
      } 
    }
    #endregion
  }
}
