using System;
using System.ComponentModel;
using System.Runtime.Serialization;


using PDSA.Validation;

namespace GalaxySMS.EntityLayer
{
  /// <summary>
  /// This class contains properties for each data value that makes up a CredentialReaderTypePDSA.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
  /// </summary>
  
  public partial class CredentialReaderTypePDSA : PDSAEntityBase
  {
    #region Private Variables
    private Guid _CredentialReaderTypeUid = Guid.NewGuid();
    private Guid _CredentialReaderDataFormatUid = Guid.NewGuid();
    private Guid _BrandUid = Guid.NewGuid();
    private Guid _BinaryResourceUid = Guid.NewGuid();
    private string _ReaderTypeName = string.Empty;
    private string _Model = string.Empty;
    private string _Description = string.Empty;
    private string _InsertName = string.Empty;
    private DateTimeOffset _InsertDate = DateTimeOffset.Now;
    private string _UpdateName = string.Empty;
    private DateTimeOffset _UpdateDate = DateTimeOffset.Now;
    private short _ConcurrencyValue = 0;
    private Guid _CredentialReaderTypeUidOld = Guid.NewGuid();
    #endregion
    
    #region Public Properties
    /// <summary>
    /// Get/Set the Credential Reader Type Uid value
    /// </summary>
    
    [DataMember]
    
    public Guid CredentialReaderTypeUid 
    { 
      get { return _CredentialReaderTypeUid; }
      set 
      { 
        if(HasValueChanged(_CredentialReaderTypeUid, value, "CredentialReaderTypeUid"))
        {
          _CredentialReaderTypeUid = value; 
          RaisePropertyChanged("CredentialReaderTypeUid");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Credential Reader Data Format Uid value
    /// </summary>
    
    [DataMember]
    
    public Guid CredentialReaderDataFormatUid 
    { 
      get { return _CredentialReaderDataFormatUid; }
      set 
      { 
        if(HasValueChanged(_CredentialReaderDataFormatUid, value, "CredentialReaderDataFormatUid"))
        {
          _CredentialReaderDataFormatUid = value; 
          RaisePropertyChanged("CredentialReaderDataFormatUid");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Brand Uid value
    /// </summary>
    
    [DataMember]
    
    public Guid BrandUid 
    { 
      get { return _BrandUid; }
      set 
      { 
        if(HasValueChanged(_BrandUid, value, "BrandUid"))
        {
          _BrandUid = value; 
          RaisePropertyChanged("BrandUid");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Binary Resource Uid value
    /// </summary>
    
    [DataMember]
    
    public Guid BinaryResourceUid 
    { 
      get { return _BinaryResourceUid; }
      set 
      { 
        if(HasValueChanged(_BinaryResourceUid, value, "BinaryResourceUid"))
        {
          _BinaryResourceUid = value; 
          RaisePropertyChanged("BinaryResourceUid");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Reader Type Name value
    /// </summary>
    
    [DataMember]
    
    public string ReaderTypeName 
    { 
      get { return _ReaderTypeName; }
      set 
      { 
        if(HasValueChanged(_ReaderTypeName, value, "ReaderTypeName"))
        {
          _ReaderTypeName = value; 
          RaisePropertyChanged("ReaderTypeName");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Model value
    /// </summary>
    
    [DataMember]
    
    public string Model 
    { 
      get { return _Model; }
      set 
      { 
        if(HasValueChanged(_Model, value, "Model"))
        {
          _Model = value; 
          RaisePropertyChanged("Model");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Description value
    /// </summary>
    
    [DataMember]
    
    public string Description 
    { 
      get { return _Description; }
      set 
      { 
        if(HasValueChanged(_Description, value, "Description"))
        {
          _Description = value; 
          RaisePropertyChanged("Description");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Insert Name value
    /// </summary>
    
    [DataMember]
    
    public string InsertName 
    { 
      get { return _InsertName; }
      set 
      { 
        if(HasValueChanged(_InsertName, value, "InsertName"))
        {
          _InsertName = value; 
          RaisePropertyChanged("InsertName");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Insert Date value
    /// </summary>
    
    [DataMember]
    
    public DateTimeOffset InsertDate 
    { 
      get { return _InsertDate; }
      set 
      { 
        if(HasValueChanged(_InsertDate, value, "InsertDate"))
        {
          _InsertDate = value; 
          RaisePropertyChanged("InsertDate");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Update Name value
    /// </summary>
    
    [DataMember]
    
    public string UpdateName 
    { 
      get { return _UpdateName; }
      set 
      { 
        if(HasValueChanged(_UpdateName, value, "UpdateName"))
        {
          _UpdateName = value; 
          RaisePropertyChanged("UpdateName");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Update Date value
    /// </summary>
    
    [DataMember]
    
    public DateTimeOffset UpdateDate 
    { 
      get { return _UpdateDate; }
      set 
      { 
        if(HasValueChanged(_UpdateDate, value, "UpdateDate"))
        {
          _UpdateDate = value; 
          RaisePropertyChanged("UpdateDate");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Concurrency Value value
    /// </summary>
    
    [DataMember]
    
    public short ConcurrencyValue 
    { 
      get { return _ConcurrencyValue; }
      set 
      { 
        if(HasValueChanged(_ConcurrencyValue, value, "ConcurrencyValue"))
        {
          _ConcurrencyValue = value; 
          RaisePropertyChanged("ConcurrencyValue");
        }
      } 
    }
        

        /// <summary>
    /// Get/Set the Credential Reader Type UidOld value
    /// </summary>
    
    public Guid CredentialReaderTypeUidOld
    { 
      get { return _CredentialReaderTypeUidOld; }
      set 
      { 
        if(HasValueChanged(_CredentialReaderTypeUidOld, value, "CredentialReaderTypeUid"))
        {
          _CredentialReaderTypeUidOld = value; 
          RaisePropertyChanged("CredentialReaderTypeUidOld");
        }
      } 
    }
    #endregion
  }
}
