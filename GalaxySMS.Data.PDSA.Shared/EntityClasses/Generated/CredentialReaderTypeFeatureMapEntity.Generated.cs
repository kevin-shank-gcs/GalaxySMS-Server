using System;
using System.ComponentModel;
using System.Runtime.Serialization;


using PDSA.Validation;

namespace GalaxySMS.EntityLayer
{
  /// <summary>
  /// This class contains properties for each data value that makes up a CredentialReaderTypeFeatureMapPDSA.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
  /// </summary>
  
  public partial class CredentialReaderTypeFeatureMapPDSA : PDSAEntityBase
  {
    #region Private Variables
    private Guid _CredentialReaderTypeFeatureMapUid = Guid.NewGuid();
    private Guid _CredentialReaderTypeUid = Guid.NewGuid();
    private Guid _FeatureUid = Guid.NewGuid();
    private bool? _IsSupported = false;
    private bool? _IsActive = false;
    private string _InsertName = string.Empty;
    private DateTimeOffset _InsertDate = DateTimeOffset.Now;
    private string _UpdateName = string.Empty;
    private DateTimeOffset _UpdateDate = DateTimeOffset.Now;
    private short _ConcurrencyValue = 0;
    private Guid _CredentialReaderTypeFeatureMapUidOld = Guid.NewGuid();
    #endregion
    
    #region Public Properties
    /// <summary>
    /// Get/Set the Credential Reader Type Feature Map Uid value
    /// </summary>
    
    [DataMember]
    
    public Guid CredentialReaderTypeFeatureMapUid 
    { 
      get { return _CredentialReaderTypeFeatureMapUid; }
      set 
      { 
        if(HasValueChanged(_CredentialReaderTypeFeatureMapUid, value, "CredentialReaderTypeFeatureMapUid"))
        {
          _CredentialReaderTypeFeatureMapUid = value; 
          RaisePropertyChanged("CredentialReaderTypeFeatureMapUid");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Credential Reader Type Uid value
    /// </summary>
    
    [DataMember]
    
    public Guid CredentialReaderTypeUid 
    { 
      get { return _CredentialReaderTypeUid; }
      set 
      { 
        if(HasValueChanged(_CredentialReaderTypeUid, value, "CredentialReaderTypeUid"))
        {
          _CredentialReaderTypeUid = value; 
          RaisePropertyChanged("CredentialReaderTypeUid");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Feature Uid value
    /// </summary>
    
    [DataMember]
    
    public Guid FeatureUid 
    { 
      get { return _FeatureUid; }
      set 
      { 
        if(HasValueChanged(_FeatureUid, value, "FeatureUid"))
        {
          _FeatureUid = value; 
          RaisePropertyChanged("FeatureUid");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Is Supported value
    /// </summary>
    
    [DataMember]
    
    public bool? IsSupported 
    { 
      get { return _IsSupported; }
      set 
      { 
        if(HasValueChanged(_IsSupported, value, "IsSupported"))
        {
          _IsSupported = value; 
          RaisePropertyChanged("IsSupported");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Is Active value
    /// </summary>
    
    [DataMember]
    
    public bool? IsActive 
    { 
      get { return _IsActive; }
      set 
      { 
        if(HasValueChanged(_IsActive, value, "IsActive"))
        {
          _IsActive = value; 
          RaisePropertyChanged("IsActive");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Insert Name value
    /// </summary>
    
    [DataMember]
    
    public string InsertName 
    { 
      get { return _InsertName; }
      set 
      { 
        if(HasValueChanged(_InsertName, value, "InsertName"))
        {
          _InsertName = value; 
          RaisePropertyChanged("InsertName");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Insert Date value
    /// </summary>
    
    [DataMember]
    
    public DateTimeOffset InsertDate 
    { 
      get { return _InsertDate; }
      set 
      { 
        if(HasValueChanged(_InsertDate, value, "InsertDate"))
        {
          _InsertDate = value; 
          RaisePropertyChanged("InsertDate");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Update Name value
    /// </summary>
    
    [DataMember]
    
    public string UpdateName 
    { 
      get { return _UpdateName; }
      set 
      { 
        if(HasValueChanged(_UpdateName, value, "UpdateName"))
        {
          _UpdateName = value; 
          RaisePropertyChanged("UpdateName");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Update Date value
    /// </summary>
    
    [DataMember]
    
    public DateTimeOffset UpdateDate 
    { 
      get { return _UpdateDate; }
      set 
      { 
        if(HasValueChanged(_UpdateDate, value, "UpdateDate"))
        {
          _UpdateDate = value; 
          RaisePropertyChanged("UpdateDate");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Concurrency Value value
    /// </summary>
    
    [DataMember]
    
    public short ConcurrencyValue 
    { 
      get { return _ConcurrencyValue; }
      set 
      { 
        if(HasValueChanged(_ConcurrencyValue, value, "ConcurrencyValue"))
        {
          _ConcurrencyValue = value; 
          RaisePropertyChanged("ConcurrencyValue");
        }
      } 
    }
        

        /// <summary>
    /// Get/Set the Credential Reader Type Feature Map UidOld value
    /// </summary>
    
    public Guid CredentialReaderTypeFeatureMapUidOld
    { 
      get { return _CredentialReaderTypeFeatureMapUidOld; }
      set 
      { 
        if(HasValueChanged(_CredentialReaderTypeFeatureMapUidOld, value, "CredentialReaderTypeFeatureMapUid"))
        {
          _CredentialReaderTypeFeatureMapUidOld = value; 
          RaisePropertyChanged("CredentialReaderTypeFeatureMapUidOld");
        }
      } 
    }
    #endregion
  }
}
