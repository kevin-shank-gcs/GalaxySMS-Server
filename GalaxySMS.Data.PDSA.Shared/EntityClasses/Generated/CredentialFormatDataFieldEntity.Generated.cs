using System;
using System.ComponentModel;
using System.Runtime.Serialization;


using PDSA.Validation;

namespace GalaxySMS.EntityLayer
{
  /// <summary>
  /// This class contains properties for each data value that makes up a CredentialFormatDataFieldPDSA.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
  /// </summary>
  
  public partial class CredentialFormatDataFieldPDSA : PDSAEntityBase
  {
    #region Private Variables
    private Guid _CredentialFormatDataFieldUid = Guid.Empty;
    private Guid _CredentialFormatUid = Guid.Empty;
    private Guid _DisplayResourceKey = Guid.Empty;
    private Guid _DescriptionResourceKey = Guid.Empty;
    private string _FieldName = string.Empty;
    private string _Display = string.Empty;
    private string _Description = string.Empty;
    private short _StartsAt = 0;
    private short _BitLength = 0;
    private ulong _MinimumValue = 0;
    private ulong _MaximumValue = 0;
    private short _FieldNumber = 0;
    private bool _IsReadOnly = false;
    private bool _IsVisible = false;
    private ulong _DefaultValue = 0;
    private string _InsertName = string.Empty;
    private DateTimeOffset _InsertDate = DateTimeOffset.Now;
    private string _UpdateName = string.Empty;
    private DateTimeOffset _UpdateDate = DateTimeOffset.Now;
    private short _ConcurrencyValue = 0;
    private Guid _CredentialFormatDataFieldUidOld = Guid.Empty;
    #endregion
    
    #region Public Properties
    /// <summary>
    /// Get/Set the Credential Format Data Field Uid value
    /// </summary>
    
    [DataMember]
    
    public Guid CredentialFormatDataFieldUid 
    { 
      get { return _CredentialFormatDataFieldUid; }
      set 
      { 
        if(HasValueChanged(_CredentialFormatDataFieldUid, value, "CredentialFormatDataFieldUid"))
        {
          _CredentialFormatDataFieldUid = value; 
          RaisePropertyChanged("CredentialFormatDataFieldUid");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Credential Format Uid value
    /// </summary>
    
    [DataMember]
    
    public Guid CredentialFormatUid 
    { 
      get { return _CredentialFormatUid; }
      set 
      { 
        if(HasValueChanged(_CredentialFormatUid, value, "CredentialFormatUid"))
        {
          _CredentialFormatUid = value; 
          RaisePropertyChanged("CredentialFormatUid");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Display Resource Key value
    /// </summary>
    
    [DataMember]
    
    public Guid DisplayResourceKey 
    { 
      get { return _DisplayResourceKey; }
      set 
      { 
        if(HasValueChanged(_DisplayResourceKey, value, "DisplayResourceKey"))
        {
          _DisplayResourceKey = value; 
          RaisePropertyChanged("DisplayResourceKey");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Description Resource Key value
    /// </summary>
    
    [DataMember]
    
    public Guid DescriptionResourceKey 
    { 
      get { return _DescriptionResourceKey; }
      set 
      { 
        if(HasValueChanged(_DescriptionResourceKey, value, "DescriptionResourceKey"))
        {
          _DescriptionResourceKey = value; 
          RaisePropertyChanged("DescriptionResourceKey");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Field Name value
    /// </summary>
    
    [DataMember]
    
    public string FieldName 
    { 
      get { return _FieldName; }
      set 
      { 
        if(HasValueChanged(_FieldName, value, "FieldName"))
        {
          _FieldName = value; 
          RaisePropertyChanged("FieldName");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Display value
    /// </summary>
    
    [DataMember]
    
    public string Display 
    { 
      get { return _Display; }
      set 
      { 
        if(HasValueChanged(_Display, value, "Display"))
        {
          _Display = value; 
          RaisePropertyChanged("Display");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Description value
    /// </summary>
    
    [DataMember]
    
    public string Description 
    { 
      get { return _Description; }
      set 
      { 
        if(HasValueChanged(_Description, value, "Description"))
        {
          _Description = value; 
          RaisePropertyChanged("Description");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Starts At value
    /// </summary>
    
    [DataMember]
    
    public short StartsAt 
    { 
      get { return _StartsAt; }
      set 
      { 
        if(HasValueChanged(_StartsAt, value, "StartsAt"))
        {
          _StartsAt = value; 
          RaisePropertyChanged("StartsAt");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Bit Length value
    /// </summary>
    
    [DataMember]
    
    public short BitLength 
    { 
      get { return _BitLength; }
      set 
      { 
        if(HasValueChanged(_BitLength, value, "BitLength"))
        {
          _BitLength = value; 
          RaisePropertyChanged("BitLength");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Minimum Value value
    /// </summary>
    
    [DataMember]
    
    public ulong MinimumValue 
    { 
      get { return _MinimumValue; }
      set 
      { 
        if(HasValueChanged(_MinimumValue, value, "MinimumValue"))
        {
          _MinimumValue = value; 
          RaisePropertyChanged("MinimumValue");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Maximum Value value
    /// </summary>
    
    [DataMember]
    
    public ulong MaximumValue 
    { 
      get { return _MaximumValue; }
      set 
      { 
        if(HasValueChanged(_MaximumValue, value, "MaximumValue"))
        {
          _MaximumValue = value; 
          RaisePropertyChanged("MaximumValue");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Field Number value
    /// </summary>
    
    [DataMember]
    
    public short FieldNumber 
    { 
      get { return _FieldNumber; }
      set 
      { 
        if(HasValueChanged(_FieldNumber, value, "FieldNumber"))
        {
          _FieldNumber = value; 
          RaisePropertyChanged("FieldNumber");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Is Read Only value
    /// </summary>
    
    [DataMember]
    
    public bool IsReadOnly 
    { 
      get { return _IsReadOnly; }
      set 
      { 
        if(HasValueChanged(_IsReadOnly, value, "IsReadOnly"))
        {
          _IsReadOnly = value; 
          RaisePropertyChanged("IsReadOnly");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Is Visible value
    /// </summary>
    
    [DataMember]
    
    public bool IsVisible 
    { 
      get { return _IsVisible; }
      set 
      { 
        if(HasValueChanged(_IsVisible, value, "IsVisible"))
        {
          _IsVisible = value; 
          RaisePropertyChanged("IsVisible");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Default Value value
    /// </summary>
    
    [DataMember]
    
    public ulong DefaultValue 
    { 
      get { return _DefaultValue; }
      set 
      { 
        if(HasValueChanged(_DefaultValue, value, "DefaultValue"))
        {
          _DefaultValue = value; 
          RaisePropertyChanged("DefaultValue");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Insert Name value
    /// </summary>
    
    [DataMember]
    
    public string InsertName 
    { 
      get { return _InsertName; }
      set 
      { 
        if(HasValueChanged(_InsertName, value, "InsertName"))
        {
          _InsertName = value; 
          RaisePropertyChanged("InsertName");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Insert Date value
    /// </summary>
    
    [DataMember]
    
    public DateTimeOffset InsertDate 
    { 
      get { return _InsertDate; }
      set 
      { 
        if(HasValueChanged(_InsertDate, value, "InsertDate"))
        {
          _InsertDate = value; 
          RaisePropertyChanged("InsertDate");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Update Name value
    /// </summary>
    
    [DataMember]
    
    public string UpdateName 
    { 
      get { return _UpdateName; }
      set 
      { 
        if(HasValueChanged(_UpdateName, value, "UpdateName"))
        {
          _UpdateName = value; 
          RaisePropertyChanged("UpdateName");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Update Date value
    /// </summary>
    
    [DataMember]
    
    public DateTimeOffset UpdateDate 
    { 
      get { return _UpdateDate; }
      set 
      { 
        if(HasValueChanged(_UpdateDate, value, "UpdateDate"))
        {
          _UpdateDate = value; 
          RaisePropertyChanged("UpdateDate");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Concurrency Value value
    /// </summary>
    
    [DataMember]
    
    public short ConcurrencyValue 
    { 
      get { return _ConcurrencyValue; }
      set 
      { 
        if(HasValueChanged(_ConcurrencyValue, value, "ConcurrencyValue"))
        {
          _ConcurrencyValue = value; 
          RaisePropertyChanged("ConcurrencyValue");
        }
      } 
    }
        

        /// <summary>
    /// Get/Set the Credential Format Data Field UidOld value
    /// </summary>
    
    public Guid CredentialFormatDataFieldUidOld
    { 
      get { return _CredentialFormatDataFieldUidOld; }
      set 
      { 
        if(HasValueChanged(_CredentialFormatDataFieldUidOld, value, "CredentialFormatDataFieldUid"))
        {
          _CredentialFormatDataFieldUidOld = value; 
          RaisePropertyChanged("CredentialFormatDataFieldUidOld");
        }
      } 
    }
    #endregion
  }
}
