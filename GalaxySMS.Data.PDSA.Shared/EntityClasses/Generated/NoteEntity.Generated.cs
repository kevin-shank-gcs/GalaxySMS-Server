using System;
using System.ComponentModel;
using System.Runtime.Serialization;


using PDSA.Validation;

namespace GalaxySMS.EntityLayer
{
  /// <summary>
  /// This class contains properties for each data value that makes up a NotePDSA.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
  /// </summary>
  
  public partial class NotePDSA : PDSAEntityBase
  {
    #region Private Variables
    private Guid _NoteUid = Guid.Empty;
    private string _Category = string.Empty;
    private string _NoteText = string.Empty;
    private byte[] _Photo = null;
    private byte[] _Document = null;
    private string _InsertName = string.Empty;
    private DateTimeOffset _InsertDate = DateTimeOffset.Now;
    private string _UpdateName = string.Empty;
    private DateTimeOffset _UpdateDate = DateTimeOffset.Now;
    private short _ConcurrencyValue = 0;
    private Guid _AccessPortalUid = Guid.Empty;
    private Guid _PersonUid = Guid.Empty;
    private Guid _NoteUidOld = Guid.Empty;
    #endregion
    
    #region Public Properties
    /// <summary>
    /// Get/Set the Note Uid value
    /// </summary>
    
    [DataMember]
    
    public Guid NoteUid 
    { 
      get { return _NoteUid; }
      set 
      { 
        if(HasValueChanged(_NoteUid, value, "NoteUid"))
        {
          _NoteUid = value; 
          RaisePropertyChanged("NoteUid");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Category value
    /// </summary>
    
    [DataMember]
    
    public string Category 
    { 
      get { return _Category; }
      set 
      { 
        if(HasValueChanged(_Category, value, "Category"))
        {
          _Category = value; 
          RaisePropertyChanged("Category");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Note Text value
    /// </summary>
    
    [DataMember]
    
    public string NoteText 
    { 
      get { return _NoteText; }
      set 
      { 
        if(HasValueChanged(_NoteText, value, "NoteText"))
        {
          _NoteText = value; 
          RaisePropertyChanged("NoteText");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Photo value
    /// </summary>
    
    [DataMember]
    
    public byte[] Photo 
    { 
      get { return _Photo; }
      set 
      { 
        if(HasValueChanged(_Photo, value, "Photo"))
        {
          _Photo = value; 
          RaisePropertyChanged("Photo");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Document value
    /// </summary>
    
    [DataMember]
    
    public byte[] Document 
    { 
      get { return _Document; }
      set 
      { 
        if(HasValueChanged(_Document, value, "Document"))
        {
          _Document = value; 
          RaisePropertyChanged("Document");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Insert Name value
    /// </summary>
    
    [DataMember]
    
    public string InsertName 
    { 
      get { return _InsertName; }
      set 
      { 
        if(HasValueChanged(_InsertName, value, "InsertName"))
        {
          _InsertName = value; 
          RaisePropertyChanged("InsertName");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Insert Date value
    /// </summary>
    
    [DataMember]
    
    public DateTimeOffset InsertDate 
    { 
      get { return _InsertDate; }
      set 
      { 
        if(HasValueChanged(_InsertDate, value, "InsertDate"))
        {
          _InsertDate = value; 
          RaisePropertyChanged("InsertDate");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Update Name value
    /// </summary>
    
    [DataMember]
    
    public string UpdateName 
    { 
      get { return _UpdateName; }
      set 
      { 
        if(HasValueChanged(_UpdateName, value, "UpdateName"))
        {
          _UpdateName = value; 
          RaisePropertyChanged("UpdateName");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Update Date value
    /// </summary>
    
    [DataMember]
    
    public DateTimeOffset UpdateDate 
    { 
      get { return _UpdateDate; }
      set 
      { 
        if(HasValueChanged(_UpdateDate, value, "UpdateDate"))
        {
          _UpdateDate = value; 
          RaisePropertyChanged("UpdateDate");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Concurrency Value value
    /// </summary>
    
    [DataMember]
    
    public short ConcurrencyValue 
    { 
      get { return _ConcurrencyValue; }
      set 
      { 
        if(HasValueChanged(_ConcurrencyValue, value, "ConcurrencyValue"))
        {
          _ConcurrencyValue = value; 
          RaisePropertyChanged("ConcurrencyValue");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Access Portal Uid value
    /// </summary>
    
    [DataMember]
    
    public Guid AccessPortalUid 
    { 
      get { return _AccessPortalUid; }
      set 
      { 
        if(HasValueChanged(_AccessPortalUid, value, "AccessPortalUid"))
        {
          _AccessPortalUid = value; 
          RaisePropertyChanged("AccessPortalUid");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Person Uid value
    /// </summary>
    
    [DataMember]
    
    public Guid PersonUid 
    { 
      get { return _PersonUid; }
      set 
      { 
        if(HasValueChanged(_PersonUid, value, "PersonUid"))
        {
          _PersonUid = value; 
          RaisePropertyChanged("PersonUid");
        }
      } 
    }
        

        /// <summary>
    /// Get/Set the Note UidOld value
    /// </summary>
    
    public Guid NoteUidOld
    { 
      get { return _NoteUidOld; }
      set 
      { 
        if(HasValueChanged(_NoteUidOld, value, "NoteUid"))
        {
          _NoteUidOld = value; 
          RaisePropertyChanged("NoteUidOld");
        }
      } 
    }
    #endregion
  }
}
