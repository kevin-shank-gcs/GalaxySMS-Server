using System;
using System.Data;
using System.Text;

using PDSA.Common;
using PDSA.DataLayer;
using PDSA.DataLayer.DataClasses;
using PDSA.Validation;

using GalaxySMS.EntityLayer;
using GalaxySMS.ValidationLayer;

namespace GalaxySMS.DataLayer
{
  /// <summary>
  /// Used to Select data from the DateTypeDefaultBehavior_PanelLoadDataPDSA view.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public partial class DateTypeDefaultBehavior_PanelLoadDataPDSAData : PDSADataClassReadOnly
  {
    #region Constructors
    /// <summary>
    /// Constructor for the DateTypeDefaultBehavior_PanelLoadDataPDSAData class
    /// </summary>
    public DateTypeDefaultBehavior_PanelLoadDataPDSAData() : base()
    {
      Entity = new DateTypeDefaultBehavior_PanelLoadDataPDSA();
      ValidatorObject = new DateTypeDefaultBehavior_PanelLoadDataPDSAValidator(Entity);

      Init();
    }
    
    /// <summary>
    /// Constructor for the DateTypeDefaultBehavior_PanelLoadDataPDSAData class
    /// </summary>
    /// <param name="dataProvider">An instance of a PDSADataProvider</param>
    /// <param name="entity">An instance of a DateTypeDefaultBehavior_PanelLoadDataPDSA</param>
    public DateTypeDefaultBehavior_PanelLoadDataPDSAData(PDSADataProvider dataProvider,
      DateTypeDefaultBehavior_PanelLoadDataPDSA entity)
      : base(dataProvider)
    {
      Entity = entity;
      ValidatorObject = new DateTypeDefaultBehavior_PanelLoadDataPDSAValidator(Entity);

      Init();
    }
     
    /// <summary>
    /// Constructor for the DateTypeDefaultBehavior_PanelLoadDataPDSAData class
    /// </summary>
    /// <param name="dataProvider">An instance of a PDSADataProvider</param>
    /// <param name="entity">An instance of a DateTypeDefaultBehavior_PanelLoadDataPDSA</param>
    /// <param name="validator">An instance of a DateTypeDefaultBehavior_PanelLoadDataPDSAValidator</param>
    public DateTypeDefaultBehavior_PanelLoadDataPDSAData(PDSADataProvider dataProvider,
      DateTypeDefaultBehavior_PanelLoadDataPDSA entity, DateTypeDefaultBehavior_PanelLoadDataPDSAValidator validator)
      : base(dataProvider, entity, validator)
    {
      Entity = entity;
      ValidatorObject = validator;

      Init();
    }
    #endregion

    #region Filter Properties and Enumerations
    /// <summary>
    /// Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
    /// </summary>
    public enum SelectFilters
    {
      
      /// <summary>
      /// 'All' SelectFilter
      /// </summary>
      All
      ,
      /// <summary>
      /// 'Search' SelectFilter
      /// </summary>
      Search
      ,
      /// <summary>
      /// A Custom SelectFilter
      /// </summary>
      Custom
    }

    /// <summary>
    /// Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
    /// </summary>
    public enum WhereFilters
    {
      /// <summary>
      /// No WhereFilter Selected
      /// </summary>
      None,
      /// <summary>
      /// A Custom WhereFilter
      /// </summary>
      Custom
      ,
      /// <summary>
      /// 'EntityName' WhereFilter
      /// </summary>
      EntityName
      ,
      /// <summary>
      /// 'LikeEntityName' WhereFilter
      /// </summary>
      LikeEntityName
    }

    /// <summary>
    /// Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
    /// </summary>
    public enum OrderByFilters
    {
      /// <summary>
      /// No OrderByFilter Selected
      /// </summary>
      None,
      /// <summary>
      /// A Custom OrderByFilter
      /// </summary>
      Custom
      ,
      /// <summary>
      /// 'EntityName' OrderByFilter
      /// </summary>
      EntityName
    }
    
    /// <summary>
    /// Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
    /// </summary>
    public enum RowCountFilters
    {
      
      /// <summary>
      /// 'All' RowCountFilter
      /// </summary>
      All
      ,
      /// <summary>
      /// A Custom OrderByFilter
      /// </summary>
      Custom
    }

    /// <summary>
    /// Get/Set a Dynamic SQL to execute to return data.
    /// </summary>
    public SelectFilters SelectFilter { get; set; }
    /// <summary>
    /// Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
    /// </summary>
    public WhereFilters WhereFilter { get; set; }
    /// <summary>
    /// Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
    /// </summary>
    public OrderByFilters OrderByFilter { get; set; }
    /// <summary>
    /// Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
    /// </summary>
    public RowCountFilters RowCountFilter { get; set; }
    #endregion

    #region Public Property Entity Class
        private DateTypeDefaultBehavior_PanelLoadDataPDSA _EntityObject = null;

    /// <summary>
    /// Get/Set the Entity class that will be used to get and set properties/fields for this data class.
    /// </summary>
    public DateTypeDefaultBehavior_PanelLoadDataPDSA Entity 
    { 
      get { return _EntityObject; }
      set
      {
        _EntityObject = value;
        base.EntityObject = _EntityObject;
      } 
    }
    #endregion

    #region Init Method
    /// <summary>
    /// Initializes this class to a valid start state.
    /// </summary>
    protected override void Init()
    {
      ClassName = "DateTypeDefaultBehavior_PanelLoadDataPDSAData";
      DBObjectName = "GCS.DateTypeDefaultBehavior_PanelLoadData";
      SchemaName = "GCS";
      base.EntityObject = Entity;
      base.ValidatorObject = ValidatorObject;
      
      // Set Reference to ValidatorObject Properties Collection
      AllColumns = ValidatorObject.Properties;

      // Set any Initial Starting values for data columns
      InitDataColumns();
    }
    #endregion

    #region InitDataColumns Method
    /// <summary>
    /// Initializes all of the Data Columns with valid data for each field in the table.
    /// </summary>
    protected override void InitDataColumns()
    {
      PDSAProperty prop;

      // Fill in Column Properties
      prop = ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.DateTypeDefaultBehaviorUid);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlGuid.Null;
      //prop.ValueForNull = Guid.Empty;

      prop = ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.EntityId);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlGuid.Null;
      //prop.ValueForNull = Guid.Empty;

      prop = ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.EntityName);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.SundayDayCode);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt16.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.MondayDayCode);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt16.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.TuesdayDayCode);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt16.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.WednesdayDayCode);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt16.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.ThursdayDayCode);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt16.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.FridayDayCode);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt16.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.SaturdayDayCode);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt16.Null;
      //prop.ValueForNull = 0;

    }
    #endregion

    #region EntityDataToColumnCollection Method
    /// <summary>
    /// Moves the data from the Entity class into the Columns collection
    /// This is called prior to performing a Business Rule Check or an INSERT, UPDATE or DELETE
    /// </summary>
    protected override void EntityDataToColumnCollection()
    {
      // Move all Entity Values into Properties Collection
      ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.DateTypeDefaultBehaviorUid).Value = Entity.DateTypeDefaultBehaviorUid;
      if (ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.DateTypeDefaultBehaviorUid).SetAsNull == true)
        Entity.DateTypeDefaultBehaviorUid = Guid.Empty;
      ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.EntityId).Value = Entity.EntityId;
      if (ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.EntityId).SetAsNull == true)
        Entity.EntityId = Guid.Empty;
      ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.EntityName).Value = Entity.EntityName;
      if (ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.EntityName).SetAsNull == true)
        Entity.EntityName = string.Empty;
      ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.SundayDayCode).Value = Entity.SundayDayCode;
      if (ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.SundayDayCode).SetAsNull == true)
        Entity.SundayDayCode = 0;
      ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.MondayDayCode).Value = Entity.MondayDayCode;
      if (ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.MondayDayCode).SetAsNull == true)
        Entity.MondayDayCode = 0;
      ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.TuesdayDayCode).Value = Entity.TuesdayDayCode;
      if (ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.TuesdayDayCode).SetAsNull == true)
        Entity.TuesdayDayCode = 0;
      ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.WednesdayDayCode).Value = Entity.WednesdayDayCode;
      if (ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.WednesdayDayCode).SetAsNull == true)
        Entity.WednesdayDayCode = 0;
      ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.ThursdayDayCode).Value = Entity.ThursdayDayCode;
      if (ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.ThursdayDayCode).SetAsNull == true)
        Entity.ThursdayDayCode = 0;
      ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.FridayDayCode).Value = Entity.FridayDayCode;
      if (ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.FridayDayCode).SetAsNull == true)
        Entity.FridayDayCode = 0;
      ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.SaturdayDayCode).Value = Entity.SaturdayDayCode;
      if (ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.SaturdayDayCode).SetAsNull == true)
        Entity.SaturdayDayCode = 0;
    }
    #endregion

    #region ColumnCollectionToEntityData Method
    /// <summary>
    /// Moves the data from the Columns collection into the Entity class.
    /// This is called whenever you are reading data in from a database.
    ///   For example, from BuildCollection, Load, LoadByPK, etc.
    /// </summary>
    protected override void ColumnCollectionToEntityData()
    {
      if (ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.DateTypeDefaultBehaviorUid).IsNull == false)
        Entity.DateTypeDefaultBehaviorUid = ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.DateTypeDefaultBehaviorUid).GetAsGuid();
      else
        Entity.DateTypeDefaultBehaviorUid = Guid.Empty;
      Entity.SetOriginalValueForProperty(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.DateTypeDefaultBehaviorUid, ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.DateTypeDefaultBehaviorUid).Value);

      if (ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.EntityId).IsNull == false)
        Entity.EntityId = ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.EntityId).GetAsGuid();
      else
        Entity.EntityId = Guid.Empty;
      Entity.SetOriginalValueForProperty(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.EntityId, ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.EntityId).Value);

      if (ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.EntityName).IsNull == false)
        Entity.EntityName = ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.EntityName).GetAsString();
      else
        Entity.EntityName = string.Empty;
      Entity.SetOriginalValueForProperty(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.EntityName, ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.EntityName).Value);

      if (ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.SundayDayCode).IsNull == false)
        Entity.SundayDayCode = ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.SundayDayCode).GetAsShort();
      else
        Entity.SundayDayCode = 0;
      Entity.SetOriginalValueForProperty(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.SundayDayCode, ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.SundayDayCode).Value);

      if (ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.MondayDayCode).IsNull == false)
        Entity.MondayDayCode = ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.MondayDayCode).GetAsShort();
      else
        Entity.MondayDayCode = 0;
      Entity.SetOriginalValueForProperty(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.MondayDayCode, ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.MondayDayCode).Value);

      if (ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.TuesdayDayCode).IsNull == false)
        Entity.TuesdayDayCode = ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.TuesdayDayCode).GetAsShort();
      else
        Entity.TuesdayDayCode = 0;
      Entity.SetOriginalValueForProperty(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.TuesdayDayCode, ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.TuesdayDayCode).Value);

      if (ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.WednesdayDayCode).IsNull == false)
        Entity.WednesdayDayCode = ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.WednesdayDayCode).GetAsShort();
      else
        Entity.WednesdayDayCode = 0;
      Entity.SetOriginalValueForProperty(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.WednesdayDayCode, ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.WednesdayDayCode).Value);

      if (ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.ThursdayDayCode).IsNull == false)
        Entity.ThursdayDayCode = ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.ThursdayDayCode).GetAsShort();
      else
        Entity.ThursdayDayCode = 0;
      Entity.SetOriginalValueForProperty(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.ThursdayDayCode, ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.ThursdayDayCode).Value);

      if (ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.FridayDayCode).IsNull == false)
        Entity.FridayDayCode = ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.FridayDayCode).GetAsShort();
      else
        Entity.FridayDayCode = 0;
      Entity.SetOriginalValueForProperty(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.FridayDayCode, ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.FridayDayCode).Value);

      if (ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.SaturdayDayCode).IsNull == false)
        Entity.SaturdayDayCode = ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.SaturdayDayCode).GetAsShort();
      else
        Entity.SaturdayDayCode = 0;
      Entity.SetOriginalValueForProperty(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.SaturdayDayCode, ValidatorObject.Properties.GetByName(DateTypeDefaultBehavior_PanelLoadDataPDSAValidator.ColumnNames.SaturdayDayCode).Value);

    }
    #endregion

    #region CreateEntityFromDataRow Method
    /// <summary>
    /// Creates an Entity object from a DataRow object.
    /// </summary>
    /// <param name="dr">DataRow object with all fields from the table in it.</param>
    /// <returns>DateTypeDefaultBehavior_PanelLoadDataPDSA</returns>
    public DateTypeDefaultBehavior_PanelLoadDataPDSA CreateEntityFromDataRow(DataRow dr)
    {
      // Create new Entity Object
      Entity = new DateTypeDefaultBehavior_PanelLoadDataPDSA();

      // Move all data into Properties collection
      // This method calls the ColumnCollectionToEntityData method
      DataRowToProperties(dr);
      Entity.IsDirty = false;

      return Entity;
    }
    #endregion

    #region SelectSQL Method
    /// <summary>
    /// Builds the SQL for the SELECT statement based on the SelectFilter property.
    /// </summary>
    /// <returns>string</returns>
    public override string SelectSQL()
    {
      StringBuilder sb = new StringBuilder(SB_INIT_LENGTH);

      switch (SelectFilter)
      {
        case SelectFilters.All:
          sb.Append(" SELECT DateTypeDefaultBehaviorUid, EntityId, EntityName, SundayDayCode, MondayDayCode, TuesdayDayCode, WednesdayDayCode, ThursdayDayCode, FridayDayCode, SaturdayDayCode FROM GCS.DateTypeDefaultBehavior_PanelLoadData");

          
          break;
        case SelectFilters.Search:
          sb.Append(" SELECT DateTypeDefaultBehaviorUid, EntityId, EntityName, SundayDayCode, MondayDayCode, TuesdayDayCode, WednesdayDayCode, ThursdayDayCode, FridayDayCode, SaturdayDayCode FROM GCS.DateTypeDefaultBehavior_PanelLoadData WHERE (@EntityName IS NULL OR EntityName LIKE @EntityName + '%')");

          
          break;

        case SelectFilters.Custom:
          sb.Append(SelectCustom);

          break;          
      }

      SQL = sb.ToString();

      return SQL;
    }
    #endregion

    #region RowCountSQL Method
    /// <summary>
    /// Builds the SELECT Count(*) SQL that will count the number of rows returned from this view.
    /// </summary>
    /// <returns>string</returns>
    public override string RowCountSQL()
    {
      StringBuilder sb = new StringBuilder(SB_INIT_LENGTH);

      switch (RowCountFilter)
      {
        case RowCountFilters.All:
          sb.Append(" SELECT Count(*) As NumRecs FROM GCS.DateTypeDefaultBehavior_PanelLoadData");

          
          break;

        case RowCountFilters.Custom:
          sb.Append(RowCountCustom);

          break;          
      }

      sb.Append(WhereClauseSQL());
     
      SQL = sb.ToString();

      return SQL;
    }
    #endregion
    
    #region WhereClauseSQL Method
    /// <summary>
    /// Builds the WHERE clause to be used in combination with a SELECT statement.
    /// </summary>
    /// <returns>string</returns>
    public override string WhereClauseSQL()
    {
      StringBuilder sb = new StringBuilder(SB_INIT_LENGTH);

      switch (WhereFilter)
      {
        case WhereFilters.Custom:
          sb.Append(" " + WhereCustom);

          break;

        case WhereFilters.None:
          //  Do nothing

          break;

        case WhereFilters.EntityName:
          sb.Append(" WHERE EntityName = @EntityName");

          
          break;
        case WhereFilters.LikeEntityName:
          sb.Append(" WHERE EntityName LIKE @EntityName + '%'");

          
          break;
      }
      
      return sb.ToString();
    }
    #endregion

    #region SelectFillInParameters Method
    /// <summary>
    /// Builds the CommandObject.Parameters collection for any SELECT statement parameters.
    /// </summary>
    protected override void SelectFillInParameters()
    {
      switch (SelectFilter)
      {
        case SelectFilters.All:
         
          break;
        case SelectFilters.Search:
          CommandObject.Parameters.Add(DataProvider.CreateParameter("@EntityName", DbType.String, Entity.EntityName));
         
          break;
      }

      // Add on paging parameters
      if(UsePaging)
      {
        PagingFillInParameters(Entity.ResultSetRowNumberBegin, Entity.ResultSetRowNumberEnd);
      }
    }
    #endregion

    #region WhereClauseFillInParameters Method
    /// <summary>
    /// Builds the CommandObject.Parameters collection for any WHERE clause parameters.
    /// </summary>
    protected override void WhereClauseFillInParameters()
    {
      switch (WhereFilter)
      {
        case WhereFilters.EntityName:
          CommandObject.Parameters.Add(DataProvider.CreateParameter("@EntityName", DbType.String, Entity.EntityName));
         
          break;
        case WhereFilters.LikeEntityName:
          CommandObject.Parameters.Add(DataProvider.CreateParameter("@EntityName", DbType.String, Entity.EntityName));
         
          break;
      }
    }
    #endregion

    #region OrderByClauseSQL Method
    /// <summary>
    /// Builds the ORDER BY clause to be used in combination with a SELECT statement.
    /// </summary>
    /// <returns>string</returns>
    public override string OrderByClauseSQL()
    {
      StringBuilder sb = new StringBuilder(SB_INIT_LENGTH);

      switch (OrderByFilter)
      {
        case OrderByFilters.None:
          //  Do Nothing

          break;

        case OrderByFilters.Custom:
          sb.Append(" " + OrderByCustom);

          break;
          
        case OrderByFilters.EntityName:
          sb.Append(" ORDER BY EntityName");

          
          break;
      }

      return sb.ToString();
    }
    #endregion
    
    #region ColumnNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the DateTypeDefaultBehavior_PanelLoadDataPDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ColumnNames
    {
    /// <summary>
    /// Returns 'DateTypeDefaultBehaviorUid'
    /// </summary>
    public static string DateTypeDefaultBehaviorUid = "DateTypeDefaultBehaviorUid";
    /// <summary>
    /// Returns 'EntityId'
    /// </summary>
    public static string EntityId = "EntityId";
    /// <summary>
    /// Returns 'EntityName'
    /// </summary>
    public static string EntityName = "EntityName";
    /// <summary>
    /// Returns 'SundayDayCode'
    /// </summary>
    public static string SundayDayCode = "SundayDayCode";
    /// <summary>
    /// Returns 'MondayDayCode'
    /// </summary>
    public static string MondayDayCode = "MondayDayCode";
    /// <summary>
    /// Returns 'TuesdayDayCode'
    /// </summary>
    public static string TuesdayDayCode = "TuesdayDayCode";
    /// <summary>
    /// Returns 'WednesdayDayCode'
    /// </summary>
    public static string WednesdayDayCode = "WednesdayDayCode";
    /// <summary>
    /// Returns 'ThursdayDayCode'
    /// </summary>
    public static string ThursdayDayCode = "ThursdayDayCode";
    /// <summary>
    /// Returns 'FridayDayCode'
    /// </summary>
    public static string FridayDayCode = "FridayDayCode";
    /// <summary>
    /// Returns 'SaturdayDayCode'
    /// </summary>
    public static string SaturdayDayCode = "SaturdayDayCode";
    }
    #endregion
  }
}
