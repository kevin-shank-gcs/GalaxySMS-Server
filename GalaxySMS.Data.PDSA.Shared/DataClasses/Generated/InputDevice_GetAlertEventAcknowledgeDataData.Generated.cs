using System;
using System.Data;
using System.Text;

using PDSA.Common;
using PDSA.DataLayer;
using PDSA.DataLayer.DataClasses;
using PDSA.Validation;

using GalaxySMS.EntityLayer;
using GalaxySMS.ValidationLayer;

namespace GalaxySMS.DataLayer
{
  /// <summary>
  /// This class calls the stored procedure InputDevice_GetAlertEventAcknowledgeDataPDSA
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public class InputDevice_GetAlertEventAcknowledgeDataPDSAData : PDSAStoredProcReadOnly
  {
    #region Constructors
    /// <summary>
    /// Constructor for the InputDevice_GetAlertEventAcknowledgeDataPDSAData class
    /// </summary>
    public InputDevice_GetAlertEventAcknowledgeDataPDSAData() : base()
    {
      Entity = new InputDevice_GetAlertEventAcknowledgeDataPDSA();
      ValidatorObject = new  InputDevice_GetAlertEventAcknowledgeDataPDSAValidator(Entity);

      Init();
    }

    /// <summary>
    /// Constructor for the InputDevice_GetAlertEventAcknowledgeDataPDSAData class
    /// </summary>
    /// <param name="entity">An instance of a InputDevice_GetAlertEventAcknowledgeDataPDSA</param>
    public InputDevice_GetAlertEventAcknowledgeDataPDSAData(InputDevice_GetAlertEventAcknowledgeDataPDSA entity) : base()
    {
      Entity = entity;
      ValidatorObject = new InputDevice_GetAlertEventAcknowledgeDataPDSAValidator(Entity);
            
      Init();
    }
    
    /// <summary>
    /// Constructor for the InputDevice_GetAlertEventAcknowledgeDataPDSAData class
    /// </summary>
    /// <param name="dataProvider">An instance of a PDSADataProvider</param>
    /// <param name="entity">An instance of a InputDevice_GetAlertEventAcknowledgeDataPDSA</param>
    public InputDevice_GetAlertEventAcknowledgeDataPDSAData(PDSADataProvider dataProvider,
      InputDevice_GetAlertEventAcknowledgeDataPDSA entity)
      : base(dataProvider)
    {
      Entity = entity;
      ValidatorObject = new  InputDevice_GetAlertEventAcknowledgeDataPDSAValidator(Entity);
            
      Init();
    }
    
    /// <summary>
    /// Constructor for the InputDevice_GetAlertEventAcknowledgeDataPDSAData class
    /// </summary>
    /// <param name="dataProvider">An instance of a PDSADataProvider</param>
    /// <param name="entity">An instance of a InputDevice_GetAlertEventAcknowledgeDataPDSA</param>
    /// <param name="validator">An instance of a InputDevice_GetAlertEventAcknowledgeDataPDSAValidator</param>
    public InputDevice_GetAlertEventAcknowledgeDataPDSAData(PDSADataProvider dataProvider,
      InputDevice_GetAlertEventAcknowledgeDataPDSA entity, InputDevice_GetAlertEventAcknowledgeDataPDSAValidator validator)
      : base(dataProvider)
    {
      Entity = entity;
      ValidatorObject = validator;

      Init();
    }
    #endregion

    #region Public Property
    /// <summary>
    /// Get/Set the Entity class that will be used to get and set properties/fields for this data class.
    /// </summary>
    public InputDevice_GetAlertEventAcknowledgeDataPDSA Entity { get; set; }
    #endregion

    #region Init Method
    /// <summary>
    /// Initializes this class to a valid start state.
    /// </summary>
    protected override void Init()
    {
      ClassName = "InputDevice_GetAlertEventAcknowledgeDataPDSAData";
      StoredProcName = "InputDevice_GetAlertEventAcknowledgeData";
      SchemaName = "GCS";

      // Create Parameters
      InitParameters();

      // Create Data Columns
      InitDataColumns();
    }
    #endregion

   #region InitParameters Method
    /// <summary>
    /// Creates all the parameters for the stored procedure.
    /// </summary>
    protected override void InitParameters()
    {
      PDSADataParameter param;

      // Clear all parameters each time
      AllParameters.Clear();

      // Create each parameter object and add to Parameters Collection
      param = new PDSADataParameter();
      param.ParameterName = InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ParameterNames.InputDeviceUid;
      param.DBType = DbType.Guid;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ParameterNames.GalaxyPanelUid;
      param.DBType = DbType.Guid;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ParameterNames.RETURNVALUE;
      param.DBType = DbType.Int32;
      param.ParamDirection = ParameterDirection.ReturnValue;
      param.IsRefCursor = false;
      AllParameters.Add(param);

  
      AddReturnValueParameterToCollection();
    }
    #endregion

    #region InitDataColumns Method
    /// <summary>
    /// Initializes the Data Columns Collection for each field returned from the stored procedure.
    /// </summary>
    protected override void InitDataColumns()
    {
      PDSADataColumn dc;

      // Create each data column
      dc = PDSADataColumn.CreateDataColumn(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.InputDeviceUid, GetResourceMessage("GCS_InputDevice_GetAlertEventAcknowledgeDataPDSA_InputDeviceUid_Header", "Input Device Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.InputDeviceAlertEventTypeUid, GetResourceMessage("GCS_InputDevice_GetAlertEventAcknowledgeDataPDSA_InputDeviceAlertEventTypeUid_Header", "Input Device Alert Event Type Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.Tag, GetResourceMessage("GCS_InputDevice_GetAlertEventAcknowledgeDataPDSA_Tag_Header", "Tag"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.CanHaveAudio, GetResourceMessage("GCS_InputDevice_GetAlertEventAcknowledgeDataPDSA_CanHaveAudio_Header", "Can Have Audio"), false, typeof(bool), DbType.Boolean);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.CanHaveInstructions, GetResourceMessage("GCS_InputDevice_GetAlertEventAcknowledgeDataPDSA_CanHaveInstructions_Header", "Can Have Instructions"), false, typeof(bool), DbType.Boolean);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.CanHaveSchedule, GetResourceMessage("GCS_InputDevice_GetAlertEventAcknowledgeDataPDSA_CanHaveSchedule_Header", "Can Have Schedule"), false, typeof(bool), DbType.Boolean);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.AcknowledgeTimeScheduleUid, GetResourceMessage("GCS_InputDevice_GetAlertEventAcknowledgeDataPDSA_AcknowledgeTimeScheduleUid_Header", "Acknowledge Time Schedule Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.AcknowledgePriority, GetResourceMessage("GCS_InputDevice_GetAlertEventAcknowledgeDataPDSA_AcknowledgePriority_Header", "Acknowledge Priority"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.ResponseInstructions, GetResourceMessage("GCS_InputDevice_GetAlertEventAcknowledgeDataPDSA_ResponseInstructions_Header", "Response Instructions"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.ResponseInstructionsUid, GetResourceMessage("GCS_InputDevice_GetAlertEventAcknowledgeDataPDSA_ResponseInstructionsUid_Header", "Response Instructions Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.AudioBinaryResourceUid, GetResourceMessage("GCS_InputDevice_GetAlertEventAcknowledgeDataPDSA_AudioBinaryResourceUid_Header", "Audio Binary Resource Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.GalaxyPanelUid, GetResourceMessage("GCS_InputDevice_GetAlertEventAcknowledgeDataPDSA_GalaxyPanelUid_Header", "Galaxy Panel Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.ClusterUid, GetResourceMessage("GCS_InputDevice_GetAlertEventAcknowledgeDataPDSA_ClusterUid_Header", "Cluster Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.ScheduleTypeCode, GetResourceMessage("GCS_InputDevice_GetAlertEventAcknowledgeDataPDSA_ScheduleTypeCode_Header", "Schedule Type Code"), false, typeof(short), DbType.Int16);
      AllColumns.Add(dc);
    }
    #endregion

    #region EntityDataToParameterCollection Method
    /// <summary>
    /// Moves the data from the Entity class into the Parameters collection
    /// </summary>
    protected override void EntityDataToParameterCollection()
    {
      if (AllParameters.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ParameterNames.InputDeviceUid).SetAsNull == false)
        AllParameters.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ParameterNames.InputDeviceUid).Value = Entity.InputDeviceUid;
      else
        AllParameters.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ParameterNames.InputDeviceUid).Value = System.Data.SqlTypes.SqlGuid.Null;
      if (AllParameters.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ParameterNames.GalaxyPanelUid).SetAsNull == false)
        AllParameters.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ParameterNames.GalaxyPanelUid).Value = Entity.GalaxyPanelUid;
      else
        AllParameters.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ParameterNames.GalaxyPanelUid).Value = System.Data.SqlTypes.SqlGuid.Null;
    }
    #endregion

    #region EntityDataToColumnCollection Method
    /// <summary>
    /// Moves the data from the Entity class into the Columns collection
    /// </summary>
    protected override void EntityDataToColumnCollection()
    {
      if (AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.InputDeviceUid).SetAsNull == false)
        AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.InputDeviceUid).Value = Entity.InputDeviceUid;
      else
        AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.InputDeviceUid).Value = Guid.Empty;
     
      if (AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.InputDeviceAlertEventTypeUid).SetAsNull == false)
        AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.InputDeviceAlertEventTypeUid).Value = Entity.InputDeviceAlertEventTypeUid;
      else
        AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.InputDeviceAlertEventTypeUid).Value = Guid.Empty;
     
      if (AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.Tag).SetAsNull == false)
        AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.Tag).Value = Entity.Tag;
      else
        AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.Tag).Value = string.Empty;
     
      if (AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.CanHaveAudio).SetAsNull == false)
        AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.CanHaveAudio).Value = Entity.CanHaveAudio;
      else
        AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.CanHaveAudio).Value = false;
     
      if (AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.CanHaveInstructions).SetAsNull == false)
        AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.CanHaveInstructions).Value = Entity.CanHaveInstructions;
      else
        AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.CanHaveInstructions).Value = false;
     
      if (AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.CanHaveSchedule).SetAsNull == false)
        AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.CanHaveSchedule).Value = Entity.CanHaveSchedule;
      else
        AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.CanHaveSchedule).Value = false;
     
      if (AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.AcknowledgeTimeScheduleUid).SetAsNull == false)
        AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.AcknowledgeTimeScheduleUid).Value = Entity.AcknowledgeTimeScheduleUid;
      else
        AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.AcknowledgeTimeScheduleUid).Value = Guid.Empty;
     
      if (AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.AcknowledgePriority).SetAsNull == false)
        AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.AcknowledgePriority).Value = Entity.AcknowledgePriority;
      else
        AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.AcknowledgePriority).Value = 0;
     
      if (AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.ResponseInstructions).SetAsNull == false)
        AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.ResponseInstructions).Value = Entity.ResponseInstructions;
      else
        AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.ResponseInstructions).Value = string.Empty;
     
      if (AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.ResponseInstructionsUid).SetAsNull == false)
        AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.ResponseInstructionsUid).Value = Entity.ResponseInstructionsUid;
      else
        AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.ResponseInstructionsUid).Value = Guid.Empty;
     
      if (AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.AudioBinaryResourceUid).SetAsNull == false)
        AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.AudioBinaryResourceUid).Value = Entity.AudioBinaryResourceUid;
      else
        AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.AudioBinaryResourceUid).Value = Guid.Empty;
     
      if (AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.GalaxyPanelUid).SetAsNull == false)
        AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.GalaxyPanelUid).Value = Entity.GalaxyPanelUid;
      else
        AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.GalaxyPanelUid).Value = Guid.Empty;
     
      if (AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.ClusterUid).SetAsNull == false)
        AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.ClusterUid).Value = Entity.ClusterUid;
      else
        AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.ClusterUid).Value = Guid.Empty;
     
      if (AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.ScheduleTypeCode).SetAsNull == false)
        AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.ScheduleTypeCode).Value = Entity.ScheduleTypeCode;
      else
        AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.ScheduleTypeCode).Value = 0;
     
    }
    #endregion

    #region OutputParametersToEntityData Method
    /// <summary>
    /// Moves the output parameters from the Parameters collection into the Entity class.
    /// </summary>
    protected override void OutputParametersToEntityData()
    {
      if (AllParameters.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ParameterNames.RETURNVALUE).IsValueNull == false)
        Entity.RETURNVALUE = AllParameters.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ParameterNames.RETURNVALUE).GetAsInteger();
      else
        Entity.RETURNVALUE = 0;
    }
    #endregion
    
    #region ColumnCollectionToEntityData Method
    /// <summary>
    /// Moves the data from the Columns collection into the Entity class.
    /// </summary>
    protected override void ColumnCollectionToEntityData()
    {
      if (AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.InputDeviceUid).IsNull == false)
        Entity.InputDeviceUid = AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.InputDeviceUid).GetAsGuid();
      else
        Entity.InputDeviceUid = Guid.Empty;

      if (AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.InputDeviceAlertEventTypeUid).IsNull == false)
        Entity.InputDeviceAlertEventTypeUid = AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.InputDeviceAlertEventTypeUid).GetAsGuid();
      else
        Entity.InputDeviceAlertEventTypeUid = Guid.Empty;

      if (AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.Tag).IsNull == false)
        Entity.Tag = AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.Tag).GetAsString();
      else
        Entity.Tag = string.Empty;

      if (AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.CanHaveAudio).IsNull == false)
        Entity.CanHaveAudio = AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.CanHaveAudio).GetAsBool();
      else
        Entity.CanHaveAudio = false;

      if (AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.CanHaveInstructions).IsNull == false)
        Entity.CanHaveInstructions = AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.CanHaveInstructions).GetAsBool();
      else
        Entity.CanHaveInstructions = false;

      if (AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.CanHaveSchedule).IsNull == false)
        Entity.CanHaveSchedule = AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.CanHaveSchedule).GetAsBool();
      else
        Entity.CanHaveSchedule = false;

      if (AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.AcknowledgeTimeScheduleUid).IsNull == false)
        Entity.AcknowledgeTimeScheduleUid = AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.AcknowledgeTimeScheduleUid).GetAsGuid();
      else
        Entity.AcknowledgeTimeScheduleUid = Guid.Empty;

      if (AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.AcknowledgePriority).IsNull == false)
        Entity.AcknowledgePriority = AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.AcknowledgePriority).GetAsInteger();
      else
        Entity.AcknowledgePriority = 0;

      if (AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.ResponseInstructions).IsNull == false)
        Entity.ResponseInstructions = AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.ResponseInstructions).GetAsString();
      else
        Entity.ResponseInstructions = string.Empty;

      if (AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.ResponseInstructionsUid).IsNull == false)
        Entity.ResponseInstructionsUid = AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.ResponseInstructionsUid).GetAsGuid();
      else
        Entity.ResponseInstructionsUid = Guid.Empty;

      if (AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.AudioBinaryResourceUid).IsNull == false)
        Entity.AudioBinaryResourceUid = AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.AudioBinaryResourceUid).GetAsGuid();
      else
        Entity.AudioBinaryResourceUid = Guid.Empty;

      if (AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.GalaxyPanelUid).IsNull == false)
        Entity.GalaxyPanelUid = AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.GalaxyPanelUid).GetAsGuid();
      else
        Entity.GalaxyPanelUid = Guid.Empty;

      if (AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.ClusterUid).IsNull == false)
        Entity.ClusterUid = AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.ClusterUid).GetAsGuid();
      else
        Entity.ClusterUid = Guid.Empty;

      if (AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.ScheduleTypeCode).IsNull == false)
        Entity.ScheduleTypeCode = AllColumns.GetByName(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.ScheduleTypeCode).GetAsShort();
      else
        Entity.ScheduleTypeCode = 0;

    }
    #endregion

    #region CreateEntityFromDataRow Method
    /// <summary>
    /// Creates an Entity object from a DataRow object.
    /// </summary>
    /// <param name="dr">DataRow object with all fields from the table in it.</param>
    /// <returns>InputDevice_GetAlertEventAcknowledgeDataPDSA</returns>
    public InputDevice_GetAlertEventAcknowledgeDataPDSA CreateEntityFromDataRow(DataRow dr)
    {
      InputDevice_GetAlertEventAcknowledgeDataPDSA entity = new InputDevice_GetAlertEventAcknowledgeDataPDSA();

      if (dr.Table.Columns.Contains(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.InputDeviceUid))
      {
        if (dr[InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.InputDeviceUid] != DBNull.Value)
          entity.InputDeviceUid = PDSAProperty.ConvertToGuid(dr[InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.InputDeviceUid]);
      }
      if (dr.Table.Columns.Contains(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.InputDeviceAlertEventTypeUid))
      {
        if (dr[InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.InputDeviceAlertEventTypeUid] != DBNull.Value)
          entity.InputDeviceAlertEventTypeUid = PDSAProperty.ConvertToGuid(dr[InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.InputDeviceAlertEventTypeUid]);
      }
      if (dr.Table.Columns.Contains(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.Tag))
      {
        if (dr[InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.Tag] != DBNull.Value)
          entity.Tag = PDSAString.ConvertToStringTrim(dr[InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.Tag]);
      }
      if (dr.Table.Columns.Contains(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.CanHaveAudio))
      {
        if (dr[InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.CanHaveAudio] != DBNull.Value)
          entity.CanHaveAudio = Convert.ToBoolean(dr[InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.CanHaveAudio]);
      }
      if (dr.Table.Columns.Contains(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.CanHaveInstructions))
      {
        if (dr[InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.CanHaveInstructions] != DBNull.Value)
          entity.CanHaveInstructions = Convert.ToBoolean(dr[InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.CanHaveInstructions]);
      }
      if (dr.Table.Columns.Contains(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.CanHaveSchedule))
      {
        if (dr[InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.CanHaveSchedule] != DBNull.Value)
          entity.CanHaveSchedule = Convert.ToBoolean(dr[InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.CanHaveSchedule]);
      }
      if (dr.Table.Columns.Contains(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.AcknowledgeTimeScheduleUid))
      {
        if (dr[InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.AcknowledgeTimeScheduleUid] != DBNull.Value)
          entity.AcknowledgeTimeScheduleUid = PDSAProperty.ConvertToGuid(dr[InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.AcknowledgeTimeScheduleUid]);
      }
      if (dr.Table.Columns.Contains(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.AcknowledgePriority))
      {
        if (dr[InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.AcknowledgePriority] != DBNull.Value)
          entity.AcknowledgePriority = Convert.ToInt32(dr[InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.AcknowledgePriority]);
      }
      if (dr.Table.Columns.Contains(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.ResponseInstructions))
      {
        if (dr[InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.ResponseInstructions] != DBNull.Value)
          entity.ResponseInstructions = PDSAString.ConvertToStringTrim(dr[InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.ResponseInstructions]);
      }
      if (dr.Table.Columns.Contains(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.ResponseInstructionsUid))
      {
        if (dr[InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.ResponseInstructionsUid] != DBNull.Value)
          entity.ResponseInstructionsUid = PDSAProperty.ConvertToGuid(dr[InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.ResponseInstructionsUid]);
      }
      if (dr.Table.Columns.Contains(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.AudioBinaryResourceUid))
      {
        if (dr[InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.AudioBinaryResourceUid] != DBNull.Value)
          entity.AudioBinaryResourceUid = PDSAProperty.ConvertToGuid(dr[InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.AudioBinaryResourceUid]);
      }
      if (dr.Table.Columns.Contains(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.GalaxyPanelUid))
      {
        if (dr[InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.GalaxyPanelUid] != DBNull.Value)
          entity.GalaxyPanelUid = PDSAProperty.ConvertToGuid(dr[InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.GalaxyPanelUid]);
      }
      if (dr.Table.Columns.Contains(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.ClusterUid))
      {
        if (dr[InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.ClusterUid] != DBNull.Value)
          entity.ClusterUid = PDSAProperty.ConvertToGuid(dr[InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.ClusterUid]);
      }
      if (dr.Table.Columns.Contains(InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.ScheduleTypeCode))
      {
        if (dr[InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.ScheduleTypeCode] != DBNull.Value)
          entity.ScheduleTypeCode = Convert.ToInt16(dr[InputDevice_GetAlertEventAcknowledgeDataPDSAValidator.ColumnNames.ScheduleTypeCode]);
      }
      entity.IsDirty = false;

      return entity;
    }
    #endregion

    #region ParameterNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the InputDevice_GetAlertEventAcknowledgeDataPDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ParameterNames
    {
    /// <summary>
    /// Returns '@InputDeviceUid'
    /// </summary>
    public static string InputDeviceUid = "@InputDeviceUid";
    /// <summary>
    /// Returns '@GalaxyPanelUid'
    /// </summary>
    public static string GalaxyPanelUid = "@GalaxyPanelUid";
    /// <summary>
    /// Returns '@RETURN_VALUE'
    /// </summary>
    public static string RETURNVALUE = "@RETURN_VALUE";
    }
    #endregion
  }
}
