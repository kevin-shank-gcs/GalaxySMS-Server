using System;
using System.Data;
using System.Text;

using PDSA.Common;
using PDSA.DataLayer;
using PDSA.DataLayer.DataClasses;
using PDSA.Validation;

using GalaxySMS.EntityLayer;
using GalaxySMS.ValidationLayer;

namespace GalaxySMS.DataLayer
{
  /// <summary>
  /// This class calls the stored procedure InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSA
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public class InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAData : PDSAStoredProcReadOnly
  {
    #region Constructors
    /// <summary>
    /// Constructor for the InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAData class
    /// </summary>
    public InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAData() : base()
    {
      Entity = new InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSA();
      ValidatorObject = new  InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator(Entity);

      Init();
    }

    /// <summary>
    /// Constructor for the InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAData class
    /// </summary>
    /// <param name="entity">An instance of a InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSA</param>
    public InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAData(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSA entity) : base()
    {
      Entity = entity;
      ValidatorObject = new InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator(Entity);
            
      Init();
    }
    
    /// <summary>
    /// Constructor for the InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAData class
    /// </summary>
    /// <param name="dataProvider">An instance of a PDSADataProvider</param>
    /// <param name="entity">An instance of a InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSA</param>
    public InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAData(PDSADataProvider dataProvider,
      InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSA entity)
      : base(dataProvider)
    {
      Entity = entity;
      ValidatorObject = new  InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator(Entity);
            
      Init();
    }
    
    /// <summary>
    /// Constructor for the InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAData class
    /// </summary>
    /// <param name="dataProvider">An instance of a PDSADataProvider</param>
    /// <param name="entity">An instance of a InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSA</param>
    /// <param name="validator">An instance of a InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator</param>
    public InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAData(PDSADataProvider dataProvider,
      InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSA entity, InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator validator)
      : base(dataProvider)
    {
      Entity = entity;
      ValidatorObject = validator;

      Init();
    }
    #endregion

    #region Public Property
    /// <summary>
    /// Get/Set the Entity class that will be used to get and set properties/fields for this data class.
    /// </summary>
    public InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSA Entity { get; set; }
    #endregion

    #region Init Method
    /// <summary>
    /// Initializes this class to a valid start state.
    /// </summary>
    protected override void Init()
    {
      ClassName = "InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAData";
      StoredProcName = "InputOutputGroupAssignmentSources_ByInputOuputGroupUid";
      SchemaName = "GCS";

      // Create Parameters
      InitParameters();

      // Create Data Columns
      InitDataColumns();
    }
    #endregion

   #region InitParameters Method
    /// <summary>
    /// Creates all the parameters for the stored procedure.
    /// </summary>
    protected override void InitParameters()
    {
      PDSADataParameter param;

      // Clear all parameters each time
      AllParameters.Clear();

      // Create each parameter object and add to Parameters Collection
      param = new PDSADataParameter();
      param.ParameterName = InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ParameterNames.InputOutputGroupUid;
      param.DBType = DbType.Guid;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ParameterNames.GalaxyPanelUid;
      param.DBType = DbType.Guid;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ParameterNames.RETURNVALUE;
      param.DBType = DbType.Int32;
      param.ParamDirection = ParameterDirection.ReturnValue;
      param.IsRefCursor = false;
      AllParameters.Add(param);

  
      AddReturnValueParameterToCollection();
    }
    #endregion

    #region InitDataColumns Method
    /// <summary>
    /// Initializes the Data Columns Collection for each field returned from the stored procedure.
    /// </summary>
    protected override void InitDataColumns()
    {
      PDSADataColumn dc;

      // Create each data column
      dc = PDSADataColumn.CreateDataColumn(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.InputOutputGroupAssignmentUid, GetResourceMessage("GCS_InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSA_InputOutputGroupAssignmentUid_Header", "Input Output Group Assignment Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.InputOutputGroupUid, GetResourceMessage("GCS_InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSA_InputOutputGroupUid_Header", "Input Output Group Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.OffsetIndex, GetResourceMessage("GCS_InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSA_OffsetIndex_Header", "Offset Index"), false, typeof(short), DbType.Int16);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.DeviceName, GetResourceMessage("GCS_InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSA_DeviceName_Header", "Device Name"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.EventType, GetResourceMessage("GCS_InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSA_EventType_Header", "Event Type"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.DeviceType, GetResourceMessage("GCS_InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSA_DeviceType_Header", "Device Type"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.Display, GetResourceMessage("GCS_InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSA_Display_Header", "Display"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.LocalIOGroup, GetResourceMessage("GCS_InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSA_LocalIOGroup_Header", "Local IO Group"), false, typeof(bool), DbType.Boolean);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.GalaxyPanelUid, GetResourceMessage("GCS_InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSA_GalaxyPanelUid_Header", "Galaxy Panel Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
    }
    #endregion

    #region EntityDataToParameterCollection Method
    /// <summary>
    /// Moves the data from the Entity class into the Parameters collection
    /// </summary>
    protected override void EntityDataToParameterCollection()
    {
      if (AllParameters.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ParameterNames.InputOutputGroupUid).SetAsNull == false)
        AllParameters.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ParameterNames.InputOutputGroupUid).Value = Entity.InputOutputGroupUid;
      else
        AllParameters.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ParameterNames.InputOutputGroupUid).Value = System.Data.SqlTypes.SqlGuid.Null;
      if (AllParameters.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ParameterNames.GalaxyPanelUid).SetAsNull == false)
        AllParameters.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ParameterNames.GalaxyPanelUid).Value = Entity.GalaxyPanelUid;
      else
        AllParameters.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ParameterNames.GalaxyPanelUid).Value = System.Data.SqlTypes.SqlGuid.Null;
    }
    #endregion

    #region EntityDataToColumnCollection Method
    /// <summary>
    /// Moves the data from the Entity class into the Columns collection
    /// </summary>
    protected override void EntityDataToColumnCollection()
    {
      if (AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.InputOutputGroupAssignmentUid).SetAsNull == false)
        AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.InputOutputGroupAssignmentUid).Value = Entity.InputOutputGroupAssignmentUid;
      else
        AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.InputOutputGroupAssignmentUid).Value = Guid.Empty;
     
      if (AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.InputOutputGroupUid).SetAsNull == false)
        AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.InputOutputGroupUid).Value = Entity.InputOutputGroupUid;
      else
        AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.InputOutputGroupUid).Value = Guid.Empty;
     
      if (AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.OffsetIndex).SetAsNull == false)
        AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.OffsetIndex).Value = Entity.OffsetIndex;
      else
        AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.OffsetIndex).Value = 0;
     
      if (AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.DeviceName).SetAsNull == false)
        AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.DeviceName).Value = Entity.DeviceName;
      else
        AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.DeviceName).Value = string.Empty;
     
      if (AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.EventType).SetAsNull == false)
        AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.EventType).Value = Entity.EventType;
      else
        AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.EventType).Value = string.Empty;
     
      if (AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.DeviceType).SetAsNull == false)
        AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.DeviceType).Value = Entity.DeviceType;
      else
        AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.DeviceType).Value = string.Empty;
     
      if (AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.Display).SetAsNull == false)
        AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.Display).Value = Entity.Display;
      else
        AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.Display).Value = string.Empty;
     
      if (AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.LocalIOGroup).SetAsNull == false)
        AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.LocalIOGroup).Value = Entity.LocalIOGroup;
      else
        AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.LocalIOGroup).Value = false;
     
      if (AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.GalaxyPanelUid).SetAsNull == false)
        AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.GalaxyPanelUid).Value = Entity.GalaxyPanelUid;
      else
        AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.GalaxyPanelUid).Value = Guid.Empty;
     
    }
    #endregion

    #region OutputParametersToEntityData Method
    /// <summary>
    /// Moves the output parameters from the Parameters collection into the Entity class.
    /// </summary>
    protected override void OutputParametersToEntityData()
    {
      if (AllParameters.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ParameterNames.RETURNVALUE).IsValueNull == false)
        Entity.RETURNVALUE = AllParameters.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ParameterNames.RETURNVALUE).GetAsInteger();
      else
        Entity.RETURNVALUE = 0;
    }
    #endregion
    
    #region ColumnCollectionToEntityData Method
    /// <summary>
    /// Moves the data from the Columns collection into the Entity class.
    /// </summary>
    protected override void ColumnCollectionToEntityData()
    {
      if (AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.InputOutputGroupAssignmentUid).IsNull == false)
        Entity.InputOutputGroupAssignmentUid = AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.InputOutputGroupAssignmentUid).GetAsGuid();
      else
        Entity.InputOutputGroupAssignmentUid = Guid.Empty;

      if (AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.InputOutputGroupUid).IsNull == false)
        Entity.InputOutputGroupUid = AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.InputOutputGroupUid).GetAsGuid();
      else
        Entity.InputOutputGroupUid = Guid.Empty;

      if (AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.OffsetIndex).IsNull == false)
        Entity.OffsetIndex = AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.OffsetIndex).GetAsShort();
      else
        Entity.OffsetIndex = 0;

      if (AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.DeviceName).IsNull == false)
        Entity.DeviceName = AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.DeviceName).GetAsString();
      else
        Entity.DeviceName = string.Empty;

      if (AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.EventType).IsNull == false)
        Entity.EventType = AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.EventType).GetAsString();
      else
        Entity.EventType = string.Empty;

      if (AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.DeviceType).IsNull == false)
        Entity.DeviceType = AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.DeviceType).GetAsString();
      else
        Entity.DeviceType = string.Empty;

      if (AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.Display).IsNull == false)
        Entity.Display = AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.Display).GetAsString();
      else
        Entity.Display = string.Empty;

      if (AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.LocalIOGroup).IsNull == false)
        Entity.LocalIOGroup = AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.LocalIOGroup).GetAsBool();
      else
        Entity.LocalIOGroup = false;

      if (AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.GalaxyPanelUid).IsNull == false)
        Entity.GalaxyPanelUid = AllColumns.GetByName(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.GalaxyPanelUid).GetAsGuid();
      else
        Entity.GalaxyPanelUid = Guid.Empty;

    }
    #endregion

    #region CreateEntityFromDataRow Method
    /// <summary>
    /// Creates an Entity object from a DataRow object.
    /// </summary>
    /// <param name="dr">DataRow object with all fields from the table in it.</param>
    /// <returns>InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSA</returns>
    public InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSA CreateEntityFromDataRow(DataRow dr)
    {
      InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSA entity = new InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSA();

      if (dr.Table.Columns.Contains(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.InputOutputGroupAssignmentUid))
      {
        if (dr[InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.InputOutputGroupAssignmentUid] != DBNull.Value)
          entity.InputOutputGroupAssignmentUid = PDSAProperty.ConvertToGuid(dr[InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.InputOutputGroupAssignmentUid]);
      }
      if (dr.Table.Columns.Contains(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.InputOutputGroupUid))
      {
        if (dr[InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.InputOutputGroupUid] != DBNull.Value)
          entity.InputOutputGroupUid = PDSAProperty.ConvertToGuid(dr[InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.InputOutputGroupUid]);
      }
      if (dr.Table.Columns.Contains(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.OffsetIndex))
      {
        if (dr[InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.OffsetIndex] != DBNull.Value)
          entity.OffsetIndex = Convert.ToInt16(dr[InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.OffsetIndex]);
      }
      if (dr.Table.Columns.Contains(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.DeviceName))
      {
        if (dr[InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.DeviceName] != DBNull.Value)
          entity.DeviceName = PDSAString.ConvertToStringTrim(dr[InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.DeviceName]);
      }
      if (dr.Table.Columns.Contains(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.EventType))
      {
        if (dr[InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.EventType] != DBNull.Value)
          entity.EventType = PDSAString.ConvertToStringTrim(dr[InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.EventType]);
      }
      if (dr.Table.Columns.Contains(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.DeviceType))
      {
        if (dr[InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.DeviceType] != DBNull.Value)
          entity.DeviceType = PDSAString.ConvertToStringTrim(dr[InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.DeviceType]);
      }
      if (dr.Table.Columns.Contains(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.Display))
      {
        if (dr[InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.Display] != DBNull.Value)
          entity.Display = PDSAString.ConvertToStringTrim(dr[InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.Display]);
      }
      if (dr.Table.Columns.Contains(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.LocalIOGroup))
      {
        if (dr[InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.LocalIOGroup] != DBNull.Value)
          entity.LocalIOGroup = Convert.ToBoolean(dr[InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.LocalIOGroup]);
      }
      if (dr.Table.Columns.Contains(InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.GalaxyPanelUid))
      {
        if (dr[InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.GalaxyPanelUid] != DBNull.Value)
          entity.GalaxyPanelUid = PDSAProperty.ConvertToGuid(dr[InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSAValidator.ColumnNames.GalaxyPanelUid]);
      }
      entity.IsDirty = false;

      return entity;
    }
    #endregion

    #region ParameterNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the InputOutputGroupAssignmentSources_ByInputOuputGroupUidPDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ParameterNames
    {
    /// <summary>
    /// Returns '@InputOutputGroupUid'
    /// </summary>
    public static string InputOutputGroupUid = "@InputOutputGroupUid";
    /// <summary>
    /// Returns '@GalaxyPanelUid'
    /// </summary>
    public static string GalaxyPanelUid = "@GalaxyPanelUid";
    /// <summary>
    /// Returns '@RETURN_VALUE'
    /// </summary>
    public static string RETURNVALUE = "@RETURN_VALUE";
    }
    #endregion
  }
}
