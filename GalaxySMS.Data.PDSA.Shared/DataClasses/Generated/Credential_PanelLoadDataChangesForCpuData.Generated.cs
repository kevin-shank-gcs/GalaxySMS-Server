using System;
using System.Data;
using System.Text;

using PDSA.Common;
using PDSA.DataLayer;
using PDSA.DataLayer.DataClasses;
using PDSA.Validation;

using GalaxySMS.EntityLayer;
using GalaxySMS.ValidationLayer;

namespace GalaxySMS.DataLayer
{
  /// <summary>
  /// Used to Select data from the Credential_PanelLoadDataChangesForCpuPDSA view.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public partial class Credential_PanelLoadDataChangesForCpuPDSAData : PDSADataClassReadOnly
  {
    #region Constructors
    /// <summary>
    /// Constructor for the Credential_PanelLoadDataChangesForCpuPDSAData class
    /// </summary>
    public Credential_PanelLoadDataChangesForCpuPDSAData() : base()
    {
      Entity = new Credential_PanelLoadDataChangesForCpuPDSA();
      ValidatorObject = new Credential_PanelLoadDataChangesForCpuPDSAValidator(Entity);

      Init();
    }
    
    /// <summary>
    /// Constructor for the Credential_PanelLoadDataChangesForCpuPDSAData class
    /// </summary>
    /// <param name="dataProvider">An instance of a PDSADataProvider</param>
    /// <param name="entity">An instance of a Credential_PanelLoadDataChangesForCpuPDSA</param>
    public Credential_PanelLoadDataChangesForCpuPDSAData(PDSADataProvider dataProvider,
      Credential_PanelLoadDataChangesForCpuPDSA entity)
      : base(dataProvider)
    {
      Entity = entity;
      ValidatorObject = new Credential_PanelLoadDataChangesForCpuPDSAValidator(Entity);

      Init();
    }
     
    /// <summary>
    /// Constructor for the Credential_PanelLoadDataChangesForCpuPDSAData class
    /// </summary>
    /// <param name="dataProvider">An instance of a PDSADataProvider</param>
    /// <param name="entity">An instance of a Credential_PanelLoadDataChangesForCpuPDSA</param>
    /// <param name="validator">An instance of a Credential_PanelLoadDataChangesForCpuPDSAValidator</param>
    public Credential_PanelLoadDataChangesForCpuPDSAData(PDSADataProvider dataProvider,
      Credential_PanelLoadDataChangesForCpuPDSA entity, Credential_PanelLoadDataChangesForCpuPDSAValidator validator)
      : base(dataProvider, entity, validator)
    {
      Entity = entity;
      ValidatorObject = validator;

      Init();
    }
    #endregion

    #region Filter Properties and Enumerations
    /// <summary>
    /// Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
    /// </summary>
    public enum SelectFilters
    {
      
      /// <summary>
      /// 'All' SelectFilter
      /// </summary>
      All
      ,
      /// <summary>
      /// 'Search' SelectFilter
      /// </summary>
      Search
      ,
      /// <summary>
      /// A Custom SelectFilter
      /// </summary>
      Custom
    }

    /// <summary>
    /// Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
    /// </summary>
    public enum WhereFilters
    {
      /// <summary>
      /// No WhereFilter Selected
      /// </summary>
      None,
      /// <summary>
      /// A Custom WhereFilter
      /// </summary>
      Custom
      ,
      /// <summary>
      /// 'FirstName' WhereFilter
      /// </summary>
      FirstName
      ,
      /// <summary>
      /// 'LikeFirstName' WhereFilter
      /// </summary>
      LikeFirstName
    }

    /// <summary>
    /// Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
    /// </summary>
    public enum OrderByFilters
    {
      /// <summary>
      /// No OrderByFilter Selected
      /// </summary>
      None,
      /// <summary>
      /// A Custom OrderByFilter
      /// </summary>
      Custom
      ,
      /// <summary>
      /// 'FirstName' OrderByFilter
      /// </summary>
      FirstName
    }
    
    /// <summary>
    /// Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
    /// </summary>
    public enum RowCountFilters
    {
      
      /// <summary>
      /// 'All' RowCountFilter
      /// </summary>
      All
      ,
      /// <summary>
      /// A Custom OrderByFilter
      /// </summary>
      Custom
    }

    /// <summary>
    /// Get/Set a Dynamic SQL to execute to return data.
    /// </summary>
    public SelectFilters SelectFilter { get; set; }
    /// <summary>
    /// Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
    /// </summary>
    public WhereFilters WhereFilter { get; set; }
    /// <summary>
    /// Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
    /// </summary>
    public OrderByFilters OrderByFilter { get; set; }
    /// <summary>
    /// Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
    /// </summary>
    public RowCountFilters RowCountFilter { get; set; }
    #endregion

    #region Public Property Entity Class
        private Credential_PanelLoadDataChangesForCpuPDSA _EntityObject = null;

    /// <summary>
    /// Get/Set the Entity class that will be used to get and set properties/fields for this data class.
    /// </summary>
    public Credential_PanelLoadDataChangesForCpuPDSA Entity 
    { 
      get { return _EntityObject; }
      set
      {
        _EntityObject = value;
        base.EntityObject = _EntityObject;
      } 
    }
    #endregion

    #region Init Method
    /// <summary>
    /// Initializes this class to a valid start state.
    /// </summary>
    protected override void Init()
    {
      ClassName = "Credential_PanelLoadDataChangesForCpuPDSAData";
      DBObjectName = "GCS.Credential_PanelLoadDataChangesForCpu";
      SchemaName = "GCS";
      base.EntityObject = Entity;
      base.ValidatorObject = ValidatorObject;
      
      // Set Reference to ValidatorObject Properties Collection
      AllColumns = ValidatorObject.Properties;

      // Set any Initial Starting values for data columns
      InitDataColumns();
    }
    #endregion

    #region InitDataColumns Method
    /// <summary>
    /// Initializes all of the Data Columns with valid data for each field in the table.
    /// </summary>
    protected override void InitDataColumns()
    {
      PDSAProperty prop;

      // Fill in Column Properties
      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialToLoadToCpuUid);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlGuid.Null;
      //prop.ValueForNull = Guid.Empty;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonUid);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlGuid.Null;
      //prop.ValueForNull = Guid.Empty;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastCredentialChangeDate);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlDateTime.Null;
      //prop.ValueForNull = Convert.ToDateTime("1753-1-1", System.Threading.Thread.CurrentThread.CurrentUICulture.DateTimeFormat);

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.FirstName);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastCredentialLoadedDate);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlDateTime.Null;
      //prop.ValueForNull = Convert.ToDateTime("1753-1-1", System.Threading.Thread.CurrentThread.CurrentUICulture.DateTimeFormat);

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastName);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonId);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonActivationDateTime);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlDateTime.Null;
      //prop.ValueForNull = Convert.ToDateTime("1753-1-1", System.Threading.Thread.CurrentThread.CurrentUICulture.DateTimeFormat);

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonExpirationDateTime);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlDateTime.Null;
      //prop.ValueForNull = Convert.ToDateTime("1753-1-1", System.Threading.Thread.CurrentThread.CurrentUICulture.DateTimeFormat);

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonTerminationDate);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlDateTime.Null;
      //prop.ValueForNull = Convert.ToDateTime("1753-1-1", System.Threading.Thread.CurrentThread.CurrentUICulture.DateTimeFormat);

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.VeryImportantPerson);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlBoolean.Null;
      //prop.ValueForNull = false;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.HasPhysicalDisability);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlBoolean.Null;
      //prop.ValueForNull = false;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.HasVertigo);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlBoolean.Null;
      //prop.ValueForNull = false;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonInactiveState);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlBoolean.Null;
      //prop.ValueForNull = false;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PINExempt);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlBoolean.Null;
      //prop.ValueForNull = false;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackExempt);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlBoolean.Null;
      //prop.ValueForNull = false;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CanToggleLockState);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlBoolean.Null;
      //prop.ValueForNull = false;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonAccessControlPropertiesIsActive);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlBoolean.Null;
      //prop.ValueForNull = false;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PIN);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt32.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonAccessControlPropertiesAccessProfileUid);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlGuid.Null;
      //prop.ValueForNull = Guid.Empty;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonCredentialUid);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlGuid.Null;
      //prop.ValueForNull = Guid.Empty;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialUid);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlGuid.Null;
      //prop.ValueForNull = Guid.Empty;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialActivationDateTime);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlDateTime.Null;
      //prop.ValueForNull = Convert.ToDateTime("1753-1-1", System.Threading.Thread.CurrentThread.CurrentUICulture.DateTimeFormat);

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialExpirationDateTime);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlDateTime.Null;
      //prop.ValueForNull = Convert.ToDateTime("1753-1-1", System.Threading.Thread.CurrentThread.CurrentUICulture.DateTimeFormat);

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialUsageCount);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt16.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DuressEnabled);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlBoolean.Null;
      //prop.ValueForNull = false;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ReverseBits);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlBoolean.Null;
      //prop.ValueForNull = false;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.TraceEnabled);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlBoolean.Null;
      //prop.ValueForNull = false;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonCredentialIsActive);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlBoolean.Null;
      //prop.ValueForNull = false;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialRoleCode);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt16.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialActivationModeCode);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt16.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialExpirationModeCode);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt16.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.NoServerReplyBehaviorCode);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt16.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DeferToServerBehaviorCode);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt16.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastPanelImpactingChangeDate);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlDateTime.Null;
      //prop.ValueForNull = Convert.ToDateTime("1753-1-1", System.Threading.Thread.CurrentThread.CurrentUICulture.DateTimeFormat);

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialBits);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = false;
      prop.DBValueForNull = System.Data.SqlTypes.SqlBinary.Null;
      //prop.ValueForNull = new byte[0];

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialFormatDisplay);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialFormatCode);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt16.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.BitCount);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt16.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardBinaryData);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = false;
      prop.DBValueForNull = System.Data.SqlTypes.SqlBinary.Null;
      //prop.ValueForNull = new byte[0];

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardNumber);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardNumberIsHex);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlBoolean.Null;
      //prop.ValueForNull = false;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.FacCompSiteCode);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt64.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IdCode);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt64.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IssueCode);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt64.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdStartingDate);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlDateTime.Null;
      //prop.ValueForNull = Convert.ToDateTime("1753-1-1", System.Threading.Thread.CurrentThread.CurrentUICulture.DateTimeFormat);

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdEndingDate);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlDateTime.Null;
      //prop.ValueForNull = Convert.ToDateTime("1753-1-1", System.Threading.Thread.CurrentThread.CurrentUICulture.DateTimeFormat);

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdMessage);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdMessageDisplayModeCode);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt16.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterUid);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlGuid.Null;
      //prop.ValueForNull = Guid.Empty;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterName);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterNumber);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt32.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterTypeCode);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterIsActive);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlBoolean.Null;
      //prop.ValueForNull = false;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterGroupId);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt32.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialDataLength);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt16.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PanelNumber);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt32.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuNumber);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt16.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup1);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt32.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.TimeZoneId);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup2);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt32.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CurrentTimeForCluster);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlDateTime.Null;
      //prop.ValueForNull = Convert.ToDateTime("1753-1-1", System.Threading.Thread.CurrentThread.CurrentUICulture.DateTimeFormat);

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup3);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt32.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup4);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt32.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonalAccessGroupNumber);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt32.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup1);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt32.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup2);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt32.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup3);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt32.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup4);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt32.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.OtisSplitGroupOperation);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlBoolean.Null;
      //prop.ValueForNull = false;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.OtisCimOverride);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlBoolean.Null;
      //prop.ValueForNull = false;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuUid);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlGuid.Null;
      //prop.ValueForNull = Guid.Empty;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ServerAddress);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IsConnected);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlBoolean.Null;
      //prop.ValueForNull = false;

    }
    #endregion

    #region EntityDataToColumnCollection Method
    /// <summary>
    /// Moves the data from the Entity class into the Columns collection
    /// This is called prior to performing a Business Rule Check or an INSERT, UPDATE or DELETE
    /// </summary>
    protected override void EntityDataToColumnCollection()
    {
      // Move all Entity Values into Properties Collection
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialToLoadToCpuUid).Value = Entity.CredentialToLoadToCpuUid;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialToLoadToCpuUid).SetAsNull == true)
        Entity.CredentialToLoadToCpuUid = Guid.Empty;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonUid).Value = Entity.PersonUid;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonUid).SetAsNull == true)
        Entity.PersonUid = Guid.Empty;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastCredentialChangeDate).Value = Entity.LastCredentialChangeDate;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastCredentialChangeDate).SetAsNull == true)
        Entity.LastCredentialChangeDate = DateTimeOffset.Now;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.FirstName).Value = Entity.FirstName;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.FirstName).SetAsNull == true)
        Entity.FirstName = string.Empty;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastCredentialLoadedDate).Value = Entity.LastCredentialLoadedDate;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastCredentialLoadedDate).SetAsNull == true)
        Entity.LastCredentialLoadedDate = DateTimeOffset.Now;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastName).Value = Entity.LastName;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastName).SetAsNull == true)
        Entity.LastName = string.Empty;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonId).Value = Entity.PersonId;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonId).SetAsNull == true)
        Entity.PersonId = string.Empty;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonActivationDateTime).Value = Entity.PersonActivationDateTime;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonActivationDateTime).SetAsNull == true)
        Entity.PersonActivationDateTime = DateTimeOffset.Now;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonExpirationDateTime).Value = Entity.PersonExpirationDateTime;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonExpirationDateTime).SetAsNull == true)
        Entity.PersonExpirationDateTime = DateTimeOffset.Now;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonTerminationDate).Value = Entity.PersonTerminationDate;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonTerminationDate).SetAsNull == true)
        Entity.PersonTerminationDate = DateTimeOffset.Now;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.VeryImportantPerson).Value = Entity.VeryImportantPerson;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.VeryImportantPerson).SetAsNull == true)
        Entity.VeryImportantPerson = false;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.HasPhysicalDisability).Value = Entity.HasPhysicalDisability;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.HasPhysicalDisability).SetAsNull == true)
        Entity.HasPhysicalDisability = false;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.HasVertigo).Value = Entity.HasVertigo;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.HasVertigo).SetAsNull == true)
        Entity.HasVertigo = false;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonInactiveState).Value = Entity.PersonInactiveState;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonInactiveState).SetAsNull == true)
        Entity.PersonInactiveState = false;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PINExempt).Value = Entity.PINExempt;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PINExempt).SetAsNull == true)
        Entity.PINExempt = false;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackExempt).Value = Entity.PassbackExempt;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackExempt).SetAsNull == true)
        Entity.PassbackExempt = false;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CanToggleLockState).Value = Entity.CanToggleLockState;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CanToggleLockState).SetAsNull == true)
        Entity.CanToggleLockState = false;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonAccessControlPropertiesIsActive).Value = Entity.PersonAccessControlPropertiesIsActive;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonAccessControlPropertiesIsActive).SetAsNull == true)
        Entity.PersonAccessControlPropertiesIsActive = false;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PIN).Value = Entity.PIN;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PIN).SetAsNull == true)
        Entity.PIN = 0;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonAccessControlPropertiesAccessProfileUid).Value = Entity.PersonAccessControlPropertiesAccessProfileUid;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonAccessControlPropertiesAccessProfileUid).SetAsNull == true)
        Entity.PersonAccessControlPropertiesAccessProfileUid = Guid.Empty;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonCredentialUid).Value = Entity.PersonCredentialUid;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonCredentialUid).SetAsNull == true)
        Entity.PersonCredentialUid = Guid.Empty;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialUid).Value = Entity.CredentialUid;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialUid).SetAsNull == true)
        Entity.CredentialUid = Guid.Empty;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialActivationDateTime).Value = Entity.CredentialActivationDateTime;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialActivationDateTime).SetAsNull == true)
        Entity.CredentialActivationDateTime = DateTimeOffset.Now;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialExpirationDateTime).Value = Entity.CredentialExpirationDateTime;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialExpirationDateTime).SetAsNull == true)
        Entity.CredentialExpirationDateTime = DateTimeOffset.Now;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialUsageCount).Value = Entity.CredentialUsageCount;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialUsageCount).SetAsNull == true)
        Entity.CredentialUsageCount = 0;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DuressEnabled).Value = Entity.DuressEnabled;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DuressEnabled).SetAsNull == true)
        Entity.DuressEnabled = false;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ReverseBits).Value = Entity.ReverseBits;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ReverseBits).SetAsNull == true)
        Entity.ReverseBits = false;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.TraceEnabled).Value = Entity.TraceEnabled;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.TraceEnabled).SetAsNull == true)
        Entity.TraceEnabled = false;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonCredentialIsActive).Value = Entity.PersonCredentialIsActive;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonCredentialIsActive).SetAsNull == true)
        Entity.PersonCredentialIsActive = false;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialRoleCode).Value = Entity.CredentialRoleCode;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialRoleCode).SetAsNull == true)
        Entity.CredentialRoleCode = 0;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialActivationModeCode).Value = Entity.CredentialActivationModeCode;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialActivationModeCode).SetAsNull == true)
        Entity.CredentialActivationModeCode = 0;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialExpirationModeCode).Value = Entity.CredentialExpirationModeCode;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialExpirationModeCode).SetAsNull == true)
        Entity.CredentialExpirationModeCode = 0;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.NoServerReplyBehaviorCode).Value = Entity.NoServerReplyBehaviorCode;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.NoServerReplyBehaviorCode).SetAsNull == true)
        Entity.NoServerReplyBehaviorCode = 0;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DeferToServerBehaviorCode).Value = Entity.DeferToServerBehaviorCode;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DeferToServerBehaviorCode).SetAsNull == true)
        Entity.DeferToServerBehaviorCode = 0;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastPanelImpactingChangeDate).Value = Entity.LastPanelImpactingChangeDate;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastPanelImpactingChangeDate).SetAsNull == true)
        Entity.LastPanelImpactingChangeDate = DateTimeOffset.Now;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialBits).Value = Entity.CredentialBits;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialBits).SetAsNull == true)
        Entity.CredentialBits = null;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialFormatDisplay).Value = Entity.CredentialFormatDisplay;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialFormatDisplay).SetAsNull == true)
        Entity.CredentialFormatDisplay = string.Empty;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialFormatCode).Value = Entity.CredentialFormatCode;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialFormatCode).SetAsNull == true)
        Entity.CredentialFormatCode = 0;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.BitCount).Value = Entity.BitCount;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.BitCount).SetAsNull == true)
        Entity.BitCount = 0;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardBinaryData).Value = Entity.CardBinaryData;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardBinaryData).SetAsNull == true)
        Entity.CardBinaryData = null;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardNumber).Value = Entity.CardNumber;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardNumber).SetAsNull == true)
        Entity.CardNumber = string.Empty;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardNumberIsHex).Value = Entity.CardNumberIsHex;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardNumberIsHex).SetAsNull == true)
        Entity.CardNumberIsHex = false;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.FacCompSiteCode).Value = Entity.FacCompSiteCode;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.FacCompSiteCode).SetAsNull == true)
        Entity.FacCompSiteCode = 0;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IdCode).Value = Entity.IdCode;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IdCode).SetAsNull == true)
        Entity.IdCode = 0;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IssueCode).Value = Entity.IssueCode;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IssueCode).SetAsNull == true)
        Entity.IssueCode = 0;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdStartingDate).Value = Entity.LcdStartingDate;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdStartingDate).SetAsNull == true)
        Entity.LcdStartingDate = DateTimeOffset.Now;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdEndingDate).Value = Entity.LcdEndingDate;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdEndingDate).SetAsNull == true)
        Entity.LcdEndingDate = DateTimeOffset.Now;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdMessage).Value = Entity.LcdMessage;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdMessage).SetAsNull == true)
        Entity.LcdMessage = string.Empty;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdMessageDisplayModeCode).Value = Entity.LcdMessageDisplayModeCode;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdMessageDisplayModeCode).SetAsNull == true)
        Entity.LcdMessageDisplayModeCode = 0;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterUid).Value = Entity.ClusterUid;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterUid).SetAsNull == true)
        Entity.ClusterUid = Guid.Empty;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterName).Value = Entity.ClusterName;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterName).SetAsNull == true)
        Entity.ClusterName = string.Empty;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterNumber).Value = Entity.ClusterNumber;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterNumber).SetAsNull == true)
        Entity.ClusterNumber = 0;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterTypeCode).Value = Entity.ClusterTypeCode;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterTypeCode).SetAsNull == true)
        Entity.ClusterTypeCode = string.Empty;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterIsActive).Value = Entity.ClusterIsActive;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterIsActive).SetAsNull == true)
        Entity.ClusterIsActive = false;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterGroupId).Value = Entity.ClusterGroupId;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterGroupId).SetAsNull == true)
        Entity.ClusterGroupId = 0;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialDataLength).Value = Entity.CredentialDataLength;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialDataLength).SetAsNull == true)
        Entity.CredentialDataLength = 0;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PanelNumber).Value = Entity.PanelNumber;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PanelNumber).SetAsNull == true)
        Entity.PanelNumber = 0;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuNumber).Value = Entity.CpuNumber;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuNumber).SetAsNull == true)
        Entity.CpuNumber = 0;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup1).Value = Entity.AccessGroup1;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup1).SetAsNull == true)
        Entity.AccessGroup1 = 0;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.TimeZoneId).Value = Entity.TimeZoneId;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.TimeZoneId).SetAsNull == true)
        Entity.TimeZoneId = string.Empty;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup2).Value = Entity.AccessGroup2;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup2).SetAsNull == true)
        Entity.AccessGroup2 = 0;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CurrentTimeForCluster).Value = Entity.CurrentTimeForCluster;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CurrentTimeForCluster).SetAsNull == true)
        Entity.CurrentTimeForCluster = DateTimeOffset.Now;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup3).Value = Entity.AccessGroup3;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup3).SetAsNull == true)
        Entity.AccessGroup3 = 0;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup4).Value = Entity.AccessGroup4;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup4).SetAsNull == true)
        Entity.AccessGroup4 = 0;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonalAccessGroupNumber).Value = Entity.PersonalAccessGroupNumber;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonalAccessGroupNumber).SetAsNull == true)
        Entity.PersonalAccessGroupNumber = 0;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup1).Value = Entity.InputOutputGroup1;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup1).SetAsNull == true)
        Entity.InputOutputGroup1 = 0;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup2).Value = Entity.InputOutputGroup2;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup2).SetAsNull == true)
        Entity.InputOutputGroup2 = 0;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup3).Value = Entity.InputOutputGroup3;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup3).SetAsNull == true)
        Entity.InputOutputGroup3 = 0;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup4).Value = Entity.InputOutputGroup4;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup4).SetAsNull == true)
        Entity.InputOutputGroup4 = 0;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.OtisSplitGroupOperation).Value = Entity.OtisSplitGroupOperation;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.OtisSplitGroupOperation).SetAsNull == true)
        Entity.OtisSplitGroupOperation = false;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.OtisCimOverride).Value = Entity.OtisCimOverride;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.OtisCimOverride).SetAsNull == true)
        Entity.OtisCimOverride = false;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuUid).Value = Entity.CpuUid;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuUid).SetAsNull == true)
        Entity.CpuUid = Guid.Empty;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ServerAddress).Value = Entity.ServerAddress;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ServerAddress).SetAsNull == true)
        Entity.ServerAddress = string.Empty;
      ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IsConnected).Value = Entity.IsConnected;
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IsConnected).SetAsNull == true)
        Entity.IsConnected = false;
    }
    #endregion

    #region ColumnCollectionToEntityData Method
    /// <summary>
    /// Moves the data from the Columns collection into the Entity class.
    /// This is called whenever you are reading data in from a database.
    ///   For example, from BuildCollection, Load, LoadByPK, etc.
    /// </summary>
    protected override void ColumnCollectionToEntityData()
    {
      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialToLoadToCpuUid).IsNull == false)
        Entity.CredentialToLoadToCpuUid = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialToLoadToCpuUid).GetAsGuid();
      else
        Entity.CredentialToLoadToCpuUid = Guid.Empty;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialToLoadToCpuUid, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialToLoadToCpuUid).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonUid).IsNull == false)
        Entity.PersonUid = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonUid).GetAsGuid();
      else
        Entity.PersonUid = Guid.Empty;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonUid, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonUid).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastCredentialChangeDate).IsNull == false)
        Entity.LastCredentialChangeDate = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastCredentialChangeDate).GetAsDate();
      else
        Entity.LastCredentialChangeDate = Convert.ToDateTime("1753-1-1", System.Threading.Thread.CurrentThread.CurrentUICulture.DateTimeFormat);
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastCredentialChangeDate, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastCredentialChangeDate).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.FirstName).IsNull == false)
        Entity.FirstName = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.FirstName).GetAsString();
      else
        Entity.FirstName = string.Empty;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.FirstName, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.FirstName).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastCredentialLoadedDate).IsNull == false)
        Entity.LastCredentialLoadedDate = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastCredentialLoadedDate).GetAsDate();
      else
        Entity.LastCredentialLoadedDate = Convert.ToDateTime("1753-1-1", System.Threading.Thread.CurrentThread.CurrentUICulture.DateTimeFormat);
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastCredentialLoadedDate, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastCredentialLoadedDate).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastName).IsNull == false)
        Entity.LastName = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastName).GetAsString();
      else
        Entity.LastName = string.Empty;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastName, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastName).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonId).IsNull == false)
        Entity.PersonId = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonId).GetAsString();
      else
        Entity.PersonId = string.Empty;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonId, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonId).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonActivationDateTime).IsNull == false)
        Entity.PersonActivationDateTime = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonActivationDateTime).GetAsDate();
      else
        Entity.PersonActivationDateTime = Convert.ToDateTime("1753-1-1", System.Threading.Thread.CurrentThread.CurrentUICulture.DateTimeFormat);
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonActivationDateTime, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonActivationDateTime).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonExpirationDateTime).IsNull == false)
        Entity.PersonExpirationDateTime = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonExpirationDateTime).GetAsDate();
      else
        Entity.PersonExpirationDateTime = Convert.ToDateTime("1753-1-1", System.Threading.Thread.CurrentThread.CurrentUICulture.DateTimeFormat);
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonExpirationDateTime, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonExpirationDateTime).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonTerminationDate).IsNull == false)
        Entity.PersonTerminationDate = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonTerminationDate).GetAsDate();
      else
        Entity.PersonTerminationDate = Convert.ToDateTime("1753-1-1", System.Threading.Thread.CurrentThread.CurrentUICulture.DateTimeFormat);
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonTerminationDate, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonTerminationDate).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.VeryImportantPerson).IsNull == false)
        Entity.VeryImportantPerson = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.VeryImportantPerson).GetAsBool();
      else
        Entity.VeryImportantPerson = false;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.VeryImportantPerson, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.VeryImportantPerson).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.HasPhysicalDisability).IsNull == false)
        Entity.HasPhysicalDisability = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.HasPhysicalDisability).GetAsBool();
      else
        Entity.HasPhysicalDisability = false;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.HasPhysicalDisability, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.HasPhysicalDisability).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.HasVertigo).IsNull == false)
        Entity.HasVertigo = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.HasVertigo).GetAsBool();
      else
        Entity.HasVertigo = false;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.HasVertigo, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.HasVertigo).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonInactiveState).IsNull == false)
        Entity.PersonInactiveState = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonInactiveState).GetAsBool();
      else
        Entity.PersonInactiveState = false;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonInactiveState, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonInactiveState).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PINExempt).IsNull == false)
        Entity.PINExempt = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PINExempt).GetAsBool();
      else
        Entity.PINExempt = false;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PINExempt, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PINExempt).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackExempt).IsNull == false)
        Entity.PassbackExempt = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackExempt).GetAsBool();
      else
        Entity.PassbackExempt = false;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackExempt, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackExempt).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CanToggleLockState).IsNull == false)
        Entity.CanToggleLockState = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CanToggleLockState).GetAsBool();
      else
        Entity.CanToggleLockState = false;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CanToggleLockState, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CanToggleLockState).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonAccessControlPropertiesIsActive).IsNull == false)
        Entity.PersonAccessControlPropertiesIsActive = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonAccessControlPropertiesIsActive).GetAsBool();
      else
        Entity.PersonAccessControlPropertiesIsActive = false;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonAccessControlPropertiesIsActive, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonAccessControlPropertiesIsActive).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PIN).IsNull == false)
        Entity.PIN = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PIN).GetAsInteger();
      else
        Entity.PIN = 0;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PIN, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PIN).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonAccessControlPropertiesAccessProfileUid).IsNull == false)
        Entity.PersonAccessControlPropertiesAccessProfileUid = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonAccessControlPropertiesAccessProfileUid).GetAsGuid();
      else
        Entity.PersonAccessControlPropertiesAccessProfileUid = Guid.Empty;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonAccessControlPropertiesAccessProfileUid, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonAccessControlPropertiesAccessProfileUid).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonCredentialUid).IsNull == false)
        Entity.PersonCredentialUid = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonCredentialUid).GetAsGuid();
      else
        Entity.PersonCredentialUid = Guid.Empty;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonCredentialUid, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonCredentialUid).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialUid).IsNull == false)
        Entity.CredentialUid = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialUid).GetAsGuid();
      else
        Entity.CredentialUid = Guid.Empty;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialUid, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialUid).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialActivationDateTime).IsNull == false)
        Entity.CredentialActivationDateTime = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialActivationDateTime).GetAsDate();
      else
        Entity.CredentialActivationDateTime = Convert.ToDateTime("1753-1-1", System.Threading.Thread.CurrentThread.CurrentUICulture.DateTimeFormat);
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialActivationDateTime, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialActivationDateTime).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialExpirationDateTime).IsNull == false)
        Entity.CredentialExpirationDateTime = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialExpirationDateTime).GetAsDate();
      else
        Entity.CredentialExpirationDateTime = Convert.ToDateTime("1753-1-1", System.Threading.Thread.CurrentThread.CurrentUICulture.DateTimeFormat);
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialExpirationDateTime, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialExpirationDateTime).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialUsageCount).IsNull == false)
        Entity.CredentialUsageCount = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialUsageCount).GetAsShort();
      else
        Entity.CredentialUsageCount = 0;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialUsageCount, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialUsageCount).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DuressEnabled).IsNull == false)
        Entity.DuressEnabled = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DuressEnabled).GetAsBool();
      else
        Entity.DuressEnabled = false;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DuressEnabled, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DuressEnabled).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ReverseBits).IsNull == false)
        Entity.ReverseBits = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ReverseBits).GetAsBool();
      else
        Entity.ReverseBits = false;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ReverseBits, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ReverseBits).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.TraceEnabled).IsNull == false)
        Entity.TraceEnabled = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.TraceEnabled).GetAsBool();
      else
        Entity.TraceEnabled = false;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.TraceEnabled, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.TraceEnabled).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonCredentialIsActive).IsNull == false)
        Entity.PersonCredentialIsActive = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonCredentialIsActive).GetAsBool();
      else
        Entity.PersonCredentialIsActive = false;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonCredentialIsActive, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonCredentialIsActive).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialRoleCode).IsNull == false)
        Entity.CredentialRoleCode = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialRoleCode).GetAsShort();
      else
        Entity.CredentialRoleCode = 0;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialRoleCode, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialRoleCode).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialActivationModeCode).IsNull == false)
        Entity.CredentialActivationModeCode = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialActivationModeCode).GetAsShort();
      else
        Entity.CredentialActivationModeCode = 0;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialActivationModeCode, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialActivationModeCode).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialExpirationModeCode).IsNull == false)
        Entity.CredentialExpirationModeCode = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialExpirationModeCode).GetAsShort();
      else
        Entity.CredentialExpirationModeCode = 0;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialExpirationModeCode, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialExpirationModeCode).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.NoServerReplyBehaviorCode).IsNull == false)
        Entity.NoServerReplyBehaviorCode = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.NoServerReplyBehaviorCode).GetAsShort();
      else
        Entity.NoServerReplyBehaviorCode = 0;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.NoServerReplyBehaviorCode, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.NoServerReplyBehaviorCode).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DeferToServerBehaviorCode).IsNull == false)
        Entity.DeferToServerBehaviorCode = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DeferToServerBehaviorCode).GetAsShort();
      else
        Entity.DeferToServerBehaviorCode = 0;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DeferToServerBehaviorCode, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DeferToServerBehaviorCode).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastPanelImpactingChangeDate).IsNull == false)
        Entity.LastPanelImpactingChangeDate = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastPanelImpactingChangeDate).GetAsDate();
      else
        Entity.LastPanelImpactingChangeDate = Convert.ToDateTime("1753-1-1", System.Threading.Thread.CurrentThread.CurrentUICulture.DateTimeFormat);
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastPanelImpactingChangeDate, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastPanelImpactingChangeDate).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialBits).IsNull == false)
        Entity.CredentialBits = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialBits).GetAsByteArray();
      else
        Entity.CredentialBits = new byte[0];
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialBits, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialBits).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialFormatDisplay).IsNull == false)
        Entity.CredentialFormatDisplay = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialFormatDisplay).GetAsString();
      else
        Entity.CredentialFormatDisplay = string.Empty;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialFormatDisplay, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialFormatDisplay).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialFormatCode).IsNull == false)
        Entity.CredentialFormatCode = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialFormatCode).GetAsShort();
      else
        Entity.CredentialFormatCode = 0;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialFormatCode, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialFormatCode).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.BitCount).IsNull == false)
        Entity.BitCount = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.BitCount).GetAsShort();
      else
        Entity.BitCount = 0;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.BitCount, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.BitCount).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardBinaryData).IsNull == false)
        Entity.CardBinaryData = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardBinaryData).GetAsByteArray();
      else
        Entity.CardBinaryData = new byte[0];
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardBinaryData, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardBinaryData).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardNumber).IsNull == false)
        Entity.CardNumber = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardNumber).GetAsString();
      else
        Entity.CardNumber = string.Empty;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardNumber, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardNumber).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardNumberIsHex).IsNull == false)
        Entity.CardNumberIsHex = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardNumberIsHex).GetAsBool();
      else
        Entity.CardNumberIsHex = false;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardNumberIsHex, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardNumberIsHex).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.FacCompSiteCode).IsNull == false)
        Entity.FacCompSiteCode = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.FacCompSiteCode).GetAsLong();
      else
        Entity.FacCompSiteCode = 0;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.FacCompSiteCode, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.FacCompSiteCode).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IdCode).IsNull == false)
        Entity.IdCode = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IdCode).GetAsLong();
      else
        Entity.IdCode = 0;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IdCode, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IdCode).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IssueCode).IsNull == false)
        Entity.IssueCode = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IssueCode).GetAsLong();
      else
        Entity.IssueCode = 0;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IssueCode, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IssueCode).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdStartingDate).IsNull == false)
        Entity.LcdStartingDate = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdStartingDate).GetAsDate();
      else
        Entity.LcdStartingDate = Convert.ToDateTime("1753-1-1", System.Threading.Thread.CurrentThread.CurrentUICulture.DateTimeFormat);
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdStartingDate, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdStartingDate).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdEndingDate).IsNull == false)
        Entity.LcdEndingDate = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdEndingDate).GetAsDate();
      else
        Entity.LcdEndingDate = Convert.ToDateTime("1753-1-1", System.Threading.Thread.CurrentThread.CurrentUICulture.DateTimeFormat);
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdEndingDate, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdEndingDate).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdMessage).IsNull == false)
        Entity.LcdMessage = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdMessage).GetAsString();
      else
        Entity.LcdMessage = string.Empty;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdMessage, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdMessage).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdMessageDisplayModeCode).IsNull == false)
        Entity.LcdMessageDisplayModeCode = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdMessageDisplayModeCode).GetAsShort();
      else
        Entity.LcdMessageDisplayModeCode = 0;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdMessageDisplayModeCode, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdMessageDisplayModeCode).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterUid).IsNull == false)
        Entity.ClusterUid = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterUid).GetAsGuid();
      else
        Entity.ClusterUid = Guid.Empty;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterUid, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterUid).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterName).IsNull == false)
        Entity.ClusterName = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterName).GetAsString();
      else
        Entity.ClusterName = string.Empty;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterName, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterName).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterNumber).IsNull == false)
        Entity.ClusterNumber = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterNumber).GetAsInteger();
      else
        Entity.ClusterNumber = 0;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterNumber, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterNumber).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterTypeCode).IsNull == false)
        Entity.ClusterTypeCode = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterTypeCode).GetAsString();
      else
        Entity.ClusterTypeCode = string.Empty;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterTypeCode, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterTypeCode).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterIsActive).IsNull == false)
        Entity.ClusterIsActive = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterIsActive).GetAsBool();
      else
        Entity.ClusterIsActive = false;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterIsActive, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterIsActive).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterGroupId).IsNull == false)
        Entity.ClusterGroupId = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterGroupId).GetAsInteger();
      else
        Entity.ClusterGroupId = 0;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterGroupId, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterGroupId).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialDataLength).IsNull == false)
        Entity.CredentialDataLength = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialDataLength).GetAsShort();
      else
        Entity.CredentialDataLength = 0;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialDataLength, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialDataLength).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PanelNumber).IsNull == false)
        Entity.PanelNumber = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PanelNumber).GetAsInteger();
      else
        Entity.PanelNumber = 0;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PanelNumber, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PanelNumber).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuNumber).IsNull == false)
        Entity.CpuNumber = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuNumber).GetAsShort();
      else
        Entity.CpuNumber = 0;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuNumber, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuNumber).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup1).IsNull == false)
        Entity.AccessGroup1 = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup1).GetAsInteger();
      else
        Entity.AccessGroup1 = 0;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup1, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup1).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.TimeZoneId).IsNull == false)
        Entity.TimeZoneId = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.TimeZoneId).GetAsString();
      else
        Entity.TimeZoneId = string.Empty;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.TimeZoneId, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.TimeZoneId).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup2).IsNull == false)
        Entity.AccessGroup2 = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup2).GetAsInteger();
      else
        Entity.AccessGroup2 = 0;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup2, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup2).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CurrentTimeForCluster).IsNull == false)
        Entity.CurrentTimeForCluster = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CurrentTimeForCluster).GetAsDate();
      else
        Entity.CurrentTimeForCluster = Convert.ToDateTime("1753-1-1", System.Threading.Thread.CurrentThread.CurrentUICulture.DateTimeFormat);
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CurrentTimeForCluster, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CurrentTimeForCluster).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup3).IsNull == false)
        Entity.AccessGroup3 = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup3).GetAsInteger();
      else
        Entity.AccessGroup3 = 0;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup3, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup3).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup4).IsNull == false)
        Entity.AccessGroup4 = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup4).GetAsInteger();
      else
        Entity.AccessGroup4 = 0;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup4, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup4).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonalAccessGroupNumber).IsNull == false)
        Entity.PersonalAccessGroupNumber = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonalAccessGroupNumber).GetAsInteger();
      else
        Entity.PersonalAccessGroupNumber = 0;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonalAccessGroupNumber, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonalAccessGroupNumber).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup1).IsNull == false)
        Entity.InputOutputGroup1 = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup1).GetAsInteger();
      else
        Entity.InputOutputGroup1 = 0;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup1, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup1).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup2).IsNull == false)
        Entity.InputOutputGroup2 = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup2).GetAsInteger();
      else
        Entity.InputOutputGroup2 = 0;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup2, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup2).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup3).IsNull == false)
        Entity.InputOutputGroup3 = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup3).GetAsInteger();
      else
        Entity.InputOutputGroup3 = 0;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup3, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup3).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup4).IsNull == false)
        Entity.InputOutputGroup4 = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup4).GetAsInteger();
      else
        Entity.InputOutputGroup4 = 0;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup4, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup4).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.OtisSplitGroupOperation).IsNull == false)
        Entity.OtisSplitGroupOperation = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.OtisSplitGroupOperation).GetAsBool();
      else
        Entity.OtisSplitGroupOperation = false;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.OtisSplitGroupOperation, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.OtisSplitGroupOperation).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.OtisCimOverride).IsNull == false)
        Entity.OtisCimOverride = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.OtisCimOverride).GetAsBool();
      else
        Entity.OtisCimOverride = false;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.OtisCimOverride, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.OtisCimOverride).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuUid).IsNull == false)
        Entity.CpuUid = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuUid).GetAsGuid();
      else
        Entity.CpuUid = Guid.Empty;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuUid, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuUid).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ServerAddress).IsNull == false)
        Entity.ServerAddress = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ServerAddress).GetAsString();
      else
        Entity.ServerAddress = string.Empty;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ServerAddress, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ServerAddress).Value);

      if (ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IsConnected).IsNull == false)
        Entity.IsConnected = ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IsConnected).GetAsBool();
      else
        Entity.IsConnected = false;
      Entity.SetOriginalValueForProperty(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IsConnected, ValidatorObject.Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IsConnected).Value);

    }
    #endregion

    #region CreateEntityFromDataRow Method
    /// <summary>
    /// Creates an Entity object from a DataRow object.
    /// </summary>
    /// <param name="dr">DataRow object with all fields from the table in it.</param>
    /// <returns>Credential_PanelLoadDataChangesForCpuPDSA</returns>
    public Credential_PanelLoadDataChangesForCpuPDSA CreateEntityFromDataRow(DataRow dr)
    {
      // Create new Entity Object
      Entity = new Credential_PanelLoadDataChangesForCpuPDSA();

      // Move all data into Properties collection
      // This method calls the ColumnCollectionToEntityData method
      DataRowToProperties(dr);
      Entity.IsDirty = false;

      return Entity;
    }
    #endregion

    #region SelectSQL Method
    /// <summary>
    /// Builds the SQL for the SELECT statement based on the SelectFilter property.
    /// </summary>
    /// <returns>string</returns>
    public override string SelectSQL()
    {
      StringBuilder sb = new StringBuilder(SB_INIT_LENGTH);

      switch (SelectFilter)
      {
        case SelectFilters.All:
          
          
          break;
        case SelectFilters.Search:
          
          
          break;

        case SelectFilters.Custom:
          sb.Append(SelectCustom);

          break;          
      }

      SQL = sb.ToString();

      return SQL;
    }
    #endregion

    #region RowCountSQL Method
    /// <summary>
    /// Builds the SELECT Count(*) SQL that will count the number of rows returned from this view.
    /// </summary>
    /// <returns>string</returns>
    public override string RowCountSQL()
    {
      StringBuilder sb = new StringBuilder(SB_INIT_LENGTH);

      switch (RowCountFilter)
      {
        case RowCountFilters.All:
          
          
          break;

        case RowCountFilters.Custom:
          sb.Append(RowCountCustom);

          break;          
      }

      sb.Append(WhereClauseSQL());
     
      SQL = sb.ToString();

      return SQL;
    }
    #endregion
    
    #region WhereClauseSQL Method
    /// <summary>
    /// Builds the WHERE clause to be used in combination with a SELECT statement.
    /// </summary>
    /// <returns>string</returns>
    public override string WhereClauseSQL()
    {
      StringBuilder sb = new StringBuilder(SB_INIT_LENGTH);

      switch (WhereFilter)
      {
        case WhereFilters.Custom:
          sb.Append(" " + WhereCustom);

          break;

        case WhereFilters.None:
          //  Do nothing

          break;

        case WhereFilters.FirstName:
          
          
          break;
        case WhereFilters.LikeFirstName:
          
          
          break;
      }
      
      return sb.ToString();
    }
    #endregion

    #region SelectFillInParameters Method
    /// <summary>
    /// Builds the CommandObject.Parameters collection for any SELECT statement parameters.
    /// </summary>
    protected override void SelectFillInParameters()
    {
      switch (SelectFilter)
      {
        case SelectFilters.All:
         
          break;
        case SelectFilters.Search:
         
          break;
      }

      // Add on paging parameters
      if(UsePaging)
      {
        PagingFillInParameters(Entity.ResultSetRowNumberBegin, Entity.ResultSetRowNumberEnd);
      }
    }
    #endregion

    #region WhereClauseFillInParameters Method
    /// <summary>
    /// Builds the CommandObject.Parameters collection for any WHERE clause parameters.
    /// </summary>
    protected override void WhereClauseFillInParameters()
    {
      switch (WhereFilter)
      {
        case WhereFilters.FirstName:
         
          break;
        case WhereFilters.LikeFirstName:
         
          break;
      }
    }
    #endregion

    #region OrderByClauseSQL Method
    /// <summary>
    /// Builds the ORDER BY clause to be used in combination with a SELECT statement.
    /// </summary>
    /// <returns>string</returns>
    public override string OrderByClauseSQL()
    {
      StringBuilder sb = new StringBuilder(SB_INIT_LENGTH);

      switch (OrderByFilter)
      {
        case OrderByFilters.None:
          //  Do Nothing

          break;

        case OrderByFilters.Custom:
          sb.Append(" " + OrderByCustom);

          break;
          
        case OrderByFilters.FirstName:
          
          
          break;
      }

      return sb.ToString();
    }
    #endregion
    
    #region ColumnNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the Credential_PanelLoadDataChangesForCpuPDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ColumnNames
    {
    /// <summary>
    /// Returns 'CredentialToLoadToCpuUid'
    /// </summary>
    public static string CredentialToLoadToCpuUid = "CredentialToLoadToCpuUid";
    /// <summary>
    /// Returns 'PersonUid'
    /// </summary>
    public static string PersonUid = "PersonUid";
    /// <summary>
    /// Returns 'LastCredentialChangeDate'
    /// </summary>
    public static string LastCredentialChangeDate = "LastCredentialChangeDate";
    /// <summary>
    /// Returns 'FirstName'
    /// </summary>
    public static string FirstName = "FirstName";
    /// <summary>
    /// Returns 'LastCredentialLoadedDate'
    /// </summary>
    public static string LastCredentialLoadedDate = "LastCredentialLoadedDate";
    /// <summary>
    /// Returns 'LastName'
    /// </summary>
    public static string LastName = "LastName";
    /// <summary>
    /// Returns 'PersonId'
    /// </summary>
    public static string PersonId = "PersonId";
    /// <summary>
    /// Returns 'PersonActivationDateTime'
    /// </summary>
    public static string PersonActivationDateTime = "PersonActivationDateTime";
    /// <summary>
    /// Returns 'PersonExpirationDateTime'
    /// </summary>
    public static string PersonExpirationDateTime = "PersonExpirationDateTime";
    /// <summary>
    /// Returns 'PersonTerminationDate'
    /// </summary>
    public static string PersonTerminationDate = "PersonTerminationDate";
    /// <summary>
    /// Returns 'VeryImportantPerson'
    /// </summary>
    public static string VeryImportantPerson = "VeryImportantPerson";
    /// <summary>
    /// Returns 'HasPhysicalDisability'
    /// </summary>
    public static string HasPhysicalDisability = "HasPhysicalDisability";
    /// <summary>
    /// Returns 'HasVertigo'
    /// </summary>
    public static string HasVertigo = "HasVertigo";
    /// <summary>
    /// Returns 'PersonInactiveState'
    /// </summary>
    public static string PersonInactiveState = "PersonInactiveState";
    /// <summary>
    /// Returns 'PINExempt'
    /// </summary>
    public static string PINExempt = "PINExempt";
    /// <summary>
    /// Returns 'PassbackExempt'
    /// </summary>
    public static string PassbackExempt = "PassbackExempt";
    /// <summary>
    /// Returns 'CanToggleLockState'
    /// </summary>
    public static string CanToggleLockState = "CanToggleLockState";
    /// <summary>
    /// Returns 'PersonAccessControlPropertiesIsActive'
    /// </summary>
    public static string PersonAccessControlPropertiesIsActive = "PersonAccessControlPropertiesIsActive";
    /// <summary>
    /// Returns 'PIN'
    /// </summary>
    public static string PIN = "PIN";
    /// <summary>
    /// Returns 'PersonAccessControlPropertiesAccessProfileUid'
    /// </summary>
    public static string PersonAccessControlPropertiesAccessProfileUid = "PersonAccessControlPropertiesAccessProfileUid";
    /// <summary>
    /// Returns 'PersonCredentialUid'
    /// </summary>
    public static string PersonCredentialUid = "PersonCredentialUid";
    /// <summary>
    /// Returns 'CredentialUid'
    /// </summary>
    public static string CredentialUid = "CredentialUid";
    /// <summary>
    /// Returns 'CredentialActivationDateTime'
    /// </summary>
    public static string CredentialActivationDateTime = "CredentialActivationDateTime";
    /// <summary>
    /// Returns 'CredentialExpirationDateTime'
    /// </summary>
    public static string CredentialExpirationDateTime = "CredentialExpirationDateTime";
    /// <summary>
    /// Returns 'CredentialUsageCount'
    /// </summary>
    public static string CredentialUsageCount = "CredentialUsageCount";
    /// <summary>
    /// Returns 'DuressEnabled'
    /// </summary>
    public static string DuressEnabled = "DuressEnabled";
    /// <summary>
    /// Returns 'ReverseBits'
    /// </summary>
    public static string ReverseBits = "ReverseBits";
    /// <summary>
    /// Returns 'TraceEnabled'
    /// </summary>
    public static string TraceEnabled = "TraceEnabled";
    /// <summary>
    /// Returns 'PersonCredentialIsActive'
    /// </summary>
    public static string PersonCredentialIsActive = "PersonCredentialIsActive";
    /// <summary>
    /// Returns 'CredentialRoleCode'
    /// </summary>
    public static string CredentialRoleCode = "CredentialRoleCode";
    /// <summary>
    /// Returns 'CredentialActivationModeCode'
    /// </summary>
    public static string CredentialActivationModeCode = "CredentialActivationModeCode";
    /// <summary>
    /// Returns 'CredentialExpirationModeCode'
    /// </summary>
    public static string CredentialExpirationModeCode = "CredentialExpirationModeCode";
    /// <summary>
    /// Returns 'NoServerReplyBehaviorCode'
    /// </summary>
    public static string NoServerReplyBehaviorCode = "NoServerReplyBehaviorCode";
    /// <summary>
    /// Returns 'DeferToServerBehaviorCode'
    /// </summary>
    public static string DeferToServerBehaviorCode = "DeferToServerBehaviorCode";
    /// <summary>
    /// Returns 'LastPanelImpactingChangeDate'
    /// </summary>
    public static string LastPanelImpactingChangeDate = "LastPanelImpactingChangeDate";
    /// <summary>
    /// Returns 'CredentialBits'
    /// </summary>
    public static string CredentialBits = "CredentialBits";
    /// <summary>
    /// Returns 'CredentialFormatDisplay'
    /// </summary>
    public static string CredentialFormatDisplay = "CredentialFormatDisplay";
    /// <summary>
    /// Returns 'CredentialFormatCode'
    /// </summary>
    public static string CredentialFormatCode = "CredentialFormatCode";
    /// <summary>
    /// Returns 'BitCount'
    /// </summary>
    public static string BitCount = "BitCount";
    /// <summary>
    /// Returns 'CardBinaryData'
    /// </summary>
    public static string CardBinaryData = "CardBinaryData";
    /// <summary>
    /// Returns 'CardNumber'
    /// </summary>
    public static string CardNumber = "CardNumber";
    /// <summary>
    /// Returns 'CardNumberIsHex'
    /// </summary>
    public static string CardNumberIsHex = "CardNumberIsHex";
    /// <summary>
    /// Returns 'FacCompSiteCode'
    /// </summary>
    public static string FacCompSiteCode = "FacCompSiteCode";
    /// <summary>
    /// Returns 'IdCode'
    /// </summary>
    public static string IdCode = "IdCode";
    /// <summary>
    /// Returns 'IssueCode'
    /// </summary>
    public static string IssueCode = "IssueCode";
    /// <summary>
    /// Returns 'LcdStartingDate'
    /// </summary>
    public static string LcdStartingDate = "LcdStartingDate";
    /// <summary>
    /// Returns 'LcdEndingDate'
    /// </summary>
    public static string LcdEndingDate = "LcdEndingDate";
    /// <summary>
    /// Returns 'LcdMessage'
    /// </summary>
    public static string LcdMessage = "LcdMessage";
    /// <summary>
    /// Returns 'LcdMessageDisplayModeCode'
    /// </summary>
    public static string LcdMessageDisplayModeCode = "LcdMessageDisplayModeCode";
    /// <summary>
    /// Returns 'ClusterUid'
    /// </summary>
    public static string ClusterUid = "ClusterUid";
    /// <summary>
    /// Returns 'ClusterName'
    /// </summary>
    public static string ClusterName = "ClusterName";
    /// <summary>
    /// Returns 'ClusterNumber'
    /// </summary>
    public static string ClusterNumber = "ClusterNumber";
    /// <summary>
    /// Returns 'ClusterTypeCode'
    /// </summary>
    public static string ClusterTypeCode = "ClusterTypeCode";
    /// <summary>
    /// Returns 'ClusterIsActive'
    /// </summary>
    public static string ClusterIsActive = "ClusterIsActive";
    /// <summary>
    /// Returns 'ClusterGroupId'
    /// </summary>
    public static string ClusterGroupId = "ClusterGroupId";
    /// <summary>
    /// Returns 'CredentialDataLength'
    /// </summary>
    public static string CredentialDataLength = "CredentialDataLength";
    /// <summary>
    /// Returns 'PanelNumber'
    /// </summary>
    public static string PanelNumber = "PanelNumber";
    /// <summary>
    /// Returns 'CpuNumber'
    /// </summary>
    public static string CpuNumber = "CpuNumber";
    /// <summary>
    /// Returns 'AccessGroup1'
    /// </summary>
    public static string AccessGroup1 = "AccessGroup1";
    /// <summary>
    /// Returns 'TimeZoneId'
    /// </summary>
    public static string TimeZoneId = "TimeZoneId";
    /// <summary>
    /// Returns 'AccessGroup2'
    /// </summary>
    public static string AccessGroup2 = "AccessGroup2";
    /// <summary>
    /// Returns 'CurrentTimeForCluster'
    /// </summary>
    public static string CurrentTimeForCluster = "CurrentTimeForCluster";
    /// <summary>
    /// Returns 'AccessGroup3'
    /// </summary>
    public static string AccessGroup3 = "AccessGroup3";
    /// <summary>
    /// Returns 'AccessGroup4'
    /// </summary>
    public static string AccessGroup4 = "AccessGroup4";
    /// <summary>
    /// Returns 'PersonalAccessGroupNumber'
    /// </summary>
    public static string PersonalAccessGroupNumber = "PersonalAccessGroupNumber";
    /// <summary>
    /// Returns 'InputOutputGroup1'
    /// </summary>
    public static string InputOutputGroup1 = "InputOutputGroup1";
    /// <summary>
    /// Returns 'InputOutputGroup2'
    /// </summary>
    public static string InputOutputGroup2 = "InputOutputGroup2";
    /// <summary>
    /// Returns 'InputOutputGroup3'
    /// </summary>
    public static string InputOutputGroup3 = "InputOutputGroup3";
    /// <summary>
    /// Returns 'InputOutputGroup4'
    /// </summary>
    public static string InputOutputGroup4 = "InputOutputGroup4";
    /// <summary>
    /// Returns 'OtisSplitGroupOperation'
    /// </summary>
    public static string OtisSplitGroupOperation = "OtisSplitGroupOperation";
    /// <summary>
    /// Returns 'OtisCimOverride'
    /// </summary>
    public static string OtisCimOverride = "OtisCimOverride";
    /// <summary>
    /// Returns 'CpuUid'
    /// </summary>
    public static string CpuUid = "CpuUid";
    /// <summary>
    /// Returns 'ServerAddress'
    /// </summary>
    public static string ServerAddress = "ServerAddress";
    /// <summary>
    /// Returns 'IsConnected'
    /// </summary>
    public static string IsConnected = "IsConnected";
    }
    #endregion
  }
}
