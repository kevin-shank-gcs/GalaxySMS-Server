using System;
using System.Data;
using System.Text;

using PDSA.Common;
using PDSA.DataLayer;
using PDSA.DataLayer.DataClasses;
using PDSA.Validation;

using GalaxySMS.EntityLayer;
using GalaxySMS.ValidationLayer;

namespace GalaxySMS.DataLayer
{
  /// <summary>
  /// This class calls the stored procedure IsGalaxyHardwareModuleUniquePDSA
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public class IsGalaxyHardwareModuleUniquePDSAData : PDSAStoredProcReadOnly
  {
    #region Constructors
    /// <summary>
    /// Constructor for the IsGalaxyHardwareModuleUniquePDSAData class
    /// </summary>
    public IsGalaxyHardwareModuleUniquePDSAData() : base()
    {
      Entity = new IsGalaxyHardwareModuleUniquePDSA();
      ValidatorObject = new  IsGalaxyHardwareModuleUniquePDSAValidator(Entity);

      Init();
    }

    /// <summary>
    /// Constructor for the IsGalaxyHardwareModuleUniquePDSAData class
    /// </summary>
    /// <param name="entity">An instance of a IsGalaxyHardwareModuleUniquePDSA</param>
    public IsGalaxyHardwareModuleUniquePDSAData(IsGalaxyHardwareModuleUniquePDSA entity) : base()
    {
      Entity = entity;
      ValidatorObject = new IsGalaxyHardwareModuleUniquePDSAValidator(Entity);
            
      Init();
    }
    
    /// <summary>
    /// Constructor for the IsGalaxyHardwareModuleUniquePDSAData class
    /// </summary>
    /// <param name="dataProvider">An instance of a PDSADataProvider</param>
    /// <param name="entity">An instance of a IsGalaxyHardwareModuleUniquePDSA</param>
    public IsGalaxyHardwareModuleUniquePDSAData(PDSADataProvider dataProvider,
      IsGalaxyHardwareModuleUniquePDSA entity)
      : base(dataProvider)
    {
      Entity = entity;
      ValidatorObject = new  IsGalaxyHardwareModuleUniquePDSAValidator(Entity);
            
      Init();
    }
    
    /// <summary>
    /// Constructor for the IsGalaxyHardwareModuleUniquePDSAData class
    /// </summary>
    /// <param name="dataProvider">An instance of a PDSADataProvider</param>
    /// <param name="entity">An instance of a IsGalaxyHardwareModuleUniquePDSA</param>
    /// <param name="validator">An instance of a IsGalaxyHardwareModuleUniquePDSAValidator</param>
    public IsGalaxyHardwareModuleUniquePDSAData(PDSADataProvider dataProvider,
      IsGalaxyHardwareModuleUniquePDSA entity, IsGalaxyHardwareModuleUniquePDSAValidator validator)
      : base(dataProvider)
    {
      Entity = entity;
      ValidatorObject = validator;

      Init();
    }
    #endregion

    #region Public Property
    /// <summary>
    /// Get/Set the Entity class that will be used to get and set properties/fields for this data class.
    /// </summary>
    public IsGalaxyHardwareModuleUniquePDSA Entity { get; set; }
    #endregion

    #region Init Method
    /// <summary>
    /// Initializes this class to a valid start state.
    /// </summary>
    protected override void Init()
    {
      ClassName = "IsGalaxyHardwareModuleUniquePDSAData";
      StoredProcName = "IsGalaxyHardwareModuleUnique";
      SchemaName = "GCS";

      // Create Parameters
      InitParameters();

      // Create Data Columns
      InitDataColumns();
    }
    #endregion

   #region InitParameters Method
    /// <summary>
    /// Creates all the parameters for the stored procedure.
    /// </summary>
    protected override void InitParameters()
    {
      PDSADataParameter param;

      // Clear all parameters each time
      AllParameters.Clear();

      // Create each parameter object and add to Parameters Collection
      param = new PDSADataParameter();
      param.ParameterName = IsGalaxyHardwareModuleUniquePDSAValidator.ParameterNames.GalaxyHardwareModuleUid;
      param.DBType = DbType.Guid;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = IsGalaxyHardwareModuleUniquePDSAValidator.ParameterNames.GalaxyInterfaceBoardSectionUid;
      param.DBType = DbType.Guid;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = IsGalaxyHardwareModuleUniquePDSAValidator.ParameterNames.ModuleNumber;
      param.DBType = DbType.Int16;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = IsGalaxyHardwareModuleUniquePDSAValidator.ParameterNames.Result;
      param.DBType = DbType.Int32;
      param.ParamDirection = ParameterDirection.Output;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = IsGalaxyHardwareModuleUniquePDSAValidator.ParameterNames.RETURNVALUE;
      param.DBType = DbType.Int32;
      param.ParamDirection = ParameterDirection.ReturnValue;
      param.IsRefCursor = false;
      AllParameters.Add(param);

  
      AddReturnValueParameterToCollection();
    }
    #endregion

    #region InitDataColumns Method
    /// <summary>
    /// Initializes the Data Columns Collection for each field returned from the stored procedure.
    /// </summary>
    protected override void InitDataColumns()
    {
      PDSADataColumn dc;

      // Create each data column
      dc = PDSADataColumn.CreateDataColumn(IsGalaxyHardwareModuleUniquePDSAValidator.ColumnNames.Result, GetResourceMessage("GCS_IsGalaxyHardwareModuleUniquePDSA_Result_Header", "Result"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
    }
    #endregion

    #region EntityDataToParameterCollection Method
    /// <summary>
    /// Moves the data from the Entity class into the Parameters collection
    /// </summary>
    protected override void EntityDataToParameterCollection()
    {
      if (AllParameters.GetByName(IsGalaxyHardwareModuleUniquePDSAValidator.ParameterNames.GalaxyHardwareModuleUid).SetAsNull == false)
        AllParameters.GetByName(IsGalaxyHardwareModuleUniquePDSAValidator.ParameterNames.GalaxyHardwareModuleUid).Value = Entity.GalaxyHardwareModuleUid;
      else
        AllParameters.GetByName(IsGalaxyHardwareModuleUniquePDSAValidator.ParameterNames.GalaxyHardwareModuleUid).Value = System.Data.SqlTypes.SqlGuid.Null;
      if (AllParameters.GetByName(IsGalaxyHardwareModuleUniquePDSAValidator.ParameterNames.GalaxyInterfaceBoardSectionUid).SetAsNull == false)
        AllParameters.GetByName(IsGalaxyHardwareModuleUniquePDSAValidator.ParameterNames.GalaxyInterfaceBoardSectionUid).Value = Entity.GalaxyInterfaceBoardSectionUid;
      else
        AllParameters.GetByName(IsGalaxyHardwareModuleUniquePDSAValidator.ParameterNames.GalaxyInterfaceBoardSectionUid).Value = System.Data.SqlTypes.SqlGuid.Null;
      if (AllParameters.GetByName(IsGalaxyHardwareModuleUniquePDSAValidator.ParameterNames.ModuleNumber).SetAsNull == false)
        AllParameters.GetByName(IsGalaxyHardwareModuleUniquePDSAValidator.ParameterNames.ModuleNumber).Value = Entity.ModuleNumber;
      else
        AllParameters.GetByName(IsGalaxyHardwareModuleUniquePDSAValidator.ParameterNames.ModuleNumber).Value = System.Data.SqlTypes.SqlInt16.Null;
    }
    #endregion

    #region EntityDataToColumnCollection Method
    /// <summary>
    /// Moves the data from the Entity class into the Columns collection
    /// </summary>
    protected override void EntityDataToColumnCollection()
    {
      if (AllColumns.GetByName(IsGalaxyHardwareModuleUniquePDSAValidator.ColumnNames.Result).SetAsNull == false)
        AllColumns.GetByName(IsGalaxyHardwareModuleUniquePDSAValidator.ColumnNames.Result).Value = Entity.Result;
      else
        AllColumns.GetByName(IsGalaxyHardwareModuleUniquePDSAValidator.ColumnNames.Result).Value = 0;
     
    }
    #endregion

    #region OutputParametersToEntityData Method
    /// <summary>
    /// Moves the output parameters from the Parameters collection into the Entity class.
    /// </summary>
    protected override void OutputParametersToEntityData()
    {
      if (AllParameters.GetByName(IsGalaxyHardwareModuleUniquePDSAValidator.ParameterNames.RETURNVALUE).IsValueNull == false)
        Entity.RETURNVALUE = AllParameters.GetByName(IsGalaxyHardwareModuleUniquePDSAValidator.ParameterNames.RETURNVALUE).GetAsInteger();
      else
        Entity.RETURNVALUE = 0;
      if (AllParameters.GetByName(IsGalaxyHardwareModuleUniquePDSAValidator.ParameterNames.Result).IsValueNull == false)
        Entity.Result = AllParameters.GetByName(IsGalaxyHardwareModuleUniquePDSAValidator.ParameterNames.Result).GetAsInteger();
      else
        Entity.Result = 0;
    }
    #endregion
    
    #region ColumnCollectionToEntityData Method
    /// <summary>
    /// Moves the data from the Columns collection into the Entity class.
    /// </summary>
    protected override void ColumnCollectionToEntityData()
    {
      if (AllColumns.GetByName(IsGalaxyHardwareModuleUniquePDSAValidator.ColumnNames.Result).IsNull == false)
        Entity.Result = AllColumns.GetByName(IsGalaxyHardwareModuleUniquePDSAValidator.ColumnNames.Result).GetAsInteger();
      else
        Entity.Result = 0;

    }
    #endregion

    #region CreateEntityFromDataRow Method
    /// <summary>
    /// Creates an Entity object from a DataRow object.
    /// </summary>
    /// <param name="dr">DataRow object with all fields from the table in it.</param>
    /// <returns>IsGalaxyHardwareModuleUniquePDSA</returns>
    public IsGalaxyHardwareModuleUniquePDSA CreateEntityFromDataRow(DataRow dr)
    {
      IsGalaxyHardwareModuleUniquePDSA entity = new IsGalaxyHardwareModuleUniquePDSA();

      if (dr.Table.Columns.Contains(IsGalaxyHardwareModuleUniquePDSAValidator.ColumnNames.Result))
      {
        if (dr[IsGalaxyHardwareModuleUniquePDSAValidator.ColumnNames.Result] != DBNull.Value)
          entity.Result = Convert.ToInt32(dr[IsGalaxyHardwareModuleUniquePDSAValidator.ColumnNames.Result]);
      }
      entity.IsDirty = false;

      return entity;
    }
    #endregion

    #region ParameterNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the IsGalaxyHardwareModuleUniquePDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ParameterNames
    {
    /// <summary>
    /// Returns '@GalaxyHardwareModuleUid'
    /// </summary>
    public static string GalaxyHardwareModuleUid = "@GalaxyHardwareModuleUid";
    /// <summary>
    /// Returns '@GalaxyInterfaceBoardSectionUid'
    /// </summary>
    public static string GalaxyInterfaceBoardSectionUid = "@GalaxyInterfaceBoardSectionUid";
    /// <summary>
    /// Returns '@ModuleNumber'
    /// </summary>
    public static string ModuleNumber = "@ModuleNumber";
    /// <summary>
    /// Returns '@Result'
    /// </summary>
    public static string Result = "@Result";
    /// <summary>
    /// Returns '@RETURN_VALUE'
    /// </summary>
    public static string RETURNVALUE = "@RETURN_VALUE";
    }
    #endregion
  }
}
