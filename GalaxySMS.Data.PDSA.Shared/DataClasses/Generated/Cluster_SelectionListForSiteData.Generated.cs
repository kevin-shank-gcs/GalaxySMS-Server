using System;
using System.Data;
using System.Text;

using PDSA.Common;
using PDSA.DataLayer;
using PDSA.DataLayer.DataClasses;
using PDSA.Validation;

using GalaxySMS.EntityLayer;
using GalaxySMS.ValidationLayer;

namespace GalaxySMS.DataLayer
{
    /// <summary>
    /// This class calls the stored procedure Cluster_SelectionListForSitePDSA
    /// This class is generated by the Haystack Code Generator for .NET.
    /// You should NOT modify this class as it is intended to be re-generated.
    /// </summary>
    public class Cluster_SelectionListForSitePDSAData : PDSAStoredProcReadOnly
    {
        #region Constructors
        /// <summary>
        /// Constructor for the Cluster_SelectionListForSitePDSAData class
        /// </summary>
        public Cluster_SelectionListForSitePDSAData() : base()
        {
            Entity = new Cluster_SelectionListForSitePDSA();
            ValidatorObject = new Cluster_SelectionListForSitePDSAValidator(Entity);

            Init();
        }

        /// <summary>
        /// Constructor for the Cluster_SelectionListForSitePDSAData class
        /// </summary>
        /// <param name="entity">An instance of a Cluster_SelectionListForSitePDSA</param>
        public Cluster_SelectionListForSitePDSAData(Cluster_SelectionListForSitePDSA entity) : base()
        {
            Entity = entity;
            ValidatorObject = new Cluster_SelectionListForSitePDSAValidator(Entity);

            Init();
        }

        /// <summary>
        /// Constructor for the Cluster_SelectionListForSitePDSAData class
        /// </summary>
        /// <param name="dataProvider">An instance of a PDSADataProvider</param>
        /// <param name="entity">An instance of a Cluster_SelectionListForSitePDSA</param>
        public Cluster_SelectionListForSitePDSAData(PDSADataProvider dataProvider,
          Cluster_SelectionListForSitePDSA entity)
          : base(dataProvider)
        {
            Entity = entity;
            ValidatorObject = new Cluster_SelectionListForSitePDSAValidator(Entity);

            Init();
        }

        /// <summary>
        /// Constructor for the Cluster_SelectionListForSitePDSAData class
        /// </summary>
        /// <param name="dataProvider">An instance of a PDSADataProvider</param>
        /// <param name="entity">An instance of a Cluster_SelectionListForSitePDSA</param>
        /// <param name="validator">An instance of a Cluster_SelectionListForSitePDSAValidator</param>
        public Cluster_SelectionListForSitePDSAData(PDSADataProvider dataProvider,
          Cluster_SelectionListForSitePDSA entity, Cluster_SelectionListForSitePDSAValidator validator)
          : base(dataProvider)
        {
            Entity = entity;
            ValidatorObject = validator;

            Init();
        }
        #endregion

        #region Public Property
        /// <summary>
        /// Get/Set the Entity class that will be used to get and set properties/fields for this data class.
        /// </summary>
        public Cluster_SelectionListForSitePDSA Entity { get; set; }
        #endregion

        #region Init Method
        /// <summary>
        /// Initializes this class to a valid start state.
        /// </summary>
        protected override void Init()
        {
            ClassName = "Cluster_SelectionListForSitePDSAData";
            StoredProcName = "Cluster_SelectionListForSite";
            SchemaName = "GCS";

            // Create Parameters
            InitParameters();

            // Create Data Columns
            InitDataColumns();
        }
        #endregion

        #region InitParameters Method
        /// <summary>
        /// Creates all the parameters for the stored procedure.
        /// </summary>
        protected override void InitParameters()
        {
            PDSADataParameter param;

            // Clear all parameters each time
            AllParameters.Clear();

            // Create each parameter object and add to Parameters Collection
            param = new PDSADataParameter();
            param.ParameterName = Cluster_SelectionListForSitePDSAValidator.ParameterNames.SiteUid;
            param.DBType = DbType.Guid;
            param.ParamDirection = ParameterDirection.Input;
            param.IsRefCursor = false;
            AllParameters.Add(param);

            param = new PDSADataParameter();
            param.ParameterName = Cluster_SelectionListForSitePDSAValidator.ParameterNames.RETURNVALUE;
            param.DBType = DbType.Int32;
            param.ParamDirection = ParameterDirection.ReturnValue;
            param.IsRefCursor = false;
            AllParameters.Add(param);


            AddReturnValueParameterToCollection();
        }
        #endregion

        #region InitDataColumns Method
        /// <summary>
        /// Initializes the Data Columns Collection for each field returned from the stored procedure.
        /// </summary>
        protected override void InitDataColumns()
        {
            PDSADataColumn dc;

            // Create each data column
            dc = PDSADataColumn.CreateDataColumn(Cluster_SelectionListForSitePDSAValidator.ColumnNames.ClusterUid, GetResourceMessage("GCS_Cluster_SelectionListForSitePDSA_ClusterUid_Header", "Cluster Uid"), false, typeof(Guid), DbType.Guid);
            AllColumns.Add(dc);
            dc = PDSADataColumn.CreateDataColumn(Cluster_SelectionListForSitePDSAValidator.ColumnNames.SiteUid, GetResourceMessage("GCS_Cluster_SelectionListForSitePDSA_SiteUid_Header", "Site Uid"), false, typeof(Guid), DbType.Guid);
            AllColumns.Add(dc);
            dc = PDSADataColumn.CreateDataColumn(Cluster_SelectionListForSitePDSAValidator.ColumnNames.ClusterName, GetResourceMessage("GCS_Cluster_SelectionListForSitePDSA_ClusterName_Header", "Cluster Name"), false, typeof(string), DbType.String);
            AllColumns.Add(dc);
            dc = PDSADataColumn.CreateDataColumn(Cluster_SelectionListForSitePDSAValidator.ColumnNames.ClusterNumber, GetResourceMessage("GCS_Cluster_SelectionListForSitePDSA_ClusterNumber_Header", "Cluster Number"), false, typeof(int), DbType.Int32);
            AllColumns.Add(dc);
            dc = PDSADataColumn.CreateDataColumn(Cluster_SelectionListForSitePDSAValidator.ColumnNames.ClusterGroupId, GetResourceMessage("GCS_Cluster_SelectionListForSitePDSA_AccountCode_Header", "Account Code"), false, typeof(string), DbType.String);
            AllColumns.Add(dc);
            dc = PDSADataColumn.CreateDataColumn(Cluster_SelectionListForSitePDSAValidator.ColumnNames.EntityId, GetResourceMessage("GCS_Cluster_SelectionListForSitePDSA_EntityId_Header", "Entity Id"), false, typeof(Guid), DbType.Guid);
            AllColumns.Add(dc);
            dc = PDSADataColumn.CreateDataColumn(Cluster_SelectionListForSitePDSAValidator.ColumnNames.BinaryResource, GetResourceMessage("GCS_Cluster_SelectionListForSitePDSA_BinaryResource_Header", "Binary Resource"), false, typeof(string), DbType.String);
            AllColumns.Add(dc);
        }
        #endregion

        #region EntityDataToParameterCollection Method
        /// <summary>
        /// Moves the data from the Entity class into the Parameters collection
        /// </summary>
        protected override void EntityDataToParameterCollection()
        {
            if (AllParameters.GetByName(Cluster_SelectionListForSitePDSAValidator.ParameterNames.SiteUid).SetAsNull == false)
                AllParameters.GetByName(Cluster_SelectionListForSitePDSAValidator.ParameterNames.SiteUid).Value = Entity.SiteUid;
            else
                AllParameters.GetByName(Cluster_SelectionListForSitePDSAValidator.ParameterNames.SiteUid).Value = System.Data.SqlTypes.SqlGuid.Null;
        }
        #endregion

        #region EntityDataToColumnCollection Method
        /// <summary>
        /// Moves the data from the Entity class into the Columns collection
        /// </summary>
        protected override void EntityDataToColumnCollection()
        {
            if (AllColumns.GetByName(Cluster_SelectionListForSitePDSAValidator.ColumnNames.ClusterUid).SetAsNull == false)
                AllColumns.GetByName(Cluster_SelectionListForSitePDSAValidator.ColumnNames.ClusterUid).Value = Entity.ClusterUid;
            else
                AllColumns.GetByName(Cluster_SelectionListForSitePDSAValidator.ColumnNames.ClusterUid).Value = Guid.Empty;

            if (AllColumns.GetByName(Cluster_SelectionListForSitePDSAValidator.ColumnNames.SiteUid).SetAsNull == false)
                AllColumns.GetByName(Cluster_SelectionListForSitePDSAValidator.ColumnNames.SiteUid).Value = Entity.SiteUid;
            else
                AllColumns.GetByName(Cluster_SelectionListForSitePDSAValidator.ColumnNames.SiteUid).Value = Guid.Empty;

            if (AllColumns.GetByName(Cluster_SelectionListForSitePDSAValidator.ColumnNames.ClusterName).SetAsNull == false)
                AllColumns.GetByName(Cluster_SelectionListForSitePDSAValidator.ColumnNames.ClusterName).Value = Entity.ClusterName;
            else
                AllColumns.GetByName(Cluster_SelectionListForSitePDSAValidator.ColumnNames.ClusterName).Value = string.Empty;

            if (AllColumns.GetByName(Cluster_SelectionListForSitePDSAValidator.ColumnNames.ClusterNumber).SetAsNull == false)
                AllColumns.GetByName(Cluster_SelectionListForSitePDSAValidator.ColumnNames.ClusterNumber).Value = Entity.ClusterNumber;
            else
                AllColumns.GetByName(Cluster_SelectionListForSitePDSAValidator.ColumnNames.ClusterNumber).Value = 0;

            if (AllColumns.GetByName(Cluster_SelectionListForSitePDSAValidator.ColumnNames.ClusterGroupId).SetAsNull == false)
                AllColumns.GetByName(Cluster_SelectionListForSitePDSAValidator.ColumnNames.ClusterGroupId).Value = Entity.ClusterGroupId;
            else
                AllColumns.GetByName(Cluster_SelectionListForSitePDSAValidator.ColumnNames.ClusterGroupId).Value = string.Empty;

            if (AllColumns.GetByName(Cluster_SelectionListForSitePDSAValidator.ColumnNames.EntityId).SetAsNull == false)
                AllColumns.GetByName(Cluster_SelectionListForSitePDSAValidator.ColumnNames.EntityId).Value = Entity.EntityId;
            else
                AllColumns.GetByName(Cluster_SelectionListForSitePDSAValidator.ColumnNames.EntityId).Value = Guid.Empty;

            if (AllColumns.GetByName(Cluster_SelectionListForSitePDSAValidator.ColumnNames.BinaryResource).SetAsNull == false)
                AllColumns.GetByName(Cluster_SelectionListForSitePDSAValidator.ColumnNames.BinaryResource).Value = Entity.BinaryResource;
            else
                AllColumns.GetByName(Cluster_SelectionListForSitePDSAValidator.ColumnNames.BinaryResource).Value = string.Empty;

        }
        #endregion

        #region OutputParametersToEntityData Method
        /// <summary>
        /// Moves the output parameters from the Parameters collection into the Entity class.
        /// </summary>
        protected override void OutputParametersToEntityData()
        {
            if (AllParameters.GetByName(Cluster_SelectionListForSitePDSAValidator.ParameterNames.RETURNVALUE).IsValueNull == false)
                Entity.RETURNVALUE = AllParameters.GetByName(Cluster_SelectionListForSitePDSAValidator.ParameterNames.RETURNVALUE).GetAsInteger();
            else
                Entity.RETURNVALUE = 0;
        }
        #endregion

        #region ColumnCollectionToEntityData Method
        /// <summary>
        /// Moves the data from the Columns collection into the Entity class.
        /// </summary>
        protected override void ColumnCollectionToEntityData()
        {
            if (AllColumns.GetByName(Cluster_SelectionListForSitePDSAValidator.ColumnNames.ClusterUid).IsNull == false)
                Entity.ClusterUid = AllColumns.GetByName(Cluster_SelectionListForSitePDSAValidator.ColumnNames.ClusterUid).GetAsGuid();
            else
                Entity.ClusterUid = Guid.Empty;

            if (AllColumns.GetByName(Cluster_SelectionListForSitePDSAValidator.ColumnNames.SiteUid).IsNull == false)
                Entity.SiteUid = AllColumns.GetByName(Cluster_SelectionListForSitePDSAValidator.ColumnNames.SiteUid).GetAsGuid();
            else
                Entity.SiteUid = Guid.Empty;

            if (AllColumns.GetByName(Cluster_SelectionListForSitePDSAValidator.ColumnNames.ClusterName).IsNull == false)
                Entity.ClusterName = AllColumns.GetByName(Cluster_SelectionListForSitePDSAValidator.ColumnNames.ClusterName).GetAsString();
            else
                Entity.ClusterName = string.Empty;

            if (AllColumns.GetByName(Cluster_SelectionListForSitePDSAValidator.ColumnNames.ClusterNumber).IsNull == false)
                Entity.ClusterNumber = AllColumns.GetByName(Cluster_SelectionListForSitePDSAValidator.ColumnNames.ClusterNumber).GetAsInteger();
            else
                Entity.ClusterNumber = 0;

            if (AllColumns.GetByName(Cluster_SelectionListForSitePDSAValidator.ColumnNames.ClusterGroupId).IsNull == false)
                Entity.ClusterGroupId = AllColumns.GetByName(Cluster_SelectionListForSitePDSAValidator.ColumnNames.ClusterGroupId).GetAsInteger();
            else
                Entity.ClusterGroupId = 0;

            if (AllColumns.GetByName(Cluster_SelectionListForSitePDSAValidator.ColumnNames.EntityId).IsNull == false)
                Entity.EntityId = AllColumns.GetByName(Cluster_SelectionListForSitePDSAValidator.ColumnNames.EntityId).GetAsGuid();
            else
                Entity.EntityId = Guid.Empty;

            //if (AllColumns.GetByName(Cluster_SelectionListForSitePDSAValidator.ColumnNames.BinaryResource).IsNull == false)
            //  Entity.BinaryResource = AllColumns.GetByName(Cluster_SelectionListForSitePDSAValidator.ColumnNames.BinaryResource).GetAsString();
            //else
            //  Entity.BinaryResource = string.Empty;
            if (AllColumns.GetByName(Cluster_SelectionListForEntityAndSitePDSAValidator.ColumnNames.BinaryResource).IsNull == false)
                Entity.BinaryResource = AllColumns.GetByName(Cluster_SelectionListForEntityAndSitePDSAValidator.ColumnNames.BinaryResource).GetAsByteArray();
            else
                Entity.BinaryResource = null;


        }
        #endregion

        #region CreateEntityFromDataRow Method
        /// <summary>
        /// Creates an Entity object from a DataRow object.
        /// </summary>
        /// <param name="dr">DataRow object with all fields from the table in it.</param>
        /// <returns>Cluster_SelectionListForSitePDSA</returns>
        public Cluster_SelectionListForSitePDSA CreateEntityFromDataRow(DataRow dr)
        {
            Cluster_SelectionListForSitePDSA entity = new Cluster_SelectionListForSitePDSA();

            if (dr.Table.Columns.Contains(Cluster_SelectionListForSitePDSAValidator.ColumnNames.ClusterUid))
            {
                if (dr[Cluster_SelectionListForSitePDSAValidator.ColumnNames.ClusterUid] != DBNull.Value)
                    entity.ClusterUid = PDSAProperty.ConvertToGuid(dr[Cluster_SelectionListForSitePDSAValidator.ColumnNames.ClusterUid]);
            }
            if (dr.Table.Columns.Contains(Cluster_SelectionListForSitePDSAValidator.ColumnNames.SiteUid))
            {
                if (dr[Cluster_SelectionListForSitePDSAValidator.ColumnNames.SiteUid] != DBNull.Value)
                    entity.SiteUid = PDSAProperty.ConvertToGuid(dr[Cluster_SelectionListForSitePDSAValidator.ColumnNames.SiteUid]);
            }
            if (dr.Table.Columns.Contains(Cluster_SelectionListForSitePDSAValidator.ColumnNames.ClusterName))
            {
                if (dr[Cluster_SelectionListForSitePDSAValidator.ColumnNames.ClusterName] != DBNull.Value)
                    entity.ClusterName = PDSAString.ConvertToStringTrim(dr[Cluster_SelectionListForSitePDSAValidator.ColumnNames.ClusterName]);
            }
            if (dr.Table.Columns.Contains(Cluster_SelectionListForSitePDSAValidator.ColumnNames.ClusterNumber))
            {
                if (dr[Cluster_SelectionListForSitePDSAValidator.ColumnNames.ClusterNumber] != DBNull.Value)
                    entity.ClusterNumber = Convert.ToInt32(dr[Cluster_SelectionListForSitePDSAValidator.ColumnNames.ClusterNumber]);
            }
            if (dr.Table.Columns.Contains(Cluster_SelectionListForSitePDSAValidator.ColumnNames.ClusterGroupId))
            {
                if (dr[Cluster_SelectionListForSitePDSAValidator.ColumnNames.ClusterGroupId] != DBNull.Value)
                    entity.ClusterGroupId = Convert.ToInt32(dr[Cluster_SelectionListForSitePDSAValidator.ColumnNames.ClusterGroupId]);
            }
            if (dr.Table.Columns.Contains(Cluster_SelectionListForSitePDSAValidator.ColumnNames.EntityId))
            {
                if (dr[Cluster_SelectionListForSitePDSAValidator.ColumnNames.EntityId] != DBNull.Value)
                    entity.EntityId = PDSAProperty.ConvertToGuid(dr[Cluster_SelectionListForSitePDSAValidator.ColumnNames.EntityId]);
            }
            //if (dr.Table.Columns.Contains(Cluster_SelectionListForSitePDSAValidator.ColumnNames.BinaryResource))
            //{
            //  if (dr[Cluster_SelectionListForSitePDSAValidator.ColumnNames.BinaryResource] != DBNull.Value)
            //    entity.BinaryResource = PDSAString.ConvertToStringTrim(dr[Cluster_SelectionListForSitePDSAValidator.ColumnNames.BinaryResource]);
            //}

            if (dr.Table.Columns.Contains(Cluster_SelectionListForEntityAndSitePDSAValidator.ColumnNames.BinaryResource))
            {
                if (dr[Cluster_SelectionListForEntityAndSitePDSAValidator.ColumnNames.BinaryResource] != DBNull.Value)
                    entity.BinaryResource = (byte[])dr[Cluster_SelectionListForEntityAndSitePDSAValidator.ColumnNames.BinaryResource];
            }

            entity.IsDirty = false;

            return entity;
        }
        #endregion

        #region ParameterNames Class
        /// <summary>
        /// Contains static string properties that represent the name of each property in the Cluster_SelectionListForSitePDSA class.
        /// This class is generated by the Haystack Code Generator for .NET.
        /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
        /// </summary>
        public class ParameterNames
        {
            /// <summary>
            /// Returns '@SiteUid'
            /// </summary>
            public static string SiteUid = "@SiteUid";
            /// <summary>
            /// Returns '@RETURN_VALUE'
            /// </summary>
            public static string RETURNVALUE = "@RETURN_VALUE";
        }
        #endregion
    }
}
