using System;
using System.Data;
using System.Text;

using PDSA.Common;
using PDSA.DataLayer;
using PDSA.DataLayer.DataClasses;
using PDSA.Validation;

using GalaxySMS.EntityLayer;
using GalaxySMS.ValidationLayer;

namespace GalaxySMS.DataLayer
{
  /// <summary>
  /// Used to Add/Edit/Delete/Select data from the PersonPDSA table.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public partial class PersonPDSAData : PDSADataClassTable
  {
    #region Constructors
    /// <summary>
    /// Constructor for the PersonPDSAData class
    /// </summary>
    public PersonPDSAData() : base()
    {
      Entity = new PersonPDSA();
      ValidatorObject = new PersonPDSAValidator(Entity);

      Init();
    }

    /// <summary>
    /// Constructor for the PersonPDSAData class
    /// </summary>
    /// <param name="entity">An instance of a PersonPDSA</param>
    public PersonPDSAData(PersonPDSA entity) : base(entity)
    {
      Entity = entity;
      ValidatorObject = new PersonPDSAValidator(Entity);
            
      Init();
    }
    
    /// <summary>
    /// Constructor for the PersonPDSAData class
    /// </summary>
    /// <param name="dataProvider">An instance of a PDSADataProvider</param>
    /// <param name="entity">An instance of a PersonPDSA</param>
    public PersonPDSAData(PDSADataProvider dataProvider,
      PersonPDSA entity)
      : base(dataProvider, entity)
    {
      Entity = entity;
      ValidatorObject = new PersonPDSAValidator(Entity);
            
      Init();
    }
    
    /// <summary>
    /// Constructor for the PersonPDSAData class
    /// </summary>
    /// <param name="dataProvider">An instance of a PDSADataProvider</param>
    /// <param name="entity">An instance of a PersonPDSA</param>
    /// <param name="validator">An instance of a PersonPDSAValidator</param>
    public PersonPDSAData(PDSADataProvider dataProvider,
      PersonPDSA entity, PersonPDSAValidator validator)
      : base(dataProvider, entity, validator)
    {
      Entity = entity;
      ValidatorObject = validator;

      Init();
    }
    #endregion

    #region Filter Properties and Enumerations
    /// <summary>
    /// Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
    /// </summary>
    public enum SelectFilters
    {
      
      /// <summary>
      /// 'All' SelectFilter
      /// </summary>
      All
      ,
      /// <summary>
      /// 'ListBox' SelectFilter
      /// </summary>
      ListBox
      ,
      /// <summary>
      /// 'PrimaryKey' SelectFilter
      /// </summary>
      PrimaryKey
      ,
      /// <summary>
      /// 'Search' SelectFilter
      /// </summary>
      Search
      ,
      /// <summary>
      /// 'ByEntityId' SelectFilter
      /// </summary>
      ByEntityId
      ,
      /// <summary>
      /// A Custom Select Filter
      /// </summary>
      Custom
    }


    /// <summary>
    /// Enumeration for selecting an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
    /// </summary>
    public enum InsertFilters
    {
      
      /// <summary>
      /// 'All' InsertFilter
      /// </summary>
      All
      ,
      /// <summary>
      /// A Custom InsertFilter
      /// </summary>
      Custom
    }

    /// <summary>
    /// Enumeration for selecting an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
    /// </summary>
    public enum UpdateFilters
    {
      
      /// <summary>
      /// 'PrimaryKey' UpdateFilter
      /// </summary>
      PrimaryKey
      ,
      /// <summary>
      /// 'UpdateConcurrency' UpdateFilter
      /// </summary>
      UpdateConcurrency
      ,
      /// <summary>
      /// A Custom UpdateFilter
      /// </summary>
      Custom
    }

    /// <summary>
    /// Enumeration for selecting a DELETE statement or DELETE stored procedure to execute when calling the Delete() method.
    /// </summary>
    public enum DeleteFilters
    {
      
      /// <summary>
      /// 'DeleteByPK' DeleteFilter
      /// </summary>
      DeleteByPK
      ,
      /// <summary>
      /// A Custom DeleteFilter
      /// </summary>
      Custom
    }

    /// <summary>
    /// Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
    /// </summary>
    public enum RowCountFilters
    {
      
      /// <summary>
      /// 'All' RowCountFilter
      /// </summary>
      All
      ,
      /// <summary>
      /// A Custom RowCountFilter
      /// </summary>
      Custom
    }

    /// <summary>
    /// Get/Set a Dynamic SQL or Stored Procedure to execute to return data.
    /// </summary>
    public SelectFilters SelectFilter { get; set; }

    
    /// <summary>
    /// Get/Set an INSERT statement or INSERT stored procedure to execute when calling the Insert() method.
    /// </summary>
    public InsertFilters InsertFilter { get; set; }

    private UpdateFilters mUpdateFilter;
    /// <summary>
    /// Get/Set an UPDATE statement or UPDATE stored procedure to execute when calling the Update() method.
    /// </summary>
    public UpdateFilters UpdateFilter
    {
      get { return mUpdateFilter; }
      set
      {
        mUpdateFilter = value;
        if (mUpdateFilter == UpdateFilters.Custom)
          PerformValidation = false;
      }
    }
    /// <summary>
    /// Get/Set a DELETE statement or DELETE stored procedure to execute when calling the Delete() method. You might need to set a WhereFilter as well.
    /// </summary>
    public DeleteFilters DeleteFilter { get; set; }
    /// <summary>
    /// Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
    /// </summary>
    public RowCountFilters RowCountFilter { get; set; }
    #endregion

    #region Entity Property
    private PersonPDSA _EntityObject = null;

    /// <summary>
    /// Get/Set the Entity class that will be used to get and set properties/fields for this data class.
    /// </summary>
    public PersonPDSA Entity 
    { 
      get { return _EntityObject; }
      set
      {
        _EntityObject = value;
        base.EntityObject = _EntityObject;
      } 
    }
    #endregion

    #region Init Method
    /// <summary>
    /// Initializes this class to a valid start state.
    /// </summary>
    protected override void Init()
    {
      ClassName = "PersonPDSAData";
      DBObjectName = "GCS.Person";
      SchemaName = "GCS";
      PrimaryKeyType = PDSAPrimaryKeyType.GUID;
      PrimaryKeyGenerate = false;
      UseAuditTracking = DataProvider.UseDBAuditTracking;
      UseStoredProcs = DataProvider.UseStoredProcedures;
      base.EntityObject = Entity;
      base.ValidatorObject = ValidatorObject;

      // Set Reference to ValidatorObject Properties Collection
      AllColumns = ValidatorObject.Properties;

      // Set any Initial Starting values for data columns
      InitDataColumns();
    }
    #endregion

    #region InitDataColumns Method
    /// <summary>
    /// Use this area to initialize any starting values for data in the Properties collection for each Entity property.
    /// </summary>
    protected override void InitDataColumns()
    {
      PDSAProperty prop;

      // Fill in Column Properties
      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PersonUid);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = true;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlGuid.Null;
      //prop.ValueForNull = Guid.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.CountryOfBirthUid);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlGuid.Null;
      //prop.ValueForNull = Guid.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PersonActiveStatusTypeUid);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlGuid.Null;
      //prop.ValueForNull = Guid.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.GenderUid);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlGuid.Null;
      //prop.ValueForNull = Guid.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.DepartmentUid);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlGuid.Null;
      //prop.ValueForNull = Guid.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PersonRecordTypeUid);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlGuid.Null;
      //prop.ValueForNull = Guid.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.EntityId);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlGuid.Null;
      //prop.ValueForNull = Guid.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.RowOrigin);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.OriginId);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PersonId);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.FirstName);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.MiddleName);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.LastName);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Initials);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.NickName);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.LegalName);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.FullName);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PreferredName);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Company);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.HomeOfficeLocation);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.JobTitle);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Race);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Nationality);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Ethnicity);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PrimaryLanguage);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.SecondaryLanguage);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.NationalIdentificationNumber);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.DateOfBirth);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlDateTime.Null;
      //prop.ValueForNull = Convert.ToDateTime("1753-1-1", System.Threading.Thread.CurrentThread.CurrentUICulture.DateTimeFormat);

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.EmploymentDate);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlDateTime.Null;
      //prop.ValueForNull = Convert.ToDateTime("1753-1-1", System.Threading.Thread.CurrentThread.CurrentUICulture.DateTimeFormat);

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TerminationDate);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlDateTime.Null;
      //prop.ValueForNull = Convert.ToDateTime("1753-1-1", System.Threading.Thread.CurrentThread.CurrentUICulture.DateTimeFormat);

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.ActivationDateTime);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlDateTime.Null;
      //prop.ValueForNull = Convert.ToDateTime("1753-1-1", System.Threading.Thread.CurrentThread.CurrentUICulture.DateTimeFormat);

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.ExpirationDateTime);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlDateTime.Null;
      //prop.ValueForNull = Convert.ToDateTime("1753-1-1", System.Threading.Thread.CurrentThread.CurrentUICulture.DateTimeFormat);

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Trace);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlBoolean.Null;
      //prop.ValueForNull = false;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData1);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData2);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData3);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData4);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData5);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData6);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData7);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData8);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData9);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData10);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData11);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData12);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData13);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData14);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData15);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData16);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData17);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData18);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData19);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData20);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData22);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData23);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData24);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData25);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData26);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData27);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData28);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData29);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData21);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData30);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData31);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData32);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData33);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData34);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData35);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData36);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData37);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData38);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData39);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData40);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData41);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData42);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData43);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData44);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData45);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData46);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData47);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData48);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData49);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData50);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.SysGalEmployeeId);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt32.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.VeryImportantPerson);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlBoolean.Null;
      //prop.ValueForNull = false;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.HasPhysicalDisability);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlBoolean.Null;
      //prop.ValueForNull = false;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.HasVertigo);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlBoolean.Null;
      //prop.ValueForNull = false;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.InsertName);
      prop.IsInsertable = true;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.InsertDate);
      prop.IsInsertable = true;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlDateTime.Null;
      //prop.ValueForNull = Convert.ToDateTime("1753-1-1", System.Threading.Thread.CurrentThread.CurrentUICulture.DateTimeFormat);

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.UpdateName);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.UpdateDate);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlDateTime.Null;
      //prop.ValueForNull = Convert.ToDateTime("1753-1-1", System.Threading.Thread.CurrentThread.CurrentUICulture.DateTimeFormat);

      prop = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.ConcurrencyValue);
      prop.IsInsertable = true;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = false;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt16.Null;
      //prop.ValueForNull = 0;

    }
    #endregion

    #region EntityDataToColumnCollection Method
    /// <summary>
    /// Moves the data from the Entity class into the Columns collection
    /// This is called prior to performing a Business Rule Check or an INSERT, UPDATE or DELETE
    /// </summary>
    protected override void EntityDataToColumnCollection()
    {
      // Move all Entity Values into Properties Collection
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PersonUid).Value = Entity.PersonUid;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PersonUid).SetAsNull == true)
        Entity.PersonUid = Guid.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.CountryOfBirthUid).Value = Entity.CountryOfBirthUid;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.CountryOfBirthUid).SetAsNull == true)
        Entity.CountryOfBirthUid = Guid.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PersonActiveStatusTypeUid).Value = Entity.PersonActiveStatusTypeUid;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PersonActiveStatusTypeUid).SetAsNull == true)
        Entity.PersonActiveStatusTypeUid = Guid.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.GenderUid).Value = Entity.GenderUid;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.GenderUid).SetAsNull == true)
        Entity.GenderUid = Guid.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.DepartmentUid).Value = Entity.DepartmentUid;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.DepartmentUid).SetAsNull == true)
        Entity.DepartmentUid = Guid.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PersonRecordTypeUid).Value = Entity.PersonRecordTypeUid;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PersonRecordTypeUid).SetAsNull == true)
        Entity.PersonRecordTypeUid = Guid.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.EntityId).Value = Entity.EntityId;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.EntityId).SetAsNull == true)
        Entity.EntityId = Guid.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.RowOrigin).Value = Entity.RowOrigin;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.RowOrigin).SetAsNull == true)
        Entity.RowOrigin = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.OriginId).Value = Entity.OriginId;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.OriginId).SetAsNull == true)
        Entity.OriginId = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PersonId).Value = Entity.PersonId;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PersonId).SetAsNull == true)
        Entity.PersonId = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.FirstName).Value = Entity.FirstName;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.FirstName).SetAsNull == true)
        Entity.FirstName = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.MiddleName).Value = Entity.MiddleName;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.MiddleName).SetAsNull == true)
        Entity.MiddleName = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.LastName).Value = Entity.LastName;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.LastName).SetAsNull == true)
        Entity.LastName = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Initials).Value = Entity.Initials;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Initials).SetAsNull == true)
        Entity.Initials = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.NickName).Value = Entity.NickName;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.NickName).SetAsNull == true)
        Entity.NickName = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.LegalName).Value = Entity.LegalName;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.LegalName).SetAsNull == true)
        Entity.LegalName = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.FullName).Value = Entity.FullName;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.FullName).SetAsNull == true)
        Entity.FullName = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PreferredName).Value = Entity.PreferredName;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PreferredName).SetAsNull == true)
        Entity.PreferredName = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Company).Value = Entity.Company;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Company).SetAsNull == true)
        Entity.Company = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.HomeOfficeLocation).Value = Entity.HomeOfficeLocation;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.HomeOfficeLocation).SetAsNull == true)
        Entity.HomeOfficeLocation = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.JobTitle).Value = Entity.JobTitle;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.JobTitle).SetAsNull == true)
        Entity.JobTitle = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Race).Value = Entity.Race;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Race).SetAsNull == true)
        Entity.Race = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Nationality).Value = Entity.Nationality;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Nationality).SetAsNull == true)
        Entity.Nationality = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Ethnicity).Value = Entity.Ethnicity;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Ethnicity).SetAsNull == true)
        Entity.Ethnicity = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PrimaryLanguage).Value = Entity.PrimaryLanguage;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PrimaryLanguage).SetAsNull == true)
        Entity.PrimaryLanguage = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.SecondaryLanguage).Value = Entity.SecondaryLanguage;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.SecondaryLanguage).SetAsNull == true)
        Entity.SecondaryLanguage = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.NationalIdentificationNumber).Value = Entity.NationalIdentificationNumber;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.NationalIdentificationNumber).SetAsNull == true)
        Entity.NationalIdentificationNumber = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.DateOfBirth).Value = Entity.DateOfBirth;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.DateOfBirth).SetAsNull == true)
        Entity.DateOfBirth = DateTimeOffset.Now;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.EmploymentDate).Value = Entity.EmploymentDate;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.EmploymentDate).SetAsNull == true)
        Entity.EmploymentDate = DateTimeOffset.Now;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TerminationDate).Value = Entity.TerminationDate;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TerminationDate).SetAsNull == true)
        Entity.TerminationDate = DateTimeOffset.Now;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.ActivationDateTime).Value = Entity.ActivationDateTime;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.ActivationDateTime).SetAsNull == true)
        Entity.ActivationDateTime = DateTimeOffset.Now;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.ExpirationDateTime).Value = Entity.ExpirationDateTime;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.ExpirationDateTime).SetAsNull == true)
        Entity.ExpirationDateTime = DateTimeOffset.Now;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Trace).Value = Entity.Trace;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Trace).SetAsNull == true)
        Entity.Trace = false;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData1).Value = Entity.TextData1;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData1).SetAsNull == true)
        Entity.TextData1 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData2).Value = Entity.TextData2;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData2).SetAsNull == true)
        Entity.TextData2 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData3).Value = Entity.TextData3;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData3).SetAsNull == true)
        Entity.TextData3 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData4).Value = Entity.TextData4;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData4).SetAsNull == true)
        Entity.TextData4 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData5).Value = Entity.TextData5;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData5).SetAsNull == true)
        Entity.TextData5 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData6).Value = Entity.TextData6;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData6).SetAsNull == true)
        Entity.TextData6 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData7).Value = Entity.TextData7;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData7).SetAsNull == true)
        Entity.TextData7 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData8).Value = Entity.TextData8;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData8).SetAsNull == true)
        Entity.TextData8 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData9).Value = Entity.TextData9;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData9).SetAsNull == true)
        Entity.TextData9 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData10).Value = Entity.TextData10;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData10).SetAsNull == true)
        Entity.TextData10 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData11).Value = Entity.TextData11;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData11).SetAsNull == true)
        Entity.TextData11 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData12).Value = Entity.TextData12;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData12).SetAsNull == true)
        Entity.TextData12 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData13).Value = Entity.TextData13;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData13).SetAsNull == true)
        Entity.TextData13 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData14).Value = Entity.TextData14;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData14).SetAsNull == true)
        Entity.TextData14 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData15).Value = Entity.TextData15;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData15).SetAsNull == true)
        Entity.TextData15 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData16).Value = Entity.TextData16;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData16).SetAsNull == true)
        Entity.TextData16 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData17).Value = Entity.TextData17;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData17).SetAsNull == true)
        Entity.TextData17 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData18).Value = Entity.TextData18;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData18).SetAsNull == true)
        Entity.TextData18 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData19).Value = Entity.TextData19;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData19).SetAsNull == true)
        Entity.TextData19 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData20).Value = Entity.TextData20;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData20).SetAsNull == true)
        Entity.TextData20 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData22).Value = Entity.TextData22;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData22).SetAsNull == true)
        Entity.TextData22 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData23).Value = Entity.TextData23;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData23).SetAsNull == true)
        Entity.TextData23 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData24).Value = Entity.TextData24;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData24).SetAsNull == true)
        Entity.TextData24 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData25).Value = Entity.TextData25;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData25).SetAsNull == true)
        Entity.TextData25 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData26).Value = Entity.TextData26;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData26).SetAsNull == true)
        Entity.TextData26 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData27).Value = Entity.TextData27;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData27).SetAsNull == true)
        Entity.TextData27 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData28).Value = Entity.TextData28;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData28).SetAsNull == true)
        Entity.TextData28 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData29).Value = Entity.TextData29;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData29).SetAsNull == true)
        Entity.TextData29 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData21).Value = Entity.TextData21;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData21).SetAsNull == true)
        Entity.TextData21 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData30).Value = Entity.TextData30;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData30).SetAsNull == true)
        Entity.TextData30 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData31).Value = Entity.TextData31;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData31).SetAsNull == true)
        Entity.TextData31 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData32).Value = Entity.TextData32;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData32).SetAsNull == true)
        Entity.TextData32 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData33).Value = Entity.TextData33;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData33).SetAsNull == true)
        Entity.TextData33 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData34).Value = Entity.TextData34;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData34).SetAsNull == true)
        Entity.TextData34 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData35).Value = Entity.TextData35;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData35).SetAsNull == true)
        Entity.TextData35 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData36).Value = Entity.TextData36;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData36).SetAsNull == true)
        Entity.TextData36 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData37).Value = Entity.TextData37;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData37).SetAsNull == true)
        Entity.TextData37 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData38).Value = Entity.TextData38;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData38).SetAsNull == true)
        Entity.TextData38 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData39).Value = Entity.TextData39;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData39).SetAsNull == true)
        Entity.TextData39 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData40).Value = Entity.TextData40;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData40).SetAsNull == true)
        Entity.TextData40 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData41).Value = Entity.TextData41;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData41).SetAsNull == true)
        Entity.TextData41 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData42).Value = Entity.TextData42;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData42).SetAsNull == true)
        Entity.TextData42 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData43).Value = Entity.TextData43;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData43).SetAsNull == true)
        Entity.TextData43 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData44).Value = Entity.TextData44;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData44).SetAsNull == true)
        Entity.TextData44 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData45).Value = Entity.TextData45;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData45).SetAsNull == true)
        Entity.TextData45 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData46).Value = Entity.TextData46;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData46).SetAsNull == true)
        Entity.TextData46 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData47).Value = Entity.TextData47;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData47).SetAsNull == true)
        Entity.TextData47 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData48).Value = Entity.TextData48;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData48).SetAsNull == true)
        Entity.TextData48 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData49).Value = Entity.TextData49;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData49).SetAsNull == true)
        Entity.TextData49 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData50).Value = Entity.TextData50;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData50).SetAsNull == true)
        Entity.TextData50 = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.SysGalEmployeeId).Value = Entity.SysGalEmployeeId;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.SysGalEmployeeId).SetAsNull == true)
        Entity.SysGalEmployeeId = 0;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.VeryImportantPerson).Value = Entity.VeryImportantPerson;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.VeryImportantPerson).SetAsNull == true)
        Entity.VeryImportantPerson = false;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.HasPhysicalDisability).Value = Entity.HasPhysicalDisability;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.HasPhysicalDisability).SetAsNull == true)
        Entity.HasPhysicalDisability = false;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.HasVertigo).Value = Entity.HasVertigo;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.HasVertigo).SetAsNull == true)
        Entity.HasVertigo = false;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.InsertName).Value = Entity.InsertName;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.InsertName).SetAsNull == true)
        Entity.InsertName = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.InsertDate).Value = Entity.InsertDate;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.InsertDate).SetAsNull == true)
        Entity.InsertDate = DateTimeOffset.Now;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.UpdateName).Value = Entity.UpdateName;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.UpdateName).SetAsNull == true)
        Entity.UpdateName = string.Empty;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.UpdateDate).Value = Entity.UpdateDate;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.UpdateDate).SetAsNull == true)
        Entity.UpdateDate = DateTimeOffset.Now;
      ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.ConcurrencyValue).Value = Entity.ConcurrencyValue;
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.ConcurrencyValue).SetAsNull == true)
        Entity.ConcurrencyValue = 0;
    }
    #endregion

    #region ColumnCollectionToEntityData Method
    /// <summary>
    /// Moves the data from the Columns collection into the Entity class.
    /// This is called whenever you are reading data in from a database.
    ///   For example, from BuildCollection, Load, LoadByPK, etc.
    /// </summary>
    protected override void ColumnCollectionToEntityData()
    {
      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PersonUid).IsNull == false)
        Entity.PersonUid = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PersonUid).GetAsGuid();
      else
        Entity.PersonUid = Guid.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.PersonUid, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PersonUid).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.CountryOfBirthUid).IsNull == false)
        Entity.CountryOfBirthUid = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.CountryOfBirthUid).GetAsGuid();
      else
        Entity.CountryOfBirthUid = Guid.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.CountryOfBirthUid, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.CountryOfBirthUid).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PersonActiveStatusTypeUid).IsNull == false)
        Entity.PersonActiveStatusTypeUid = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PersonActiveStatusTypeUid).GetAsGuid();
      else
        Entity.PersonActiveStatusTypeUid = Guid.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.PersonActiveStatusTypeUid, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PersonActiveStatusTypeUid).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.GenderUid).IsNull == false)
        Entity.GenderUid = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.GenderUid).GetAsGuid();
      else
        Entity.GenderUid = Guid.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.GenderUid, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.GenderUid).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.DepartmentUid).IsNull == false)
        Entity.DepartmentUid = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.DepartmentUid).GetAsGuid();
      else
        Entity.DepartmentUid = Guid.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.DepartmentUid, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.DepartmentUid).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PersonRecordTypeUid).IsNull == false)
        Entity.PersonRecordTypeUid = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PersonRecordTypeUid).GetAsGuid();
      else
        Entity.PersonRecordTypeUid = Guid.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.PersonRecordTypeUid, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PersonRecordTypeUid).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.EntityId).IsNull == false)
        Entity.EntityId = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.EntityId).GetAsGuid();
      else
        Entity.EntityId = Guid.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.EntityId, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.EntityId).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.RowOrigin).IsNull == false)
        Entity.RowOrigin = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.RowOrigin).GetAsString();
      else
        Entity.RowOrigin = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.RowOrigin, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.RowOrigin).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.OriginId).IsNull == false)
        Entity.OriginId = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.OriginId).GetAsString();
      else
        Entity.OriginId = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.OriginId, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.OriginId).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PersonId).IsNull == false)
        Entity.PersonId = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PersonId).GetAsString();
      else
        Entity.PersonId = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.PersonId, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PersonId).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.FirstName).IsNull == false)
        Entity.FirstName = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.FirstName).GetAsString();
      else
        Entity.FirstName = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.FirstName, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.FirstName).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.MiddleName).IsNull == false)
        Entity.MiddleName = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.MiddleName).GetAsString();
      else
        Entity.MiddleName = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.MiddleName, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.MiddleName).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.LastName).IsNull == false)
        Entity.LastName = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.LastName).GetAsString();
      else
        Entity.LastName = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.LastName, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.LastName).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Initials).IsNull == false)
        Entity.Initials = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Initials).GetAsString();
      else
        Entity.Initials = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.Initials, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Initials).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.NickName).IsNull == false)
        Entity.NickName = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.NickName).GetAsString();
      else
        Entity.NickName = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.NickName, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.NickName).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.LegalName).IsNull == false)
        Entity.LegalName = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.LegalName).GetAsString();
      else
        Entity.LegalName = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.LegalName, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.LegalName).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.FullName).IsNull == false)
        Entity.FullName = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.FullName).GetAsString();
      else
        Entity.FullName = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.FullName, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.FullName).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PreferredName).IsNull == false)
        Entity.PreferredName = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PreferredName).GetAsString();
      else
        Entity.PreferredName = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.PreferredName, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PreferredName).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Company).IsNull == false)
        Entity.Company = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Company).GetAsString();
      else
        Entity.Company = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.Company, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Company).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.HomeOfficeLocation).IsNull == false)
        Entity.HomeOfficeLocation = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.HomeOfficeLocation).GetAsString();
      else
        Entity.HomeOfficeLocation = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.HomeOfficeLocation, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.HomeOfficeLocation).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.JobTitle).IsNull == false)
        Entity.JobTitle = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.JobTitle).GetAsString();
      else
        Entity.JobTitle = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.JobTitle, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.JobTitle).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Race).IsNull == false)
        Entity.Race = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Race).GetAsString();
      else
        Entity.Race = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.Race, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Race).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Nationality).IsNull == false)
        Entity.Nationality = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Nationality).GetAsString();
      else
        Entity.Nationality = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.Nationality, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Nationality).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Ethnicity).IsNull == false)
        Entity.Ethnicity = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Ethnicity).GetAsString();
      else
        Entity.Ethnicity = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.Ethnicity, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Ethnicity).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PrimaryLanguage).IsNull == false)
        Entity.PrimaryLanguage = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PrimaryLanguage).GetAsString();
      else
        Entity.PrimaryLanguage = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.PrimaryLanguage, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PrimaryLanguage).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.SecondaryLanguage).IsNull == false)
        Entity.SecondaryLanguage = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.SecondaryLanguage).GetAsString();
      else
        Entity.SecondaryLanguage = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.SecondaryLanguage, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.SecondaryLanguage).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.NationalIdentificationNumber).IsNull == false)
        Entity.NationalIdentificationNumber = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.NationalIdentificationNumber).GetAsString();
      else
        Entity.NationalIdentificationNumber = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.NationalIdentificationNumber, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.NationalIdentificationNumber).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.DateOfBirth).IsNull == false)
        Entity.DateOfBirth = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.DateOfBirth).GetAsDate();
      else
        Entity.DateOfBirth = Convert.ToDateTime("1753-1-1", System.Threading.Thread.CurrentThread.CurrentUICulture.DateTimeFormat);
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.DateOfBirth, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.DateOfBirth).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.EmploymentDate).IsNull == false)
        Entity.EmploymentDate = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.EmploymentDate).GetAsDate();
      else
        Entity.EmploymentDate = Convert.ToDateTime("1753-1-1", System.Threading.Thread.CurrentThread.CurrentUICulture.DateTimeFormat);
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.EmploymentDate, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.EmploymentDate).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TerminationDate).IsNull == false)
        Entity.TerminationDate = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TerminationDate).GetAsDate();
      else
        Entity.TerminationDate = Convert.ToDateTime("1753-1-1", System.Threading.Thread.CurrentThread.CurrentUICulture.DateTimeFormat);
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TerminationDate, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TerminationDate).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.ActivationDateTime).IsNull == false)
        Entity.ActivationDateTime = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.ActivationDateTime).GetAsDate();
      else
        Entity.ActivationDateTime = Convert.ToDateTime("1753-1-1", System.Threading.Thread.CurrentThread.CurrentUICulture.DateTimeFormat);
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.ActivationDateTime, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.ActivationDateTime).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.ExpirationDateTime).IsNull == false)
        Entity.ExpirationDateTime = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.ExpirationDateTime).GetAsDate();
      else
        Entity.ExpirationDateTime = Convert.ToDateTime("1753-1-1", System.Threading.Thread.CurrentThread.CurrentUICulture.DateTimeFormat);
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.ExpirationDateTime, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.ExpirationDateTime).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Trace).IsNull == false)
        Entity.Trace = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Trace).GetAsBool();
      else
        Entity.Trace = false;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.Trace, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Trace).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData1).IsNull == false)
        Entity.TextData1 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData1).GetAsString();
      else
        Entity.TextData1 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData1, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData1).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData2).IsNull == false)
        Entity.TextData2 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData2).GetAsString();
      else
        Entity.TextData2 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData2, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData2).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData3).IsNull == false)
        Entity.TextData3 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData3).GetAsString();
      else
        Entity.TextData3 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData3, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData3).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData4).IsNull == false)
        Entity.TextData4 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData4).GetAsString();
      else
        Entity.TextData4 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData4, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData4).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData5).IsNull == false)
        Entity.TextData5 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData5).GetAsString();
      else
        Entity.TextData5 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData5, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData5).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData6).IsNull == false)
        Entity.TextData6 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData6).GetAsString();
      else
        Entity.TextData6 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData6, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData6).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData7).IsNull == false)
        Entity.TextData7 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData7).GetAsString();
      else
        Entity.TextData7 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData7, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData7).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData8).IsNull == false)
        Entity.TextData8 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData8).GetAsString();
      else
        Entity.TextData8 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData8, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData8).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData9).IsNull == false)
        Entity.TextData9 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData9).GetAsString();
      else
        Entity.TextData9 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData9, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData9).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData10).IsNull == false)
        Entity.TextData10 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData10).GetAsString();
      else
        Entity.TextData10 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData10, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData10).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData11).IsNull == false)
        Entity.TextData11 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData11).GetAsString();
      else
        Entity.TextData11 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData11, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData11).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData12).IsNull == false)
        Entity.TextData12 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData12).GetAsString();
      else
        Entity.TextData12 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData12, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData12).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData13).IsNull == false)
        Entity.TextData13 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData13).GetAsString();
      else
        Entity.TextData13 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData13, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData13).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData14).IsNull == false)
        Entity.TextData14 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData14).GetAsString();
      else
        Entity.TextData14 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData14, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData14).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData15).IsNull == false)
        Entity.TextData15 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData15).GetAsString();
      else
        Entity.TextData15 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData15, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData15).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData16).IsNull == false)
        Entity.TextData16 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData16).GetAsString();
      else
        Entity.TextData16 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData16, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData16).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData17).IsNull == false)
        Entity.TextData17 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData17).GetAsString();
      else
        Entity.TextData17 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData17, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData17).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData18).IsNull == false)
        Entity.TextData18 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData18).GetAsString();
      else
        Entity.TextData18 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData18, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData18).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData19).IsNull == false)
        Entity.TextData19 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData19).GetAsString();
      else
        Entity.TextData19 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData19, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData19).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData20).IsNull == false)
        Entity.TextData20 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData20).GetAsString();
      else
        Entity.TextData20 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData20, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData20).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData22).IsNull == false)
        Entity.TextData22 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData22).GetAsString();
      else
        Entity.TextData22 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData22, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData22).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData23).IsNull == false)
        Entity.TextData23 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData23).GetAsString();
      else
        Entity.TextData23 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData23, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData23).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData24).IsNull == false)
        Entity.TextData24 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData24).GetAsString();
      else
        Entity.TextData24 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData24, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData24).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData25).IsNull == false)
        Entity.TextData25 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData25).GetAsString();
      else
        Entity.TextData25 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData25, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData25).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData26).IsNull == false)
        Entity.TextData26 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData26).GetAsString();
      else
        Entity.TextData26 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData26, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData26).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData27).IsNull == false)
        Entity.TextData27 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData27).GetAsString();
      else
        Entity.TextData27 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData27, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData27).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData28).IsNull == false)
        Entity.TextData28 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData28).GetAsString();
      else
        Entity.TextData28 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData28, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData28).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData29).IsNull == false)
        Entity.TextData29 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData29).GetAsString();
      else
        Entity.TextData29 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData29, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData29).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData21).IsNull == false)
        Entity.TextData21 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData21).GetAsString();
      else
        Entity.TextData21 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData21, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData21).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData30).IsNull == false)
        Entity.TextData30 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData30).GetAsString();
      else
        Entity.TextData30 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData30, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData30).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData31).IsNull == false)
        Entity.TextData31 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData31).GetAsString();
      else
        Entity.TextData31 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData31, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData31).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData32).IsNull == false)
        Entity.TextData32 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData32).GetAsString();
      else
        Entity.TextData32 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData32, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData32).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData33).IsNull == false)
        Entity.TextData33 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData33).GetAsString();
      else
        Entity.TextData33 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData33, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData33).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData34).IsNull == false)
        Entity.TextData34 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData34).GetAsString();
      else
        Entity.TextData34 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData34, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData34).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData35).IsNull == false)
        Entity.TextData35 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData35).GetAsString();
      else
        Entity.TextData35 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData35, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData35).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData36).IsNull == false)
        Entity.TextData36 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData36).GetAsString();
      else
        Entity.TextData36 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData36, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData36).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData37).IsNull == false)
        Entity.TextData37 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData37).GetAsString();
      else
        Entity.TextData37 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData37, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData37).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData38).IsNull == false)
        Entity.TextData38 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData38).GetAsString();
      else
        Entity.TextData38 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData38, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData38).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData39).IsNull == false)
        Entity.TextData39 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData39).GetAsString();
      else
        Entity.TextData39 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData39, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData39).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData40).IsNull == false)
        Entity.TextData40 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData40).GetAsString();
      else
        Entity.TextData40 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData40, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData40).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData41).IsNull == false)
        Entity.TextData41 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData41).GetAsString();
      else
        Entity.TextData41 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData41, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData41).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData42).IsNull == false)
        Entity.TextData42 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData42).GetAsString();
      else
        Entity.TextData42 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData42, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData42).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData43).IsNull == false)
        Entity.TextData43 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData43).GetAsString();
      else
        Entity.TextData43 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData43, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData43).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData44).IsNull == false)
        Entity.TextData44 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData44).GetAsString();
      else
        Entity.TextData44 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData44, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData44).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData45).IsNull == false)
        Entity.TextData45 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData45).GetAsString();
      else
        Entity.TextData45 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData45, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData45).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData46).IsNull == false)
        Entity.TextData46 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData46).GetAsString();
      else
        Entity.TextData46 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData46, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData46).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData47).IsNull == false)
        Entity.TextData47 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData47).GetAsString();
      else
        Entity.TextData47 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData47, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData47).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData48).IsNull == false)
        Entity.TextData48 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData48).GetAsString();
      else
        Entity.TextData48 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData48, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData48).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData49).IsNull == false)
        Entity.TextData49 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData49).GetAsString();
      else
        Entity.TextData49 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData49, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData49).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData50).IsNull == false)
        Entity.TextData50 = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData50).GetAsString();
      else
        Entity.TextData50 = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.TextData50, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData50).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.SysGalEmployeeId).IsNull == false)
        Entity.SysGalEmployeeId = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.SysGalEmployeeId).GetAsInteger();
      else
        Entity.SysGalEmployeeId = 0;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.SysGalEmployeeId, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.SysGalEmployeeId).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.VeryImportantPerson).IsNull == false)
        Entity.VeryImportantPerson = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.VeryImportantPerson).GetAsBool();
      else
        Entity.VeryImportantPerson = false;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.VeryImportantPerson, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.VeryImportantPerson).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.HasPhysicalDisability).IsNull == false)
        Entity.HasPhysicalDisability = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.HasPhysicalDisability).GetAsBool();
      else
        Entity.HasPhysicalDisability = false;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.HasPhysicalDisability, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.HasPhysicalDisability).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.HasVertigo).IsNull == false)
        Entity.HasVertigo = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.HasVertigo).GetAsBool();
      else
        Entity.HasVertigo = false;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.HasVertigo, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.HasVertigo).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.InsertName).IsNull == false)
        Entity.InsertName = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.InsertName).GetAsString();
      else
        Entity.InsertName = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.InsertName, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.InsertName).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.InsertDate).IsNull == false)
        Entity.InsertDate = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.InsertDate).GetAsDate();
      else
        Entity.InsertDate = Convert.ToDateTime("1753-1-1", System.Threading.Thread.CurrentThread.CurrentUICulture.DateTimeFormat);
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.InsertDate, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.InsertDate).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.UpdateName).IsNull == false)
        Entity.UpdateName = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.UpdateName).GetAsString();
      else
        Entity.UpdateName = string.Empty;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.UpdateName, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.UpdateName).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.UpdateDate).IsNull == false)
        Entity.UpdateDate = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.UpdateDate).GetAsDate();
      else
        Entity.UpdateDate = Convert.ToDateTime("1753-1-1", System.Threading.Thread.CurrentThread.CurrentUICulture.DateTimeFormat);
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.UpdateDate, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.UpdateDate).Value);

      if (ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.ConcurrencyValue).IsNull == false)
        Entity.ConcurrencyValue = ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.ConcurrencyValue).GetAsShort();
      else
        Entity.ConcurrencyValue = 0;
      Entity.SetOriginalValueForProperty(PersonPDSAValidator.ColumnNames.ConcurrencyValue, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.ConcurrencyValue).Value);

    }
    #endregion

    #region CreateEntityFromDataRow Method
    /// <summary>
    /// Creates an Entity object from a DataRow object.
    /// </summary>
    /// <param name="dr">DataRow object with all fields from the table in it.</param>
    /// <returns>PersonPDSA</returns>
    public PersonPDSA CreateEntityFromDataRow(DataRow dr)
    {
      // Create new Entity Object
      Entity = new PersonPDSA();

      // Move all data into Properties collection
      // This method calls the ColumnCollectionToEntityData method
      DataRowToProperties(dr);
      Entity.IsDirty = false;

      return Entity;
    }
    #endregion

    #region SelectSQL Method
    /// <summary>
    /// Builds the SQL for the SELECT statement, or SELECT stored procedure based on the SelectFilter property.
    /// </summary>
    /// <returns>string</returns>
    public override string SelectSQL()
    {
      StringBuilder sb = new StringBuilder(SB_INIT_LENGTH);

      switch (SelectFilter)
      {
        case SelectFilters.All:
          if (UseStoredProcs)
          {
            sb.Append("GCS.PersonPDSA_SelectAll");
          }
          else
          {
            
          }
          
          break;
        case SelectFilters.ListBox:
          if (UseStoredProcs)
          {
            sb.Append("GCS.PersonPDSA_SelectListBox");
          }
          else
          {
            
          }
          
          break;
        case SelectFilters.PrimaryKey:
          if (UseStoredProcs)
          {
            sb.Append("GCS.PersonPDSA_SelectByPK");
          }
          else
          {
            
          }
          
          break;
        case SelectFilters.Search:
          if (UseStoredProcs)
          {
            sb.Append("GCS.PersonPDSA_SelectSearch");
          }
          else
          {
            
          }
          
          break;
        case SelectFilters.ByEntityId:
          if (UseStoredProcs)
          {
            sb.Append("GCS.PersonPDSA_ByEntityId");
          }
          else
          {
            
          }
          
          break;

        case SelectFilters.Custom:
          sb.Append(SelectCustom);

          break;          
      }

      SQL = sb.ToString();

      return SQL;
    }
    #endregion

    #region InsertSQL Method
    /// <summary>
    /// Builds the SQL for the INSERT statement, or INSERT stored procedure based on the InsertFilter property.
    /// </summary>
    /// <returns>string</returns>
    public override string InsertSQL()
    {
      StringBuilder sb = new StringBuilder(SB_INIT_LENGTH);

      switch (InsertFilter)
      {
        case InsertFilters.All:
          if (UseStoredProcs)
          {
            sb.Append("GCS.PersonPDSA_Insert");
          }
          else
          {
            
          }
            
          break;
        
        case InsertFilters.Custom:
          sb.Append(InsertCustom);
          
          break;
      }

      SQL = sb.ToString();

      return SQL;
    }
    #endregion

    #region UpdateSQL Method
    /// <summary>
    /// Builds the SQL for the UPDATE statement, or UPDATE stored procedure based on the UpdateFilter property.
    /// </summary>
    /// <returns>string</returns>
    public override string UpdateSQL()
    {
      StringBuilder sb = new StringBuilder(SB_INIT_LENGTH);

      switch (UpdateFilter)
      {
        case UpdateFilters.PrimaryKey:
          if (UseStoredProcs)
          {
            sb.Append("GCS.PersonPDSA_Update");
          }
          else
          {
            
          }
          
          break;
        case UpdateFilters.UpdateConcurrency:
          if (UseStoredProcs)
          {
            sb.Append("GCS.PersonPDSA_UpdateConcurrency");
          }
          else
          {
            
          }
          
          break;
        
        case UpdateFilters.Custom:
          sb.Append(UpdateCustom);
          
          break;
      }

      SQL = sb.ToString();

      return SQL;
    }
    #endregion

    #region DeleteByPK Method
    /// <summary>
    /// Delete a record from the table based on the primary key value that is passed in.
    /// </summary>
    /// <param name="personUid">The value of the primary key of the row to delete</param>
    /// <returns>int</returns>
    public int DeleteByPK(Guid personUid)
    {
      DeleteFilter = DeleteFilters.DeleteByPK;
      Entity.PersonUid = personUid;      
      
      // If using Audit Tracking, need to load the record first
      if (UseAuditTracking)
        LoadByPK(personUid);

      RowsAffected = Delete();

      return RowsAffected;
    }
    #endregion

    #region DeleteSQL Method
    /// <summary>
    /// Builds the SQL for the DELETE statement, or DELETE stored procedure. You can set the WhereFilter property to selectively delete rows from the table.
    /// </summary>
    /// <returns>string</returns>
    public override string DeleteSQL()
    {
      StringBuilder sb = new StringBuilder(SB_INIT_LENGTH);

      switch (DeleteFilter)
      {
        case DeleteFilters.DeleteByPK:
          if (UseStoredProcs)
          {
            sb.Append("GCS.PersonPDSA_DeleteByPK");
          }
          else
          {
            
          }
          
          break;

        case DeleteFilters.Custom:
          sb.Append(DeleteCustom);

          break;          
      }

      if(!UseStoredProcs)
      {
        sb.Append(WhereClauseSQL());
      }
     
      SQL = sb.ToString();

      return SQL;
    }
    #endregion

    #region RowCountSQL Method
    /// <summary>
    /// Builds the SELECT Count(*) SQL, or the name of the stored procedure, that will count the number of rows.
    /// </summary>
    /// <returns>string</returns>
    public override string RowCountSQL()
    {
      StringBuilder sb = new StringBuilder(SB_INIT_LENGTH);

      switch (RowCountFilter)
      {
        case RowCountFilters.All:
          if (UseStoredProcs)
          {
            sb.Append("GCS.PersonPDSA_RowCount");
          }
          else
          {
            
          }
          
          break;

        case RowCountFilters.Custom:
          sb.Append(RowCountCustom);

          break;          
      }

      if(!UseStoredProcs)
      {
        sb.Append(WhereClauseSQL());
      }
     
      SQL = sb.ToString();

      return SQL;
    }
    #endregion

    #region LoadByPK Method
    /// <summary>
    /// Load a row of data in the Entity properties. Returns a value greater than 0 if it finds the record.
    /// </summary>
    /// <param name="personUid">The value of the primary key of the row to load</param>
    /// <returns>Int32</returns>
    public int LoadByPK(Guid personUid)
    {
      SelectFilter = SelectFilters.PrimaryKey;
      Entity.PersonUid = personUid;      

      // Load Data into Properties
      RowsAffected = Load();

      // Reset all Collection Properties
      ResetCollectionProperties();
      
      return RowsAffected;
    }
    #endregion
    
    
    #region Updated Method
    /// <summary>
    /// This method is called after a successful update
    /// </summary>
    protected override void Updated()
    {
      Entity.ConcurrencyValue += Convert.ToInt16(1);
    }
    #endregion

    #region SelectFillInParameters Method
    /// <summary>
    /// Builds the CommandObject.Parameters collection for any SELECT statement parameters.
    /// </summary>
    protected override void SelectFillInParameters()
    {
      switch (SelectFilter)
      {
        case SelectFilters.All:
         
          break;
        case SelectFilters.ListBox:
         
          break;
        case SelectFilters.PrimaryKey:
          CommandObject.Parameters.Add(DataProvider.CreateParameter("@PersonUid", DbType.Guid, Entity.PersonUid));
         
          break;
        case SelectFilters.Search:
          CommandObject.Parameters.Add(DataProvider.CreateParameter("@RowOrigin", DbType.String, Entity.RowOrigin));
         
          break;
        case SelectFilters.ByEntityId:
          CommandObject.Parameters.Add(DataProvider.CreateParameter("@EntityId", DbType.Guid, Entity.EntityId));
         
          break;
      }

      // Add on paging parameters
      if(UsePaging)
      {
        PagingFillInParameters(Entity.ResultSetRowNumberBegin, Entity.ResultSetRowNumberEnd);
      }
    }
    #endregion


    #region SetModificationCommandParameters Method
    /// <summary>
    /// Called to build any parameters prior to submitting an INSERT, UPDATE, or DELETE statement.
    /// </summary>
    protected override void SetModificationCommandParameters()
    {    
      switch (DataModificationAction)
      {
        case PDSADataModificationState.Delete:
          switch (DeleteFilter)
          {
            case DeleteFilters.DeleteByPK:
             CommandObject.Parameters.Clear();
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@PersonUid", DbType.Guid, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PersonUid).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@ConcurrencyValue", DbType.Int16, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.ConcurrencyValue).Value));
              
              break;
          }

          break;

        case PDSADataModificationState.Insert:
          if (PrimaryKeyType == PDSAPrimaryKeyType.PDSA)
          {
            if (PrimaryKeyGenerate == true)
            {
              //  Get New Primary Key from pdsaTableIds
              PrimaryKeySet(PKGetFromPDSATableIds(PDSALoginName));
            }
          }

          switch (InsertFilter)
          {
            case InsertFilters.All:
             CommandObject.Parameters.Clear();
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@PersonUid", DbType.Guid, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PersonUid).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@CountryOfBirthUid", DbType.Guid, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.CountryOfBirthUid).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@PersonActiveStatusTypeUid", DbType.Guid, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PersonActiveStatusTypeUid).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@GenderUid", DbType.Guid, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.GenderUid).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@DepartmentUid", DbType.Guid, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.DepartmentUid).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@PersonRecordTypeUid", DbType.Guid, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PersonRecordTypeUid).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@EntityId", DbType.Guid, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.EntityId).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@RowOrigin", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.RowOrigin).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@OriginId", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.OriginId).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@PersonId", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PersonId).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@FirstName", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.FirstName).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@MiddleName", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.MiddleName).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@LastName", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.LastName).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@Initials", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Initials).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@NickName", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.NickName).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@LegalName", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.LegalName).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@FullName", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.FullName).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@PreferredName", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PreferredName).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@Company", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Company).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@HomeOfficeLocation", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.HomeOfficeLocation).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@JobTitle", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.JobTitle).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@Race", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Race).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@Nationality", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Nationality).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@Ethnicity", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Ethnicity).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@PrimaryLanguage", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PrimaryLanguage).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@SecondaryLanguage", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.SecondaryLanguage).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@NationalIdentificationNumber", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.NationalIdentificationNumber).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@DateOfBirth", DbType.Date, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.DateOfBirth).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@EmploymentDate", DbType.Date, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.EmploymentDate).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TerminationDate", DbType.Date, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TerminationDate).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@ActivationDateTime", DbType.DateTimeOffset, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.ActivationDateTime).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@ExpirationDateTime", DbType.DateTimeOffset, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.ExpirationDateTime).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@Trace", DbType.Boolean, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Trace).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData1", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData1).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData2", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData2).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData3", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData3).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData4", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData4).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData5", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData5).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData6", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData6).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData7", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData7).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData8", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData8).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData9", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData9).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData10", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData10).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData11", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData11).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData12", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData12).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData13", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData13).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData14", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData14).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData15", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData15).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData16", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData16).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData17", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData17).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData18", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData18).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData19", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData19).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData20", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData20).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData22", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData22).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData23", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData23).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData24", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData24).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData25", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData25).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData26", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData26).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData27", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData27).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData28", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData28).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData29", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData29).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData21", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData21).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData30", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData30).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData31", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData31).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData32", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData32).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData33", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData33).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData34", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData34).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData35", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData35).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData36", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData36).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData37", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData37).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData38", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData38).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData39", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData39).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData40", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData40).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData41", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData41).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData42", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData42).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData43", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData43).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData44", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData44).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData45", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData45).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData46", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData46).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData47", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData47).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData48", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData48).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData49", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData49).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData50", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData50).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@SysGalEmployeeId", DbType.Int32, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.SysGalEmployeeId).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@VeryImportantPerson", DbType.Boolean, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.VeryImportantPerson).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@HasPhysicalDisability", DbType.Boolean, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.HasPhysicalDisability).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@HasVertigo", DbType.Boolean, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.HasVertigo).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@InsertName", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.InsertName).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@InsertDate", DbType.DateTimeOffset, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.InsertDate).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@UpdateName", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.UpdateName).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@UpdateDate", DbType.DateTimeOffset, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.UpdateDate).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@ConcurrencyValue", DbType.Int16, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.ConcurrencyValue).Value));
              
              break;
          }

          break;

        case PDSADataModificationState.Update:
          switch (UpdateFilter)
          {
            case UpdateFilters.PrimaryKey:
             CommandObject.Parameters.Clear();
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@PersonUid", DbType.Guid, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PersonUid).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@CountryOfBirthUid", DbType.Guid, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.CountryOfBirthUid).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@PersonActiveStatusTypeUid", DbType.Guid, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PersonActiveStatusTypeUid).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@GenderUid", DbType.Guid, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.GenderUid).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@DepartmentUid", DbType.Guid, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.DepartmentUid).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@PersonRecordTypeUid", DbType.Guid, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PersonRecordTypeUid).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@EntityId", DbType.Guid, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.EntityId).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@RowOrigin", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.RowOrigin).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@OriginId", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.OriginId).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@PersonId", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PersonId).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@FirstName", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.FirstName).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@MiddleName", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.MiddleName).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@LastName", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.LastName).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@Initials", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Initials).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@NickName", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.NickName).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@LegalName", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.LegalName).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@FullName", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.FullName).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@PreferredName", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PreferredName).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@Company", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Company).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@HomeOfficeLocation", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.HomeOfficeLocation).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@JobTitle", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.JobTitle).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@Race", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Race).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@Nationality", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Nationality).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@Ethnicity", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Ethnicity).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@PrimaryLanguage", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PrimaryLanguage).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@SecondaryLanguage", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.SecondaryLanguage).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@NationalIdentificationNumber", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.NationalIdentificationNumber).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@DateOfBirth", DbType.Date, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.DateOfBirth).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@EmploymentDate", DbType.Date, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.EmploymentDate).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TerminationDate", DbType.Date, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TerminationDate).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@ActivationDateTime", DbType.DateTimeOffset, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.ActivationDateTime).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@ExpirationDateTime", DbType.DateTimeOffset, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.ExpirationDateTime).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@Trace", DbType.Boolean, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.Trace).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData1", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData1).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData2", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData2).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData3", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData3).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData4", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData4).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData5", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData5).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData6", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData6).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData7", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData7).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData8", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData8).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData9", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData9).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData10", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData10).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData11", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData11).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData12", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData12).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData13", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData13).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData14", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData14).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData15", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData15).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData16", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData16).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData17", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData17).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData18", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData18).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData19", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData19).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData20", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData20).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData22", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData22).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData23", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData23).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData24", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData24).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData25", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData25).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData26", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData26).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData27", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData27).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData28", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData28).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData29", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData29).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData21", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData21).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData30", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData30).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData31", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData31).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData32", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData32).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData33", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData33).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData34", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData34).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData35", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData35).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData36", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData36).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData37", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData37).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData38", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData38).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData39", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData39).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData40", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData40).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData41", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData41).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData42", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData42).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData43", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData43).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData44", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData44).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData45", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData45).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData46", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData46).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData47", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData47).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData48", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData48).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData49", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData49).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@TextData50", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.TextData50).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@SysGalEmployeeId", DbType.Int32, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.SysGalEmployeeId).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@VeryImportantPerson", DbType.Boolean, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.VeryImportantPerson).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@HasPhysicalDisability", DbType.Boolean, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.HasPhysicalDisability).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@HasVertigo", DbType.Boolean, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.HasVertigo).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@UpdateName", DbType.String, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.UpdateName).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@UpdateDate", DbType.DateTimeOffset, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.UpdateDate).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@ConcurrencyValue", DbType.Int16, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.ConcurrencyValue).Value));
              
              break;
            case UpdateFilters.UpdateConcurrency:
             CommandObject.Parameters.Clear();
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@PersonUid", DbType.Guid, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.PersonUid).Value));
              CommandObject.Parameters.Add(DataProvider.CreateParameter( 
                  "@ConcurrencyValue", DbType.Int16, ValidatorObject.Properties.GetByName(PersonPDSAValidator.ColumnNames.ConcurrencyValue).Value));
              
              break;
          }
          break;
      }
    }
    #endregion
  }
}
