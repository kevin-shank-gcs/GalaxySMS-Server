//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    
	[DataContract]
	public partial class CredentialPIV75Bit : DbObjectBase, ITableEntityBase
    {
    
    /*	// Move to partial class
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    using System.Collections.ObjectModel;
    using GCS.Core.Common.Extensions;
    
    namespace GalaxySMS.Client.Entities
    {
        public partial class CredentialPIV75Bit
        {
        	public CredentialPIV75Bit() : base()
        	{
        		Initialize();
        	}
        
        	public CredentialPIV75Bit(CredentialPIV75Bit e) : base(e)
        	{
        		Initialize(e);
        	}
        
        	public void Initialize()
        	{
        		base.Initialize();
        }
        
        	public void Initialize(CredentialPIV75Bit e)
        	{
        		Initialize();
        		base.Initialize(e);
        
        		if( e == null )
        			return;
        		this.CredentialUid = e.CredentialUid;
        		this.Agency = e.Agency;
        		this.Site = e.Site;
        		this.Credential = e.Credential;
        		this.InsertName = e.InsertName;
        		this.InsertDate = e.InsertDate;
        		this.UpdateName = e.UpdateName;
        		this.UpdateDate = e.UpdateDate;
        		this.ConcurrencyValue = e.ConcurrencyValue;
        		this.AgencyCode = e.AgencyCode;
        		this.SiteCode = e.SiteCode;
        		this.CredentialCode = e.CredentialCode;
        		
        	}
        
        	public CredentialPIV75Bit Clone(CredentialPIV75Bit e)
        	{
        		return new CredentialPIV75Bit(e);
        	}
        
        	public bool Equals(CredentialPIV75Bit other)
        	{
        		return base.Equals(other);
        	}
        	
        	public bool IsPrimaryKeyEqual(CredentialPIV75Bit other)
        	{
        		if( other == null ) 
        			return false;
        
        		if(other.CredentialUid != this.CredentialUid )
        			return false;
        		return true;
        	}
        
        	public override int GetHashCode()
        	{
        		return base.GetHashCode();
        	}
        
        	public override string ToString()
        	{
        		return base.ToString();
        	}
        }
    }
    */
    
    	
    	private System.Guid _credentialUid;
    
    	[DataMember]
    	public System.Guid CredentialUid
    	{ 
    		get { return _credentialUid; }
    		set
    		{
    			if (_credentialUid != value )
    			{
    				_credentialUid = value;
    				OnPropertyChanged(() => CredentialUid);
    			}
    		}
    	}
    	
    	private int _agency;
    
    	[DataMember]
    	public int Agency
    	{ 
    		get { return _agency; }
    		set
    		{
    			if (_agency != value )
    			{
    				_agency = value;
    				OnPropertyChanged(() => Agency);
    			}
    		}
    	}
    	
    	private int _site;
    
    	[DataMember]
    	public int Site
    	{ 
    		get { return _site; }
    		set
    		{
    			if (_site != value )
    			{
    				_site = value;
    				OnPropertyChanged(() => Site);
    			}
    		}
    	}
    	
    	private int _credential;
    
    	[DataMember]
    	public int Credential
    	{ 
    		get { return _credential; }
    		set
    		{
    			if (_credential != value )
    			{
    				_credential = value;
    				OnPropertyChanged(() => Credential);
    			}
    		}
    	}
    	
    	private string _insertName;
    
    	[DataMember]
    	public string InsertName
    	{ 
    		get { return _insertName; }
    		set
    		{
    			if (_insertName != value )
    			{
    				_insertName = value;
    				OnPropertyChanged(() => InsertName);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _insertDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> InsertDate
    	{ 
    		get { return _insertDate; }
    		set
    		{
    			if (_insertDate != value )
    			{
    				_insertDate = value;
    				OnPropertyChanged(() => InsertDate);
    			}
    		}
    	}
    	
    	private string _updateName;
    
    	[DataMember]
    	public string UpdateName
    	{ 
    		get { return _updateName; }
    		set
    		{
    			if (_updateName != value )
    			{
    				_updateName = value;
    				OnPropertyChanged(() => UpdateName);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _updateDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> UpdateDate
    	{ 
    		get { return _updateDate; }
    		set
    		{
    			if (_updateDate != value )
    			{
    				_updateDate = value;
    				OnPropertyChanged(() => UpdateDate);
    			}
    		}
    	}
    	
    	private Nullable<short> _concurrencyValue;
    
    	[DataMember]
    	public Nullable<short> ConcurrencyValue
    	{ 
    		get { return _concurrencyValue; }
    		set
    		{
    			if (_concurrencyValue != value )
    			{
    				_concurrencyValue = value;
    				OnPropertyChanged(() => ConcurrencyValue);
    			}
    		}
    	}
    	
    	private int _agencyCode;
    
    	[DataMember]
    	public int AgencyCode
    	{ 
    		get { return _agencyCode; }
    		set
    		{
    			if (_agencyCode != value )
    			{
    				_agencyCode = value;
    				OnPropertyChanged(() => AgencyCode);
    			}
    		}
    	}
    	
    	private int _siteCode;
    
    	[DataMember]
    	public int SiteCode
    	{ 
    		get { return _siteCode; }
    		set
    		{
    			if (_siteCode != value )
    			{
    				_siteCode = value;
    				OnPropertyChanged(() => SiteCode);
    			}
    		}
    	}
    	
    	private int _credentialCode;
    
    	[DataMember]
    	public int CredentialCode
    	{ 
    		get { return _credentialCode; }
    		set
    		{
    			if (_credentialCode != value )
    			{
    				_credentialCode = value;
    				OnPropertyChanged(() => CredentialCode);
    			}
    		}
    	}
    
    	
    	private Credential _credential1;
    
    	[DataMember]
    	public virtual Credential Credential1
    	{ 
    		get { return _credential1; }
    		set
    		{
    			if (_credential1 != value )
    			{
    				_credential1 = value;
    				OnPropertyChanged(() => Credential1);
    			}
    		}
    	}
    }
    
}
