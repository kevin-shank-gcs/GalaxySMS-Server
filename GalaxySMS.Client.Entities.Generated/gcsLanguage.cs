//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    
	[DataContract]
	public partial class gcsLanguage : DbObjectBase, ITableEntityBase
    {
    
    /*	// Move to partial class
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    using System.Collections.ObjectModel;
    using GCS.Core.Common.Extensions;
    
    namespace GalaxySMS.Client.Entities
    {
        public partial class gcsLanguage
        {
        	public gcsLanguage() : base()
        	{
        		Initialize();
        	}
        
        	public gcsLanguage(gcsLanguage e) : base(e)
        	{
        		Initialize(e);
        	}
        
        	public void Initialize()
        	{
        		base.Initialize();
        		this.gcsUsers = new HashSet<gcsUser>();
        }
        
        	public void Initialize(gcsLanguage e)
        	{
        		Initialize();
        		base.Initialize(e);
        
        		if( e == null )
        			return;
        		this.LanguageId = e.LanguageId;
        		this.CultureName = e.CultureName;
        		this.LanguageName = e.LanguageName;
        		this.Description = e.Description;
        		this.Notes = e.Notes;
        		this.IsActive = e.IsActive;
        		this.IsDisplay = e.IsDisplay;
        		this.IsDefault = e.IsDefault;
        		this.FlagImage = e.FlagImage;
        		this.DisplayOrder = e.DisplayOrder;
        		this.InsertName = e.InsertName;
        		this.InsertDate = e.InsertDate;
        		this.UpdateName = e.UpdateName;
        		this.UpdateDate = e.UpdateDate;
        		this.ConcurrencyValue = e.ConcurrencyValue;
        		this.gcsUsers = e.gcsUsers.ToCollection();
        		
        	}
        
        	public gcsLanguage Clone(gcsLanguage e)
        	{
        		return new gcsLanguage(e);
        	}
        
        	public bool Equals(gcsLanguage other)
        	{
        		return base.Equals(other);
        	}
        	
        	public bool IsPrimaryKeyEqual(gcsLanguage other)
        	{
        		if( other == null ) 
        			return false;
        
        		if(other.LanguageId != this.LanguageId )
        			return false;
        		return true;
        	}
        
        	public override int GetHashCode()
        	{
        		return base.GetHashCode();
        	}
        
        	public override string ToString()
        	{
        		return base.ToString();
        	}
        }
    }
    */
    
    	
    	private System.Guid _languageId;
    
    	[DataMember]
    	public System.Guid LanguageId
    	{ 
    		get { return _languageId; }
    		set
    		{
    			if (_languageId != value )
    			{
    				_languageId = value;
    				OnPropertyChanged(() => LanguageId);
    			}
    		}
    	}
    	
    	private string _cultureName;
    
    	[DataMember]
    	public string CultureName
    	{ 
    		get { return _cultureName; }
    		set
    		{
    			if (_cultureName != value )
    			{
    				_cultureName = value;
    				OnPropertyChanged(() => CultureName);
    			}
    		}
    	}
    	
    	private string _languageName;
    
    	[DataMember]
    	public string LanguageName
    	{ 
    		get { return _languageName; }
    		set
    		{
    			if (_languageName != value )
    			{
    				_languageName = value;
    				OnPropertyChanged(() => LanguageName);
    			}
    		}
    	}
    	
    	private string _description;
    
    	[DataMember]
    	public string Description
    	{ 
    		get { return _description; }
    		set
    		{
    			if (_description != value )
    			{
    				_description = value;
    				OnPropertyChanged(() => Description);
    			}
    		}
    	}
    	
    	private string _notes;
    
    	[DataMember]
    	public string Notes
    	{ 
    		get { return _notes; }
    		set
    		{
    			if (_notes != value )
    			{
    				_notes = value;
    				OnPropertyChanged(() => Notes);
    			}
    		}
    	}
    	
    	private bool _isActive;
    
    	[DataMember]
    	public bool IsActive
    	{ 
    		get { return _isActive; }
    		set
    		{
    			if (_isActive != value )
    			{
    				_isActive = value;
    				OnPropertyChanged(() => IsActive);
    			}
    		}
    	}
    	
    	private bool _isDisplay;
    
    	[DataMember]
    	public bool IsDisplay
    	{ 
    		get { return _isDisplay; }
    		set
    		{
    			if (_isDisplay != value )
    			{
    				_isDisplay = value;
    				OnPropertyChanged(() => IsDisplay);
    			}
    		}
    	}
    	
    	private bool _isDefault;
    
    	[DataMember]
    	public bool IsDefault
    	{ 
    		get { return _isDefault; }
    		set
    		{
    			if (_isDefault != value )
    			{
    				_isDefault = value;
    				OnPropertyChanged(() => IsDefault);
    			}
    		}
    	}
    	
    	private byte[] _flagImage;
    
    	[DataMember]
    	public byte[] FlagImage
    	{ 
    		get { return _flagImage; }
    		set
    		{
    			if (_flagImage != value )
    			{
    				_flagImage = value;
    				OnPropertyChanged(() => FlagImage);
    			}
    		}
    	}
    	
    	private Nullable<int> _displayOrder;
    
    	[DataMember]
    	public Nullable<int> DisplayOrder
    	{ 
    		get { return _displayOrder; }
    		set
    		{
    			if (_displayOrder != value )
    			{
    				_displayOrder = value;
    				OnPropertyChanged(() => DisplayOrder);
    			}
    		}
    	}
    	
    	private string _insertName;
    
    	[DataMember]
    	public string InsertName
    	{ 
    		get { return _insertName; }
    		set
    		{
    			if (_insertName != value )
    			{
    				_insertName = value;
    				OnPropertyChanged(() => InsertName);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _insertDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> InsertDate
    	{ 
    		get { return _insertDate; }
    		set
    		{
    			if (_insertDate != value )
    			{
    				_insertDate = value;
    				OnPropertyChanged(() => InsertDate);
    			}
    		}
    	}
    	
    	private string _updateName;
    
    	[DataMember]
    	public string UpdateName
    	{ 
    		get { return _updateName; }
    		set
    		{
    			if (_updateName != value )
    			{
    				_updateName = value;
    				OnPropertyChanged(() => UpdateName);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _updateDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> UpdateDate
    	{ 
    		get { return _updateDate; }
    		set
    		{
    			if (_updateDate != value )
    			{
    				_updateDate = value;
    				OnPropertyChanged(() => UpdateDate);
    			}
    		}
    	}
    	
    	private Nullable<short> _concurrencyValue;
    
    	[DataMember]
    	public Nullable<short> ConcurrencyValue
    	{ 
    		get { return _concurrencyValue; }
    		set
    		{
    			if (_concurrencyValue != value )
    			{
    				_concurrencyValue = value;
    				OnPropertyChanged(() => ConcurrencyValue);
    			}
    		}
    	}
    
    	
    	private ICollection<gcsUser> _gcsUsers;
    
    	[DataMember]
    	public virtual ICollection<gcsUser> gcsUsers
    	{ 
    		get { return _gcsUsers; }
    		set
    		{
    			if (_gcsUsers != value )
    			{
    				_gcsUsers = value;
    				OnPropertyChanged(() => gcsUsers);
    			}
    		}
    	}
    }
    
}
