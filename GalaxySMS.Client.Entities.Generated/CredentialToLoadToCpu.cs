//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    
	[DataContract]
	public partial class CredentialToLoadToCpu : DbObjectBase, ITableEntityBase
    {
    
    /*	// Move to partial class
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    using System.Collections.ObjectModel;
    using GCS.Core.Common.Extensions;
    
    namespace GalaxySMS.Client.Entities
    {
        public partial class CredentialToLoadToCpu
        {
        	public CredentialToLoadToCpu() : base()
        	{
        		Initialize();
        	}
        
        	public CredentialToLoadToCpu(CredentialToLoadToCpu e) : base(e)
        	{
        		Initialize(e);
        	}
        
        	public void Initialize()
        	{
        		base.Initialize();
        }
        
        	public void Initialize(CredentialToLoadToCpu e)
        	{
        		Initialize();
        		base.Initialize(e);
        
        		if( e == null )
        			return;
        		this.CredentialToLoadToCpuUid = e.CredentialToLoadToCpuUid;
        		this.CpuUid = e.CpuUid;
        		this.CredentialUid = e.CredentialUid;
        		this.LastCredentialChangeDate = e.LastCredentialChangeDate;
        		this.LastPersonalAccessGroupChangeDate = e.LastPersonalAccessGroupChangeDate;
        		this.LastCredentialLoadedDate = e.LastCredentialLoadedDate;
        		this.LastPersonalAccessGroupLoadedDate = e.LastPersonalAccessGroupLoadedDate;
        		this.LastForceLoadDate = e.LastForceLoadDate;
        		
        	}
        
        	public CredentialToLoadToCpu Clone(CredentialToLoadToCpu e)
        	{
        		return new CredentialToLoadToCpu(e);
        	}
        
        	public bool Equals(CredentialToLoadToCpu other)
        	{
        		return base.Equals(other);
        	}
        	
        	public bool IsPrimaryKeyEqual(CredentialToLoadToCpu other)
        	{
        		if( other == null ) 
        			return false;
        
        		if(other.CredentialToLoadToCpuUid != this.CredentialToLoadToCpuUid )
        			return false;
        		return true;
        	}
        
        	public override int GetHashCode()
        	{
        		return base.GetHashCode();
        	}
        
        	public override string ToString()
        	{
        		return base.ToString();
        	}
        }
    }
    */
    
    	
    	private System.Guid _credentialToLoadToCpuUid;
    
    	[DataMember]
    	public System.Guid CredentialToLoadToCpuUid
    	{ 
    		get { return _credentialToLoadToCpuUid; }
    		set
    		{
    			if (_credentialToLoadToCpuUid != value )
    			{
    				_credentialToLoadToCpuUid = value;
    				OnPropertyChanged(() => CredentialToLoadToCpuUid);
    			}
    		}
    	}
    	
    	private System.Guid _cpuUid;
    
    	[DataMember]
    	public System.Guid CpuUid
    	{ 
    		get { return _cpuUid; }
    		set
    		{
    			if (_cpuUid != value )
    			{
    				_cpuUid = value;
    				OnPropertyChanged(() => CpuUid);
    			}
    		}
    	}
    	
    	private System.Guid _credentialUid;
    
    	[DataMember]
    	public System.Guid CredentialUid
    	{ 
    		get { return _credentialUid; }
    		set
    		{
    			if (_credentialUid != value )
    			{
    				_credentialUid = value;
    				OnPropertyChanged(() => CredentialUid);
    			}
    		}
    	}
    	
    	private System.DateTime _lastCredentialChangeDate;
    
    	[DataMember]
    	public System.DateTime LastCredentialChangeDate
    	{ 
    		get { return _lastCredentialChangeDate; }
    		set
    		{
    			if (_lastCredentialChangeDate != value )
    			{
    				_lastCredentialChangeDate = value;
    				OnPropertyChanged(() => LastCredentialChangeDate);
    			}
    		}
    	}
    	
    	private System.DateTime _lastPersonalAccessGroupChangeDate;
    
    	[DataMember]
    	public System.DateTime LastPersonalAccessGroupChangeDate
    	{ 
    		get { return _lastPersonalAccessGroupChangeDate; }
    		set
    		{
    			if (_lastPersonalAccessGroupChangeDate != value )
    			{
    				_lastPersonalAccessGroupChangeDate = value;
    				OnPropertyChanged(() => LastPersonalAccessGroupChangeDate);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _lastCredentialLoadedDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> LastCredentialLoadedDate
    	{ 
    		get { return _lastCredentialLoadedDate; }
    		set
    		{
    			if (_lastCredentialLoadedDate != value )
    			{
    				_lastCredentialLoadedDate = value;
    				OnPropertyChanged(() => LastCredentialLoadedDate);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _lastPersonalAccessGroupLoadedDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> LastPersonalAccessGroupLoadedDate
    	{ 
    		get { return _lastPersonalAccessGroupLoadedDate; }
    		set
    		{
    			if (_lastPersonalAccessGroupLoadedDate != value )
    			{
    				_lastPersonalAccessGroupLoadedDate = value;
    				OnPropertyChanged(() => LastPersonalAccessGroupLoadedDate);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _lastForceLoadDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> LastForceLoadDate
    	{ 
    		get { return _lastForceLoadDate; }
    		set
    		{
    			if (_lastForceLoadDate != value )
    			{
    				_lastForceLoadDate = value;
    				OnPropertyChanged(() => LastForceLoadDate);
    			}
    		}
    	}
    
    	
    	private Credential _credential;
    
    	[DataMember]
    	public virtual Credential Credential
    	{ 
    		get { return _credential; }
    		set
    		{
    			if (_credential != value )
    			{
    				_credential = value;
    				OnPropertyChanged(() => Credential);
    			}
    		}
    	}
    	
    	private GalaxyCpu _galaxyCpu;
    
    	[DataMember]
    	public virtual GalaxyCpu GalaxyCpu
    	{ 
    		get { return _galaxyCpu; }
    		set
    		{
    			if (_galaxyCpu != value )
    			{
    				_galaxyCpu = value;
    				OnPropertyChanged(() => GalaxyCpu);
    			}
    		}
    	}
    }
    
}
