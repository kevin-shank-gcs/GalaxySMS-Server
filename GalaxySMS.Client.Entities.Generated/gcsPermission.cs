//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    
	[DataContract]
	public partial class gcsPermission : DbObjectBase, ITableEntityBase
    {
    
    /*	// Move to partial class
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    using System.Collections.ObjectModel;
    using GCS.Core.Common.Extensions;
    
    namespace GalaxySMS.Client.Entities
    {
        public partial class gcsPermission
        {
        	public gcsPermission() : base()
        	{
        		Initialize();
        	}
        
        	public gcsPermission(gcsPermission e) : base(e)
        	{
        		Initialize(e);
        	}
        
        	public void Initialize()
        	{
        		base.Initialize();
        		this.UserDefinedPropertyPermissions = new HashSet<UserDefinedPropertyPermission>();
        		this.PropertySensitivityLevelPermissions = new HashSet<PropertySensitivityLevelPermission>();
        		this.RoleAccessPortalPermissions = new HashSet<RoleAccessPortalPermission>();
        		this.RoleClusterPermissions = new HashSet<RoleClusterPermission>();
        		this.RoleInputDevicePermissions = new HashSet<RoleInputDevicePermission>();
        		this.RoleInputOutputGroupPermissions = new HashSet<RoleInputOutputGroupPermission>();
        		this.RoleOutputDevicePermissions = new HashSet<RoleOutputDevicePermission>();
        		this.RoleRegionPermissions = new HashSet<RoleRegionPermission>();
        		this.RoleSitePermissions = new HashSet<RoleSitePermission>();
        		this.RoleMercScpGroupPermissions = new HashSet<RoleMercScpGroupPermission>();
        }
        
        	public void Initialize(gcsPermission e)
        	{
        		Initialize();
        		base.Initialize(e);
        
        		if( e == null )
        			return;
        		this.PermissionId = e.PermissionId;
        		this.PermissionCategoryId = e.PermissionCategoryId;
        		this.PermissionName = e.PermissionName;
        		this.PermissionDescription = e.PermissionDescription;
        		this.IsActive = e.IsActive;
        		this.InsertName = e.InsertName;
        		this.InsertDate = e.InsertDate;
        		this.UpdateName = e.UpdateName;
        		this.UpdateDate = e.UpdateDate;
        		this.ConcurrencyValue = e.ConcurrencyValue;
        		this.PermissionTypeId = e.PermissionTypeId;
        		this.Code = e.Code;
        		this.UserDefinedPropertyPermissions = e.UserDefinedPropertyPermissions.ToCollection();
        		this.PropertySensitivityLevelPermissions = e.PropertySensitivityLevelPermissions.ToCollection();
        		this.RoleAccessPortalPermissions = e.RoleAccessPortalPermissions.ToCollection();
        		this.RoleClusterPermissions = e.RoleClusterPermissions.ToCollection();
        		this.RoleInputDevicePermissions = e.RoleInputDevicePermissions.ToCollection();
        		this.RoleInputOutputGroupPermissions = e.RoleInputOutputGroupPermissions.ToCollection();
        		this.RoleOutputDevicePermissions = e.RoleOutputDevicePermissions.ToCollection();
        		this.RoleRegionPermissions = e.RoleRegionPermissions.ToCollection();
        		this.RoleSitePermissions = e.RoleSitePermissions.ToCollection();
        		this.RoleMercScpGroupPermissions = e.RoleMercScpGroupPermissions.ToCollection();
        		
        	}
        
        	public gcsPermission Clone(gcsPermission e)
        	{
        		return new gcsPermission(e);
        	}
        
        	public bool Equals(gcsPermission other)
        	{
        		return base.Equals(other);
        	}
        	
        	public bool IsPrimaryKeyEqual(gcsPermission other)
        	{
        		if( other == null ) 
        			return false;
        
        		if(other.PermissionId != this.PermissionId )
        			return false;
        		return true;
        	}
        
        	public override int GetHashCode()
        	{
        		return base.GetHashCode();
        	}
        
        	public override string ToString()
        	{
        		return base.ToString();
        	}
        }
    }
    */
    
    	
    	private System.Guid _permissionId;
    
    	[DataMember]
    	public System.Guid PermissionId
    	{ 
    		get { return _permissionId; }
    		set
    		{
    			if (_permissionId != value )
    			{
    				_permissionId = value;
    				OnPropertyChanged(() => PermissionId);
    			}
    		}
    	}
    	
    	private System.Guid _permissionCategoryId;
    
    	[DataMember]
    	public System.Guid PermissionCategoryId
    	{ 
    		get { return _permissionCategoryId; }
    		set
    		{
    			if (_permissionCategoryId != value )
    			{
    				_permissionCategoryId = value;
    				OnPropertyChanged(() => PermissionCategoryId);
    			}
    		}
    	}
    	
    	private string _permissionName;
    
    	[DataMember]
    	public string PermissionName
    	{ 
    		get { return _permissionName; }
    		set
    		{
    			if (_permissionName != value )
    			{
    				_permissionName = value;
    				OnPropertyChanged(() => PermissionName);
    			}
    		}
    	}
    	
    	private string _permissionDescription;
    
    	[DataMember]
    	public string PermissionDescription
    	{ 
    		get { return _permissionDescription; }
    		set
    		{
    			if (_permissionDescription != value )
    			{
    				_permissionDescription = value;
    				OnPropertyChanged(() => PermissionDescription);
    			}
    		}
    	}
    	
    	private bool _isActive;
    
    	[DataMember]
    	public bool IsActive
    	{ 
    		get { return _isActive; }
    		set
    		{
    			if (_isActive != value )
    			{
    				_isActive = value;
    				OnPropertyChanged(() => IsActive);
    			}
    		}
    	}
    	
    	private string _insertName;
    
    	[DataMember]
    	public string InsertName
    	{ 
    		get { return _insertName; }
    		set
    		{
    			if (_insertName != value )
    			{
    				_insertName = value;
    				OnPropertyChanged(() => InsertName);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _insertDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> InsertDate
    	{ 
    		get { return _insertDate; }
    		set
    		{
    			if (_insertDate != value )
    			{
    				_insertDate = value;
    				OnPropertyChanged(() => InsertDate);
    			}
    		}
    	}
    	
    	private string _updateName;
    
    	[DataMember]
    	public string UpdateName
    	{ 
    		get { return _updateName; }
    		set
    		{
    			if (_updateName != value )
    			{
    				_updateName = value;
    				OnPropertyChanged(() => UpdateName);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _updateDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> UpdateDate
    	{ 
    		get { return _updateDate; }
    		set
    		{
    			if (_updateDate != value )
    			{
    				_updateDate = value;
    				OnPropertyChanged(() => UpdateDate);
    			}
    		}
    	}
    	
    	private Nullable<short> _concurrencyValue;
    
    	[DataMember]
    	public Nullable<short> ConcurrencyValue
    	{ 
    		get { return _concurrencyValue; }
    		set
    		{
    			if (_concurrencyValue != value )
    			{
    				_concurrencyValue = value;
    				OnPropertyChanged(() => ConcurrencyValue);
    			}
    		}
    	}
    	
    	private System.Guid _permissionTypeId;
    
    	[DataMember]
    	public System.Guid PermissionTypeId
    	{ 
    		get { return _permissionTypeId; }
    		set
    		{
    			if (_permissionTypeId != value )
    			{
    				_permissionTypeId = value;
    				OnPropertyChanged(() => PermissionTypeId);
    			}
    		}
    	}
    	
    	private string _code;
    
    	[DataMember]
    	public string Code
    	{ 
    		get { return _code; }
    		set
    		{
    			if (_code != value )
    			{
    				_code = value;
    				OnPropertyChanged(() => Code);
    			}
    		}
    	}
    
    	
    	private ICollection<UserDefinedPropertyPermission> _userDefinedPropertyPermissions;
    
    	[DataMember]
    	public virtual ICollection<UserDefinedPropertyPermission> UserDefinedPropertyPermissions
    	{ 
    		get { return _userDefinedPropertyPermissions; }
    		set
    		{
    			if (_userDefinedPropertyPermissions != value )
    			{
    				_userDefinedPropertyPermissions = value;
    				OnPropertyChanged(() => UserDefinedPropertyPermissions);
    			}
    		}
    	}
    	
    	private ICollection<PropertySensitivityLevelPermission> _propertySensitivityLevelPermissions;
    
    	[DataMember]
    	public virtual ICollection<PropertySensitivityLevelPermission> PropertySensitivityLevelPermissions
    	{ 
    		get { return _propertySensitivityLevelPermissions; }
    		set
    		{
    			if (_propertySensitivityLevelPermissions != value )
    			{
    				_propertySensitivityLevelPermissions = value;
    				OnPropertyChanged(() => PropertySensitivityLevelPermissions);
    			}
    		}
    	}
    	
    	private ICollection<RoleAccessPortalPermission> _roleAccessPortalPermissions;
    
    	[DataMember]
    	public virtual ICollection<RoleAccessPortalPermission> RoleAccessPortalPermissions
    	{ 
    		get { return _roleAccessPortalPermissions; }
    		set
    		{
    			if (_roleAccessPortalPermissions != value )
    			{
    				_roleAccessPortalPermissions = value;
    				OnPropertyChanged(() => RoleAccessPortalPermissions);
    			}
    		}
    	}
    	
    	private ICollection<RoleClusterPermission> _roleClusterPermissions;
    
    	[DataMember]
    	public virtual ICollection<RoleClusterPermission> RoleClusterPermissions
    	{ 
    		get { return _roleClusterPermissions; }
    		set
    		{
    			if (_roleClusterPermissions != value )
    			{
    				_roleClusterPermissions = value;
    				OnPropertyChanged(() => RoleClusterPermissions);
    			}
    		}
    	}
    	
    	private ICollection<RoleInputDevicePermission> _roleInputDevicePermissions;
    
    	[DataMember]
    	public virtual ICollection<RoleInputDevicePermission> RoleInputDevicePermissions
    	{ 
    		get { return _roleInputDevicePermissions; }
    		set
    		{
    			if (_roleInputDevicePermissions != value )
    			{
    				_roleInputDevicePermissions = value;
    				OnPropertyChanged(() => RoleInputDevicePermissions);
    			}
    		}
    	}
    	
    	private ICollection<RoleInputOutputGroupPermission> _roleInputOutputGroupPermissions;
    
    	[DataMember]
    	public virtual ICollection<RoleInputOutputGroupPermission> RoleInputOutputGroupPermissions
    	{ 
    		get { return _roleInputOutputGroupPermissions; }
    		set
    		{
    			if (_roleInputOutputGroupPermissions != value )
    			{
    				_roleInputOutputGroupPermissions = value;
    				OnPropertyChanged(() => RoleInputOutputGroupPermissions);
    			}
    		}
    	}
    	
    	private ICollection<RoleOutputDevicePermission> _roleOutputDevicePermissions;
    
    	[DataMember]
    	public virtual ICollection<RoleOutputDevicePermission> RoleOutputDevicePermissions
    	{ 
    		get { return _roleOutputDevicePermissions; }
    		set
    		{
    			if (_roleOutputDevicePermissions != value )
    			{
    				_roleOutputDevicePermissions = value;
    				OnPropertyChanged(() => RoleOutputDevicePermissions);
    			}
    		}
    	}
    	
    	private ICollection<RoleRegionPermission> _roleRegionPermissions;
    
    	[DataMember]
    	public virtual ICollection<RoleRegionPermission> RoleRegionPermissions
    	{ 
    		get { return _roleRegionPermissions; }
    		set
    		{
    			if (_roleRegionPermissions != value )
    			{
    				_roleRegionPermissions = value;
    				OnPropertyChanged(() => RoleRegionPermissions);
    			}
    		}
    	}
    	
    	private ICollection<RoleSitePermission> _roleSitePermissions;
    
    	[DataMember]
    	public virtual ICollection<RoleSitePermission> RoleSitePermissions
    	{ 
    		get { return _roleSitePermissions; }
    		set
    		{
    			if (_roleSitePermissions != value )
    			{
    				_roleSitePermissions = value;
    				OnPropertyChanged(() => RoleSitePermissions);
    			}
    		}
    	}
    	
    	private ICollection<RoleMercScpGroupPermission> _roleMercScpGroupPermissions;
    
    	[DataMember]
    	public virtual ICollection<RoleMercScpGroupPermission> RoleMercScpGroupPermissions
    	{ 
    		get { return _roleMercScpGroupPermissions; }
    		set
    		{
    			if (_roleMercScpGroupPermissions != value )
    			{
    				_roleMercScpGroupPermissions = value;
    				OnPropertyChanged(() => RoleMercScpGroupPermissions);
    			}
    		}
    	}
    }
    
}
