//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    
	[DataContract]
	public partial class gcsMenuItem : DbObjectBase, ITableEntityBase
    {
    
    /*	// Move to partial class
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    using System.Collections.ObjectModel;
    using GCS.Core.Common.Extensions;
    
    namespace GalaxySMS.Client.Entities
    {
        public partial class gcsMenuItem
        {
        	public gcsMenuItem() : base()
        	{
        		Initialize();
        	}
        
        	public gcsMenuItem(gcsMenuItem e) : base(e)
        	{
        		Initialize(e);
        	}
        
        	public void Initialize()
        	{
        		base.Initialize();
        }
        
        	public void Initialize(gcsMenuItem e)
        	{
        		Initialize();
        		base.Initialize(e);
        
        		if( e == null )
        			return;
        		this.MenuItemId = e.MenuItemId;
        		this.ApplicationId = e.ApplicationId;
        		this.PermissionId = e.PermissionId;
        		this.ParentMenuItemId = e.ParentMenuItemId;
        		this.MenuTitleResourceId = e.MenuTitleResourceId;
        		this.TipTextResourceId = e.TipTextResourceId;
        		this.MenuTitle = e.MenuTitle;
        		this.TipText = e.TipText;
        		this.DisplayOrder = e.DisplayOrder;
        		this.IsActive = e.IsActive;
        		this.MenuAction = e.MenuAction;
        		this.ActiveImage = e.ActiveImage;
        		this.InactiveImage = e.InactiveImage;
        		this.DisabledImage = e.DisabledImage;
        		this.MenuSize = e.MenuSize;
        		this.InsertName = e.InsertName;
        		this.InsertDate = e.InsertDate;
        		this.UpdateName = e.UpdateName;
        		this.UpdateDate = e.UpdateDate;
        		this.ConcurrencyValue = e.ConcurrencyValue;
        		
        	}
        
        	public gcsMenuItem Clone(gcsMenuItem e)
        	{
        		return new gcsMenuItem(e);
        	}
        
        	public bool Equals(gcsMenuItem other)
        	{
        		return base.Equals(other);
        	}
        	
        	public bool IsPrimaryKeyEqual(gcsMenuItem other)
        	{
        		if( other == null ) 
        			return false;
        
        		if(other.MenuItemId != this.MenuItemId )
        			return false;
        		return true;
        	}
        
        	public override int GetHashCode()
        	{
        		return base.GetHashCode();
        	}
        
        	public override string ToString()
        	{
        		return base.ToString();
        	}
        }
    }
    */
    
    	
    	private System.Guid _menuItemId;
    
    	[DataMember]
    	public System.Guid MenuItemId
    	{ 
    		get { return _menuItemId; }
    		set
    		{
    			if (_menuItemId != value )
    			{
    				_menuItemId = value;
    				OnPropertyChanged(() => MenuItemId);
    			}
    		}
    	}
    	
    	private System.Guid _applicationId;
    
    	[DataMember]
    	public System.Guid ApplicationId
    	{ 
    		get { return _applicationId; }
    		set
    		{
    			if (_applicationId != value )
    			{
    				_applicationId = value;
    				OnPropertyChanged(() => ApplicationId);
    			}
    		}
    	}
    	
    	private System.Guid _permissionId;
    
    	[DataMember]
    	public System.Guid PermissionId
    	{ 
    		get { return _permissionId; }
    		set
    		{
    			if (_permissionId != value )
    			{
    				_permissionId = value;
    				OnPropertyChanged(() => PermissionId);
    			}
    		}
    	}
    	
    	private Nullable<System.Guid> _parentMenuItemId;
    
    	[DataMember]
    	public Nullable<System.Guid> ParentMenuItemId
    	{ 
    		get { return _parentMenuItemId; }
    		set
    		{
    			if (_parentMenuItemId != value )
    			{
    				_parentMenuItemId = value;
    				OnPropertyChanged(() => ParentMenuItemId);
    			}
    		}
    	}
    	
    	private Nullable<System.Guid> _menuTitleResourceId;
    
    	[DataMember]
    	public Nullable<System.Guid> MenuTitleResourceId
    	{ 
    		get { return _menuTitleResourceId; }
    		set
    		{
    			if (_menuTitleResourceId != value )
    			{
    				_menuTitleResourceId = value;
    				OnPropertyChanged(() => MenuTitleResourceId);
    			}
    		}
    	}
    	
    	private Nullable<System.Guid> _tipTextResourceId;
    
    	[DataMember]
    	public Nullable<System.Guid> TipTextResourceId
    	{ 
    		get { return _tipTextResourceId; }
    		set
    		{
    			if (_tipTextResourceId != value )
    			{
    				_tipTextResourceId = value;
    				OnPropertyChanged(() => TipTextResourceId);
    			}
    		}
    	}
    	
    	private string _menuTitle;
    
    	[DataMember]
    	public string MenuTitle
    	{ 
    		get { return _menuTitle; }
    		set
    		{
    			if (_menuTitle != value )
    			{
    				_menuTitle = value;
    				OnPropertyChanged(() => MenuTitle);
    			}
    		}
    	}
    	
    	private string _tipText;
    
    	[DataMember]
    	public string TipText
    	{ 
    		get { return _tipText; }
    		set
    		{
    			if (_tipText != value )
    			{
    				_tipText = value;
    				OnPropertyChanged(() => TipText);
    			}
    		}
    	}
    	
    	private short _displayOrder;
    
    	[DataMember]
    	public short DisplayOrder
    	{ 
    		get { return _displayOrder; }
    		set
    		{
    			if (_displayOrder != value )
    			{
    				_displayOrder = value;
    				OnPropertyChanged(() => DisplayOrder);
    			}
    		}
    	}
    	
    	private bool _isActive;
    
    	[DataMember]
    	public bool IsActive
    	{ 
    		get { return _isActive; }
    		set
    		{
    			if (_isActive != value )
    			{
    				_isActive = value;
    				OnPropertyChanged(() => IsActive);
    			}
    		}
    	}
    	
    	private string _menuAction;
    
    	[DataMember]
    	public string MenuAction
    	{ 
    		get { return _menuAction; }
    		set
    		{
    			if (_menuAction != value )
    			{
    				_menuAction = value;
    				OnPropertyChanged(() => MenuAction);
    			}
    		}
    	}
    	
    	private string _activeImage;
    
    	[DataMember]
    	public string ActiveImage
    	{ 
    		get { return _activeImage; }
    		set
    		{
    			if (_activeImage != value )
    			{
    				_activeImage = value;
    				OnPropertyChanged(() => ActiveImage);
    			}
    		}
    	}
    	
    	private string _inactiveImage;
    
    	[DataMember]
    	public string InactiveImage
    	{ 
    		get { return _inactiveImage; }
    		set
    		{
    			if (_inactiveImage != value )
    			{
    				_inactiveImage = value;
    				OnPropertyChanged(() => InactiveImage);
    			}
    		}
    	}
    	
    	private string _disabledImage;
    
    	[DataMember]
    	public string DisabledImage
    	{ 
    		get { return _disabledImage; }
    		set
    		{
    			if (_disabledImage != value )
    			{
    				_disabledImage = value;
    				OnPropertyChanged(() => DisabledImage);
    			}
    		}
    	}
    	
    	private Nullable<int> _menuSize;
    
    	[DataMember]
    	public Nullable<int> MenuSize
    	{ 
    		get { return _menuSize; }
    		set
    		{
    			if (_menuSize != value )
    			{
    				_menuSize = value;
    				OnPropertyChanged(() => MenuSize);
    			}
    		}
    	}
    	
    	private string _insertName;
    
    	[DataMember]
    	public string InsertName
    	{ 
    		get { return _insertName; }
    		set
    		{
    			if (_insertName != value )
    			{
    				_insertName = value;
    				OnPropertyChanged(() => InsertName);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _insertDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> InsertDate
    	{ 
    		get { return _insertDate; }
    		set
    		{
    			if (_insertDate != value )
    			{
    				_insertDate = value;
    				OnPropertyChanged(() => InsertDate);
    			}
    		}
    	}
    	
    	private string _updateName;
    
    	[DataMember]
    	public string UpdateName
    	{ 
    		get { return _updateName; }
    		set
    		{
    			if (_updateName != value )
    			{
    				_updateName = value;
    				OnPropertyChanged(() => UpdateName);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _updateDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> UpdateDate
    	{ 
    		get { return _updateDate; }
    		set
    		{
    			if (_updateDate != value )
    			{
    				_updateDate = value;
    				OnPropertyChanged(() => UpdateDate);
    			}
    		}
    	}
    	
    	private Nullable<short> _concurrencyValue;
    
    	[DataMember]
    	public Nullable<short> ConcurrencyValue
    	{ 
    		get { return _concurrencyValue; }
    		set
    		{
    			if (_concurrencyValue != value )
    			{
    				_concurrencyValue = value;
    				OnPropertyChanged(() => ConcurrencyValue);
    			}
    		}
    	}
    }
    
}
