//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    
	[DataContract]
	public partial class PersonClusterPermission : DbObjectBase, ITableEntityBase
    {
    
    /*	// Move to partial class
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    using System.Collections.ObjectModel;
    using GCS.Core.Common.Extensions;
    
    namespace GalaxySMS.Client.Entities
    {
        public partial class PersonClusterPermission
        {
        	public PersonClusterPermission() : base()
        	{
        		Initialize();
        	}
        
        	public PersonClusterPermission(PersonClusterPermission e) : base(e)
        	{
        		Initialize(e);
        	}
        
        	public void Initialize()
        	{
        		base.Initialize();
        		this.PersonAccessGroups = new HashSet<PersonAccessGroup>();
        }
        
        	public void Initialize(PersonClusterPermission e)
        	{
        		Initialize();
        		base.Initialize(e);
        
        		if( e == null )
        			return;
        		this.PersonClusterPermissionUid = e.PersonClusterPermissionUid;
        		this.PersonUid = e.PersonUid;
        		this.ClusterUid = e.ClusterUid;
        		this.PersonCredentialUid = e.PersonCredentialUid;
        		this.InsertName = e.InsertName;
        		this.InsertDate = e.InsertDate;
        		this.UpdateName = e.UpdateName;
        		this.UpdateDate = e.UpdateDate;
        		this.ConcurrencyValue = e.ConcurrencyValue;
        		this.CredentialClusterTourUid = e.CredentialClusterTourUid;
        		this.CredentialBits = e.CredentialBits;
        		this.PersonUidClusterUidCredentialUidCombined = e.PersonUidClusterUidCredentialUidCombined;
        		this.LastPanelImpactingChangeDate = e.LastPanelImpactingChangeDate;
        		this.IsExtended = e.IsExtended;
        		this.PersonAccessGroups = e.PersonAccessGroups.ToCollection();
        		
        	}
        
        	public PersonClusterPermission Clone(PersonClusterPermission e)
        	{
        		return new PersonClusterPermission(e);
        	}
        
        	public bool Equals(PersonClusterPermission other)
        	{
        		return base.Equals(other);
        	}
        	
        	public bool IsPrimaryKeyEqual(PersonClusterPermission other)
        	{
        		if( other == null ) 
        			return false;
        
        		if(other.PersonClusterPermissionUid != this.PersonClusterPermissionUid )
        			return false;
        		return true;
        	}
        
        	public override int GetHashCode()
        	{
        		return base.GetHashCode();
        	}
        
        	public override string ToString()
        	{
        		return base.ToString();
        	}
        }
    }
    */
    
    	
    	private System.Guid _personClusterPermissionUid;
    
    	[DataMember]
    	public System.Guid PersonClusterPermissionUid
    	{ 
    		get { return _personClusterPermissionUid; }
    		set
    		{
    			if (_personClusterPermissionUid != value )
    			{
    				_personClusterPermissionUid = value;
    				OnPropertyChanged(() => PersonClusterPermissionUid);
    			}
    		}
    	}
    	
    	private System.Guid _personUid;
    
    	[DataMember]
    	public System.Guid PersonUid
    	{ 
    		get { return _personUid; }
    		set
    		{
    			if (_personUid != value )
    			{
    				_personUid = value;
    				OnPropertyChanged(() => PersonUid);
    			}
    		}
    	}
    	
    	private System.Guid _clusterUid;
    
    	[DataMember]
    	public System.Guid ClusterUid
    	{ 
    		get { return _clusterUid; }
    		set
    		{
    			if (_clusterUid != value )
    			{
    				_clusterUid = value;
    				OnPropertyChanged(() => ClusterUid);
    			}
    		}
    	}
    	
    	private Nullable<System.Guid> _personCredentialUid;
    
    	[DataMember]
    	public Nullable<System.Guid> PersonCredentialUid
    	{ 
    		get { return _personCredentialUid; }
    		set
    		{
    			if (_personCredentialUid != value )
    			{
    				_personCredentialUid = value;
    				OnPropertyChanged(() => PersonCredentialUid);
    			}
    		}
    	}
    	
    	private string _insertName;
    
    	[DataMember]
    	public string InsertName
    	{ 
    		get { return _insertName; }
    		set
    		{
    			if (_insertName != value )
    			{
    				_insertName = value;
    				OnPropertyChanged(() => InsertName);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _insertDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> InsertDate
    	{ 
    		get { return _insertDate; }
    		set
    		{
    			if (_insertDate != value )
    			{
    				_insertDate = value;
    				OnPropertyChanged(() => InsertDate);
    			}
    		}
    	}
    	
    	private string _updateName;
    
    	[DataMember]
    	public string UpdateName
    	{ 
    		get { return _updateName; }
    		set
    		{
    			if (_updateName != value )
    			{
    				_updateName = value;
    				OnPropertyChanged(() => UpdateName);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _updateDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> UpdateDate
    	{ 
    		get { return _updateDate; }
    		set
    		{
    			if (_updateDate != value )
    			{
    				_updateDate = value;
    				OnPropertyChanged(() => UpdateDate);
    			}
    		}
    	}
    	
    	private Nullable<short> _concurrencyValue;
    
    	[DataMember]
    	public Nullable<short> ConcurrencyValue
    	{ 
    		get { return _concurrencyValue; }
    		set
    		{
    			if (_concurrencyValue != value )
    			{
    				_concurrencyValue = value;
    				OnPropertyChanged(() => ConcurrencyValue);
    			}
    		}
    	}
    	
    	private Nullable<System.Guid> _credentialClusterTourUid;
    
    	[DataMember]
    	public Nullable<System.Guid> CredentialClusterTourUid
    	{ 
    		get { return _credentialClusterTourUid; }
    		set
    		{
    			if (_credentialClusterTourUid != value )
    			{
    				_credentialClusterTourUid = value;
    				OnPropertyChanged(() => CredentialClusterTourUid);
    			}
    		}
    	}
    	
    	private byte[] _credentialBits;
    
    	[DataMember]
    	public byte[] CredentialBits
    	{ 
    		get { return _credentialBits; }
    		set
    		{
    			if (_credentialBits != value )
    			{
    				_credentialBits = value;
    				OnPropertyChanged(() => CredentialBits);
    			}
    		}
    	}
    	
    	private string _personUidClusterUidCredentialUidCombined;
    
    	[DataMember]
    	public string PersonUidClusterUidCredentialUidCombined
    	{ 
    		get { return _personUidClusterUidCredentialUidCombined; }
    		set
    		{
    			if (_personUidClusterUidCredentialUidCombined != value )
    			{
    				_personUidClusterUidCredentialUidCombined = value;
    				OnPropertyChanged(() => PersonUidClusterUidCredentialUidCombined);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _lastPanelImpactingChangeDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> LastPanelImpactingChangeDate
    	{ 
    		get { return _lastPanelImpactingChangeDate; }
    		set
    		{
    			if (_lastPanelImpactingChangeDate != value )
    			{
    				_lastPanelImpactingChangeDate = value;
    				OnPropertyChanged(() => LastPanelImpactingChangeDate);
    			}
    		}
    	}
    	
    	private Nullable<bool> _isExtended;
    
    	[DataMember]
    	public Nullable<bool> IsExtended
    	{ 
    		get { return _isExtended; }
    		set
    		{
    			if (_isExtended != value )
    			{
    				_isExtended = value;
    				OnPropertyChanged(() => IsExtended);
    			}
    		}
    	}
    
    	
    	private Cluster _cluster;
    
    	[DataMember]
    	public virtual Cluster Cluster
    	{ 
    		get { return _cluster; }
    		set
    		{
    			if (_cluster != value )
    			{
    				_cluster = value;
    				OnPropertyChanged(() => Cluster);
    			}
    		}
    	}
    	
    	private ICollection<PersonAccessGroup> _personAccessGroups;
    
    	[DataMember]
    	public virtual ICollection<PersonAccessGroup> PersonAccessGroups
    	{ 
    		get { return _personAccessGroups; }
    		set
    		{
    			if (_personAccessGroups != value )
    			{
    				_personAccessGroups = value;
    				OnPropertyChanged(() => PersonAccessGroups);
    			}
    		}
    	}
    	
    	private PersonCredential _personCredential;
    
    	[DataMember]
    	public virtual PersonCredential PersonCredential
    	{ 
    		get { return _personCredential; }
    		set
    		{
    			if (_personCredential != value )
    			{
    				_personCredential = value;
    				OnPropertyChanged(() => PersonCredential);
    			}
    		}
    	}
    	
    	private PersonPersonalAccessGroup _personPersonalAccessGroup;
    
    	[DataMember]
    	public virtual PersonPersonalAccessGroup PersonPersonalAccessGroup
    	{ 
    		get { return _personPersonalAccessGroup; }
    		set
    		{
    			if (_personPersonalAccessGroup != value )
    			{
    				_personPersonalAccessGroup = value;
    				OnPropertyChanged(() => PersonPersonalAccessGroup);
    			}
    		}
    	}
    }
    
}
