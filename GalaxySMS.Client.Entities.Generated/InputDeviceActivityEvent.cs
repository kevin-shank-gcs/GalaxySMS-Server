//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    
	[DataContract]
	public partial class InputDeviceActivityEvent : DbObjectBase, ITableEntityBase
    {
    
    /*	// Move to partial class
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    using System.Collections.ObjectModel;
    using GCS.Core.Common.Extensions;
    
    namespace GalaxySMS.Client.Entities
    {
        public partial class InputDeviceActivityEvent
        {
        	public InputDeviceActivityEvent() : base()
        	{
        		Initialize();
        	}
        
        	public InputDeviceActivityEvent(InputDeviceActivityEvent e) : base(e)
        	{
        		Initialize(e);
        	}
        
        	public void Initialize()
        	{
        		base.Initialize();
        }
        
        	public void Initialize(InputDeviceActivityEvent e)
        	{
        		Initialize();
        		base.Initialize(e);
        
        		if( e == null )
        			return;
        		this.InputDeviceActivityEventUid = e.InputDeviceActivityEventUid;
        		this.GalaxyActivityEventTypeUid = e.GalaxyActivityEventTypeUid;
        		this.InputDeviceUid = e.InputDeviceUid;
        		this.CpuUid = e.CpuUid;
        		this.CpuNumber = e.CpuNumber;
        		this.ActivityDateTime = e.ActivityDateTime;
        		this.BufferIndex = e.BufferIndex;
        		this.InsertDate = e.InsertDate;
        		this.ActivityDateTimeUTC = e.ActivityDateTimeUTC;
        		
        	}
        
        	public InputDeviceActivityEvent Clone(InputDeviceActivityEvent e)
        	{
        		return new InputDeviceActivityEvent(e);
        	}
        
        	public bool Equals(InputDeviceActivityEvent other)
        	{
        		return base.Equals(other);
        	}
        	
        	public bool IsPrimaryKeyEqual(InputDeviceActivityEvent other)
        	{
        		if( other == null ) 
        			return false;
        
        		if(other.InputDeviceActivityEventUid != this.InputDeviceActivityEventUid )
        			return false;
        		return true;
        	}
        
        	public override int GetHashCode()
        	{
        		return base.GetHashCode();
        	}
        
        	public override string ToString()
        	{
        		return base.ToString();
        	}
        }
    }
    */
    
    	
    	private System.Guid _inputDeviceActivityEventUid;
    
    	[DataMember]
    	public System.Guid InputDeviceActivityEventUid
    	{ 
    		get { return _inputDeviceActivityEventUid; }
    		set
    		{
    			if (_inputDeviceActivityEventUid != value )
    			{
    				_inputDeviceActivityEventUid = value;
    				OnPropertyChanged(() => InputDeviceActivityEventUid);
    			}
    		}
    	}
    	
    	private System.Guid _galaxyActivityEventTypeUid;
    
    	[DataMember]
    	public System.Guid GalaxyActivityEventTypeUid
    	{ 
    		get { return _galaxyActivityEventTypeUid; }
    		set
    		{
    			if (_galaxyActivityEventTypeUid != value )
    			{
    				_galaxyActivityEventTypeUid = value;
    				OnPropertyChanged(() => GalaxyActivityEventTypeUid);
    			}
    		}
    	}
    	
    	private System.Guid _inputDeviceUid;
    
    	[DataMember]
    	public System.Guid InputDeviceUid
    	{ 
    		get { return _inputDeviceUid; }
    		set
    		{
    			if (_inputDeviceUid != value )
    			{
    				_inputDeviceUid = value;
    				OnPropertyChanged(() => InputDeviceUid);
    			}
    		}
    	}
    	
    	private System.Guid _cpuUid;
    
    	[DataMember]
    	public System.Guid CpuUid
    	{ 
    		get { return _cpuUid; }
    		set
    		{
    			if (_cpuUid != value )
    			{
    				_cpuUid = value;
    				OnPropertyChanged(() => CpuUid);
    			}
    		}
    	}
    	
    	private short _cpuNumber;
    
    	[DataMember]
    	public short CpuNumber
    	{ 
    		get { return _cpuNumber; }
    		set
    		{
    			if (_cpuNumber != value )
    			{
    				_cpuNumber = value;
    				OnPropertyChanged(() => CpuNumber);
    			}
    		}
    	}
    	
    	private System.DateTime _activityDateTime;
    
    	[DataMember]
    	public System.DateTime ActivityDateTime
    	{ 
    		get { return _activityDateTime; }
    		set
    		{
    			if (_activityDateTime != value )
    			{
    				_activityDateTime = value;
    				OnPropertyChanged(() => ActivityDateTime);
    			}
    		}
    	}
    	
    	private int _bufferIndex;
    
    	[DataMember]
    	public int BufferIndex
    	{ 
    		get { return _bufferIndex; }
    		set
    		{
    			if (_bufferIndex != value )
    			{
    				_bufferIndex = value;
    				OnPropertyChanged(() => BufferIndex);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _insertDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> InsertDate
    	{ 
    		get { return _insertDate; }
    		set
    		{
    			if (_insertDate != value )
    			{
    				_insertDate = value;
    				OnPropertyChanged(() => InsertDate);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTimeOffset> _activityDateTimeUTC;
    
    	[DataMember]
    	public Nullable<System.DateTimeOffset> ActivityDateTimeUTC
    	{ 
    		get { return _activityDateTimeUTC; }
    		set
    		{
    			if (_activityDateTimeUTC != value )
    			{
    				_activityDateTimeUTC = value;
    				OnPropertyChanged(() => ActivityDateTimeUTC);
    			}
    		}
    	}
    
    	
    	private InputDevice _inputDevice;
    
    	[DataMember]
    	public virtual InputDevice InputDevice
    	{ 
    		get { return _inputDevice; }
    		set
    		{
    			if (_inputDevice != value )
    			{
    				_inputDevice = value;
    				OnPropertyChanged(() => InputDevice);
    			}
    		}
    	}
    	
    	private InputDeviceActivityAlarmEvent _inputDeviceActivityAlarmEvent;
    
    	[DataMember]
    	public virtual InputDeviceActivityAlarmEvent InputDeviceActivityAlarmEvent
    	{ 
    		get { return _inputDeviceActivityAlarmEvent; }
    		set
    		{
    			if (_inputDeviceActivityAlarmEvent != value )
    			{
    				_inputDeviceActivityAlarmEvent = value;
    				OnPropertyChanged(() => InputDeviceActivityAlarmEvent);
    			}
    		}
    	}
    }
    
}
