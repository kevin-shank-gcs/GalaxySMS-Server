//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    
	[DataContract]
	public partial class gcsAuditXml : DbObjectBase, ITableEntityBase
    {
    
    /*	// Move to partial class
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    using System.Collections.ObjectModel;
    using GCS.Core.Common.Extensions;
    
    namespace GalaxySMS.Client.Entities
    {
        public partial class gcsAuditXml
        {
        	public gcsAuditXml() : base()
        	{
        		Initialize();
        	}
        
        	public gcsAuditXml(gcsAuditXml e) : base(e)
        	{
        		Initialize(e);
        	}
        
        	public void Initialize()
        	{
        		base.Initialize();
        }
        
        	public void Initialize(gcsAuditXml e)
        	{
        		Initialize();
        		base.Initialize(e);
        
        		if( e == null )
        			return;
        		this.AuditId = e.AuditId;
        		this.Type = e.Type;
        		this.TableName = e.TableName;
        		this.PKField = e.PKField;
        		this.PKValue = e.PKValue;
        		this.FieldName = e.FieldName;
        		this.OldValue = e.OldValue;
        		this.NewValue = e.NewValue;
        		this.XmlText = e.XmlText;
        		this.UpdateDateTime = e.UpdateDateTime;
        		this.UserName = e.UserName;
        		this.HostMachineName = e.HostMachineName;
        		this.AppName = e.AppName;
        		this.NTDomain = e.NTDomain;
        		this.NTUserName = e.NTUserName;
        		this.NETAddress = e.NETAddress;
        		this.ApplicationUserId = e.ApplicationUserId;
        		this.TransactionID = e.TransactionID;
        		this.Description = e.Description;
        		
        	}
        
        	public gcsAuditXml Clone(gcsAuditXml e)
        	{
        		return new gcsAuditXml(e);
        	}
        
        	public bool Equals(gcsAuditXml other)
        	{
        		return base.Equals(other);
        	}
        	
        	public bool IsPrimaryKeyEqual(gcsAuditXml other)
        	{
        		if( other == null ) 
        			return false;
        
        		if(other.AuditId != this.AuditId )
        			return false;
        		return true;
        	}
        
        	public override int GetHashCode()
        	{
        		return base.GetHashCode();
        	}
        
        	public override string ToString()
        	{
        		return base.ToString();
        	}
        }
    }
    */
    
    	
    	private System.Guid _auditId;
    
    	[DataMember]
    	public System.Guid AuditId
    	{ 
    		get { return _auditId; }
    		set
    		{
    			if (_auditId != value )
    			{
    				_auditId = value;
    				OnPropertyChanged(() => AuditId);
    			}
    		}
    	}
    	
    	private string _type;
    
    	[DataMember]
    	public string Type
    	{ 
    		get { return _type; }
    		set
    		{
    			if (_type != value )
    			{
    				_type = value;
    				OnPropertyChanged(() => Type);
    			}
    		}
    	}
    	
    	private string _tableName;
    
    	[DataMember]
    	public string TableName
    	{ 
    		get { return _tableName; }
    		set
    		{
    			if (_tableName != value )
    			{
    				_tableName = value;
    				OnPropertyChanged(() => TableName);
    			}
    		}
    	}
    	
    	private string _pKField;
    
    	[DataMember]
    	public string PKField
    	{ 
    		get { return _pKField; }
    		set
    		{
    			if (_pKField != value )
    			{
    				_pKField = value;
    				OnPropertyChanged(() => PKField);
    			}
    		}
    	}
    	
    	private string _pKValue;
    
    	[DataMember]
    	public string PKValue
    	{ 
    		get { return _pKValue; }
    		set
    		{
    			if (_pKValue != value )
    			{
    				_pKValue = value;
    				OnPropertyChanged(() => PKValue);
    			}
    		}
    	}
    	
    	private string _fieldName;
    
    	[DataMember]
    	public string FieldName
    	{ 
    		get { return _fieldName; }
    		set
    		{
    			if (_fieldName != value )
    			{
    				_fieldName = value;
    				OnPropertyChanged(() => FieldName);
    			}
    		}
    	}
    	
    	private string _oldValue;
    
    	[DataMember]
    	public string OldValue
    	{ 
    		get { return _oldValue; }
    		set
    		{
    			if (_oldValue != value )
    			{
    				_oldValue = value;
    				OnPropertyChanged(() => OldValue);
    			}
    		}
    	}
    	
    	private string _newValue;
    
    	[DataMember]
    	public string NewValue
    	{ 
    		get { return _newValue; }
    		set
    		{
    			if (_newValue != value )
    			{
    				_newValue = value;
    				OnPropertyChanged(() => NewValue);
    			}
    		}
    	}
    	
    	private string _xmlText;
    
    	[DataMember]
    	public string XmlText
    	{ 
    		get { return _xmlText; }
    		set
    		{
    			if (_xmlText != value )
    			{
    				_xmlText = value;
    				OnPropertyChanged(() => XmlText);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _updateDateTime;
    
    	[DataMember]
    	public Nullable<System.DateTime> UpdateDateTime
    	{ 
    		get { return _updateDateTime; }
    		set
    		{
    			if (_updateDateTime != value )
    			{
    				_updateDateTime = value;
    				OnPropertyChanged(() => UpdateDateTime);
    			}
    		}
    	}
    	
    	private string _userName;
    
    	[DataMember]
    	public string UserName
    	{ 
    		get { return _userName; }
    		set
    		{
    			if (_userName != value )
    			{
    				_userName = value;
    				OnPropertyChanged(() => UserName);
    			}
    		}
    	}
    	
    	private string _hostMachineName;
    
    	[DataMember]
    	public string HostMachineName
    	{ 
    		get { return _hostMachineName; }
    		set
    		{
    			if (_hostMachineName != value )
    			{
    				_hostMachineName = value;
    				OnPropertyChanged(() => HostMachineName);
    			}
    		}
    	}
    	
    	private string _appName;
    
    	[DataMember]
    	public string AppName
    	{ 
    		get { return _appName; }
    		set
    		{
    			if (_appName != value )
    			{
    				_appName = value;
    				OnPropertyChanged(() => AppName);
    			}
    		}
    	}
    	
    	private string _nTDomain;
    
    	[DataMember]
    	public string NTDomain
    	{ 
    		get { return _nTDomain; }
    		set
    		{
    			if (_nTDomain != value )
    			{
    				_nTDomain = value;
    				OnPropertyChanged(() => NTDomain);
    			}
    		}
    	}
    	
    	private string _nTUserName;
    
    	[DataMember]
    	public string NTUserName
    	{ 
    		get { return _nTUserName; }
    		set
    		{
    			if (_nTUserName != value )
    			{
    				_nTUserName = value;
    				OnPropertyChanged(() => NTUserName);
    			}
    		}
    	}
    	
    	private string _nETAddress;
    
    	[DataMember]
    	public string NETAddress
    	{ 
    		get { return _nETAddress; }
    		set
    		{
    			if (_nETAddress != value )
    			{
    				_nETAddress = value;
    				OnPropertyChanged(() => NETAddress);
    			}
    		}
    	}
    	
    	private Nullable<System.Guid> _applicationUserId;
    
    	[DataMember]
    	public Nullable<System.Guid> ApplicationUserId
    	{ 
    		get { return _applicationUserId; }
    		set
    		{
    			if (_applicationUserId != value )
    			{
    				_applicationUserId = value;
    				OnPropertyChanged(() => ApplicationUserId);
    			}
    		}
    	}
    	
    	private Nullable<System.Guid> _transactionID;
    
    	[DataMember]
    	public Nullable<System.Guid> TransactionID
    	{ 
    		get { return _transactionID; }
    		set
    		{
    			if (_transactionID != value )
    			{
    				_transactionID = value;
    				OnPropertyChanged(() => TransactionID);
    			}
    		}
    	}
    	
    	private string _description;
    
    	[DataMember]
    	public string Description
    	{ 
    		get { return _description; }
    		set
    		{
    			if (_description != value )
    			{
    				_description = value;
    				OnPropertyChanged(() => Description);
    			}
    		}
    	}
    }
    
}
