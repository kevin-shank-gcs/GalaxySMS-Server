//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    
	[DataContract]
	public partial class MercScpStatu : DbObjectBase, ITableEntityBase
    {
    
    /*	// Move to partial class
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    using System.Collections.ObjectModel;
    using GCS.Core.Common.Extensions;
    
    namespace GalaxySMS.Client.Entities
    {
        public partial class MercScpStatu
        {
        	public MercScpStatu() : base()
        	{
        		Initialize();
        	}
        
        	public MercScpStatu(MercScpStatu e) : base(e)
        	{
        		Initialize(e);
        	}
        
        	public void Initialize()
        	{
        		base.Initialize();
        }
        
        	public void Initialize(MercScpStatu e)
        	{
        		Initialize();
        		base.Initialize(e);
        
        		if( e == null )
        			return;
        		this.MercScpUid = e.MercScpUid;
        		this.Online = e.Online;
        		this.LastConnected = e.LastConnected;
        		this.LasDisconnected = e.LasDisconnected;
        		this.LastDisconnected = e.LastDisconnected;
        		
        	}
        
        	public MercScpStatu Clone(MercScpStatu e)
        	{
        		return new MercScpStatu(e);
        	}
        
        	public bool Equals(MercScpStatu other)
        	{
        		return base.Equals(other);
        	}
        	
        	public bool IsPrimaryKeyEqual(MercScpStatu other)
        	{
        		if( other == null ) 
        			return false;
        
        		if(other.MercScpUid != this.MercScpUid )
        			return false;
        		return true;
        	}
        
        	public override int GetHashCode()
        	{
        		return base.GetHashCode();
        	}
        
        	public override string ToString()
        	{
        		return base.ToString();
        	}
        }
    }
    */
    
    	
    	private System.Guid _mercScpUid;
    
    	[DataMember]
    	public System.Guid MercScpUid
    	{ 
    		get { return _mercScpUid; }
    		set
    		{
    			if (_mercScpUid != value )
    			{
    				_mercScpUid = value;
    				OnPropertyChanged(() => MercScpUid);
    			}
    		}
    	}
    	
    	private Nullable<bool> _online;
    
    	[DataMember]
    	public Nullable<bool> Online
    	{ 
    		get { return _online; }
    		set
    		{
    			if (_online != value )
    			{
    				_online = value;
    				OnPropertyChanged(() => Online);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTimeOffset> _lastConnected;
    
    	[DataMember]
    	public Nullable<System.DateTimeOffset> LastConnected
    	{ 
    		get { return _lastConnected; }
    		set
    		{
    			if (_lastConnected != value )
    			{
    				_lastConnected = value;
    				OnPropertyChanged(() => LastConnected);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTimeOffset> _lasDisconnected;
    
    	[DataMember]
    	public Nullable<System.DateTimeOffset> LasDisconnected
    	{ 
    		get { return _lasDisconnected; }
    		set
    		{
    			if (_lasDisconnected != value )
    			{
    				_lasDisconnected = value;
    				OnPropertyChanged(() => LasDisconnected);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTimeOffset> _lastDisconnected;
    
    	[DataMember]
    	public Nullable<System.DateTimeOffset> LastDisconnected
    	{ 
    		get { return _lastDisconnected; }
    		set
    		{
    			if (_lastDisconnected != value )
    			{
    				_lastDisconnected = value;
    				OnPropertyChanged(() => LastDisconnected);
    			}
    		}
    	}
    
    	
    	private MercScp _mercScp;
    
    	[DataMember]
    	public virtual MercScp MercScp
    	{ 
    		get { return _mercScp; }
    		set
    		{
    			if (_mercScp != value )
    			{
    				_mercScp = value;
    				OnPropertyChanged(() => MercScp);
    			}
    		}
    	}
    }
    
}
