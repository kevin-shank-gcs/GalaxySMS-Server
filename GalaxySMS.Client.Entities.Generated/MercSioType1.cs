//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    
	[DataContract]
	public partial class MercSioType1 : DbObjectBase, ITableEntityBase
    {
    
    /*	// Move to partial class
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    using System.Collections.ObjectModel;
    using GCS.Core.Common.Extensions;
    
    namespace GalaxySMS.Client.Entities
    {
        public partial class MercSioType1
        {
        	public MercSioType1() : base()
        	{
        		Initialize();
        	}
        
        	public MercSioType1(MercSioType1 e) : base(e)
        	{
        		Initialize(e);
        	}
        
        	public void Initialize()
        	{
        		base.Initialize();
        }
        
        	public void Initialize(MercSioType1 e)
        	{
        		Initialize();
        		base.Initialize(e);
        
        		if( e == null )
        			return;
        		this.MercSioTypeUid = e.MercSioTypeUid;
        		this.Display = e.Display;
        		this.DisplayResourceKey = e.DisplayResourceKey;
        		this.Description = e.Description;
        		this.DescriptionResourceKey = e.DescriptionResourceKey;
        		this.TypeCode = e.TypeCode;
        		this.TypeCodeValue = e.TypeCodeValue;
        		this.ModelNumber = e.ModelNumber;
        		this.MaxReaders = e.MaxReaders;
        		this.MaxInputs = e.MaxInputs;
        		this.MaxOutputs = e.MaxOutputs;
        		this.InsertName = e.InsertName;
        		this.InsertDate = e.InsertDate;
        		this.UpdateName = e.UpdateName;
        		this.UpdateDate = e.UpdateDate;
        		this.ConcurrencyValue = e.ConcurrencyValue;
        		this.TypeCodeValue1 = e.TypeCodeValue1;
        		this.ModelNumber1 = e.ModelNumber1;
        		this.MaxReaders1 = e.MaxReaders1;
        		this.MaxInputs1 = e.MaxInputs1;
        		this.MaxOutputs1 = e.MaxOutputs1;
        		
        	}
        
        	public MercSioType1 Clone(MercSioType1 e)
        	{
        		return new MercSioType1(e);
        	}
        
        	public bool Equals(MercSioType1 other)
        	{
        		return base.Equals(other);
        	}
        	
        	public bool IsPrimaryKeyEqual(MercSioType1 other)
        	{
        		if( other == null ) 
        			return false;
        
        		if(other.MercSioTypeUid != this.MercSioTypeUid )
        			return false;
        		return true;
        	}
        
        	public override int GetHashCode()
        	{
        		return base.GetHashCode();
        	}
        
        	public override string ToString()
        	{
        		return base.ToString();
        	}
        }
    }
    */
    
    	
    	private System.Guid _mercSioTypeUid;
    
    	[DataMember]
    	public System.Guid MercSioTypeUid
    	{ 
    		get { return _mercSioTypeUid; }
    		set
    		{
    			if (_mercSioTypeUid != value )
    			{
    				_mercSioTypeUid = value;
    				OnPropertyChanged(() => MercSioTypeUid);
    			}
    		}
    	}
    	
    	private string _display;
    
    	[DataMember]
    	public string Display
    	{ 
    		get { return _display; }
    		set
    		{
    			if (_display != value )
    			{
    				_display = value;
    				OnPropertyChanged(() => Display);
    			}
    		}
    	}
    	
    	private Nullable<System.Guid> _displayResourceKey;
    
    	[DataMember]
    	public Nullable<System.Guid> DisplayResourceKey
    	{ 
    		get { return _displayResourceKey; }
    		set
    		{
    			if (_displayResourceKey != value )
    			{
    				_displayResourceKey = value;
    				OnPropertyChanged(() => DisplayResourceKey);
    			}
    		}
    	}
    	
    	private string _description;
    
    	[DataMember]
    	public string Description
    	{ 
    		get { return _description; }
    		set
    		{
    			if (_description != value )
    			{
    				_description = value;
    				OnPropertyChanged(() => Description);
    			}
    		}
    	}
    	
    	private Nullable<System.Guid> _descriptionResourceKey;
    
    	[DataMember]
    	public Nullable<System.Guid> DescriptionResourceKey
    	{ 
    		get { return _descriptionResourceKey; }
    		set
    		{
    			if (_descriptionResourceKey != value )
    			{
    				_descriptionResourceKey = value;
    				OnPropertyChanged(() => DescriptionResourceKey);
    			}
    		}
    	}
    	
    	private string _typeCode;
    
    	[DataMember]
    	public string TypeCode
    	{ 
    		get { return _typeCode; }
    		set
    		{
    			if (_typeCode != value )
    			{
    				_typeCode = value;
    				OnPropertyChanged(() => TypeCode);
    			}
    		}
    	}
    	
    	private int _typeCodeValue;
    
    	[DataMember]
    	public int TypeCodeValue
    	{ 
    		get { return _typeCodeValue; }
    		set
    		{
    			if (_typeCodeValue != value )
    			{
    				_typeCodeValue = value;
    				OnPropertyChanged(() => TypeCodeValue);
    			}
    		}
    	}
    	
    	private int _modelNumber;
    
    	[DataMember]
    	public int ModelNumber
    	{ 
    		get { return _modelNumber; }
    		set
    		{
    			if (_modelNumber != value )
    			{
    				_modelNumber = value;
    				OnPropertyChanged(() => ModelNumber);
    			}
    		}
    	}
    	
    	private int _maxReaders;
    
    	[DataMember]
    	public int MaxReaders
    	{ 
    		get { return _maxReaders; }
    		set
    		{
    			if (_maxReaders != value )
    			{
    				_maxReaders = value;
    				OnPropertyChanged(() => MaxReaders);
    			}
    		}
    	}
    	
    	private int _maxInputs;
    
    	[DataMember]
    	public int MaxInputs
    	{ 
    		get { return _maxInputs; }
    		set
    		{
    			if (_maxInputs != value )
    			{
    				_maxInputs = value;
    				OnPropertyChanged(() => MaxInputs);
    			}
    		}
    	}
    	
    	private int _maxOutputs;
    
    	[DataMember]
    	public int MaxOutputs
    	{ 
    		get { return _maxOutputs; }
    		set
    		{
    			if (_maxOutputs != value )
    			{
    				_maxOutputs = value;
    				OnPropertyChanged(() => MaxOutputs);
    			}
    		}
    	}
    	
    	private string _insertName;
    
    	[DataMember]
    	public string InsertName
    	{ 
    		get { return _insertName; }
    		set
    		{
    			if (_insertName != value )
    			{
    				_insertName = value;
    				OnPropertyChanged(() => InsertName);
    			}
    		}
    	}
    	
    	private System.DateTimeOffset _insertDate;
    
    	[DataMember]
    	public System.DateTimeOffset InsertDate
    	{ 
    		get { return _insertDate; }
    		set
    		{
    			if (_insertDate != value )
    			{
    				_insertDate = value;
    				OnPropertyChanged(() => InsertDate);
    			}
    		}
    	}
    	
    	private string _updateName;
    
    	[DataMember]
    	public string UpdateName
    	{ 
    		get { return _updateName; }
    		set
    		{
    			if (_updateName != value )
    			{
    				_updateName = value;
    				OnPropertyChanged(() => UpdateName);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTimeOffset> _updateDate;
    
    	[DataMember]
    	public Nullable<System.DateTimeOffset> UpdateDate
    	{ 
    		get { return _updateDate; }
    		set
    		{
    			if (_updateDate != value )
    			{
    				_updateDate = value;
    				OnPropertyChanged(() => UpdateDate);
    			}
    		}
    	}
    	
    	private Nullable<short> _concurrencyValue;
    
    	[DataMember]
    	public Nullable<short> ConcurrencyValue
    	{ 
    		get { return _concurrencyValue; }
    		set
    		{
    			if (_concurrencyValue != value )
    			{
    				_concurrencyValue = value;
    				OnPropertyChanged(() => ConcurrencyValue);
    			}
    		}
    	}
    	
    	private int _typeCodeValue1;
    
    	[DataMember]
    	public int TypeCodeValue1
    	{ 
    		get { return _typeCodeValue1; }
    		set
    		{
    			if (_typeCodeValue1 != value )
    			{
    				_typeCodeValue1 = value;
    				OnPropertyChanged(() => TypeCodeValue1);
    			}
    		}
    	}
    	
    	private int _modelNumber1;
    
    	[DataMember]
    	public int ModelNumber1
    	{ 
    		get { return _modelNumber1; }
    		set
    		{
    			if (_modelNumber1 != value )
    			{
    				_modelNumber1 = value;
    				OnPropertyChanged(() => ModelNumber1);
    			}
    		}
    	}
    	
    	private int _maxReaders1;
    
    	[DataMember]
    	public int MaxReaders1
    	{ 
    		get { return _maxReaders1; }
    		set
    		{
    			if (_maxReaders1 != value )
    			{
    				_maxReaders1 = value;
    				OnPropertyChanged(() => MaxReaders1);
    			}
    		}
    	}
    	
    	private int _maxInputs1;
    
    	[DataMember]
    	public int MaxInputs1
    	{ 
    		get { return _maxInputs1; }
    		set
    		{
    			if (_maxInputs1 != value )
    			{
    				_maxInputs1 = value;
    				OnPropertyChanged(() => MaxInputs1);
    			}
    		}
    	}
    	
    	private int _maxOutputs1;
    
    	[DataMember]
    	public int MaxOutputs1
    	{ 
    		get { return _maxOutputs1; }
    		set
    		{
    			if (_maxOutputs1 != value )
    			{
    				_maxOutputs1 = value;
    				OnPropertyChanged(() => MaxOutputs1);
    			}
    		}
    	}
    }
    
}
