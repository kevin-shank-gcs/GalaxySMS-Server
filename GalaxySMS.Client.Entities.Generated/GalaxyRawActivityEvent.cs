//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    
	[DataContract]
	public partial class GalaxyRawActivityEvent : DbObjectBase, ITableEntityBase
    {
    
    /*	// Move to partial class
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    using System.Collections.ObjectModel;
    using GCS.Core.Common.Extensions;
    
    namespace GalaxySMS.Client.Entities
    {
        public partial class GalaxyRawActivityEvent
        {
        	public GalaxyRawActivityEvent() : base()
        	{
        		Initialize();
        	}
        
        	public GalaxyRawActivityEvent(GalaxyRawActivityEvent e) : base(e)
        	{
        		Initialize(e);
        	}
        
        	public void Initialize()
        	{
        		base.Initialize();
        }
        
        	public void Initialize(GalaxyRawActivityEvent e)
        	{
        		Initialize();
        		base.Initialize(e);
        
        		if( e == null )
        			return;
        		this.GalaxyRawActivityEventUid = e.GalaxyRawActivityEventUid;
        		this.CpuUid = e.CpuUid;
        		this.InsertDate = e.InsertDate;
        		this.ClusterGroupId = e.ClusterGroupId;
        		this.ClusterNumber = e.ClusterNumber;
        		this.PanelNumber = e.PanelNumber;
        		this.CpuNumber = e.CpuNumber;
        		this.EventDateTime = e.EventDateTime;
        		this.EventType = e.EventType;
        		this.BufferIndex = e.BufferIndex;
        		this.CredentialBytes = e.CredentialBytes;
        		this.Pin = e.Pin;
        		this.BitCount = e.BitCount;
        		this.InputOutputGroupNumber = e.InputOutputGroupNumber;
        		this.BoardNumber = e.BoardNumber;
        		this.SectionNumber = e.SectionNumber;
        		this.NodeNumber = e.NodeNumber;
        		this.RawData = e.RawData;
        		this.WhenProcessed = e.WhenProcessed;
        		this.UniqueEventId = e.UniqueEventId;
        		this.ModuleNumber = e.ModuleNumber;
        		
        	}
        
        	public GalaxyRawActivityEvent Clone(GalaxyRawActivityEvent e)
        	{
        		return new GalaxyRawActivityEvent(e);
        	}
        
        	public bool Equals(GalaxyRawActivityEvent other)
        	{
        		return base.Equals(other);
        	}
        	
        	public bool IsPrimaryKeyEqual(GalaxyRawActivityEvent other)
        	{
        		if( other == null ) 
        			return false;
        
        		if(other.GalaxyRawActivityEventUid != this.GalaxyRawActivityEventUid )
        			return false;
        		return true;
        	}
        
        	public override int GetHashCode()
        	{
        		return base.GetHashCode();
        	}
        
        	public override string ToString()
        	{
        		return base.ToString();
        	}
        }
    }
    */
    
    	
    	private System.Guid _galaxyRawActivityEventUid;
    
    	[DataMember]
    	public System.Guid GalaxyRawActivityEventUid
    	{ 
    		get { return _galaxyRawActivityEventUid; }
    		set
    		{
    			if (_galaxyRawActivityEventUid != value )
    			{
    				_galaxyRawActivityEventUid = value;
    				OnPropertyChanged(() => GalaxyRawActivityEventUid);
    			}
    		}
    	}
    	
    	private Nullable<System.Guid> _cpuUid;
    
    	[DataMember]
    	public Nullable<System.Guid> CpuUid
    	{ 
    		get { return _cpuUid; }
    		set
    		{
    			if (_cpuUid != value )
    			{
    				_cpuUid = value;
    				OnPropertyChanged(() => CpuUid);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _insertDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> InsertDate
    	{ 
    		get { return _insertDate; }
    		set
    		{
    			if (_insertDate != value )
    			{
    				_insertDate = value;
    				OnPropertyChanged(() => InsertDate);
    			}
    		}
    	}
    	
    	private string _clusterGroupId;
    
    	[DataMember]
    	public string ClusterGroupId
    	{ 
    		get { return _clusterGroupId; }
    		set
    		{
    			if (_clusterGroupId != value )
    			{
    				_clusterGroupId = value;
    				OnPropertyChanged(() => ClusterGroupId);
    			}
    		}
    	}
    	
    	private int _clusterNumber;
    
    	[DataMember]
    	public int ClusterNumber
    	{ 
    		get { return _clusterNumber; }
    		set
    		{
    			if (_clusterNumber != value )
    			{
    				_clusterNumber = value;
    				OnPropertyChanged(() => ClusterNumber);
    			}
    		}
    	}
    	
    	private int _panelNumber;
    
    	[DataMember]
    	public int PanelNumber
    	{ 
    		get { return _panelNumber; }
    		set
    		{
    			if (_panelNumber != value )
    			{
    				_panelNumber = value;
    				OnPropertyChanged(() => PanelNumber);
    			}
    		}
    	}
    	
    	private short _cpuNumber;
    
    	[DataMember]
    	public short CpuNumber
    	{ 
    		get { return _cpuNumber; }
    		set
    		{
    			if (_cpuNumber != value )
    			{
    				_cpuNumber = value;
    				OnPropertyChanged(() => CpuNumber);
    			}
    		}
    	}
    	
    	private System.DateTime _eventDateTime;
    
    	[DataMember]
    	public System.DateTime EventDateTime
    	{ 
    		get { return _eventDateTime; }
    		set
    		{
    			if (_eventDateTime != value )
    			{
    				_eventDateTime = value;
    				OnPropertyChanged(() => EventDateTime);
    			}
    		}
    	}
    	
    	private short _eventType;
    
    	[DataMember]
    	public short EventType
    	{ 
    		get { return _eventType; }
    		set
    		{
    			if (_eventType != value )
    			{
    				_eventType = value;
    				OnPropertyChanged(() => EventType);
    			}
    		}
    	}
    	
    	private int _bufferIndex;
    
    	[DataMember]
    	public int BufferIndex
    	{ 
    		get { return _bufferIndex; }
    		set
    		{
    			if (_bufferIndex != value )
    			{
    				_bufferIndex = value;
    				OnPropertyChanged(() => BufferIndex);
    			}
    		}
    	}
    	
    	private byte[] _credentialBytes;
    
    	[DataMember]
    	public byte[] CredentialBytes
    	{ 
    		get { return _credentialBytes; }
    		set
    		{
    			if (_credentialBytes != value )
    			{
    				_credentialBytes = value;
    				OnPropertyChanged(() => CredentialBytes);
    			}
    		}
    	}
    	
    	private Nullable<int> _pin;
    
    	[DataMember]
    	public Nullable<int> Pin
    	{ 
    		get { return _pin; }
    		set
    		{
    			if (_pin != value )
    			{
    				_pin = value;
    				OnPropertyChanged(() => Pin);
    			}
    		}
    	}
    	
    	private Nullable<short> _bitCount;
    
    	[DataMember]
    	public Nullable<short> BitCount
    	{ 
    		get { return _bitCount; }
    		set
    		{
    			if (_bitCount != value )
    			{
    				_bitCount = value;
    				OnPropertyChanged(() => BitCount);
    			}
    		}
    	}
    	
    	private Nullable<short> _inputOutputGroupNumber;
    
    	[DataMember]
    	public Nullable<short> InputOutputGroupNumber
    	{ 
    		get { return _inputOutputGroupNumber; }
    		set
    		{
    			if (_inputOutputGroupNumber != value )
    			{
    				_inputOutputGroupNumber = value;
    				OnPropertyChanged(() => InputOutputGroupNumber);
    			}
    		}
    	}
    	
    	private Nullable<short> _boardNumber;
    
    	[DataMember]
    	public Nullable<short> BoardNumber
    	{ 
    		get { return _boardNumber; }
    		set
    		{
    			if (_boardNumber != value )
    			{
    				_boardNumber = value;
    				OnPropertyChanged(() => BoardNumber);
    			}
    		}
    	}
    	
    	private Nullable<short> _sectionNumber;
    
    	[DataMember]
    	public Nullable<short> SectionNumber
    	{ 
    		get { return _sectionNumber; }
    		set
    		{
    			if (_sectionNumber != value )
    			{
    				_sectionNumber = value;
    				OnPropertyChanged(() => SectionNumber);
    			}
    		}
    	}
    	
    	private Nullable<short> _nodeNumber;
    
    	[DataMember]
    	public Nullable<short> NodeNumber
    	{ 
    		get { return _nodeNumber; }
    		set
    		{
    			if (_nodeNumber != value )
    			{
    				_nodeNumber = value;
    				OnPropertyChanged(() => NodeNumber);
    			}
    		}
    	}
    	
    	private byte[] _rawData;
    
    	[DataMember]
    	public byte[] RawData
    	{ 
    		get { return _rawData; }
    		set
    		{
    			if (_rawData != value )
    			{
    				_rawData = value;
    				OnPropertyChanged(() => RawData);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _whenProcessed;
    
    	[DataMember]
    	public Nullable<System.DateTime> WhenProcessed
    	{ 
    		get { return _whenProcessed; }
    		set
    		{
    			if (_whenProcessed != value )
    			{
    				_whenProcessed = value;
    				OnPropertyChanged(() => WhenProcessed);
    			}
    		}
    	}
    	
    	private string _uniqueEventId;
    
    	[DataMember]
    	public string UniqueEventId
    	{ 
    		get { return _uniqueEventId; }
    		set
    		{
    			if (_uniqueEventId != value )
    			{
    				_uniqueEventId = value;
    				OnPropertyChanged(() => UniqueEventId);
    			}
    		}
    	}
    	
    	private Nullable<short> _moduleNumber;
    
    	[DataMember]
    	public Nullable<short> ModuleNumber
    	{ 
    		get { return _moduleNumber; }
    		set
    		{
    			if (_moduleNumber != value )
    			{
    				_moduleNumber = value;
    				OnPropertyChanged(() => ModuleNumber);
    			}
    		}
    	}
    }
    
}
