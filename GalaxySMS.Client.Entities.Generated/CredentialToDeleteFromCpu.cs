//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    
	[DataContract]
	public partial class CredentialToDeleteFromCpu : DbObjectBase, ITableEntityBase
    {
    
    /*	// Move to partial class
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    using System.Collections.ObjectModel;
    using GCS.Core.Common.Extensions;
    
    namespace GalaxySMS.Client.Entities
    {
        public partial class CredentialToDeleteFromCpu
        {
        	public CredentialToDeleteFromCpu() : base()
        	{
        		Initialize();
        	}
        
        	public CredentialToDeleteFromCpu(CredentialToDeleteFromCpu e) : base(e)
        	{
        		Initialize(e);
        	}
        
        	public void Initialize()
        	{
        		base.Initialize();
        }
        
        	public void Initialize(CredentialToDeleteFromCpu e)
        	{
        		Initialize();
        		base.Initialize(e);
        
        		if( e == null )
        			return;
        		this.CredentialToDeleteFromCpuUid = e.CredentialToDeleteFromCpuUid;
        		this.CpuUid = e.CpuUid;
        		this.CardBinaryData = e.CardBinaryData;
        		this.DatedFromDatabaseDate = e.DatedFromDatabaseDate;
        		this.DeletedFromCpuDate = e.DeletedFromCpuDate;
        		this.DeletedFromDatabaseDate = e.DeletedFromDatabaseDate;
        		this.IsExtended = e.IsExtended;
        		
        	}
        
        	public CredentialToDeleteFromCpu Clone(CredentialToDeleteFromCpu e)
        	{
        		return new CredentialToDeleteFromCpu(e);
        	}
        
        	public bool Equals(CredentialToDeleteFromCpu other)
        	{
        		return base.Equals(other);
        	}
        	
        	public bool IsPrimaryKeyEqual(CredentialToDeleteFromCpu other)
        	{
        		if( other == null ) 
        			return false;
        
        		if(other.CredentialToDeleteFromCpuUid != this.CredentialToDeleteFromCpuUid )
        			return false;
        		return true;
        	}
        
        	public override int GetHashCode()
        	{
        		return base.GetHashCode();
        	}
        
        	public override string ToString()
        	{
        		return base.ToString();
        	}
        }
    }
    */
    
    	
    	private System.Guid _credentialToDeleteFromCpuUid;
    
    	[DataMember]
    	public System.Guid CredentialToDeleteFromCpuUid
    	{ 
    		get { return _credentialToDeleteFromCpuUid; }
    		set
    		{
    			if (_credentialToDeleteFromCpuUid != value )
    			{
    				_credentialToDeleteFromCpuUid = value;
    				OnPropertyChanged(() => CredentialToDeleteFromCpuUid);
    			}
    		}
    	}
    	
    	private System.Guid _cpuUid;
    
    	[DataMember]
    	public System.Guid CpuUid
    	{ 
    		get { return _cpuUid; }
    		set
    		{
    			if (_cpuUid != value )
    			{
    				_cpuUid = value;
    				OnPropertyChanged(() => CpuUid);
    			}
    		}
    	}
    	
    	private byte[] _cardBinaryData;
    
    	[DataMember]
    	public byte[] CardBinaryData
    	{ 
    		get { return _cardBinaryData; }
    		set
    		{
    			if (_cardBinaryData != value )
    			{
    				_cardBinaryData = value;
    				OnPropertyChanged(() => CardBinaryData);
    			}
    		}
    	}
    	
    	private System.DateTime _datedFromDatabaseDate;
    
    	[DataMember]
    	public System.DateTime DatedFromDatabaseDate
    	{ 
    		get { return _datedFromDatabaseDate; }
    		set
    		{
    			if (_datedFromDatabaseDate != value )
    			{
    				_datedFromDatabaseDate = value;
    				OnPropertyChanged(() => DatedFromDatabaseDate);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _deletedFromCpuDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> DeletedFromCpuDate
    	{ 
    		get { return _deletedFromCpuDate; }
    		set
    		{
    			if (_deletedFromCpuDate != value )
    			{
    				_deletedFromCpuDate = value;
    				OnPropertyChanged(() => DeletedFromCpuDate);
    			}
    		}
    	}
    	
    	private System.DateTime _deletedFromDatabaseDate;
    
    	[DataMember]
    	public System.DateTime DeletedFromDatabaseDate
    	{ 
    		get { return _deletedFromDatabaseDate; }
    		set
    		{
    			if (_deletedFromDatabaseDate != value )
    			{
    				_deletedFromDatabaseDate = value;
    				OnPropertyChanged(() => DeletedFromDatabaseDate);
    			}
    		}
    	}
    	
    	private Nullable<bool> _isExtended;
    
    	[DataMember]
    	public Nullable<bool> IsExtended
    	{ 
    		get { return _isExtended; }
    		set
    		{
    			if (_isExtended != value )
    			{
    				_isExtended = value;
    				OnPropertyChanged(() => IsExtended);
    			}
    		}
    	}
    
    	
    	private GalaxyCpu _galaxyCpu;
    
    	[DataMember]
    	public virtual GalaxyCpu GalaxyCpu
    	{ 
    		get { return _galaxyCpu; }
    		set
    		{
    			if (_galaxyCpu != value )
    			{
    				_galaxyCpu = value;
    				OnPropertyChanged(() => GalaxyCpu);
    			}
    		}
    	}
    }
    
}
