//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    
	[DataContract]
	public partial class InputDevice : DbObjectBase, ITableEntityBase
    {
    
    /*	// Move to partial class
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    using System.Collections.ObjectModel;
    using GCS.Core.Common.Extensions;
    
    namespace GalaxySMS.Client.Entities
    {
        public partial class InputDevice
        {
        	public InputDevice() : base()
        	{
        		Initialize();
        	}
        
        	public InputDevice(InputDevice e) : base(e)
        	{
        		Initialize(e);
        	}
        
        	public void Initialize()
        	{
        		base.Initialize();
        		this.InputDeviceGalaxyHardwareAddresses = new HashSet<InputDeviceGalaxyHardwareAddress>();
        		this.InputCommandAudits = new HashSet<InputCommandAudit>();
        		this.RoleInputDevices = new HashSet<RoleInputDevice>();
        		this.InputDeviceActivityEvents = new HashSet<InputDeviceActivityEvent>();
        		this.InputDeviceEventProperties = new HashSet<InputDeviceEventProperty>();
        		this.InputDeviceNotes = new HashSet<InputDeviceNote>();
        }
        
        	public void Initialize(InputDevice e)
        	{
        		Initialize();
        		base.Initialize(e);
        
        		if( e == null )
        			return;
        		this.InputDeviceUid = e.InputDeviceUid;
        		this.EntityId = e.EntityId;
        		this.SiteUid = e.SiteUid;
        		this.BinaryResourceUid = e.BinaryResourceUid;
        		this.InputName = e.InputName;
        		this.Location = e.Location;
        		this.ServiceComment = e.ServiceComment;
        		this.CriticalityComment = e.CriticalityComment;
        		this.Comment = e.Comment;
        		this.EMailEventsEnabled = e.EMailEventsEnabled;
        		this.TransmitEventsEnabled = e.TransmitEventsEnabled;
        		this.FileOutputEnabled = e.FileOutputEnabled;
        		this.IsTemplate = e.IsTemplate;
        		this.InsertName = e.InsertName;
        		this.InsertDate = e.InsertDate;
        		this.UpdateName = e.UpdateName;
        		this.UpdateDate = e.UpdateDate;
        		this.ConcurrencyValue = e.ConcurrencyValue;
        		this.IsActive = e.IsActive;
        		this.IsBoundToHardware = e.IsBoundToHardware;
        		this.AlertEventsFlag = e.AlertEventsFlag;
        		this.InputDeviceGalaxyHardwareAddresses = e.InputDeviceGalaxyHardwareAddresses.ToCollection();
        		this.InputCommandAudits = e.InputCommandAudits.ToCollection();
        		this.RoleInputDevices = e.RoleInputDevices.ToCollection();
        		this.InputDeviceActivityEvents = e.InputDeviceActivityEvents.ToCollection();
        		this.InputDeviceEventProperties = e.InputDeviceEventProperties.ToCollection();
        		this.InputDeviceNotes = e.InputDeviceNotes.ToCollection();
        		
        	}
        
        	public InputDevice Clone(InputDevice e)
        	{
        		return new InputDevice(e);
        	}
        
        	public bool Equals(InputDevice other)
        	{
        		return base.Equals(other);
        	}
        	
        	public bool IsPrimaryKeyEqual(InputDevice other)
        	{
        		if( other == null ) 
        			return false;
        
        		if(other.InputDeviceUid != this.InputDeviceUid )
        			return false;
        		return true;
        	}
        
        	public override int GetHashCode()
        	{
        		return base.GetHashCode();
        	}
        
        	public override string ToString()
        	{
        		return base.ToString();
        	}
        }
    }
    */
    
    	
    	private System.Guid _inputDeviceUid;
    
    	[DataMember]
    	public System.Guid InputDeviceUid
    	{ 
    		get { return _inputDeviceUid; }
    		set
    		{
    			if (_inputDeviceUid != value )
    			{
    				_inputDeviceUid = value;
    				OnPropertyChanged(() => InputDeviceUid);
    			}
    		}
    	}
    	
    	private System.Guid _entityId;
    
    	[DataMember]
    	public System.Guid EntityId
    	{ 
    		get { return _entityId; }
    		set
    		{
    			if (_entityId != value )
    			{
    				_entityId = value;
    				OnPropertyChanged(() => EntityId);
    			}
    		}
    	}
    	
    	private System.Guid _siteUid;
    
    	[DataMember]
    	public System.Guid SiteUid
    	{ 
    		get { return _siteUid; }
    		set
    		{
    			if (_siteUid != value )
    			{
    				_siteUid = value;
    				OnPropertyChanged(() => SiteUid);
    			}
    		}
    	}
    	
    	private Nullable<System.Guid> _binaryResourceUid;
    
    	[DataMember]
    	public Nullable<System.Guid> BinaryResourceUid
    	{ 
    		get { return _binaryResourceUid; }
    		set
    		{
    			if (_binaryResourceUid != value )
    			{
    				_binaryResourceUid = value;
    				OnPropertyChanged(() => BinaryResourceUid);
    			}
    		}
    	}
    	
    	private string _inputName;
    
    	[DataMember]
    	public string InputName
    	{ 
    		get { return _inputName; }
    		set
    		{
    			if (_inputName != value )
    			{
    				_inputName = value;
    				OnPropertyChanged(() => InputName);
    			}
    		}
    	}
    	
    	private string _location;
    
    	[DataMember]
    	public string Location
    	{ 
    		get { return _location; }
    		set
    		{
    			if (_location != value )
    			{
    				_location = value;
    				OnPropertyChanged(() => Location);
    			}
    		}
    	}
    	
    	private string _serviceComment;
    
    	[DataMember]
    	public string ServiceComment
    	{ 
    		get { return _serviceComment; }
    		set
    		{
    			if (_serviceComment != value )
    			{
    				_serviceComment = value;
    				OnPropertyChanged(() => ServiceComment);
    			}
    		}
    	}
    	
    	private string _criticalityComment;
    
    	[DataMember]
    	public string CriticalityComment
    	{ 
    		get { return _criticalityComment; }
    		set
    		{
    			if (_criticalityComment != value )
    			{
    				_criticalityComment = value;
    				OnPropertyChanged(() => CriticalityComment);
    			}
    		}
    	}
    	
    	private string _comment;
    
    	[DataMember]
    	public string Comment
    	{ 
    		get { return _comment; }
    		set
    		{
    			if (_comment != value )
    			{
    				_comment = value;
    				OnPropertyChanged(() => Comment);
    			}
    		}
    	}
    	
    	private bool _eMailEventsEnabled;
    
    	[DataMember]
    	public bool EMailEventsEnabled
    	{ 
    		get { return _eMailEventsEnabled; }
    		set
    		{
    			if (_eMailEventsEnabled != value )
    			{
    				_eMailEventsEnabled = value;
    				OnPropertyChanged(() => EMailEventsEnabled);
    			}
    		}
    	}
    	
    	private bool _transmitEventsEnabled;
    
    	[DataMember]
    	public bool TransmitEventsEnabled
    	{ 
    		get { return _transmitEventsEnabled; }
    		set
    		{
    			if (_transmitEventsEnabled != value )
    			{
    				_transmitEventsEnabled = value;
    				OnPropertyChanged(() => TransmitEventsEnabled);
    			}
    		}
    	}
    	
    	private bool _fileOutputEnabled;
    
    	[DataMember]
    	public bool FileOutputEnabled
    	{ 
    		get { return _fileOutputEnabled; }
    		set
    		{
    			if (_fileOutputEnabled != value )
    			{
    				_fileOutputEnabled = value;
    				OnPropertyChanged(() => FileOutputEnabled);
    			}
    		}
    	}
    	
    	private bool _isTemplate;
    
    	[DataMember]
    	public bool IsTemplate
    	{ 
    		get { return _isTemplate; }
    		set
    		{
    			if (_isTemplate != value )
    			{
    				_isTemplate = value;
    				OnPropertyChanged(() => IsTemplate);
    			}
    		}
    	}
    	
    	private string _insertName;
    
    	[DataMember]
    	public string InsertName
    	{ 
    		get { return _insertName; }
    		set
    		{
    			if (_insertName != value )
    			{
    				_insertName = value;
    				OnPropertyChanged(() => InsertName);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _insertDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> InsertDate
    	{ 
    		get { return _insertDate; }
    		set
    		{
    			if (_insertDate != value )
    			{
    				_insertDate = value;
    				OnPropertyChanged(() => InsertDate);
    			}
    		}
    	}
    	
    	private string _updateName;
    
    	[DataMember]
    	public string UpdateName
    	{ 
    		get { return _updateName; }
    		set
    		{
    			if (_updateName != value )
    			{
    				_updateName = value;
    				OnPropertyChanged(() => UpdateName);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _updateDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> UpdateDate
    	{ 
    		get { return _updateDate; }
    		set
    		{
    			if (_updateDate != value )
    			{
    				_updateDate = value;
    				OnPropertyChanged(() => UpdateDate);
    			}
    		}
    	}
    	
    	private Nullable<short> _concurrencyValue;
    
    	[DataMember]
    	public Nullable<short> ConcurrencyValue
    	{ 
    		get { return _concurrencyValue; }
    		set
    		{
    			if (_concurrencyValue != value )
    			{
    				_concurrencyValue = value;
    				OnPropertyChanged(() => ConcurrencyValue);
    			}
    		}
    	}
    	
    	private bool _isActive;
    
    	[DataMember]
    	public bool IsActive
    	{ 
    		get { return _isActive; }
    		set
    		{
    			if (_isActive != value )
    			{
    				_isActive = value;
    				OnPropertyChanged(() => IsActive);
    			}
    		}
    	}
    	
    	private Nullable<bool> _isBoundToHardware;
    
    	[DataMember]
    	public Nullable<bool> IsBoundToHardware
    	{ 
    		get { return _isBoundToHardware; }
    		set
    		{
    			if (_isBoundToHardware != value )
    			{
    				_isBoundToHardware = value;
    				OnPropertyChanged(() => IsBoundToHardware);
    			}
    		}
    	}
    	
    	private Nullable<int> _alertEventsFlag;
    
    	[DataMember]
    	public Nullable<int> AlertEventsFlag
    	{ 
    		get { return _alertEventsFlag; }
    		set
    		{
    			if (_alertEventsFlag != value )
    			{
    				_alertEventsFlag = value;
    				OnPropertyChanged(() => AlertEventsFlag);
    			}
    		}
    	}
    
    	
    	private gcsBinaryResource _gcsBinaryResource;
    
    	[DataMember]
    	public virtual gcsBinaryResource gcsBinaryResource
    	{ 
    		get { return _gcsBinaryResource; }
    		set
    		{
    			if (_gcsBinaryResource != value )
    			{
    				_gcsBinaryResource = value;
    				OnPropertyChanged(() => gcsBinaryResource);
    			}
    		}
    	}
    	
    	private ICollection<InputDeviceGalaxyHardwareAddress> _inputDeviceGalaxyHardwareAddresses;
    
    	[DataMember]
    	public virtual ICollection<InputDeviceGalaxyHardwareAddress> InputDeviceGalaxyHardwareAddresses
    	{ 
    		get { return _inputDeviceGalaxyHardwareAddresses; }
    		set
    		{
    			if (_inputDeviceGalaxyHardwareAddresses != value )
    			{
    				_inputDeviceGalaxyHardwareAddresses = value;
    				OnPropertyChanged(() => InputDeviceGalaxyHardwareAddresses);
    			}
    		}
    	}
    	
    	private GalaxyInputDevice _galaxyInputDevice;
    
    	[DataMember]
    	public virtual GalaxyInputDevice GalaxyInputDevice
    	{ 
    		get { return _galaxyInputDevice; }
    		set
    		{
    			if (_galaxyInputDevice != value )
    			{
    				_galaxyInputDevice = value;
    				OnPropertyChanged(() => GalaxyInputDevice);
    			}
    		}
    	}
    	
    	private ICollection<InputCommandAudit> _inputCommandAudits;
    
    	[DataMember]
    	public virtual ICollection<InputCommandAudit> InputCommandAudits
    	{ 
    		get { return _inputCommandAudits; }
    		set
    		{
    			if (_inputCommandAudits != value )
    			{
    				_inputCommandAudits = value;
    				OnPropertyChanged(() => InputCommandAudits);
    			}
    		}
    	}
    	
    	private ICollection<RoleInputDevice> _roleInputDevices;
    
    	[DataMember]
    	public virtual ICollection<RoleInputDevice> RoleInputDevices
    	{ 
    		get { return _roleInputDevices; }
    		set
    		{
    			if (_roleInputDevices != value )
    			{
    				_roleInputDevices = value;
    				OnPropertyChanged(() => RoleInputDevices);
    			}
    		}
    	}
    	
    	private ICollection<InputDeviceActivityEvent> _inputDeviceActivityEvents;
    
    	[DataMember]
    	public virtual ICollection<InputDeviceActivityEvent> InputDeviceActivityEvents
    	{ 
    		get { return _inputDeviceActivityEvents; }
    		set
    		{
    			if (_inputDeviceActivityEvents != value )
    			{
    				_inputDeviceActivityEvents = value;
    				OnPropertyChanged(() => InputDeviceActivityEvents);
    			}
    		}
    	}
    	
    	private ICollection<InputDeviceEventProperty> _inputDeviceEventProperties;
    
    	[DataMember]
    	public virtual ICollection<InputDeviceEventProperty> InputDeviceEventProperties
    	{ 
    		get { return _inputDeviceEventProperties; }
    		set
    		{
    			if (_inputDeviceEventProperties != value )
    			{
    				_inputDeviceEventProperties = value;
    				OnPropertyChanged(() => InputDeviceEventProperties);
    			}
    		}
    	}
    	
    	private ICollection<InputDeviceNote> _inputDeviceNotes;
    
    	[DataMember]
    	public virtual ICollection<InputDeviceNote> InputDeviceNotes
    	{ 
    		get { return _inputDeviceNotes; }
    		set
    		{
    			if (_inputDeviceNotes != value )
    			{
    				_inputDeviceNotes = value;
    				OnPropertyChanged(() => InputDeviceNotes);
    			}
    		}
    	}
    }
    
}
