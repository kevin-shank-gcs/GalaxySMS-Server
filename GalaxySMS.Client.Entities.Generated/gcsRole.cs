//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    
	[DataContract]
	public partial class gcsRole : DbObjectBase, ITableEntityBase
    {
    
    /*	// Move to partial class
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    using System.Collections.ObjectModel;
    using GCS.Core.Common.Extensions;
    
    namespace GalaxySMS.Client.Entities
    {
        public partial class gcsRole
        {
        	public gcsRole() : base()
        	{
        		Initialize();
        	}
        
        	public gcsRole(gcsRole e) : base(e)
        	{
        		Initialize(e);
        	}
        
        	public void Initialize()
        	{
        		base.Initialize();
        		this.gcsEntityApplicationRoles = new HashSet<gcsEntityApplicationRole>();
        		this.gcsRolePermissions = new HashSet<gcsRolePermission>();
        		this.RoleAccessPortals = new HashSet<RoleAccessPortal>();
        		this.RoleClusters = new HashSet<RoleCluster>();
        		this.RoleInputDevices = new HashSet<RoleInputDevice>();
        		this.RoleInputOutputGroups = new HashSet<RoleInputOutputGroup>();
        		this.RoleOutputDevices = new HashSet<RoleOutputDevice>();
        		this.gcsUserEntityRoles = new HashSet<gcsUserEntityRole>();
        		this.gcsUserGroupEntityRoles = new HashSet<gcsUserGroupEntityRole>();
        		this.RoleRegions = new HashSet<RoleRegion>();
        		this.RoleSites = new HashSet<RoleSite>();
        		this.RoleMercScpGroups = new HashSet<RoleMercScpGroup>();
        }
        
        	public void Initialize(gcsRole e)
        	{
        		Initialize();
        		base.Initialize(e);
        
        		if( e == null )
        			return;
        		this.RoleId = e.RoleId;
        		this.ApplicationId = e.ApplicationId;
        		this.RoleName = e.RoleName;
        		this.RoleDescription = e.RoleDescription;
        		this.IsActive = e.IsActive;
        		this.IsTemplateRole = e.IsTemplateRole;
        		this.InsertName = e.InsertName;
        		this.InsertDate = e.InsertDate;
        		this.UpdateName = e.UpdateName;
        		this.UpdateDate = e.UpdateDate;
        		this.ConcurrencyValue = e.ConcurrencyValue;
        		this.IsAdministratorRole = e.IsAdministratorRole;
        		this.EntityId = e.EntityId;
        		this.IsDefault = e.IsDefault;
        		this.gcsEntityApplicationRoles = e.gcsEntityApplicationRoles.ToCollection();
        		this.gcsRolePermissions = e.gcsRolePermissions.ToCollection();
        		this.RoleAccessPortals = e.RoleAccessPortals.ToCollection();
        		this.RoleClusters = e.RoleClusters.ToCollection();
        		this.RoleInputDevices = e.RoleInputDevices.ToCollection();
        		this.RoleInputOutputGroups = e.RoleInputOutputGroups.ToCollection();
        		this.RoleOutputDevices = e.RoleOutputDevices.ToCollection();
        		this.gcsUserEntityRoles = e.gcsUserEntityRoles.ToCollection();
        		this.gcsUserGroupEntityRoles = e.gcsUserGroupEntityRoles.ToCollection();
        		this.RoleRegions = e.RoleRegions.ToCollection();
        		this.RoleSites = e.RoleSites.ToCollection();
        		this.RoleMercScpGroups = e.RoleMercScpGroups.ToCollection();
        		
        	}
        
        	public gcsRole Clone(gcsRole e)
        	{
        		return new gcsRole(e);
        	}
        
        	public bool Equals(gcsRole other)
        	{
        		return base.Equals(other);
        	}
        	
        	public bool IsPrimaryKeyEqual(gcsRole other)
        	{
        		if( other == null ) 
        			return false;
        
        		if(other.RoleId != this.RoleId )
        			return false;
        		return true;
        	}
        
        	public override int GetHashCode()
        	{
        		return base.GetHashCode();
        	}
        
        	public override string ToString()
        	{
        		return base.ToString();
        	}
        }
    }
    */
    
    	
    	private System.Guid _roleId;
    
    	[DataMember]
    	public System.Guid RoleId
    	{ 
    		get { return _roleId; }
    		set
    		{
    			if (_roleId != value )
    			{
    				_roleId = value;
    				OnPropertyChanged(() => RoleId);
    			}
    		}
    	}
    	
    	private System.Guid _applicationId;
    
    	[DataMember]
    	public System.Guid ApplicationId
    	{ 
    		get { return _applicationId; }
    		set
    		{
    			if (_applicationId != value )
    			{
    				_applicationId = value;
    				OnPropertyChanged(() => ApplicationId);
    			}
    		}
    	}
    	
    	private string _roleName;
    
    	[DataMember]
    	public string RoleName
    	{ 
    		get { return _roleName; }
    		set
    		{
    			if (_roleName != value )
    			{
    				_roleName = value;
    				OnPropertyChanged(() => RoleName);
    			}
    		}
    	}
    	
    	private string _roleDescription;
    
    	[DataMember]
    	public string RoleDescription
    	{ 
    		get { return _roleDescription; }
    		set
    		{
    			if (_roleDescription != value )
    			{
    				_roleDescription = value;
    				OnPropertyChanged(() => RoleDescription);
    			}
    		}
    	}
    	
    	private bool _isActive;
    
    	[DataMember]
    	public bool IsActive
    	{ 
    		get { return _isActive; }
    		set
    		{
    			if (_isActive != value )
    			{
    				_isActive = value;
    				OnPropertyChanged(() => IsActive);
    			}
    		}
    	}
    	
    	private bool _isTemplateRole;
    
    	[DataMember]
    	public bool IsTemplateRole
    	{ 
    		get { return _isTemplateRole; }
    		set
    		{
    			if (_isTemplateRole != value )
    			{
    				_isTemplateRole = value;
    				OnPropertyChanged(() => IsTemplateRole);
    			}
    		}
    	}
    	
    	private string _insertName;
    
    	[DataMember]
    	public string InsertName
    	{ 
    		get { return _insertName; }
    		set
    		{
    			if (_insertName != value )
    			{
    				_insertName = value;
    				OnPropertyChanged(() => InsertName);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _insertDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> InsertDate
    	{ 
    		get { return _insertDate; }
    		set
    		{
    			if (_insertDate != value )
    			{
    				_insertDate = value;
    				OnPropertyChanged(() => InsertDate);
    			}
    		}
    	}
    	
    	private string _updateName;
    
    	[DataMember]
    	public string UpdateName
    	{ 
    		get { return _updateName; }
    		set
    		{
    			if (_updateName != value )
    			{
    				_updateName = value;
    				OnPropertyChanged(() => UpdateName);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _updateDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> UpdateDate
    	{ 
    		get { return _updateDate; }
    		set
    		{
    			if (_updateDate != value )
    			{
    				_updateDate = value;
    				OnPropertyChanged(() => UpdateDate);
    			}
    		}
    	}
    	
    	private Nullable<short> _concurrencyValue;
    
    	[DataMember]
    	public Nullable<short> ConcurrencyValue
    	{ 
    		get { return _concurrencyValue; }
    		set
    		{
    			if (_concurrencyValue != value )
    			{
    				_concurrencyValue = value;
    				OnPropertyChanged(() => ConcurrencyValue);
    			}
    		}
    	}
    	
    	private bool _isAdministratorRole;
    
    	[DataMember]
    	public bool IsAdministratorRole
    	{ 
    		get { return _isAdministratorRole; }
    		set
    		{
    			if (_isAdministratorRole != value )
    			{
    				_isAdministratorRole = value;
    				OnPropertyChanged(() => IsAdministratorRole);
    			}
    		}
    	}
    	
    	private System.Guid _entityId;
    
    	[DataMember]
    	public System.Guid EntityId
    	{ 
    		get { return _entityId; }
    		set
    		{
    			if (_entityId != value )
    			{
    				_entityId = value;
    				OnPropertyChanged(() => EntityId);
    			}
    		}
    	}
    	
    	private bool _isDefault;
    
    	[DataMember]
    	public bool IsDefault
    	{ 
    		get { return _isDefault; }
    		set
    		{
    			if (_isDefault != value )
    			{
    				_isDefault = value;
    				OnPropertyChanged(() => IsDefault);
    			}
    		}
    	}
    
    	
    	private ICollection<gcsEntityApplicationRole> _gcsEntityApplicationRoles;
    
    	[DataMember]
    	public virtual ICollection<gcsEntityApplicationRole> gcsEntityApplicationRoles
    	{ 
    		get { return _gcsEntityApplicationRoles; }
    		set
    		{
    			if (_gcsEntityApplicationRoles != value )
    			{
    				_gcsEntityApplicationRoles = value;
    				OnPropertyChanged(() => gcsEntityApplicationRoles);
    			}
    		}
    	}
    	
    	private ICollection<gcsRolePermission> _gcsRolePermissions;
    
    	[DataMember]
    	public virtual ICollection<gcsRolePermission> gcsRolePermissions
    	{ 
    		get { return _gcsRolePermissions; }
    		set
    		{
    			if (_gcsRolePermissions != value )
    			{
    				_gcsRolePermissions = value;
    				OnPropertyChanged(() => gcsRolePermissions);
    			}
    		}
    	}
    	
    	private ICollection<RoleAccessPortal> _roleAccessPortals;
    
    	[DataMember]
    	public virtual ICollection<RoleAccessPortal> RoleAccessPortals
    	{ 
    		get { return _roleAccessPortals; }
    		set
    		{
    			if (_roleAccessPortals != value )
    			{
    				_roleAccessPortals = value;
    				OnPropertyChanged(() => RoleAccessPortals);
    			}
    		}
    	}
    	
    	private ICollection<RoleCluster> _roleClusters;
    
    	[DataMember]
    	public virtual ICollection<RoleCluster> RoleClusters
    	{ 
    		get { return _roleClusters; }
    		set
    		{
    			if (_roleClusters != value )
    			{
    				_roleClusters = value;
    				OnPropertyChanged(() => RoleClusters);
    			}
    		}
    	}
    	
    	private ICollection<RoleInputDevice> _roleInputDevices;
    
    	[DataMember]
    	public virtual ICollection<RoleInputDevice> RoleInputDevices
    	{ 
    		get { return _roleInputDevices; }
    		set
    		{
    			if (_roleInputDevices != value )
    			{
    				_roleInputDevices = value;
    				OnPropertyChanged(() => RoleInputDevices);
    			}
    		}
    	}
    	
    	private ICollection<RoleInputOutputGroup> _roleInputOutputGroups;
    
    	[DataMember]
    	public virtual ICollection<RoleInputOutputGroup> RoleInputOutputGroups
    	{ 
    		get { return _roleInputOutputGroups; }
    		set
    		{
    			if (_roleInputOutputGroups != value )
    			{
    				_roleInputOutputGroups = value;
    				OnPropertyChanged(() => RoleInputOutputGroups);
    			}
    		}
    	}
    	
    	private ICollection<RoleOutputDevice> _roleOutputDevices;
    
    	[DataMember]
    	public virtual ICollection<RoleOutputDevice> RoleOutputDevices
    	{ 
    		get { return _roleOutputDevices; }
    		set
    		{
    			if (_roleOutputDevices != value )
    			{
    				_roleOutputDevices = value;
    				OnPropertyChanged(() => RoleOutputDevices);
    			}
    		}
    	}
    	
    	private ICollection<gcsUserEntityRole> _gcsUserEntityRoles;
    
    	[DataMember]
    	public virtual ICollection<gcsUserEntityRole> gcsUserEntityRoles
    	{ 
    		get { return _gcsUserEntityRoles; }
    		set
    		{
    			if (_gcsUserEntityRoles != value )
    			{
    				_gcsUserEntityRoles = value;
    				OnPropertyChanged(() => gcsUserEntityRoles);
    			}
    		}
    	}
    	
    	private ICollection<gcsUserGroupEntityRole> _gcsUserGroupEntityRoles;
    
    	[DataMember]
    	public virtual ICollection<gcsUserGroupEntityRole> gcsUserGroupEntityRoles
    	{ 
    		get { return _gcsUserGroupEntityRoles; }
    		set
    		{
    			if (_gcsUserGroupEntityRoles != value )
    			{
    				_gcsUserGroupEntityRoles = value;
    				OnPropertyChanged(() => gcsUserGroupEntityRoles);
    			}
    		}
    	}
    	
    	private RoleFilter _roleFilter;
    
    	[DataMember]
    	public virtual RoleFilter RoleFilter
    	{ 
    		get { return _roleFilter; }
    		set
    		{
    			if (_roleFilter != value )
    			{
    				_roleFilter = value;
    				OnPropertyChanged(() => RoleFilter);
    			}
    		}
    	}
    	
    	private ICollection<RoleRegion> _roleRegions;
    
    	[DataMember]
    	public virtual ICollection<RoleRegion> RoleRegions
    	{ 
    		get { return _roleRegions; }
    		set
    		{
    			if (_roleRegions != value )
    			{
    				_roleRegions = value;
    				OnPropertyChanged(() => RoleRegions);
    			}
    		}
    	}
    	
    	private ICollection<RoleSite> _roleSites;
    
    	[DataMember]
    	public virtual ICollection<RoleSite> RoleSites
    	{ 
    		get { return _roleSites; }
    		set
    		{
    			if (_roleSites != value )
    			{
    				_roleSites = value;
    				OnPropertyChanged(() => RoleSites);
    			}
    		}
    	}
    	
    	private ICollection<RoleMercScpGroup> _roleMercScpGroups;
    
    	[DataMember]
    	public virtual ICollection<RoleMercScpGroup> RoleMercScpGroups
    	{ 
    		get { return _roleMercScpGroups; }
    		set
    		{
    			if (_roleMercScpGroups != value )
    			{
    				_roleMercScpGroups = value;
    				OnPropertyChanged(() => RoleMercScpGroups);
    			}
    		}
    	}
    }
    
}
