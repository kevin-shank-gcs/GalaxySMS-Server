//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    
	[DataContract]
	public partial class RoleCluster : DbObjectBase, ITableEntityBase
    {
    
    /*	// Move to partial class
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    using System.Collections.ObjectModel;
    using GCS.Core.Common.Extensions;
    
    namespace GalaxySMS.Client.Entities
    {
        public partial class RoleCluster
        {
        	public RoleCluster() : base()
        	{
        		Initialize();
        	}
        
        	public RoleCluster(RoleCluster e) : base(e)
        	{
        		Initialize(e);
        	}
        
        	public void Initialize()
        	{
        		base.Initialize();
        		this.RoleClusterPermissions = new HashSet<RoleClusterPermission>();
        }
        
        	public void Initialize(RoleCluster e)
        	{
        		Initialize();
        		base.Initialize(e);
        
        		if( e == null )
        			return;
        		this.RoleClusterUid = e.RoleClusterUid;
        		this.RoleId = e.RoleId;
        		this.ClusterUid = e.ClusterUid;
        		this.InsertName = e.InsertName;
        		this.InsertDate = e.InsertDate;
        		this.UpdateName = e.UpdateName;
        		this.UpdateDate = e.UpdateDate;
        		this.ConcurrencyValue = e.ConcurrencyValue;
        		this.IncludeAllAccessPortals = e.IncludeAllAccessPortals;
        		this.IncludeAllInputOutputGroups = e.IncludeAllInputOutputGroups;
        		this.IncludeAllInputDevices = e.IncludeAllInputDevices;
        		this.IncludeAllOutputDevices = e.IncludeAllOutputDevices;
        		this.RoleClusterPermissions = e.RoleClusterPermissions.ToCollection();
        		
        	}
        
        	public RoleCluster Clone(RoleCluster e)
        	{
        		return new RoleCluster(e);
        	}
        
        	public bool Equals(RoleCluster other)
        	{
        		return base.Equals(other);
        	}
        	
        	public bool IsPrimaryKeyEqual(RoleCluster other)
        	{
        		if( other == null ) 
        			return false;
        
        		if(other.RoleClusterUid != this.RoleClusterUid )
        			return false;
        		return true;
        	}
        
        	public override int GetHashCode()
        	{
        		return base.GetHashCode();
        	}
        
        	public override string ToString()
        	{
        		return base.ToString();
        	}
        }
    }
    */
    
    	
    	private System.Guid _roleClusterUid;
    
    	[DataMember]
    	public System.Guid RoleClusterUid
    	{ 
    		get { return _roleClusterUid; }
    		set
    		{
    			if (_roleClusterUid != value )
    			{
    				_roleClusterUid = value;
    				OnPropertyChanged(() => RoleClusterUid);
    			}
    		}
    	}
    	
    	private System.Guid _roleId;
    
    	[DataMember]
    	public System.Guid RoleId
    	{ 
    		get { return _roleId; }
    		set
    		{
    			if (_roleId != value )
    			{
    				_roleId = value;
    				OnPropertyChanged(() => RoleId);
    			}
    		}
    	}
    	
    	private System.Guid _clusterUid;
    
    	[DataMember]
    	public System.Guid ClusterUid
    	{ 
    		get { return _clusterUid; }
    		set
    		{
    			if (_clusterUid != value )
    			{
    				_clusterUid = value;
    				OnPropertyChanged(() => ClusterUid);
    			}
    		}
    	}
    	
    	private string _insertName;
    
    	[DataMember]
    	public string InsertName
    	{ 
    		get { return _insertName; }
    		set
    		{
    			if (_insertName != value )
    			{
    				_insertName = value;
    				OnPropertyChanged(() => InsertName);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _insertDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> InsertDate
    	{ 
    		get { return _insertDate; }
    		set
    		{
    			if (_insertDate != value )
    			{
    				_insertDate = value;
    				OnPropertyChanged(() => InsertDate);
    			}
    		}
    	}
    	
    	private string _updateName;
    
    	[DataMember]
    	public string UpdateName
    	{ 
    		get { return _updateName; }
    		set
    		{
    			if (_updateName != value )
    			{
    				_updateName = value;
    				OnPropertyChanged(() => UpdateName);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _updateDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> UpdateDate
    	{ 
    		get { return _updateDate; }
    		set
    		{
    			if (_updateDate != value )
    			{
    				_updateDate = value;
    				OnPropertyChanged(() => UpdateDate);
    			}
    		}
    	}
    	
    	private Nullable<short> _concurrencyValue;
    
    	[DataMember]
    	public Nullable<short> ConcurrencyValue
    	{ 
    		get { return _concurrencyValue; }
    		set
    		{
    			if (_concurrencyValue != value )
    			{
    				_concurrencyValue = value;
    				OnPropertyChanged(() => ConcurrencyValue);
    			}
    		}
    	}
    	
    	private bool _includeAllAccessPortals;
    
    	[DataMember]
    	public bool IncludeAllAccessPortals
    	{ 
    		get { return _includeAllAccessPortals; }
    		set
    		{
    			if (_includeAllAccessPortals != value )
    			{
    				_includeAllAccessPortals = value;
    				OnPropertyChanged(() => IncludeAllAccessPortals);
    			}
    		}
    	}
    	
    	private bool _includeAllInputOutputGroups;
    
    	[DataMember]
    	public bool IncludeAllInputOutputGroups
    	{ 
    		get { return _includeAllInputOutputGroups; }
    		set
    		{
    			if (_includeAllInputOutputGroups != value )
    			{
    				_includeAllInputOutputGroups = value;
    				OnPropertyChanged(() => IncludeAllInputOutputGroups);
    			}
    		}
    	}
    	
    	private bool _includeAllInputDevices;
    
    	[DataMember]
    	public bool IncludeAllInputDevices
    	{ 
    		get { return _includeAllInputDevices; }
    		set
    		{
    			if (_includeAllInputDevices != value )
    			{
    				_includeAllInputDevices = value;
    				OnPropertyChanged(() => IncludeAllInputDevices);
    			}
    		}
    	}
    	
    	private bool _includeAllOutputDevices;
    
    	[DataMember]
    	public bool IncludeAllOutputDevices
    	{ 
    		get { return _includeAllOutputDevices; }
    		set
    		{
    			if (_includeAllOutputDevices != value )
    			{
    				_includeAllOutputDevices = value;
    				OnPropertyChanged(() => IncludeAllOutputDevices);
    			}
    		}
    	}
    
    	
    	private Cluster _cluster;
    
    	[DataMember]
    	public virtual Cluster Cluster
    	{ 
    		get { return _cluster; }
    		set
    		{
    			if (_cluster != value )
    			{
    				_cluster = value;
    				OnPropertyChanged(() => Cluster);
    			}
    		}
    	}
    	
    	private gcsRole _gcsRole;
    
    	[DataMember]
    	public virtual gcsRole gcsRole
    	{ 
    		get { return _gcsRole; }
    		set
    		{
    			if (_gcsRole != value )
    			{
    				_gcsRole = value;
    				OnPropertyChanged(() => gcsRole);
    			}
    		}
    	}
    	
    	private ICollection<RoleClusterPermission> _roleClusterPermissions;
    
    	[DataMember]
    	public virtual ICollection<RoleClusterPermission> RoleClusterPermissions
    	{ 
    		get { return _roleClusterPermissions; }
    		set
    		{
    			if (_roleClusterPermissions != value )
    			{
    				_roleClusterPermissions = value;
    				OnPropertyChanged(() => RoleClusterPermissions);
    			}
    		}
    	}
    }
    
}
