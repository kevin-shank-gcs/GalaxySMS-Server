//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    
	[DataContract]
	public partial class Person : DbObjectBase, ITableEntityBase
    {
    
    /*	// Move to partial class
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    using System.Collections.ObjectModel;
    using GCS.Core.Common.Extensions;
    
    namespace GalaxySMS.Client.Entities
    {
        public partial class Person
        {
        	public Person() : base()
        	{
        		Initialize();
        	}
        
        	public Person(Person e) : base(e)
        	{
        		Initialize(e);
        	}
        
        	public void Initialize()
        	{
        		base.Initialize();
        		this.PersonAccessProfiles = new HashSet<PersonAccessProfile>();
        		this.PersonAddresses = new HashSet<PersonAddress>();
        		this.PersonEmailAddresses = new HashSet<PersonEmailAddress>();
        		this.PersonLcdMessages = new HashSet<PersonLcdMessage>();
        		this.PersonNotes = new HashSet<PersonNote>();
        		this.PersonPhoneNumbers = new HashSet<PersonPhoneNumber>();
        		this.PersonPhotoes = new HashSet<PersonPhoto>();
        		this.PersonPropertyBags = new HashSet<PersonPropertyBag>();
        }
        
        	public void Initialize(Person e)
        	{
        		Initialize();
        		base.Initialize(e);
        
        		if( e == null )
        			return;
        		this.PersonUid = e.PersonUid;
        		this.CountryOfBirthUid = e.CountryOfBirthUid;
        		this.PersonActiveStatusTypeUid = e.PersonActiveStatusTypeUid;
        		this.GenderUid = e.GenderUid;
        		this.DepartmentUid = e.DepartmentUid;
        		this.PersonRecordTypeUid = e.PersonRecordTypeUid;
        		this.BadgeTemplateUid = e.BadgeTemplateUid;
        		this.EntityId = e.EntityId;
        		this.RowOrigin = e.RowOrigin;
        		this.OriginId = e.OriginId;
        		this.PersonId = e.PersonId;
        		this.FirstName = e.FirstName;
        		this.MiddleName = e.MiddleName;
        		this.LastName = e.LastName;
        		this.Initials = e.Initials;
        		this.NickName = e.NickName;
        		this.LegalName = e.LegalName;
        		this.FullName = e.FullName;
        		this.PreferredName = e.PreferredName;
        		this.Company = e.Company;
        		this.HomeOfficeLocation = e.HomeOfficeLocation;
        		this.JobTitle = e.JobTitle;
        		this.Race = e.Race;
        		this.Nationality = e.Nationality;
        		this.Ethnicity = e.Ethnicity;
        		this.PrimaryLanguage = e.PrimaryLanguage;
        		this.SecondaryLanguage = e.SecondaryLanguage;
        		this.NationalIdentificationNumber = e.NationalIdentificationNumber;
        		this.DateOfBirth = e.DateOfBirth;
        		this.EmploymentDate = e.EmploymentDate;
        		this.TerminationDate = e.TerminationDate;
        		this.ActivationDateTime = e.ActivationDateTime;
        		this.ExpirationDateTime = e.ExpirationDateTime;
        		this.Trace = e.Trace;
        		this.TextData1 = e.TextData1;
        		this.TextData2 = e.TextData2;
        		this.TextData3 = e.TextData3;
        		this.TextData4 = e.TextData4;
        		this.TextData5 = e.TextData5;
        		this.TextData6 = e.TextData6;
        		this.TextData7 = e.TextData7;
        		this.TextData8 = e.TextData8;
        		this.TextData9 = e.TextData9;
        		this.TextData10 = e.TextData10;
        		this.TextData11 = e.TextData11;
        		this.TextData12 = e.TextData12;
        		this.TextData13 = e.TextData13;
        		this.TextData14 = e.TextData14;
        		this.TextData15 = e.TextData15;
        		this.TextData16 = e.TextData16;
        		this.TextData17 = e.TextData17;
        		this.TextData18 = e.TextData18;
        		this.TextData19 = e.TextData19;
        		this.TextData20 = e.TextData20;
        		this.TextData22 = e.TextData22;
        		this.TextData23 = e.TextData23;
        		this.TextData24 = e.TextData24;
        		this.TextData25 = e.TextData25;
        		this.TextData26 = e.TextData26;
        		this.TextData27 = e.TextData27;
        		this.TextData28 = e.TextData28;
        		this.TextData29 = e.TextData29;
        		this.TextData21 = e.TextData21;
        		this.TextData30 = e.TextData30;
        		this.TextData31 = e.TextData31;
        		this.TextData32 = e.TextData32;
        		this.TextData33 = e.TextData33;
        		this.TextData34 = e.TextData34;
        		this.TextData35 = e.TextData35;
        		this.TextData36 = e.TextData36;
        		this.TextData37 = e.TextData37;
        		this.TextData38 = e.TextData38;
        		this.TextData39 = e.TextData39;
        		this.TextData40 = e.TextData40;
        		this.TextData41 = e.TextData41;
        		this.TextData42 = e.TextData42;
        		this.TextData43 = e.TextData43;
        		this.TextData44 = e.TextData44;
        		this.TextData45 = e.TextData45;
        		this.TextData46 = e.TextData46;
        		this.TextData47 = e.TextData47;
        		this.TextData48 = e.TextData48;
        		this.TextData49 = e.TextData49;
        		this.TextData50 = e.TextData50;
        		this.SysGalEmployeeId = e.SysGalEmployeeId;
        		this.VeryImportantPerson = e.VeryImportantPerson;
        		this.HasPhysicalDisability = e.HasPhysicalDisability;
        		this.HasVertigo = e.HasVertigo;
        		this.InsertName = e.InsertName;
        		this.InsertDate = e.InsertDate;
        		this.UpdateName = e.UpdateName;
        		this.UpdateDate = e.UpdateDate;
        		this.ConcurrencyValue = e.ConcurrencyValue;
        		this.ActivityEventText = e.ActivityEventText;
        		this.ActiveStatusCode = e.ActiveStatusCode;
        		this.PersonAccessProfiles = e.PersonAccessProfiles.ToCollection();
        		this.PersonAddresses = e.PersonAddresses.ToCollection();
        		this.PersonEmailAddresses = e.PersonEmailAddresses.ToCollection();
        		this.PersonLcdMessages = e.PersonLcdMessages.ToCollection();
        		this.PersonNotes = e.PersonNotes.ToCollection();
        		this.PersonPhoneNumbers = e.PersonPhoneNumbers.ToCollection();
        		this.PersonPhotoes = e.PersonPhotoes.ToCollection();
        		this.PersonPropertyBags = e.PersonPropertyBags.ToCollection();
        		
        	}
        
        	public Person Clone(Person e)
        	{
        		return new Person(e);
        	}
        
        	public bool Equals(Person other)
        	{
        		return base.Equals(other);
        	}
        	
        	public bool IsPrimaryKeyEqual(Person other)
        	{
        		if( other == null ) 
        			return false;
        
        		if(other.PersonUid != this.PersonUid )
        			return false;
        		return true;
        	}
        
        	public override int GetHashCode()
        	{
        		return base.GetHashCode();
        	}
        
        	public override string ToString()
        	{
        		return base.ToString();
        	}
        }
    }
    */
    
    	
    	private System.Guid _personUid;
    
    	[DataMember]
    	public System.Guid PersonUid
    	{ 
    		get { return _personUid; }
    		set
    		{
    			if (_personUid != value )
    			{
    				_personUid = value;
    				OnPropertyChanged(() => PersonUid);
    			}
    		}
    	}
    	
    	private Nullable<System.Guid> _countryOfBirthUid;
    
    	[DataMember]
    	public Nullable<System.Guid> CountryOfBirthUid
    	{ 
    		get { return _countryOfBirthUid; }
    		set
    		{
    			if (_countryOfBirthUid != value )
    			{
    				_countryOfBirthUid = value;
    				OnPropertyChanged(() => CountryOfBirthUid);
    			}
    		}
    	}
    	
    	private Nullable<System.Guid> _personActiveStatusTypeUid;
    
    	[DataMember]
    	public Nullable<System.Guid> PersonActiveStatusTypeUid
    	{ 
    		get { return _personActiveStatusTypeUid; }
    		set
    		{
    			if (_personActiveStatusTypeUid != value )
    			{
    				_personActiveStatusTypeUid = value;
    				OnPropertyChanged(() => PersonActiveStatusTypeUid);
    			}
    		}
    	}
    	
    	private Nullable<System.Guid> _genderUid;
    
    	[DataMember]
    	public Nullable<System.Guid> GenderUid
    	{ 
    		get { return _genderUid; }
    		set
    		{
    			if (_genderUid != value )
    			{
    				_genderUid = value;
    				OnPropertyChanged(() => GenderUid);
    			}
    		}
    	}
    	
    	private Nullable<System.Guid> _departmentUid;
    
    	[DataMember]
    	public Nullable<System.Guid> DepartmentUid
    	{ 
    		get { return _departmentUid; }
    		set
    		{
    			if (_departmentUid != value )
    			{
    				_departmentUid = value;
    				OnPropertyChanged(() => DepartmentUid);
    			}
    		}
    	}
    	
    	private Nullable<System.Guid> _personRecordTypeUid;
    
    	[DataMember]
    	public Nullable<System.Guid> PersonRecordTypeUid
    	{ 
    		get { return _personRecordTypeUid; }
    		set
    		{
    			if (_personRecordTypeUid != value )
    			{
    				_personRecordTypeUid = value;
    				OnPropertyChanged(() => PersonRecordTypeUid);
    			}
    		}
    	}
    	
    	private Nullable<System.Guid> _badgeTemplateUid;
    
    	[DataMember]
    	public Nullable<System.Guid> BadgeTemplateUid
    	{ 
    		get { return _badgeTemplateUid; }
    		set
    		{
    			if (_badgeTemplateUid != value )
    			{
    				_badgeTemplateUid = value;
    				OnPropertyChanged(() => BadgeTemplateUid);
    			}
    		}
    	}
    	
    	private System.Guid _entityId;
    
    	[DataMember]
    	public System.Guid EntityId
    	{ 
    		get { return _entityId; }
    		set
    		{
    			if (_entityId != value )
    			{
    				_entityId = value;
    				OnPropertyChanged(() => EntityId);
    			}
    		}
    	}
    	
    	private string _rowOrigin;
    
    	[DataMember]
    	public string RowOrigin
    	{ 
    		get { return _rowOrigin; }
    		set
    		{
    			if (_rowOrigin != value )
    			{
    				_rowOrigin = value;
    				OnPropertyChanged(() => RowOrigin);
    			}
    		}
    	}
    	
    	private string _originId;
    
    	[DataMember]
    	public string OriginId
    	{ 
    		get { return _originId; }
    		set
    		{
    			if (_originId != value )
    			{
    				_originId = value;
    				OnPropertyChanged(() => OriginId);
    			}
    		}
    	}
    	
    	private string _personId;
    
    	[DataMember]
    	public string PersonId
    	{ 
    		get { return _personId; }
    		set
    		{
    			if (_personId != value )
    			{
    				_personId = value;
    				OnPropertyChanged(() => PersonId);
    			}
    		}
    	}
    	
    	private string _firstName;
    
    	[DataMember]
    	public string FirstName
    	{ 
    		get { return _firstName; }
    		set
    		{
    			if (_firstName != value )
    			{
    				_firstName = value;
    				OnPropertyChanged(() => FirstName);
    			}
    		}
    	}
    	
    	private string _middleName;
    
    	[DataMember]
    	public string MiddleName
    	{ 
    		get { return _middleName; }
    		set
    		{
    			if (_middleName != value )
    			{
    				_middleName = value;
    				OnPropertyChanged(() => MiddleName);
    			}
    		}
    	}
    	
    	private string _lastName;
    
    	[DataMember]
    	public string LastName
    	{ 
    		get { return _lastName; }
    		set
    		{
    			if (_lastName != value )
    			{
    				_lastName = value;
    				OnPropertyChanged(() => LastName);
    			}
    		}
    	}
    	
    	private string _initials;
    
    	[DataMember]
    	public string Initials
    	{ 
    		get { return _initials; }
    		set
    		{
    			if (_initials != value )
    			{
    				_initials = value;
    				OnPropertyChanged(() => Initials);
    			}
    		}
    	}
    	
    	private string _nickName;
    
    	[DataMember]
    	public string NickName
    	{ 
    		get { return _nickName; }
    		set
    		{
    			if (_nickName != value )
    			{
    				_nickName = value;
    				OnPropertyChanged(() => NickName);
    			}
    		}
    	}
    	
    	private string _legalName;
    
    	[DataMember]
    	public string LegalName
    	{ 
    		get { return _legalName; }
    		set
    		{
    			if (_legalName != value )
    			{
    				_legalName = value;
    				OnPropertyChanged(() => LegalName);
    			}
    		}
    	}
    	
    	private string _fullName;
    
    	[DataMember]
    	public string FullName
    	{ 
    		get { return _fullName; }
    		set
    		{
    			if (_fullName != value )
    			{
    				_fullName = value;
    				OnPropertyChanged(() => FullName);
    			}
    		}
    	}
    	
    	private string _preferredName;
    
    	[DataMember]
    	public string PreferredName
    	{ 
    		get { return _preferredName; }
    		set
    		{
    			if (_preferredName != value )
    			{
    				_preferredName = value;
    				OnPropertyChanged(() => PreferredName);
    			}
    		}
    	}
    	
    	private string _company;
    
    	[DataMember]
    	public string Company
    	{ 
    		get { return _company; }
    		set
    		{
    			if (_company != value )
    			{
    				_company = value;
    				OnPropertyChanged(() => Company);
    			}
    		}
    	}
    	
    	private string _homeOfficeLocation;
    
    	[DataMember]
    	public string HomeOfficeLocation
    	{ 
    		get { return _homeOfficeLocation; }
    		set
    		{
    			if (_homeOfficeLocation != value )
    			{
    				_homeOfficeLocation = value;
    				OnPropertyChanged(() => HomeOfficeLocation);
    			}
    		}
    	}
    	
    	private string _jobTitle;
    
    	[DataMember]
    	public string JobTitle
    	{ 
    		get { return _jobTitle; }
    		set
    		{
    			if (_jobTitle != value )
    			{
    				_jobTitle = value;
    				OnPropertyChanged(() => JobTitle);
    			}
    		}
    	}
    	
    	private string _race;
    
    	[DataMember]
    	public string Race
    	{ 
    		get { return _race; }
    		set
    		{
    			if (_race != value )
    			{
    				_race = value;
    				OnPropertyChanged(() => Race);
    			}
    		}
    	}
    	
    	private string _nationality;
    
    	[DataMember]
    	public string Nationality
    	{ 
    		get { return _nationality; }
    		set
    		{
    			if (_nationality != value )
    			{
    				_nationality = value;
    				OnPropertyChanged(() => Nationality);
    			}
    		}
    	}
    	
    	private string _ethnicity;
    
    	[DataMember]
    	public string Ethnicity
    	{ 
    		get { return _ethnicity; }
    		set
    		{
    			if (_ethnicity != value )
    			{
    				_ethnicity = value;
    				OnPropertyChanged(() => Ethnicity);
    			}
    		}
    	}
    	
    	private string _primaryLanguage;
    
    	[DataMember]
    	public string PrimaryLanguage
    	{ 
    		get { return _primaryLanguage; }
    		set
    		{
    			if (_primaryLanguage != value )
    			{
    				_primaryLanguage = value;
    				OnPropertyChanged(() => PrimaryLanguage);
    			}
    		}
    	}
    	
    	private string _secondaryLanguage;
    
    	[DataMember]
    	public string SecondaryLanguage
    	{ 
    		get { return _secondaryLanguage; }
    		set
    		{
    			if (_secondaryLanguage != value )
    			{
    				_secondaryLanguage = value;
    				OnPropertyChanged(() => SecondaryLanguage);
    			}
    		}
    	}
    	
    	private string _nationalIdentificationNumber;
    
    	[DataMember]
    	public string NationalIdentificationNumber
    	{ 
    		get { return _nationalIdentificationNumber; }
    		set
    		{
    			if (_nationalIdentificationNumber != value )
    			{
    				_nationalIdentificationNumber = value;
    				OnPropertyChanged(() => NationalIdentificationNumber);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _dateOfBirth;
    
    	[DataMember]
    	public Nullable<System.DateTime> DateOfBirth
    	{ 
    		get { return _dateOfBirth; }
    		set
    		{
    			if (_dateOfBirth != value )
    			{
    				_dateOfBirth = value;
    				OnPropertyChanged(() => DateOfBirth);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _employmentDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> EmploymentDate
    	{ 
    		get { return _employmentDate; }
    		set
    		{
    			if (_employmentDate != value )
    			{
    				_employmentDate = value;
    				OnPropertyChanged(() => EmploymentDate);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _terminationDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> TerminationDate
    	{ 
    		get { return _terminationDate; }
    		set
    		{
    			if (_terminationDate != value )
    			{
    				_terminationDate = value;
    				OnPropertyChanged(() => TerminationDate);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _activationDateTime;
    
    	[DataMember]
    	public Nullable<System.DateTime> ActivationDateTime
    	{ 
    		get { return _activationDateTime; }
    		set
    		{
    			if (_activationDateTime != value )
    			{
    				_activationDateTime = value;
    				OnPropertyChanged(() => ActivationDateTime);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _expirationDateTime;
    
    	[DataMember]
    	public Nullable<System.DateTime> ExpirationDateTime
    	{ 
    		get { return _expirationDateTime; }
    		set
    		{
    			if (_expirationDateTime != value )
    			{
    				_expirationDateTime = value;
    				OnPropertyChanged(() => ExpirationDateTime);
    			}
    		}
    	}
    	
    	private bool _trace;
    
    	[DataMember]
    	public bool Trace
    	{ 
    		get { return _trace; }
    		set
    		{
    			if (_trace != value )
    			{
    				_trace = value;
    				OnPropertyChanged(() => Trace);
    			}
    		}
    	}
    	
    	private string _textData1;
    
    	[DataMember]
    	public string TextData1
    	{ 
    		get { return _textData1; }
    		set
    		{
    			if (_textData1 != value )
    			{
    				_textData1 = value;
    				OnPropertyChanged(() => TextData1);
    			}
    		}
    	}
    	
    	private string _textData2;
    
    	[DataMember]
    	public string TextData2
    	{ 
    		get { return _textData2; }
    		set
    		{
    			if (_textData2 != value )
    			{
    				_textData2 = value;
    				OnPropertyChanged(() => TextData2);
    			}
    		}
    	}
    	
    	private string _textData3;
    
    	[DataMember]
    	public string TextData3
    	{ 
    		get { return _textData3; }
    		set
    		{
    			if (_textData3 != value )
    			{
    				_textData3 = value;
    				OnPropertyChanged(() => TextData3);
    			}
    		}
    	}
    	
    	private string _textData4;
    
    	[DataMember]
    	public string TextData4
    	{ 
    		get { return _textData4; }
    		set
    		{
    			if (_textData4 != value )
    			{
    				_textData4 = value;
    				OnPropertyChanged(() => TextData4);
    			}
    		}
    	}
    	
    	private string _textData5;
    
    	[DataMember]
    	public string TextData5
    	{ 
    		get { return _textData5; }
    		set
    		{
    			if (_textData5 != value )
    			{
    				_textData5 = value;
    				OnPropertyChanged(() => TextData5);
    			}
    		}
    	}
    	
    	private string _textData6;
    
    	[DataMember]
    	public string TextData6
    	{ 
    		get { return _textData6; }
    		set
    		{
    			if (_textData6 != value )
    			{
    				_textData6 = value;
    				OnPropertyChanged(() => TextData6);
    			}
    		}
    	}
    	
    	private string _textData7;
    
    	[DataMember]
    	public string TextData7
    	{ 
    		get { return _textData7; }
    		set
    		{
    			if (_textData7 != value )
    			{
    				_textData7 = value;
    				OnPropertyChanged(() => TextData7);
    			}
    		}
    	}
    	
    	private string _textData8;
    
    	[DataMember]
    	public string TextData8
    	{ 
    		get { return _textData8; }
    		set
    		{
    			if (_textData8 != value )
    			{
    				_textData8 = value;
    				OnPropertyChanged(() => TextData8);
    			}
    		}
    	}
    	
    	private string _textData9;
    
    	[DataMember]
    	public string TextData9
    	{ 
    		get { return _textData9; }
    		set
    		{
    			if (_textData9 != value )
    			{
    				_textData9 = value;
    				OnPropertyChanged(() => TextData9);
    			}
    		}
    	}
    	
    	private string _textData10;
    
    	[DataMember]
    	public string TextData10
    	{ 
    		get { return _textData10; }
    		set
    		{
    			if (_textData10 != value )
    			{
    				_textData10 = value;
    				OnPropertyChanged(() => TextData10);
    			}
    		}
    	}
    	
    	private string _textData11;
    
    	[DataMember]
    	public string TextData11
    	{ 
    		get { return _textData11; }
    		set
    		{
    			if (_textData11 != value )
    			{
    				_textData11 = value;
    				OnPropertyChanged(() => TextData11);
    			}
    		}
    	}
    	
    	private string _textData12;
    
    	[DataMember]
    	public string TextData12
    	{ 
    		get { return _textData12; }
    		set
    		{
    			if (_textData12 != value )
    			{
    				_textData12 = value;
    				OnPropertyChanged(() => TextData12);
    			}
    		}
    	}
    	
    	private string _textData13;
    
    	[DataMember]
    	public string TextData13
    	{ 
    		get { return _textData13; }
    		set
    		{
    			if (_textData13 != value )
    			{
    				_textData13 = value;
    				OnPropertyChanged(() => TextData13);
    			}
    		}
    	}
    	
    	private string _textData14;
    
    	[DataMember]
    	public string TextData14
    	{ 
    		get { return _textData14; }
    		set
    		{
    			if (_textData14 != value )
    			{
    				_textData14 = value;
    				OnPropertyChanged(() => TextData14);
    			}
    		}
    	}
    	
    	private string _textData15;
    
    	[DataMember]
    	public string TextData15
    	{ 
    		get { return _textData15; }
    		set
    		{
    			if (_textData15 != value )
    			{
    				_textData15 = value;
    				OnPropertyChanged(() => TextData15);
    			}
    		}
    	}
    	
    	private string _textData16;
    
    	[DataMember]
    	public string TextData16
    	{ 
    		get { return _textData16; }
    		set
    		{
    			if (_textData16 != value )
    			{
    				_textData16 = value;
    				OnPropertyChanged(() => TextData16);
    			}
    		}
    	}
    	
    	private string _textData17;
    
    	[DataMember]
    	public string TextData17
    	{ 
    		get { return _textData17; }
    		set
    		{
    			if (_textData17 != value )
    			{
    				_textData17 = value;
    				OnPropertyChanged(() => TextData17);
    			}
    		}
    	}
    	
    	private string _textData18;
    
    	[DataMember]
    	public string TextData18
    	{ 
    		get { return _textData18; }
    		set
    		{
    			if (_textData18 != value )
    			{
    				_textData18 = value;
    				OnPropertyChanged(() => TextData18);
    			}
    		}
    	}
    	
    	private string _textData19;
    
    	[DataMember]
    	public string TextData19
    	{ 
    		get { return _textData19; }
    		set
    		{
    			if (_textData19 != value )
    			{
    				_textData19 = value;
    				OnPropertyChanged(() => TextData19);
    			}
    		}
    	}
    	
    	private string _textData20;
    
    	[DataMember]
    	public string TextData20
    	{ 
    		get { return _textData20; }
    		set
    		{
    			if (_textData20 != value )
    			{
    				_textData20 = value;
    				OnPropertyChanged(() => TextData20);
    			}
    		}
    	}
    	
    	private string _textData22;
    
    	[DataMember]
    	public string TextData22
    	{ 
    		get { return _textData22; }
    		set
    		{
    			if (_textData22 != value )
    			{
    				_textData22 = value;
    				OnPropertyChanged(() => TextData22);
    			}
    		}
    	}
    	
    	private string _textData23;
    
    	[DataMember]
    	public string TextData23
    	{ 
    		get { return _textData23; }
    		set
    		{
    			if (_textData23 != value )
    			{
    				_textData23 = value;
    				OnPropertyChanged(() => TextData23);
    			}
    		}
    	}
    	
    	private string _textData24;
    
    	[DataMember]
    	public string TextData24
    	{ 
    		get { return _textData24; }
    		set
    		{
    			if (_textData24 != value )
    			{
    				_textData24 = value;
    				OnPropertyChanged(() => TextData24);
    			}
    		}
    	}
    	
    	private string _textData25;
    
    	[DataMember]
    	public string TextData25
    	{ 
    		get { return _textData25; }
    		set
    		{
    			if (_textData25 != value )
    			{
    				_textData25 = value;
    				OnPropertyChanged(() => TextData25);
    			}
    		}
    	}
    	
    	private string _textData26;
    
    	[DataMember]
    	public string TextData26
    	{ 
    		get { return _textData26; }
    		set
    		{
    			if (_textData26 != value )
    			{
    				_textData26 = value;
    				OnPropertyChanged(() => TextData26);
    			}
    		}
    	}
    	
    	private string _textData27;
    
    	[DataMember]
    	public string TextData27
    	{ 
    		get { return _textData27; }
    		set
    		{
    			if (_textData27 != value )
    			{
    				_textData27 = value;
    				OnPropertyChanged(() => TextData27);
    			}
    		}
    	}
    	
    	private string _textData28;
    
    	[DataMember]
    	public string TextData28
    	{ 
    		get { return _textData28; }
    		set
    		{
    			if (_textData28 != value )
    			{
    				_textData28 = value;
    				OnPropertyChanged(() => TextData28);
    			}
    		}
    	}
    	
    	private string _textData29;
    
    	[DataMember]
    	public string TextData29
    	{ 
    		get { return _textData29; }
    		set
    		{
    			if (_textData29 != value )
    			{
    				_textData29 = value;
    				OnPropertyChanged(() => TextData29);
    			}
    		}
    	}
    	
    	private string _textData21;
    
    	[DataMember]
    	public string TextData21
    	{ 
    		get { return _textData21; }
    		set
    		{
    			if (_textData21 != value )
    			{
    				_textData21 = value;
    				OnPropertyChanged(() => TextData21);
    			}
    		}
    	}
    	
    	private string _textData30;
    
    	[DataMember]
    	public string TextData30
    	{ 
    		get { return _textData30; }
    		set
    		{
    			if (_textData30 != value )
    			{
    				_textData30 = value;
    				OnPropertyChanged(() => TextData30);
    			}
    		}
    	}
    	
    	private string _textData31;
    
    	[DataMember]
    	public string TextData31
    	{ 
    		get { return _textData31; }
    		set
    		{
    			if (_textData31 != value )
    			{
    				_textData31 = value;
    				OnPropertyChanged(() => TextData31);
    			}
    		}
    	}
    	
    	private string _textData32;
    
    	[DataMember]
    	public string TextData32
    	{ 
    		get { return _textData32; }
    		set
    		{
    			if (_textData32 != value )
    			{
    				_textData32 = value;
    				OnPropertyChanged(() => TextData32);
    			}
    		}
    	}
    	
    	private string _textData33;
    
    	[DataMember]
    	public string TextData33
    	{ 
    		get { return _textData33; }
    		set
    		{
    			if (_textData33 != value )
    			{
    				_textData33 = value;
    				OnPropertyChanged(() => TextData33);
    			}
    		}
    	}
    	
    	private string _textData34;
    
    	[DataMember]
    	public string TextData34
    	{ 
    		get { return _textData34; }
    		set
    		{
    			if (_textData34 != value )
    			{
    				_textData34 = value;
    				OnPropertyChanged(() => TextData34);
    			}
    		}
    	}
    	
    	private string _textData35;
    
    	[DataMember]
    	public string TextData35
    	{ 
    		get { return _textData35; }
    		set
    		{
    			if (_textData35 != value )
    			{
    				_textData35 = value;
    				OnPropertyChanged(() => TextData35);
    			}
    		}
    	}
    	
    	private string _textData36;
    
    	[DataMember]
    	public string TextData36
    	{ 
    		get { return _textData36; }
    		set
    		{
    			if (_textData36 != value )
    			{
    				_textData36 = value;
    				OnPropertyChanged(() => TextData36);
    			}
    		}
    	}
    	
    	private string _textData37;
    
    	[DataMember]
    	public string TextData37
    	{ 
    		get { return _textData37; }
    		set
    		{
    			if (_textData37 != value )
    			{
    				_textData37 = value;
    				OnPropertyChanged(() => TextData37);
    			}
    		}
    	}
    	
    	private string _textData38;
    
    	[DataMember]
    	public string TextData38
    	{ 
    		get { return _textData38; }
    		set
    		{
    			if (_textData38 != value )
    			{
    				_textData38 = value;
    				OnPropertyChanged(() => TextData38);
    			}
    		}
    	}
    	
    	private string _textData39;
    
    	[DataMember]
    	public string TextData39
    	{ 
    		get { return _textData39; }
    		set
    		{
    			if (_textData39 != value )
    			{
    				_textData39 = value;
    				OnPropertyChanged(() => TextData39);
    			}
    		}
    	}
    	
    	private string _textData40;
    
    	[DataMember]
    	public string TextData40
    	{ 
    		get { return _textData40; }
    		set
    		{
    			if (_textData40 != value )
    			{
    				_textData40 = value;
    				OnPropertyChanged(() => TextData40);
    			}
    		}
    	}
    	
    	private string _textData41;
    
    	[DataMember]
    	public string TextData41
    	{ 
    		get { return _textData41; }
    		set
    		{
    			if (_textData41 != value )
    			{
    				_textData41 = value;
    				OnPropertyChanged(() => TextData41);
    			}
    		}
    	}
    	
    	private string _textData42;
    
    	[DataMember]
    	public string TextData42
    	{ 
    		get { return _textData42; }
    		set
    		{
    			if (_textData42 != value )
    			{
    				_textData42 = value;
    				OnPropertyChanged(() => TextData42);
    			}
    		}
    	}
    	
    	private string _textData43;
    
    	[DataMember]
    	public string TextData43
    	{ 
    		get { return _textData43; }
    		set
    		{
    			if (_textData43 != value )
    			{
    				_textData43 = value;
    				OnPropertyChanged(() => TextData43);
    			}
    		}
    	}
    	
    	private string _textData44;
    
    	[DataMember]
    	public string TextData44
    	{ 
    		get { return _textData44; }
    		set
    		{
    			if (_textData44 != value )
    			{
    				_textData44 = value;
    				OnPropertyChanged(() => TextData44);
    			}
    		}
    	}
    	
    	private string _textData45;
    
    	[DataMember]
    	public string TextData45
    	{ 
    		get { return _textData45; }
    		set
    		{
    			if (_textData45 != value )
    			{
    				_textData45 = value;
    				OnPropertyChanged(() => TextData45);
    			}
    		}
    	}
    	
    	private string _textData46;
    
    	[DataMember]
    	public string TextData46
    	{ 
    		get { return _textData46; }
    		set
    		{
    			if (_textData46 != value )
    			{
    				_textData46 = value;
    				OnPropertyChanged(() => TextData46);
    			}
    		}
    	}
    	
    	private string _textData47;
    
    	[DataMember]
    	public string TextData47
    	{ 
    		get { return _textData47; }
    		set
    		{
    			if (_textData47 != value )
    			{
    				_textData47 = value;
    				OnPropertyChanged(() => TextData47);
    			}
    		}
    	}
    	
    	private string _textData48;
    
    	[DataMember]
    	public string TextData48
    	{ 
    		get { return _textData48; }
    		set
    		{
    			if (_textData48 != value )
    			{
    				_textData48 = value;
    				OnPropertyChanged(() => TextData48);
    			}
    		}
    	}
    	
    	private string _textData49;
    
    	[DataMember]
    	public string TextData49
    	{ 
    		get { return _textData49; }
    		set
    		{
    			if (_textData49 != value )
    			{
    				_textData49 = value;
    				OnPropertyChanged(() => TextData49);
    			}
    		}
    	}
    	
    	private string _textData50;
    
    	[DataMember]
    	public string TextData50
    	{ 
    		get { return _textData50; }
    		set
    		{
    			if (_textData50 != value )
    			{
    				_textData50 = value;
    				OnPropertyChanged(() => TextData50);
    			}
    		}
    	}
    	
    	private Nullable<int> _sysGalEmployeeId;
    
    	[DataMember]
    	public Nullable<int> SysGalEmployeeId
    	{ 
    		get { return _sysGalEmployeeId; }
    		set
    		{
    			if (_sysGalEmployeeId != value )
    			{
    				_sysGalEmployeeId = value;
    				OnPropertyChanged(() => SysGalEmployeeId);
    			}
    		}
    	}
    	
    	private bool _veryImportantPerson;
    
    	[DataMember]
    	public bool VeryImportantPerson
    	{ 
    		get { return _veryImportantPerson; }
    		set
    		{
    			if (_veryImportantPerson != value )
    			{
    				_veryImportantPerson = value;
    				OnPropertyChanged(() => VeryImportantPerson);
    			}
    		}
    	}
    	
    	private bool _hasPhysicalDisability;
    
    	[DataMember]
    	public bool HasPhysicalDisability
    	{ 
    		get { return _hasPhysicalDisability; }
    		set
    		{
    			if (_hasPhysicalDisability != value )
    			{
    				_hasPhysicalDisability = value;
    				OnPropertyChanged(() => HasPhysicalDisability);
    			}
    		}
    	}
    	
    	private bool _hasVertigo;
    
    	[DataMember]
    	public bool HasVertigo
    	{ 
    		get { return _hasVertigo; }
    		set
    		{
    			if (_hasVertigo != value )
    			{
    				_hasVertigo = value;
    				OnPropertyChanged(() => HasVertigo);
    			}
    		}
    	}
    	
    	private string _insertName;
    
    	[DataMember]
    	public string InsertName
    	{ 
    		get { return _insertName; }
    		set
    		{
    			if (_insertName != value )
    			{
    				_insertName = value;
    				OnPropertyChanged(() => InsertName);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _insertDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> InsertDate
    	{ 
    		get { return _insertDate; }
    		set
    		{
    			if (_insertDate != value )
    			{
    				_insertDate = value;
    				OnPropertyChanged(() => InsertDate);
    			}
    		}
    	}
    	
    	private string _updateName;
    
    	[DataMember]
    	public string UpdateName
    	{ 
    		get { return _updateName; }
    		set
    		{
    			if (_updateName != value )
    			{
    				_updateName = value;
    				OnPropertyChanged(() => UpdateName);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _updateDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> UpdateDate
    	{ 
    		get { return _updateDate; }
    		set
    		{
    			if (_updateDate != value )
    			{
    				_updateDate = value;
    				OnPropertyChanged(() => UpdateDate);
    			}
    		}
    	}
    	
    	private Nullable<short> _concurrencyValue;
    
    	[DataMember]
    	public Nullable<short> ConcurrencyValue
    	{ 
    		get { return _concurrencyValue; }
    		set
    		{
    			if (_concurrencyValue != value )
    			{
    				_concurrencyValue = value;
    				OnPropertyChanged(() => ConcurrencyValue);
    			}
    		}
    	}
    	
    	private string _activityEventText;
    
    	[DataMember]
    	public string ActivityEventText
    	{ 
    		get { return _activityEventText; }
    		set
    		{
    			if (_activityEventText != value )
    			{
    				_activityEventText = value;
    				OnPropertyChanged(() => ActivityEventText);
    			}
    		}
    	}
    	
    	private Nullable<short> _activeStatusCode;
    
    	[DataMember]
    	public Nullable<short> ActiveStatusCode
    	{ 
    		get { return _activeStatusCode; }
    		set
    		{
    			if (_activeStatusCode != value )
    			{
    				_activeStatusCode = value;
    				OnPropertyChanged(() => ActiveStatusCode);
    			}
    		}
    	}
    
    	
    	private gcsEntity _gcsEntity;
    
    	[DataMember]
    	public virtual gcsEntity gcsEntity
    	{ 
    		get { return _gcsEntity; }
    		set
    		{
    			if (_gcsEntity != value )
    			{
    				_gcsEntity = value;
    				OnPropertyChanged(() => gcsEntity);
    			}
    		}
    	}
    	
    	private ICollection<PersonAccessProfile> _personAccessProfiles;
    
    	[DataMember]
    	public virtual ICollection<PersonAccessProfile> PersonAccessProfiles
    	{ 
    		get { return _personAccessProfiles; }
    		set
    		{
    			if (_personAccessProfiles != value )
    			{
    				_personAccessProfiles = value;
    				OnPropertyChanged(() => PersonAccessProfiles);
    			}
    		}
    	}
    	
    	private PersonAccessControlProperty _personAccessControlProperty;
    
    	[DataMember]
    	public virtual PersonAccessControlProperty PersonAccessControlProperty
    	{ 
    		get { return _personAccessControlProperty; }
    		set
    		{
    			if (_personAccessControlProperty != value )
    			{
    				_personAccessControlProperty = value;
    				OnPropertyChanged(() => PersonAccessControlProperty);
    			}
    		}
    	}
    	
    	private ICollection<PersonAddress> _personAddresses;
    
    	[DataMember]
    	public virtual ICollection<PersonAddress> PersonAddresses
    	{ 
    		get { return _personAddresses; }
    		set
    		{
    			if (_personAddresses != value )
    			{
    				_personAddresses = value;
    				OnPropertyChanged(() => PersonAddresses);
    			}
    		}
    	}
    	
    	private ICollection<PersonEmailAddress> _personEmailAddresses;
    
    	[DataMember]
    	public virtual ICollection<PersonEmailAddress> PersonEmailAddresses
    	{ 
    		get { return _personEmailAddresses; }
    		set
    		{
    			if (_personEmailAddresses != value )
    			{
    				_personEmailAddresses = value;
    				OnPropertyChanged(() => PersonEmailAddresses);
    			}
    		}
    	}
    	
    	private ICollection<PersonLcdMessage> _personLcdMessages;
    
    	[DataMember]
    	public virtual ICollection<PersonLcdMessage> PersonLcdMessages
    	{ 
    		get { return _personLcdMessages; }
    		set
    		{
    			if (_personLcdMessages != value )
    			{
    				_personLcdMessages = value;
    				OnPropertyChanged(() => PersonLcdMessages);
    			}
    		}
    	}
    	
    	private ICollection<PersonNote> _personNotes;
    
    	[DataMember]
    	public virtual ICollection<PersonNote> PersonNotes
    	{ 
    		get { return _personNotes; }
    		set
    		{
    			if (_personNotes != value )
    			{
    				_personNotes = value;
    				OnPropertyChanged(() => PersonNotes);
    			}
    		}
    	}
    	
    	private PersonOtisElevator _personOtisElevator;
    
    	[DataMember]
    	public virtual PersonOtisElevator PersonOtisElevator
    	{ 
    		get { return _personOtisElevator; }
    		set
    		{
    			if (_personOtisElevator != value )
    			{
    				_personOtisElevator = value;
    				OnPropertyChanged(() => PersonOtisElevator);
    			}
    		}
    	}
    	
    	private ICollection<PersonPhoneNumber> _personPhoneNumbers;
    
    	[DataMember]
    	public virtual ICollection<PersonPhoneNumber> PersonPhoneNumbers
    	{ 
    		get { return _personPhoneNumbers; }
    		set
    		{
    			if (_personPhoneNumbers != value )
    			{
    				_personPhoneNumbers = value;
    				OnPropertyChanged(() => PersonPhoneNumbers);
    			}
    		}
    	}
    	
    	private ICollection<PersonPhoto> _personPhotoes;
    
    	[DataMember]
    	public virtual ICollection<PersonPhoto> PersonPhotoes
    	{ 
    		get { return _personPhotoes; }
    		set
    		{
    			if (_personPhotoes != value )
    			{
    				_personPhotoes = value;
    				OnPropertyChanged(() => PersonPhotoes);
    			}
    		}
    	}
    	
    	private ICollection<PersonPropertyBag> _personPropertyBags;
    
    	[DataMember]
    	public virtual ICollection<PersonPropertyBag> PersonPropertyBags
    	{ 
    		get { return _personPropertyBags; }
    		set
    		{
    			if (_personPropertyBags != value )
    			{
    				_personPropertyBags = value;
    				OnPropertyChanged(() => PersonPropertyBags);
    			}
    		}
    	}
    	
    	private PersonLastUsage _personLastUsage;
    
    	[DataMember]
    	public virtual PersonLastUsage PersonLastUsage
    	{ 
    		get { return _personLastUsage; }
    		set
    		{
    			if (_personLastUsage != value )
    			{
    				_personLastUsage = value;
    				OnPropertyChanged(() => PersonLastUsage);
    			}
    		}
    	}
    }
    
}
