//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    
	[DataContract]
	public partial class gcsAudit : DbObjectBase, ITableEntityBase
    {
    
    /*	// Move to partial class
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    using System.Collections.ObjectModel;
    using GCS.Core.Common.Extensions;
    
    namespace GalaxySMS.Client.Entities
    {
        public partial class gcsAudit
        {
        	public gcsAudit() : base()
        	{
        		Initialize();
        	}
        
        	public gcsAudit(gcsAudit e) : base(e)
        	{
        		Initialize(e);
        	}
        
        	public void Initialize()
        	{
        		base.Initialize();
        }
        
        	public void Initialize(gcsAudit e)
        	{
        		Initialize();
        		base.Initialize(e);
        
        		if( e == null )
        			return;
        		this.AuditId = e.AuditId;
        		this.TransactionId = e.TransactionId;
        		this.TableName = e.TableName;
        		this.OperationType = e.OperationType;
        		this.PrimaryKeyColumn = e.PrimaryKeyColumn;
        		this.PrimaryKeyValue = e.PrimaryKeyValue;
        		this.RecordTag = e.RecordTag;
        		this.AuditXml = e.AuditXml;
        		this.ColumnName = e.ColumnName;
        		this.OriginalValue = e.OriginalValue;
        		this.NewValue = e.NewValue;
        		this.OriginalBinaryValue = e.OriginalBinaryValue;
        		this.NewBinaryValue = e.NewBinaryValue;
        		this.InsertName = e.InsertName;
        		this.InsertDate = e.InsertDate;
        		this.UserId = e.UserId;
        		
        	}
        
        	public gcsAudit Clone(gcsAudit e)
        	{
        		return new gcsAudit(e);
        	}
        
        	public bool Equals(gcsAudit other)
        	{
        		return base.Equals(other);
        	}
        	
        	public bool IsPrimaryKeyEqual(gcsAudit other)
        	{
        		if( other == null ) 
        			return false;
        
        		if(other.AuditId != this.AuditId )
        			return false;
        		return true;
        	}
        
        	public override int GetHashCode()
        	{
        		return base.GetHashCode();
        	}
        
        	public override string ToString()
        	{
        		return base.ToString();
        	}
        }
    }
    */
    
    	
    	private System.Guid _auditId;
    
    	[DataMember]
    	public System.Guid AuditId
    	{ 
    		get { return _auditId; }
    		set
    		{
    			if (_auditId != value )
    			{
    				_auditId = value;
    				OnPropertyChanged(() => AuditId);
    			}
    		}
    	}
    	
    	private System.Guid _transactionId;
    
    	[DataMember]
    	public System.Guid TransactionId
    	{ 
    		get { return _transactionId; }
    		set
    		{
    			if (_transactionId != value )
    			{
    				_transactionId = value;
    				OnPropertyChanged(() => TransactionId);
    			}
    		}
    	}
    	
    	private string _tableName;
    
    	[DataMember]
    	public string TableName
    	{ 
    		get { return _tableName; }
    		set
    		{
    			if (_tableName != value )
    			{
    				_tableName = value;
    				OnPropertyChanged(() => TableName);
    			}
    		}
    	}
    	
    	private string _operationType;
    
    	[DataMember]
    	public string OperationType
    	{ 
    		get { return _operationType; }
    		set
    		{
    			if (_operationType != value )
    			{
    				_operationType = value;
    				OnPropertyChanged(() => OperationType);
    			}
    		}
    	}
    	
    	private string _primaryKeyColumn;
    
    	[DataMember]
    	public string PrimaryKeyColumn
    	{ 
    		get { return _primaryKeyColumn; }
    		set
    		{
    			if (_primaryKeyColumn != value )
    			{
    				_primaryKeyColumn = value;
    				OnPropertyChanged(() => PrimaryKeyColumn);
    			}
    		}
    	}
    	
    	private System.Guid _primaryKeyValue;
    
    	[DataMember]
    	public System.Guid PrimaryKeyValue
    	{ 
    		get { return _primaryKeyValue; }
    		set
    		{
    			if (_primaryKeyValue != value )
    			{
    				_primaryKeyValue = value;
    				OnPropertyChanged(() => PrimaryKeyValue);
    			}
    		}
    	}
    	
    	private string _recordTag;
    
    	[DataMember]
    	public string RecordTag
    	{ 
    		get { return _recordTag; }
    		set
    		{
    			if (_recordTag != value )
    			{
    				_recordTag = value;
    				OnPropertyChanged(() => RecordTag);
    			}
    		}
    	}
    	
    	private string _auditXml;
    
    	[DataMember]
    	public string AuditXml
    	{ 
    		get { return _auditXml; }
    		set
    		{
    			if (_auditXml != value )
    			{
    				_auditXml = value;
    				OnPropertyChanged(() => AuditXml);
    			}
    		}
    	}
    	
    	private string _columnName;
    
    	[DataMember]
    	public string ColumnName
    	{ 
    		get { return _columnName; }
    		set
    		{
    			if (_columnName != value )
    			{
    				_columnName = value;
    				OnPropertyChanged(() => ColumnName);
    			}
    		}
    	}
    	
    	private string _originalValue;
    
    	[DataMember]
    	public string OriginalValue
    	{ 
    		get { return _originalValue; }
    		set
    		{
    			if (_originalValue != value )
    			{
    				_originalValue = value;
    				OnPropertyChanged(() => OriginalValue);
    			}
    		}
    	}
    	
    	private string _newValue;
    
    	[DataMember]
    	public string NewValue
    	{ 
    		get { return _newValue; }
    		set
    		{
    			if (_newValue != value )
    			{
    				_newValue = value;
    				OnPropertyChanged(() => NewValue);
    			}
    		}
    	}
    	
    	private byte[] _originalBinaryValue;
    
    	[DataMember]
    	public byte[] OriginalBinaryValue
    	{ 
    		get { return _originalBinaryValue; }
    		set
    		{
    			if (_originalBinaryValue != value )
    			{
    				_originalBinaryValue = value;
    				OnPropertyChanged(() => OriginalBinaryValue);
    			}
    		}
    	}
    	
    	private byte[] _newBinaryValue;
    
    	[DataMember]
    	public byte[] NewBinaryValue
    	{ 
    		get { return _newBinaryValue; }
    		set
    		{
    			if (_newBinaryValue != value )
    			{
    				_newBinaryValue = value;
    				OnPropertyChanged(() => NewBinaryValue);
    			}
    		}
    	}
    	
    	private string _insertName;
    
    	[DataMember]
    	public string InsertName
    	{ 
    		get { return _insertName; }
    		set
    		{
    			if (_insertName != value )
    			{
    				_insertName = value;
    				OnPropertyChanged(() => InsertName);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _insertDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> InsertDate
    	{ 
    		get { return _insertDate; }
    		set
    		{
    			if (_insertDate != value )
    			{
    				_insertDate = value;
    				OnPropertyChanged(() => InsertDate);
    			}
    		}
    	}
    	
    	private Nullable<System.Guid> _userId;
    
    	[DataMember]
    	public Nullable<System.Guid> UserId
    	{ 
    		get { return _userId; }
    		set
    		{
    			if (_userId != value )
    			{
    				_userId = value;
    				OnPropertyChanged(() => UserId);
    			}
    		}
    	}
    }
    
}
