//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    
	[DataContract]
	public partial class MercScp : DbObjectBase, ITableEntityBase
    {
    
    /*	// Move to partial class
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    using System.Collections.ObjectModel;
    using GCS.Core.Common.Extensions;
    
    namespace GalaxySMS.Client.Entities
    {
        public partial class MercScp
        {
        	public MercScp() : base()
        	{
        		Initialize();
        	}
        
        	public MercScp(MercScp e) : base(e)
        	{
        		Initialize(e);
        	}
        
        	public void Initialize()
        	{
        		base.Initialize();
        }
        
        	public void Initialize(MercScp e)
        	{
        		Initialize();
        		base.Initialize(e);
        
        		if( e == null )
        			return;
        		this.MercScpUid = e.MercScpUid;
        		this.MercScpTypeUid = e.MercScpTypeUid;
        		this.MercScpGroupUid = e.MercScpGroupUid;
        		this.ScpNumber = e.ScpNumber;
        		this.SpcName = e.SpcName;
        		this.Location = e.Location;
        		this.Description = e.Description;
        		this.MacAddress = e.MacAddress;
        		this.SerialNumber = e.SerialNumber;
        		this.ConnectionType = e.ConnectionType;
        		this.IpAddress = e.IpAddress;
        		this.IpPort = e.IpPort;
        		this.AesPassword = e.AesPassword;
        		this.ScpReplyTimeout = e.ScpReplyTimeout;
        		this.TcpConnectRetryInterval = e.TcpConnectRetryInterval;
        		this.RetryCountBeforeOffline = e.RetryCountBeforeOffline;
        		this.OfflineTime = e.OfflineTime;
        		this.PollDelay = e.PollDelay;
        		this.TimeZoneId = e.TimeZoneId;
        		this.UseDaylightSavingsTime = e.UseDaylightSavingsTime;
        		this.TransactionCount = e.TransactionCount;
        		this.TransactionUnreportedLimit = e.TransactionUnreportedLimit;
        		this.DualPortEnabled = e.DualPortEnabled;
        		this.ConnectionTypeAlt = e.ConnectionTypeAlt;
        		this.RetryCountBeforeOfflineAlt = e.RetryCountBeforeOfflineAlt;
        		this.PollDelayAlt = e.PollDelayAlt;
        		this.IpAddressAlt = e.IpAddressAlt;
        		this.IpPortAlt = e.IpPortAlt;
        		this.AllowConnection = e.AllowConnection;
        		this.InsertName = e.InsertName;
        		this.InsertDate = e.InsertDate;
        		this.UpdateName = e.UpdateName;
        		this.UpdateDate = e.UpdateDate;
        		this.ConcurrencyValue = e.ConcurrencyValue;
        		this.ScpName = e.ScpName;
        		this.Description1 = e.Description1;
        		this.AllowConnection1 = e.AllowConnection1;
        		this.EntityId = e.EntityId;
        		this.SiteUid = e.SiteUid;
        		this.Serialnumber = e.Serialnumber;
        		
        	}
        
        	public MercScp Clone(MercScp e)
        	{
        		return new MercScp(e);
        	}
        
        	public bool Equals(MercScp other)
        	{
        		return base.Equals(other);
        	}
        	
        	public bool IsPrimaryKeyEqual(MercScp other)
        	{
        		if( other == null ) 
        			return false;
        
        		if(other.MercScpUid != this.MercScpUid )
        			return false;
        		return true;
        	}
        
        	public override int GetHashCode()
        	{
        		return base.GetHashCode();
        	}
        
        	public override string ToString()
        	{
        		return base.ToString();
        	}
        }
    }
    */
    
    	
    	private System.Guid _mercScpUid;
    
    	[DataMember]
    	public System.Guid MercScpUid
    	{ 
    		get { return _mercScpUid; }
    		set
    		{
    			if (_mercScpUid != value )
    			{
    				_mercScpUid = value;
    				OnPropertyChanged(() => MercScpUid);
    			}
    		}
    	}
    	
    	private System.Guid _mercScpTypeUid;
    
    	[DataMember]
    	public System.Guid MercScpTypeUid
    	{ 
    		get { return _mercScpTypeUid; }
    		set
    		{
    			if (_mercScpTypeUid != value )
    			{
    				_mercScpTypeUid = value;
    				OnPropertyChanged(() => MercScpTypeUid);
    			}
    		}
    	}
    	
    	private System.Guid _mercScpGroupUid;
    
    	[DataMember]
    	public System.Guid MercScpGroupUid
    	{ 
    		get { return _mercScpGroupUid; }
    		set
    		{
    			if (_mercScpGroupUid != value )
    			{
    				_mercScpGroupUid = value;
    				OnPropertyChanged(() => MercScpGroupUid);
    			}
    		}
    	}
    	
    	private int _scpNumber;
    
    	[DataMember]
    	public int ScpNumber
    	{ 
    		get { return _scpNumber; }
    		set
    		{
    			if (_scpNumber != value )
    			{
    				_scpNumber = value;
    				OnPropertyChanged(() => ScpNumber);
    			}
    		}
    	}
    	
    	private string _spcName;
    
    	[DataMember]
    	public string SpcName
    	{ 
    		get { return _spcName; }
    		set
    		{
    			if (_spcName != value )
    			{
    				_spcName = value;
    				OnPropertyChanged(() => SpcName);
    			}
    		}
    	}
    	
    	private string _location;
    
    	[DataMember]
    	public string Location
    	{ 
    		get { return _location; }
    		set
    		{
    			if (_location != value )
    			{
    				_location = value;
    				OnPropertyChanged(() => Location);
    			}
    		}
    	}
    	
    	private string _description;
    
    	[DataMember]
    	public string Description
    	{ 
    		get { return _description; }
    		set
    		{
    			if (_description != value )
    			{
    				_description = value;
    				OnPropertyChanged(() => Description);
    			}
    		}
    	}
    	
    	private string _macAddress;
    
    	[DataMember]
    	public string MacAddress
    	{ 
    		get { return _macAddress; }
    		set
    		{
    			if (_macAddress != value )
    			{
    				_macAddress = value;
    				OnPropertyChanged(() => MacAddress);
    			}
    		}
    	}
    	
    	private string _serialNumber;
    
    	[DataMember]
    	public string SerialNumber
    	{ 
    		get { return _serialNumber; }
    		set
    		{
    			if (_serialNumber != value )
    			{
    				_serialNumber = value;
    				OnPropertyChanged(() => SerialNumber);
    			}
    		}
    	}
    	
    	private int _connectionType;
    
    	[DataMember]
    	public int ConnectionType
    	{ 
    		get { return _connectionType; }
    		set
    		{
    			if (_connectionType != value )
    			{
    				_connectionType = value;
    				OnPropertyChanged(() => ConnectionType);
    			}
    		}
    	}
    	
    	private string _ipAddress;
    
    	[DataMember]
    	public string IpAddress
    	{ 
    		get { return _ipAddress; }
    		set
    		{
    			if (_ipAddress != value )
    			{
    				_ipAddress = value;
    				OnPropertyChanged(() => IpAddress);
    			}
    		}
    	}
    	
    	private int _ipPort;
    
    	[DataMember]
    	public int IpPort
    	{ 
    		get { return _ipPort; }
    		set
    		{
    			if (_ipPort != value )
    			{
    				_ipPort = value;
    				OnPropertyChanged(() => IpPort);
    			}
    		}
    	}
    	
    	private string _aesPassword;
    
    	[DataMember]
    	public string AesPassword
    	{ 
    		get { return _aesPassword; }
    		set
    		{
    			if (_aesPassword != value )
    			{
    				_aesPassword = value;
    				OnPropertyChanged(() => AesPassword);
    			}
    		}
    	}
    	
    	private int _scpReplyTimeout;
    
    	[DataMember]
    	public int ScpReplyTimeout
    	{ 
    		get { return _scpReplyTimeout; }
    		set
    		{
    			if (_scpReplyTimeout != value )
    			{
    				_scpReplyTimeout = value;
    				OnPropertyChanged(() => ScpReplyTimeout);
    			}
    		}
    	}
    	
    	private int _tcpConnectRetryInterval;
    
    	[DataMember]
    	public int TcpConnectRetryInterval
    	{ 
    		get { return _tcpConnectRetryInterval; }
    		set
    		{
    			if (_tcpConnectRetryInterval != value )
    			{
    				_tcpConnectRetryInterval = value;
    				OnPropertyChanged(() => TcpConnectRetryInterval);
    			}
    		}
    	}
    	
    	private int _retryCountBeforeOffline;
    
    	[DataMember]
    	public int RetryCountBeforeOffline
    	{ 
    		get { return _retryCountBeforeOffline; }
    		set
    		{
    			if (_retryCountBeforeOffline != value )
    			{
    				_retryCountBeforeOffline = value;
    				OnPropertyChanged(() => RetryCountBeforeOffline);
    			}
    		}
    	}
    	
    	private int _offlineTime;
    
    	[DataMember]
    	public int OfflineTime
    	{ 
    		get { return _offlineTime; }
    		set
    		{
    			if (_offlineTime != value )
    			{
    				_offlineTime = value;
    				OnPropertyChanged(() => OfflineTime);
    			}
    		}
    	}
    	
    	private int _pollDelay;
    
    	[DataMember]
    	public int PollDelay
    	{ 
    		get { return _pollDelay; }
    		set
    		{
    			if (_pollDelay != value )
    			{
    				_pollDelay = value;
    				OnPropertyChanged(() => PollDelay);
    			}
    		}
    	}
    	
    	private string _timeZoneId;
    
    	[DataMember]
    	public string TimeZoneId
    	{ 
    		get { return _timeZoneId; }
    		set
    		{
    			if (_timeZoneId != value )
    			{
    				_timeZoneId = value;
    				OnPropertyChanged(() => TimeZoneId);
    			}
    		}
    	}
    	
    	private bool _useDaylightSavingsTime;
    
    	[DataMember]
    	public bool UseDaylightSavingsTime
    	{ 
    		get { return _useDaylightSavingsTime; }
    		set
    		{
    			if (_useDaylightSavingsTime != value )
    			{
    				_useDaylightSavingsTime = value;
    				OnPropertyChanged(() => UseDaylightSavingsTime);
    			}
    		}
    	}
    	
    	private int _transactionCount;
    
    	[DataMember]
    	public int TransactionCount
    	{ 
    		get { return _transactionCount; }
    		set
    		{
    			if (_transactionCount != value )
    			{
    				_transactionCount = value;
    				OnPropertyChanged(() => TransactionCount);
    			}
    		}
    	}
    	
    	private int _transactionUnreportedLimit;
    
    	[DataMember]
    	public int TransactionUnreportedLimit
    	{ 
    		get { return _transactionUnreportedLimit; }
    		set
    		{
    			if (_transactionUnreportedLimit != value )
    			{
    				_transactionUnreportedLimit = value;
    				OnPropertyChanged(() => TransactionUnreportedLimit);
    			}
    		}
    	}
    	
    	private bool _dualPortEnabled;
    
    	[DataMember]
    	public bool DualPortEnabled
    	{ 
    		get { return _dualPortEnabled; }
    		set
    		{
    			if (_dualPortEnabled != value )
    			{
    				_dualPortEnabled = value;
    				OnPropertyChanged(() => DualPortEnabled);
    			}
    		}
    	}
    	
    	private int _connectionTypeAlt;
    
    	[DataMember]
    	public int ConnectionTypeAlt
    	{ 
    		get { return _connectionTypeAlt; }
    		set
    		{
    			if (_connectionTypeAlt != value )
    			{
    				_connectionTypeAlt = value;
    				OnPropertyChanged(() => ConnectionTypeAlt);
    			}
    		}
    	}
    	
    	private int _retryCountBeforeOfflineAlt;
    
    	[DataMember]
    	public int RetryCountBeforeOfflineAlt
    	{ 
    		get { return _retryCountBeforeOfflineAlt; }
    		set
    		{
    			if (_retryCountBeforeOfflineAlt != value )
    			{
    				_retryCountBeforeOfflineAlt = value;
    				OnPropertyChanged(() => RetryCountBeforeOfflineAlt);
    			}
    		}
    	}
    	
    	private int _pollDelayAlt;
    
    	[DataMember]
    	public int PollDelayAlt
    	{ 
    		get { return _pollDelayAlt; }
    		set
    		{
    			if (_pollDelayAlt != value )
    			{
    				_pollDelayAlt = value;
    				OnPropertyChanged(() => PollDelayAlt);
    			}
    		}
    	}
    	
    	private string _ipAddressAlt;
    
    	[DataMember]
    	public string IpAddressAlt
    	{ 
    		get { return _ipAddressAlt; }
    		set
    		{
    			if (_ipAddressAlt != value )
    			{
    				_ipAddressAlt = value;
    				OnPropertyChanged(() => IpAddressAlt);
    			}
    		}
    	}
    	
    	private int _ipPortAlt;
    
    	[DataMember]
    	public int IpPortAlt
    	{ 
    		get { return _ipPortAlt; }
    		set
    		{
    			if (_ipPortAlt != value )
    			{
    				_ipPortAlt = value;
    				OnPropertyChanged(() => IpPortAlt);
    			}
    		}
    	}
    	
    	private bool _allowConnection;
    
    	[DataMember]
    	public bool AllowConnection
    	{ 
    		get { return _allowConnection; }
    		set
    		{
    			if (_allowConnection != value )
    			{
    				_allowConnection = value;
    				OnPropertyChanged(() => AllowConnection);
    			}
    		}
    	}
    	
    	private string _insertName;
    
    	[DataMember]
    	public string InsertName
    	{ 
    		get { return _insertName; }
    		set
    		{
    			if (_insertName != value )
    			{
    				_insertName = value;
    				OnPropertyChanged(() => InsertName);
    			}
    		}
    	}
    	
    	private System.DateTimeOffset _insertDate;
    
    	[DataMember]
    	public System.DateTimeOffset InsertDate
    	{ 
    		get { return _insertDate; }
    		set
    		{
    			if (_insertDate != value )
    			{
    				_insertDate = value;
    				OnPropertyChanged(() => InsertDate);
    			}
    		}
    	}
    	
    	private string _updateName;
    
    	[DataMember]
    	public string UpdateName
    	{ 
    		get { return _updateName; }
    		set
    		{
    			if (_updateName != value )
    			{
    				_updateName = value;
    				OnPropertyChanged(() => UpdateName);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTimeOffset> _updateDate;
    
    	[DataMember]
    	public Nullable<System.DateTimeOffset> UpdateDate
    	{ 
    		get { return _updateDate; }
    		set
    		{
    			if (_updateDate != value )
    			{
    				_updateDate = value;
    				OnPropertyChanged(() => UpdateDate);
    			}
    		}
    	}
    	
    	private Nullable<short> _concurrencyValue;
    
    	[DataMember]
    	public Nullable<short> ConcurrencyValue
    	{ 
    		get { return _concurrencyValue; }
    		set
    		{
    			if (_concurrencyValue != value )
    			{
    				_concurrencyValue = value;
    				OnPropertyChanged(() => ConcurrencyValue);
    			}
    		}
    	}
    	
    	private string _scpName;
    
    	[DataMember]
    	public string ScpName
    	{ 
    		get { return _scpName; }
    		set
    		{
    			if (_scpName != value )
    			{
    				_scpName = value;
    				OnPropertyChanged(() => ScpName);
    			}
    		}
    	}
    	
    	private string _description1;
    
    	[DataMember]
    	public string Description1
    	{ 
    		get { return _description1; }
    		set
    		{
    			if (_description1 != value )
    			{
    				_description1 = value;
    				OnPropertyChanged(() => Description1);
    			}
    		}
    	}
    	
    	private bool _allowConnection1;
    
    	[DataMember]
    	public bool AllowConnection1
    	{ 
    		get { return _allowConnection1; }
    		set
    		{
    			if (_allowConnection1 != value )
    			{
    				_allowConnection1 = value;
    				OnPropertyChanged(() => AllowConnection1);
    			}
    		}
    	}
    	
    	private Nullable<System.Guid> _entityId;
    
    	[DataMember]
    	public Nullable<System.Guid> EntityId
    	{ 
    		get { return _entityId; }
    		set
    		{
    			if (_entityId != value )
    			{
    				_entityId = value;
    				OnPropertyChanged(() => EntityId);
    			}
    		}
    	}
    	
    	private Nullable<System.Guid> _siteUid;
    
    	[DataMember]
    	public Nullable<System.Guid> SiteUid
    	{ 
    		get { return _siteUid; }
    		set
    		{
    			if (_siteUid != value )
    			{
    				_siteUid = value;
    				OnPropertyChanged(() => SiteUid);
    			}
    		}
    	}
    	
    	private long _serialnumber;
    
    	[DataMember]
    	public long Serialnumber
    	{ 
    		get { return _serialnumber; }
    		set
    		{
    			if (_serialnumber != value )
    			{
    				_serialnumber = value;
    				OnPropertyChanged(() => Serialnumber);
    			}
    		}
    	}
    
    	
    	private MercScpGroup _mercScpGroup;
    
    	[DataMember]
    	public virtual MercScpGroup MercScpGroup
    	{ 
    		get { return _mercScpGroup; }
    		set
    		{
    			if (_mercScpGroup != value )
    			{
    				_mercScpGroup = value;
    				OnPropertyChanged(() => MercScpGroup);
    			}
    		}
    	}
    	
    	private MercScpStatu _mercScpStatu;
    
    	[DataMember]
    	public virtual MercScpStatu MercScpStatu
    	{ 
    		get { return _mercScpStatu; }
    		set
    		{
    			if (_mercScpStatu != value )
    			{
    				_mercScpStatu = value;
    				OnPropertyChanged(() => MercScpStatu);
    			}
    		}
    	}
    }
    
}
