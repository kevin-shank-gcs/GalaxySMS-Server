//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    
	[DataContract]
	public partial class InputOutputGroupAssignment : DbObjectBase, ITableEntityBase
    {
    
    /*	// Move to partial class
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    using System.Collections.ObjectModel;
    using GCS.Core.Common.Extensions;
    
    namespace GalaxySMS.Client.Entities
    {
        public partial class InputOutputGroupAssignment
        {
        	public InputOutputGroupAssignment() : base()
        	{
        		Initialize();
        	}
        
        	public InputOutputGroupAssignment(InputOutputGroupAssignment e) : base(e)
        	{
        		Initialize(e);
        	}
        
        	public void Initialize()
        	{
        		base.Initialize();
        }
        
        	public void Initialize(InputOutputGroupAssignment e)
        	{
        		Initialize();
        		base.Initialize(e);
        
        		if( e == null )
        			return;
        		this.InputOutputGroupAssignmentUid = e.InputOutputGroupAssignmentUid;
        		this.GalaxyInterfaceBoardSectionNodeUid = e.GalaxyInterfaceBoardSectionNodeUid;
        		this.InputOutputGroupUid = e.InputOutputGroupUid;
        		this.OffsetIndex = e.OffsetIndex;
        		this.Tag = e.Tag;
        		this.InsertName = e.InsertName;
        		this.InsertDate = e.InsertDate;
        		this.UpdateName = e.UpdateName;
        		this.UpdateDate = e.UpdateDate;
        		this.ConcurrencyValue = e.ConcurrencyValue;
        		
        	}
        
        	public InputOutputGroupAssignment Clone(InputOutputGroupAssignment e)
        	{
        		return new InputOutputGroupAssignment(e);
        	}
        
        	public bool Equals(InputOutputGroupAssignment other)
        	{
        		return base.Equals(other);
        	}
        	
        	public bool IsPrimaryKeyEqual(InputOutputGroupAssignment other)
        	{
        		if( other == null ) 
        			return false;
        
        		if(other.InputOutputGroupAssignmentUid != this.InputOutputGroupAssignmentUid )
        			return false;
        		return true;
        	}
        
        	public override int GetHashCode()
        	{
        		return base.GetHashCode();
        	}
        
        	public override string ToString()
        	{
        		return base.ToString();
        	}
        }
    }
    */
    
    	
    	private System.Guid _inputOutputGroupAssignmentUid;
    
    	[DataMember]
    	public System.Guid InputOutputGroupAssignmentUid
    	{ 
    		get { return _inputOutputGroupAssignmentUid; }
    		set
    		{
    			if (_inputOutputGroupAssignmentUid != value )
    			{
    				_inputOutputGroupAssignmentUid = value;
    				OnPropertyChanged(() => InputOutputGroupAssignmentUid);
    			}
    		}
    	}
    	
    	private System.Guid _galaxyInterfaceBoardSectionNodeUid;
    
    	[DataMember]
    	public System.Guid GalaxyInterfaceBoardSectionNodeUid
    	{ 
    		get { return _galaxyInterfaceBoardSectionNodeUid; }
    		set
    		{
    			if (_galaxyInterfaceBoardSectionNodeUid != value )
    			{
    				_galaxyInterfaceBoardSectionNodeUid = value;
    				OnPropertyChanged(() => GalaxyInterfaceBoardSectionNodeUid);
    			}
    		}
    	}
    	
    	private System.Guid _inputOutputGroupUid;
    
    	[DataMember]
    	public System.Guid InputOutputGroupUid
    	{ 
    		get { return _inputOutputGroupUid; }
    		set
    		{
    			if (_inputOutputGroupUid != value )
    			{
    				_inputOutputGroupUid = value;
    				OnPropertyChanged(() => InputOutputGroupUid);
    			}
    		}
    	}
    	
    	private short _offsetIndex;
    
    	[DataMember]
    	public short OffsetIndex
    	{ 
    		get { return _offsetIndex; }
    		set
    		{
    			if (_offsetIndex != value )
    			{
    				_offsetIndex = value;
    				OnPropertyChanged(() => OffsetIndex);
    			}
    		}
    	}
    	
    	private string _tag;
    
    	[DataMember]
    	public string Tag
    	{ 
    		get { return _tag; }
    		set
    		{
    			if (_tag != value )
    			{
    				_tag = value;
    				OnPropertyChanged(() => Tag);
    			}
    		}
    	}
    	
    	private string _insertName;
    
    	[DataMember]
    	public string InsertName
    	{ 
    		get { return _insertName; }
    		set
    		{
    			if (_insertName != value )
    			{
    				_insertName = value;
    				OnPropertyChanged(() => InsertName);
    			}
    		}
    	}
    	
    	private System.DateTime _insertDate;
    
    	[DataMember]
    	public System.DateTime InsertDate
    	{ 
    		get { return _insertDate; }
    		set
    		{
    			if (_insertDate != value )
    			{
    				_insertDate = value;
    				OnPropertyChanged(() => InsertDate);
    			}
    		}
    	}
    	
    	private string _updateName;
    
    	[DataMember]
    	public string UpdateName
    	{ 
    		get { return _updateName; }
    		set
    		{
    			if (_updateName != value )
    			{
    				_updateName = value;
    				OnPropertyChanged(() => UpdateName);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _updateDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> UpdateDate
    	{ 
    		get { return _updateDate; }
    		set
    		{
    			if (_updateDate != value )
    			{
    				_updateDate = value;
    				OnPropertyChanged(() => UpdateDate);
    			}
    		}
    	}
    	
    	private Nullable<short> _concurrencyValue;
    
    	[DataMember]
    	public Nullable<short> ConcurrencyValue
    	{ 
    		get { return _concurrencyValue; }
    		set
    		{
    			if (_concurrencyValue != value )
    			{
    				_concurrencyValue = value;
    				OnPropertyChanged(() => ConcurrencyValue);
    			}
    		}
    	}
    
    	
    	private GalaxyInterfaceBoardSectionNode _galaxyInterfaceBoardSectionNode;
    
    	[DataMember]
    	public virtual GalaxyInterfaceBoardSectionNode GalaxyInterfaceBoardSectionNode
    	{ 
    		get { return _galaxyInterfaceBoardSectionNode; }
    		set
    		{
    			if (_galaxyInterfaceBoardSectionNode != value )
    			{
    				_galaxyInterfaceBoardSectionNode = value;
    				OnPropertyChanged(() => GalaxyInterfaceBoardSectionNode);
    			}
    		}
    	}
    	
    	private InputOutputGroup _inputOutputGroup;
    
    	[DataMember]
    	public virtual InputOutputGroup InputOutputGroup
    	{ 
    		get { return _inputOutputGroup; }
    		set
    		{
    			if (_inputOutputGroup != value )
    			{
    				_inputOutputGroup = value;
    				OnPropertyChanged(() => InputOutputGroup);
    			}
    		}
    	}
    }
    
}
