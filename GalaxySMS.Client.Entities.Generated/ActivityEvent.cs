//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    
	[DataContract]
	public partial class ActivityEvent : DbObjectBase, ITableEntityBase
    {
    
    /*	// Move to partial class
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    using System.Collections.ObjectModel;
    using GCS.Core.Common.Extensions;
    
    namespace GalaxySMS.Client.Entities
    {
        public partial class ActivityEvent
        {
        	public ActivityEvent() : base()
        	{
        		Initialize();
        	}
        
        	public ActivityEvent(ActivityEvent e) : base(e)
        	{
        		Initialize(e);
        	}
        
        	public void Initialize()
        	{
        		base.Initialize();
        		this.ActivityEventAcknowledgements = new HashSet<ActivityEventAcknowledgement>();
        }
        
        	public void Initialize(ActivityEvent e)
        	{
        		Initialize();
        		base.Initialize(e);
        
        		if( e == null )
        			return;
        		this.ActivityEventUid = e.ActivityEventUid;
        		this.ActivityDateTime = e.ActivityDateTime;
        		this.ActivityDateTimeUTC = e.ActivityDateTimeUTC;
        		this.EventTypeMessage = e.EventTypeMessage;
        		this.ForeColor = e.ForeColor;
        		this.ForeColorHex = e.ForeColorHex;
        		this.DeviceName = e.DeviceName;
        		this.SiteName = e.SiteName;
        		this.EntityId = e.EntityId;
        		this.DeviceUid = e.DeviceUid;
        		this.EventTypeUid = e.EventTypeUid;
        		this.DeviceType = e.DeviceType;
        		this.LastName = e.LastName;
        		this.FirstName = e.FirstName;
        		this.IsTraced = e.IsTraced;
        		this.CredentialDescription = e.CredentialDescription;
        		this.PersonUid = e.PersonUid;
        		this.CredentialUid = e.CredentialUid;
        		this.ClusterUid = e.ClusterUid;
        		this.ClusterNumber = e.ClusterNumber;
        		this.ClusterName = e.ClusterName;
        		this.ClusterGroupId = e.ClusterGroupId;
        		this.PanelNumber = e.PanelNumber;
        		this.InputOutputGroupName = e.InputOutputGroupName;
        		this.InputOutputGroupNumber = e.InputOutputGroupNumber;
        		this.CpuNumber = e.CpuNumber;
        		this.BoardNumber = e.BoardNumber;
        		this.SectionNumber = e.SectionNumber;
        		this.ModuleNumber = e.ModuleNumber;
        		this.NodeNumber = e.NodeNumber;
        		this.AlarmPriority = e.AlarmPriority;
        		this.ResponseRequired = e.ResponseRequired;
        		this.EntityName = e.EntityName;
        		this.EntityType = e.EntityType;
        		this.ActivityEventAcknowledgements = e.ActivityEventAcknowledgements.ToCollection();
        		
        	}
        
        	public ActivityEvent Clone(ActivityEvent e)
        	{
        		return new ActivityEvent(e);
        	}
        
        	public bool Equals(ActivityEvent other)
        	{
        		return base.Equals(other);
        	}
        	
        	public bool IsPrimaryKeyEqual(ActivityEvent other)
        	{
        		if( other == null ) 
        			return false;
        
        		if(other.ActivityEventUid != this.ActivityEventUid )
        			return false;
        		return true;
        	}
        
        	public override int GetHashCode()
        	{
        		return base.GetHashCode();
        	}
        
        	public override string ToString()
        	{
        		return base.ToString();
        	}
        }
    }
    */
    
    	
    	private System.Guid _activityEventUid;
    
    	[DataMember]
    	public System.Guid ActivityEventUid
    	{ 
    		get { return _activityEventUid; }
    		set
    		{
    			if (_activityEventUid != value )
    			{
    				_activityEventUid = value;
    				OnPropertyChanged(() => ActivityEventUid);
    			}
    		}
    	}
    	
    	private System.DateTimeOffset _activityDateTime;
    
    	[DataMember]
    	public System.DateTimeOffset ActivityDateTime
    	{ 
    		get { return _activityDateTime; }
    		set
    		{
    			if (_activityDateTime != value )
    			{
    				_activityDateTime = value;
    				OnPropertyChanged(() => ActivityDateTime);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTimeOffset> _activityDateTimeUTC;
    
    	[DataMember]
    	public Nullable<System.DateTimeOffset> ActivityDateTimeUTC
    	{ 
    		get { return _activityDateTimeUTC; }
    		set
    		{
    			if (_activityDateTimeUTC != value )
    			{
    				_activityDateTimeUTC = value;
    				OnPropertyChanged(() => ActivityDateTimeUTC);
    			}
    		}
    	}
    	
    	private string _eventTypeMessage;
    
    	[DataMember]
    	public string EventTypeMessage
    	{ 
    		get { return _eventTypeMessage; }
    		set
    		{
    			if (_eventTypeMessage != value )
    			{
    				_eventTypeMessage = value;
    				OnPropertyChanged(() => EventTypeMessage);
    			}
    		}
    	}
    	
    	private int _foreColor;
    
    	[DataMember]
    	public int ForeColor
    	{ 
    		get { return _foreColor; }
    		set
    		{
    			if (_foreColor != value )
    			{
    				_foreColor = value;
    				OnPropertyChanged(() => ForeColor);
    			}
    		}
    	}
    	
    	private string _foreColorHex;
    
    	[DataMember]
    	public string ForeColorHex
    	{ 
    		get { return _foreColorHex; }
    		set
    		{
    			if (_foreColorHex != value )
    			{
    				_foreColorHex = value;
    				OnPropertyChanged(() => ForeColorHex);
    			}
    		}
    	}
    	
    	private string _deviceName;
    
    	[DataMember]
    	public string DeviceName
    	{ 
    		get { return _deviceName; }
    		set
    		{
    			if (_deviceName != value )
    			{
    				_deviceName = value;
    				OnPropertyChanged(() => DeviceName);
    			}
    		}
    	}
    	
    	private string _siteName;
    
    	[DataMember]
    	public string SiteName
    	{ 
    		get { return _siteName; }
    		set
    		{
    			if (_siteName != value )
    			{
    				_siteName = value;
    				OnPropertyChanged(() => SiteName);
    			}
    		}
    	}
    	
    	private System.Guid _entityId;
    
    	[DataMember]
    	public System.Guid EntityId
    	{ 
    		get { return _entityId; }
    		set
    		{
    			if (_entityId != value )
    			{
    				_entityId = value;
    				OnPropertyChanged(() => EntityId);
    			}
    		}
    	}
    	
    	private System.Guid _deviceUid;
    
    	[DataMember]
    	public System.Guid DeviceUid
    	{ 
    		get { return _deviceUid; }
    		set
    		{
    			if (_deviceUid != value )
    			{
    				_deviceUid = value;
    				OnPropertyChanged(() => DeviceUid);
    			}
    		}
    	}
    	
    	private System.Guid _eventTypeUid;
    
    	[DataMember]
    	public System.Guid EventTypeUid
    	{ 
    		get { return _eventTypeUid; }
    		set
    		{
    			if (_eventTypeUid != value )
    			{
    				_eventTypeUid = value;
    				OnPropertyChanged(() => EventTypeUid);
    			}
    		}
    	}
    	
    	private string _deviceType;
    
    	[DataMember]
    	public string DeviceType
    	{ 
    		get { return _deviceType; }
    		set
    		{
    			if (_deviceType != value )
    			{
    				_deviceType = value;
    				OnPropertyChanged(() => DeviceType);
    			}
    		}
    	}
    	
    	private string _lastName;
    
    	[DataMember]
    	public string LastName
    	{ 
    		get { return _lastName; }
    		set
    		{
    			if (_lastName != value )
    			{
    				_lastName = value;
    				OnPropertyChanged(() => LastName);
    			}
    		}
    	}
    	
    	private string _firstName;
    
    	[DataMember]
    	public string FirstName
    	{ 
    		get { return _firstName; }
    		set
    		{
    			if (_firstName != value )
    			{
    				_firstName = value;
    				OnPropertyChanged(() => FirstName);
    			}
    		}
    	}
    	
    	private bool _isTraced;
    
    	[DataMember]
    	public bool IsTraced
    	{ 
    		get { return _isTraced; }
    		set
    		{
    			if (_isTraced != value )
    			{
    				_isTraced = value;
    				OnPropertyChanged(() => IsTraced);
    			}
    		}
    	}
    	
    	private string _credentialDescription;
    
    	[DataMember]
    	public string CredentialDescription
    	{ 
    		get { return _credentialDescription; }
    		set
    		{
    			if (_credentialDescription != value )
    			{
    				_credentialDescription = value;
    				OnPropertyChanged(() => CredentialDescription);
    			}
    		}
    	}
    	
    	private Nullable<System.Guid> _personUid;
    
    	[DataMember]
    	public Nullable<System.Guid> PersonUid
    	{ 
    		get { return _personUid; }
    		set
    		{
    			if (_personUid != value )
    			{
    				_personUid = value;
    				OnPropertyChanged(() => PersonUid);
    			}
    		}
    	}
    	
    	private Nullable<System.Guid> _credentialUid;
    
    	[DataMember]
    	public Nullable<System.Guid> CredentialUid
    	{ 
    		get { return _credentialUid; }
    		set
    		{
    			if (_credentialUid != value )
    			{
    				_credentialUid = value;
    				OnPropertyChanged(() => CredentialUid);
    			}
    		}
    	}
    	
    	private Nullable<System.Guid> _clusterUid;
    
    	[DataMember]
    	public Nullable<System.Guid> ClusterUid
    	{ 
    		get { return _clusterUid; }
    		set
    		{
    			if (_clusterUid != value )
    			{
    				_clusterUid = value;
    				OnPropertyChanged(() => ClusterUid);
    			}
    		}
    	}
    	
    	private Nullable<int> _clusterNumber;
    
    	[DataMember]
    	public Nullable<int> ClusterNumber
    	{ 
    		get { return _clusterNumber; }
    		set
    		{
    			if (_clusterNumber != value )
    			{
    				_clusterNumber = value;
    				OnPropertyChanged(() => ClusterNumber);
    			}
    		}
    	}
    	
    	private string _clusterName;
    
    	[DataMember]
    	public string ClusterName
    	{ 
    		get { return _clusterName; }
    		set
    		{
    			if (_clusterName != value )
    			{
    				_clusterName = value;
    				OnPropertyChanged(() => ClusterName);
    			}
    		}
    	}
    	
    	private Nullable<int> _clusterGroupId;
    
    	[DataMember]
    	public Nullable<int> ClusterGroupId
    	{ 
    		get { return _clusterGroupId; }
    		set
    		{
    			if (_clusterGroupId != value )
    			{
    				_clusterGroupId = value;
    				OnPropertyChanged(() => ClusterGroupId);
    			}
    		}
    	}
    	
    	private Nullable<int> _panelNumber;
    
    	[DataMember]
    	public Nullable<int> PanelNumber
    	{ 
    		get { return _panelNumber; }
    		set
    		{
    			if (_panelNumber != value )
    			{
    				_panelNumber = value;
    				OnPropertyChanged(() => PanelNumber);
    			}
    		}
    	}
    	
    	private string _inputOutputGroupName;
    
    	[DataMember]
    	public string InputOutputGroupName
    	{ 
    		get { return _inputOutputGroupName; }
    		set
    		{
    			if (_inputOutputGroupName != value )
    			{
    				_inputOutputGroupName = value;
    				OnPropertyChanged(() => InputOutputGroupName);
    			}
    		}
    	}
    	
    	private Nullable<int> _inputOutputGroupNumber;
    
    	[DataMember]
    	public Nullable<int> InputOutputGroupNumber
    	{ 
    		get { return _inputOutputGroupNumber; }
    		set
    		{
    			if (_inputOutputGroupNumber != value )
    			{
    				_inputOutputGroupNumber = value;
    				OnPropertyChanged(() => InputOutputGroupNumber);
    			}
    		}
    	}
    	
    	private Nullable<short> _cpuNumber;
    
    	[DataMember]
    	public Nullable<short> CpuNumber
    	{ 
    		get { return _cpuNumber; }
    		set
    		{
    			if (_cpuNumber != value )
    			{
    				_cpuNumber = value;
    				OnPropertyChanged(() => CpuNumber);
    			}
    		}
    	}
    	
    	private Nullable<short> _boardNumber;
    
    	[DataMember]
    	public Nullable<short> BoardNumber
    	{ 
    		get { return _boardNumber; }
    		set
    		{
    			if (_boardNumber != value )
    			{
    				_boardNumber = value;
    				OnPropertyChanged(() => BoardNumber);
    			}
    		}
    	}
    	
    	private Nullable<short> _sectionNumber;
    
    	[DataMember]
    	public Nullable<short> SectionNumber
    	{ 
    		get { return _sectionNumber; }
    		set
    		{
    			if (_sectionNumber != value )
    			{
    				_sectionNumber = value;
    				OnPropertyChanged(() => SectionNumber);
    			}
    		}
    	}
    	
    	private Nullable<short> _moduleNumber;
    
    	[DataMember]
    	public Nullable<short> ModuleNumber
    	{ 
    		get { return _moduleNumber; }
    		set
    		{
    			if (_moduleNumber != value )
    			{
    				_moduleNumber = value;
    				OnPropertyChanged(() => ModuleNumber);
    			}
    		}
    	}
    	
    	private Nullable<short> _nodeNumber;
    
    	[DataMember]
    	public Nullable<short> NodeNumber
    	{ 
    		get { return _nodeNumber; }
    		set
    		{
    			if (_nodeNumber != value )
    			{
    				_nodeNumber = value;
    				OnPropertyChanged(() => NodeNumber);
    			}
    		}
    	}
    	
    	private Nullable<int> _alarmPriority;
    
    	[DataMember]
    	public Nullable<int> AlarmPriority
    	{ 
    		get { return _alarmPriority; }
    		set
    		{
    			if (_alarmPriority != value )
    			{
    				_alarmPriority = value;
    				OnPropertyChanged(() => AlarmPriority);
    			}
    		}
    	}
    	
    	private Nullable<bool> _responseRequired;
    
    	[DataMember]
    	public Nullable<bool> ResponseRequired
    	{ 
    		get { return _responseRequired; }
    		set
    		{
    			if (_responseRequired != value )
    			{
    				_responseRequired = value;
    				OnPropertyChanged(() => ResponseRequired);
    			}
    		}
    	}
    	
    	private string _entityName;
    
    	[DataMember]
    	public string EntityName
    	{ 
    		get { return _entityName; }
    		set
    		{
    			if (_entityName != value )
    			{
    				_entityName = value;
    				OnPropertyChanged(() => EntityName);
    			}
    		}
    	}
    	
    	private string _entityType;
    
    	[DataMember]
    	public string EntityType
    	{ 
    		get { return _entityType; }
    		set
    		{
    			if (_entityType != value )
    			{
    				_entityType = value;
    				OnPropertyChanged(() => EntityType);
    			}
    		}
    	}
    
    	
    	private ICollection<ActivityEventAcknowledgement> _activityEventAcknowledgements;
    
    	[DataMember]
    	public virtual ICollection<ActivityEventAcknowledgement> ActivityEventAcknowledgements
    	{ 
    		get { return _activityEventAcknowledgements; }
    		set
    		{
    			if (_activityEventAcknowledgements != value )
    			{
    				_activityEventAcknowledgements = value;
    				OnPropertyChanged(() => ActivityEventAcknowledgements);
    			}
    		}
    	}
    }
    
}
