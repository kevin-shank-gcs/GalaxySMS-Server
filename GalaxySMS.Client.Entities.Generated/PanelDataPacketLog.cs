//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    
	[DataContract]
	public partial class PanelDataPacketLog : DbObjectBase, ITableEntityBase
    {
    
    /*	// Move to partial class
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    using System.Collections.ObjectModel;
    using GCS.Core.Common.Extensions;
    
    namespace GalaxySMS.Client.Entities
    {
        public partial class PanelDataPacketLog
        {
        	public PanelDataPacketLog() : base()
        	{
        		Initialize();
        	}
        
        	public PanelDataPacketLog(PanelDataPacketLog e) : base(e)
        	{
        		Initialize(e);
        	}
        
        	public void Initialize()
        	{
        		base.Initialize();
        }
        
        	public void Initialize(PanelDataPacketLog e)
        	{
        		Initialize();
        		base.Initialize(e);
        
        		if( e == null )
        			return;
        		this.Id = e.Id;
        		this.InsertDate = e.InsertDate;
        		this.UpdateDate = e.UpdateDate;
        		this.Length = e.Length;
        		this.Distribute = e.Distribute;
        		this.ClusterId = e.ClusterId;
        		this.PanelId = e.PanelId;
        		this.CpuId = e.CpuId;
        		this.BoardNumber = e.BoardNumber;
        		this.SectionNumber = e.SectionNumber;
        		this.SecondsFromWeekStart = e.SecondsFromWeekStart;
        		this.Sequence = e.Sequence;
        		this.RawData = e.RawData;
        		this.Direction = e.Direction;
        		
        	}
        
        	public PanelDataPacketLog Clone(PanelDataPacketLog e)
        	{
        		return new PanelDataPacketLog(e);
        	}
        
        	public bool Equals(PanelDataPacketLog other)
        	{
        		return base.Equals(other);
        	}
        	
        	public bool IsPrimaryKeyEqual(PanelDataPacketLog other)
        	{
        		if( other == null ) 
        			return false;
        
        		if(other.Id != this.Id )
        			return false;
        		return true;
        	}
        
        	public override int GetHashCode()
        	{
        		return base.GetHashCode();
        	}
        
        	public override string ToString()
        	{
        		return base.ToString();
        	}
        }
    }
    */
    
    	
    	private System.Guid _id;
    
    	[DataMember]
    	public System.Guid Id
    	{ 
    		get { return _id; }
    		set
    		{
    			if (_id != value )
    			{
    				_id = value;
    				OnPropertyChanged(() => Id);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _insertDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> InsertDate
    	{ 
    		get { return _insertDate; }
    		set
    		{
    			if (_insertDate != value )
    			{
    				_insertDate = value;
    				OnPropertyChanged(() => InsertDate);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _updateDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> UpdateDate
    	{ 
    		get { return _updateDate; }
    		set
    		{
    			if (_updateDate != value )
    			{
    				_updateDate = value;
    				OnPropertyChanged(() => UpdateDate);
    			}
    		}
    	}
    	
    	private short _length;
    
    	[DataMember]
    	public short Length
    	{ 
    		get { return _length; }
    		set
    		{
    			if (_length != value )
    			{
    				_length = value;
    				OnPropertyChanged(() => Length);
    			}
    		}
    	}
    	
    	private short _distribute;
    
    	[DataMember]
    	public short Distribute
    	{ 
    		get { return _distribute; }
    		set
    		{
    			if (_distribute != value )
    			{
    				_distribute = value;
    				OnPropertyChanged(() => Distribute);
    			}
    		}
    	}
    	
    	private short _clusterId;
    
    	[DataMember]
    	public short ClusterId
    	{ 
    		get { return _clusterId; }
    		set
    		{
    			if (_clusterId != value )
    			{
    				_clusterId = value;
    				OnPropertyChanged(() => ClusterId);
    			}
    		}
    	}
    	
    	private short _panelId;
    
    	[DataMember]
    	public short PanelId
    	{ 
    		get { return _panelId; }
    		set
    		{
    			if (_panelId != value )
    			{
    				_panelId = value;
    				OnPropertyChanged(() => PanelId);
    			}
    		}
    	}
    	
    	private short _cpuId;
    
    	[DataMember]
    	public short CpuId
    	{ 
    		get { return _cpuId; }
    		set
    		{
    			if (_cpuId != value )
    			{
    				_cpuId = value;
    				OnPropertyChanged(() => CpuId);
    			}
    		}
    	}
    	
    	private short _boardNumber;
    
    	[DataMember]
    	public short BoardNumber
    	{ 
    		get { return _boardNumber; }
    		set
    		{
    			if (_boardNumber != value )
    			{
    				_boardNumber = value;
    				OnPropertyChanged(() => BoardNumber);
    			}
    		}
    	}
    	
    	private short _sectionNumber;
    
    	[DataMember]
    	public short SectionNumber
    	{ 
    		get { return _sectionNumber; }
    		set
    		{
    			if (_sectionNumber != value )
    			{
    				_sectionNumber = value;
    				OnPropertyChanged(() => SectionNumber);
    			}
    		}
    	}
    	
    	private int _secondsFromWeekStart;
    
    	[DataMember]
    	public int SecondsFromWeekStart
    	{ 
    		get { return _secondsFromWeekStart; }
    		set
    		{
    			if (_secondsFromWeekStart != value )
    			{
    				_secondsFromWeekStart = value;
    				OnPropertyChanged(() => SecondsFromWeekStart);
    			}
    		}
    	}
    	
    	private int _sequence;
    
    	[DataMember]
    	public int Sequence
    	{ 
    		get { return _sequence; }
    		set
    		{
    			if (_sequence != value )
    			{
    				_sequence = value;
    				OnPropertyChanged(() => Sequence);
    			}
    		}
    	}
    	
    	private byte[] _rawData;
    
    	[DataMember]
    	public byte[] RawData
    	{ 
    		get { return _rawData; }
    		set
    		{
    			if (_rawData != value )
    			{
    				_rawData = value;
    				OnPropertyChanged(() => RawData);
    			}
    		}
    	}
    	
    	private Nullable<bool> _direction;
    
    	[DataMember]
    	public Nullable<bool> Direction
    	{ 
    		get { return _direction; }
    		set
    		{
    			if (_direction != value )
    			{
    				_direction = value;
    				OnPropertyChanged(() => Direction);
    			}
    		}
    	}
    }
    
}
