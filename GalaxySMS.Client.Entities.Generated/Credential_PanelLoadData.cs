//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    
	[DataContract]
	public partial class Credential_PanelLoadData : DbObjectBase, ITableEntityBase
    {
    
    /*	// Move to partial class
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    using System.Collections.ObjectModel;
    using GCS.Core.Common.Extensions;
    
    namespace GalaxySMS.Client.Entities
    {
        public partial class Credential_PanelLoadData
        {
        	public Credential_PanelLoadData() : base()
        	{
        		Initialize();
        	}
        
        	public Credential_PanelLoadData(Credential_PanelLoadData e) : base(e)
        	{
        		Initialize(e);
        	}
        
        	public void Initialize()
        	{
        		base.Initialize();
        }
        
        	public void Initialize(Credential_PanelLoadData e)
        	{
        		Initialize();
        		base.Initialize(e);
        
        		if( e == null )
        			return;
        		this.PersonUid = e.PersonUid;
        		this.FirstName = e.FirstName;
        		this.LastName = e.LastName;
        		this.PersonId = e.PersonId;
        		this.PersonActivationDateTime = e.PersonActivationDateTime;
        		this.PersonExpirationDateTime = e.PersonExpirationDateTime;
        		this.PersonTerminationDate = e.PersonTerminationDate;
        		this.VeryImportantPerson = e.VeryImportantPerson;
        		this.HasPhysicalDisability = e.HasPhysicalDisability;
        		this.HasVertigo = e.HasVertigo;
        		this.PersonInactiveState = e.PersonInactiveState;
        		this.PINExempt = e.PINExempt;
        		this.PassbackExempt = e.PassbackExempt;
        		this.CanToggleLockState = e.CanToggleLockState;
        		this.PersonAccessControlPropertiesIsActive = e.PersonAccessControlPropertiesIsActive;
        		this.PIN = e.PIN;
        		this.PersonAccessControlPropertiesAccessProfileUid = e.PersonAccessControlPropertiesAccessProfileUid;
        		this.PersonCredentialUid = e.PersonCredentialUid;
        		this.CredentialUid = e.CredentialUid;
        		this.CredentialActivationDateTime = e.CredentialActivationDateTime;
        		this.CredentialExpirationDateTime = e.CredentialExpirationDateTime;
        		this.CredentialUsageCount = e.CredentialUsageCount;
        		this.DuressEnabled = e.DuressEnabled;
        		this.ReverseBits = e.ReverseBits;
        		this.TraceEnabled = e.TraceEnabled;
        		this.PersonCredentialIsActive = e.PersonCredentialIsActive;
        		this.CredentialRoleCode = e.CredentialRoleCode;
        		this.CredentialActivationModeCode = e.CredentialActivationModeCode;
        		this.CredentialExpirationModeCode = e.CredentialExpirationModeCode;
        		this.NoServerReplyBehaviorCode = e.NoServerReplyBehaviorCode;
        		this.DeferToServerBehaviorCode = e.DeferToServerBehaviorCode;
        		this.LastPanelImpactingChangeDate = e.LastPanelImpactingChangeDate;
        		this.CredentialBits = e.CredentialBits;
        		this.CredentialFormatDisplay = e.CredentialFormatDisplay;
        		this.CredentialFormatCode = e.CredentialFormatCode;
        		this.BitCount = e.BitCount;
        		this.CardBinaryData = e.CardBinaryData;
        		this.CardNumber = e.CardNumber;
        		this.CardNumberIsHex = e.CardNumberIsHex;
        		this.FacCompSiteCode = e.FacCompSiteCode;
        		this.IdCode = e.IdCode;
        		this.IssueCode = e.IssueCode;
        		this.LcdStartingDate = e.LcdStartingDate;
        		this.LcdEndingDate = e.LcdEndingDate;
        		this.LcdMessage = e.LcdMessage;
        		this.LcdMessageDisplayModeCode = e.LcdMessageDisplayModeCode;
        		this.ClusterUid = e.ClusterUid;
        		this.ClusterName = e.ClusterName;
        		this.ClusterGroupId = e.ClusterGroupId;
        		this.ClusterNumber = e.ClusterNumber;
        		this.ClusterTypeCode = e.ClusterTypeCode;
        		this.ClusterIsActive = e.ClusterIsActive;
        		this.CredentialDataLength = e.CredentialDataLength;
        		this.PanelNumber = e.PanelNumber;
        		this.CpuNumber = e.CpuNumber;
        		this.AccessGroup1 = e.AccessGroup1;
        		this.AccessGroup2 = e.AccessGroup2;
        		this.AccessGroup3 = e.AccessGroup3;
        		this.AccessGroup4 = e.AccessGroup4;
        		this.PersonalAccessGroupNumber = e.PersonalAccessGroupNumber;
        		this.InputOutputGroup1 = e.InputOutputGroup1;
        		this.InputOutputGroup2 = e.InputOutputGroup2;
        		this.InputOutputGroup3 = e.InputOutputGroup3;
        		this.InputOutputGroup4 = e.InputOutputGroup4;
        		this.OtisSplitGroupOperation = e.OtisSplitGroupOperation;
        		this.OtisCimOverride = e.OtisCimOverride;
        		this.CpuUid = e.CpuUid;
        		this.ServerAddress = e.ServerAddress;
        		this.IsConnected = e.IsConnected;
        		this.PersonEmploymentDate = e.PersonEmploymentDate;
        		
        	}
        
        	public Credential_PanelLoadData Clone(Credential_PanelLoadData e)
        	{
        		return new Credential_PanelLoadData(e);
        	}
        
        	public bool Equals(Credential_PanelLoadData other)
        	{
        		return base.Equals(other);
        	}
        	
        	public bool IsPrimaryKeyEqual(Credential_PanelLoadData other)
        	{
        		if( other == null ) 
        			return false;
        
        		if(other.PersonUid != this.PersonUid )
        			return false;
        	if(other.PersonId != this.PersonId )
        			return false;
        	if(other.VeryImportantPerson != this.VeryImportantPerson )
        			return false;
        	if(other.HasPhysicalDisability != this.HasPhysicalDisability )
        			return false;
        	if(other.HasVertigo != this.HasVertigo )
        			return false;
        	if(other.PersonInactiveState != this.PersonInactiveState )
        			return false;
        	if(other.PINExempt != this.PINExempt )
        			return false;
        	if(other.PassbackExempt != this.PassbackExempt )
        			return false;
        	if(other.CanToggleLockState != this.CanToggleLockState )
        			return false;
        	if(other.PersonAccessControlPropertiesIsActive != this.PersonAccessControlPropertiesIsActive )
        			return false;
        	if(other.PersonAccessControlPropertiesAccessProfileUid != this.PersonAccessControlPropertiesAccessProfileUid )
        			return false;
        	if(other.PersonCredentialUid != this.PersonCredentialUid )
        			return false;
        	if(other.CredentialUid != this.CredentialUid )
        			return false;
        	if(other.CredentialUsageCount != this.CredentialUsageCount )
        			return false;
        	if(other.DuressEnabled != this.DuressEnabled )
        			return false;
        	if(other.ReverseBits != this.ReverseBits )
        			return false;
        	if(other.TraceEnabled != this.TraceEnabled )
        			return false;
        	if(other.PersonCredentialIsActive != this.PersonCredentialIsActive )
        			return false;
        	if(other.CredentialRoleCode != this.CredentialRoleCode )
        			return false;
        	if(other.CredentialActivationModeCode != this.CredentialActivationModeCode )
        			return false;
        	if(other.CredentialExpirationModeCode != this.CredentialExpirationModeCode )
        			return false;
        	if(other.NoServerReplyBehaviorCode != this.NoServerReplyBehaviorCode )
        			return false;
        	if(other.DeferToServerBehaviorCode != this.DeferToServerBehaviorCode )
        			return false;
        	if(other.LastPanelImpactingChangeDate != this.LastPanelImpactingChangeDate )
        			return false;
        	if(other.CredentialBits != this.CredentialBits )
        			return false;
        	if(other.CredentialFormatDisplay != this.CredentialFormatDisplay )
        			return false;
        	if(other.CredentialFormatCode != this.CredentialFormatCode )
        			return false;
        	if(other.BitCount != this.BitCount )
        			return false;
        	if(other.CardBinaryData != this.CardBinaryData )
        			return false;
        	if(other.CardNumber != this.CardNumber )
        			return false;
        	if(other.CardNumberIsHex != this.CardNumberIsHex )
        			return false;
        	if(other.LcdStartingDate != this.LcdStartingDate )
        			return false;
        	if(other.LcdEndingDate != this.LcdEndingDate )
        			return false;
        	if(other.LcdMessage != this.LcdMessage )
        			return false;
        	if(other.LcdMessageDisplayModeCode != this.LcdMessageDisplayModeCode )
        			return false;
        	if(other.ClusterUid != this.ClusterUid )
        			return false;
        	if(other.ClusterName != this.ClusterName )
        			return false;
        	if(other.ClusterNumber != this.ClusterNumber )
        			return false;
        	if(other.ClusterTypeCode != this.ClusterTypeCode )
        			return false;
        	if(other.ClusterIsActive != this.ClusterIsActive )
        			return false;
        	if(other.CredentialDataLength != this.CredentialDataLength )
        			return false;
        	if(other.PanelNumber != this.PanelNumber )
        			return false;
        	if(other.CpuNumber != this.CpuNumber )
        			return false;
        	if(other.OtisSplitGroupOperation != this.OtisSplitGroupOperation )
        			return false;
        	if(other.OtisCimOverride != this.OtisCimOverride )
        			return false;
        	if(other.CpuUid != this.CpuUid )
        			return false;
        	if(other.ServerAddress != this.ServerAddress )
        			return false;
        	if(other.IsConnected != this.IsConnected )
        			return false;
        		return true;
        	}
        
        	public override int GetHashCode()
        	{
        		return base.GetHashCode();
        	}
        
        	public override string ToString()
        	{
        		return base.ToString();
        	}
        }
    }
    */
    
    	
    	private System.Guid _personUid;
    
    	[DataMember]
    	public System.Guid PersonUid
    	{ 
    		get { return _personUid; }
    		set
    		{
    			if (_personUid != value )
    			{
    				_personUid = value;
    				OnPropertyChanged(() => PersonUid);
    			}
    		}
    	}
    	
    	private string _firstName;
    
    	[DataMember]
    	public string FirstName
    	{ 
    		get { return _firstName; }
    		set
    		{
    			if (_firstName != value )
    			{
    				_firstName = value;
    				OnPropertyChanged(() => FirstName);
    			}
    		}
    	}
    	
    	private string _lastName;
    
    	[DataMember]
    	public string LastName
    	{ 
    		get { return _lastName; }
    		set
    		{
    			if (_lastName != value )
    			{
    				_lastName = value;
    				OnPropertyChanged(() => LastName);
    			}
    		}
    	}
    	
    	private string _personId;
    
    	[DataMember]
    	public string PersonId
    	{ 
    		get { return _personId; }
    		set
    		{
    			if (_personId != value )
    			{
    				_personId = value;
    				OnPropertyChanged(() => PersonId);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _personActivationDateTime;
    
    	[DataMember]
    	public Nullable<System.DateTime> PersonActivationDateTime
    	{ 
    		get { return _personActivationDateTime; }
    		set
    		{
    			if (_personActivationDateTime != value )
    			{
    				_personActivationDateTime = value;
    				OnPropertyChanged(() => PersonActivationDateTime);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _personExpirationDateTime;
    
    	[DataMember]
    	public Nullable<System.DateTime> PersonExpirationDateTime
    	{ 
    		get { return _personExpirationDateTime; }
    		set
    		{
    			if (_personExpirationDateTime != value )
    			{
    				_personExpirationDateTime = value;
    				OnPropertyChanged(() => PersonExpirationDateTime);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _personTerminationDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> PersonTerminationDate
    	{ 
    		get { return _personTerminationDate; }
    		set
    		{
    			if (_personTerminationDate != value )
    			{
    				_personTerminationDate = value;
    				OnPropertyChanged(() => PersonTerminationDate);
    			}
    		}
    	}
    	
    	private bool _veryImportantPerson;
    
    	[DataMember]
    	public bool VeryImportantPerson
    	{ 
    		get { return _veryImportantPerson; }
    		set
    		{
    			if (_veryImportantPerson != value )
    			{
    				_veryImportantPerson = value;
    				OnPropertyChanged(() => VeryImportantPerson);
    			}
    		}
    	}
    	
    	private bool _hasPhysicalDisability;
    
    	[DataMember]
    	public bool HasPhysicalDisability
    	{ 
    		get { return _hasPhysicalDisability; }
    		set
    		{
    			if (_hasPhysicalDisability != value )
    			{
    				_hasPhysicalDisability = value;
    				OnPropertyChanged(() => HasPhysicalDisability);
    			}
    		}
    	}
    	
    	private bool _hasVertigo;
    
    	[DataMember]
    	public bool HasVertigo
    	{ 
    		get { return _hasVertigo; }
    		set
    		{
    			if (_hasVertigo != value )
    			{
    				_hasVertigo = value;
    				OnPropertyChanged(() => HasVertigo);
    			}
    		}
    	}
    	
    	private bool _personInactiveState;
    
    	[DataMember]
    	public bool PersonInactiveState
    	{ 
    		get { return _personInactiveState; }
    		set
    		{
    			if (_personInactiveState != value )
    			{
    				_personInactiveState = value;
    				OnPropertyChanged(() => PersonInactiveState);
    			}
    		}
    	}
    	
    	private bool _pINExempt;
    
    	[DataMember]
    	public bool PINExempt
    	{ 
    		get { return _pINExempt; }
    		set
    		{
    			if (_pINExempt != value )
    			{
    				_pINExempt = value;
    				OnPropertyChanged(() => PINExempt);
    			}
    		}
    	}
    	
    	private bool _passbackExempt;
    
    	[DataMember]
    	public bool PassbackExempt
    	{ 
    		get { return _passbackExempt; }
    		set
    		{
    			if (_passbackExempt != value )
    			{
    				_passbackExempt = value;
    				OnPropertyChanged(() => PassbackExempt);
    			}
    		}
    	}
    	
    	private bool _canToggleLockState;
    
    	[DataMember]
    	public bool CanToggleLockState
    	{ 
    		get { return _canToggleLockState; }
    		set
    		{
    			if (_canToggleLockState != value )
    			{
    				_canToggleLockState = value;
    				OnPropertyChanged(() => CanToggleLockState);
    			}
    		}
    	}
    	
    	private bool _personAccessControlPropertiesIsActive;
    
    	[DataMember]
    	public bool PersonAccessControlPropertiesIsActive
    	{ 
    		get { return _personAccessControlPropertiesIsActive; }
    		set
    		{
    			if (_personAccessControlPropertiesIsActive != value )
    			{
    				_personAccessControlPropertiesIsActive = value;
    				OnPropertyChanged(() => PersonAccessControlPropertiesIsActive);
    			}
    		}
    	}
    	
    	private Nullable<int> _pIN;
    
    	[DataMember]
    	public Nullable<int> PIN
    	{ 
    		get { return _pIN; }
    		set
    		{
    			if (_pIN != value )
    			{
    				_pIN = value;
    				OnPropertyChanged(() => PIN);
    			}
    		}
    	}
    	
    	private System.Guid _personAccessControlPropertiesAccessProfileUid;
    
    	[DataMember]
    	public System.Guid PersonAccessControlPropertiesAccessProfileUid
    	{ 
    		get { return _personAccessControlPropertiesAccessProfileUid; }
    		set
    		{
    			if (_personAccessControlPropertiesAccessProfileUid != value )
    			{
    				_personAccessControlPropertiesAccessProfileUid = value;
    				OnPropertyChanged(() => PersonAccessControlPropertiesAccessProfileUid);
    			}
    		}
    	}
    	
    	private System.Guid _personCredentialUid;
    
    	[DataMember]
    	public System.Guid PersonCredentialUid
    	{ 
    		get { return _personCredentialUid; }
    		set
    		{
    			if (_personCredentialUid != value )
    			{
    				_personCredentialUid = value;
    				OnPropertyChanged(() => PersonCredentialUid);
    			}
    		}
    	}
    	
    	private System.Guid _credentialUid;
    
    	[DataMember]
    	public System.Guid CredentialUid
    	{ 
    		get { return _credentialUid; }
    		set
    		{
    			if (_credentialUid != value )
    			{
    				_credentialUid = value;
    				OnPropertyChanged(() => CredentialUid);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _credentialActivationDateTime;
    
    	[DataMember]
    	public Nullable<System.DateTime> CredentialActivationDateTime
    	{ 
    		get { return _credentialActivationDateTime; }
    		set
    		{
    			if (_credentialActivationDateTime != value )
    			{
    				_credentialActivationDateTime = value;
    				OnPropertyChanged(() => CredentialActivationDateTime);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _credentialExpirationDateTime;
    
    	[DataMember]
    	public Nullable<System.DateTime> CredentialExpirationDateTime
    	{ 
    		get { return _credentialExpirationDateTime; }
    		set
    		{
    			if (_credentialExpirationDateTime != value )
    			{
    				_credentialExpirationDateTime = value;
    				OnPropertyChanged(() => CredentialExpirationDateTime);
    			}
    		}
    	}
    	
    	private short _credentialUsageCount;
    
    	[DataMember]
    	public short CredentialUsageCount
    	{ 
    		get { return _credentialUsageCount; }
    		set
    		{
    			if (_credentialUsageCount != value )
    			{
    				_credentialUsageCount = value;
    				OnPropertyChanged(() => CredentialUsageCount);
    			}
    		}
    	}
    	
    	private bool _duressEnabled;
    
    	[DataMember]
    	public bool DuressEnabled
    	{ 
    		get { return _duressEnabled; }
    		set
    		{
    			if (_duressEnabled != value )
    			{
    				_duressEnabled = value;
    				OnPropertyChanged(() => DuressEnabled);
    			}
    		}
    	}
    	
    	private bool _reverseBits;
    
    	[DataMember]
    	public bool ReverseBits
    	{ 
    		get { return _reverseBits; }
    		set
    		{
    			if (_reverseBits != value )
    			{
    				_reverseBits = value;
    				OnPropertyChanged(() => ReverseBits);
    			}
    		}
    	}
    	
    	private bool _traceEnabled;
    
    	[DataMember]
    	public bool TraceEnabled
    	{ 
    		get { return _traceEnabled; }
    		set
    		{
    			if (_traceEnabled != value )
    			{
    				_traceEnabled = value;
    				OnPropertyChanged(() => TraceEnabled);
    			}
    		}
    	}
    	
    	private bool _personCredentialIsActive;
    
    	[DataMember]
    	public bool PersonCredentialIsActive
    	{ 
    		get { return _personCredentialIsActive; }
    		set
    		{
    			if (_personCredentialIsActive != value )
    			{
    				_personCredentialIsActive = value;
    				OnPropertyChanged(() => PersonCredentialIsActive);
    			}
    		}
    	}
    	
    	private short _credentialRoleCode;
    
    	[DataMember]
    	public short CredentialRoleCode
    	{ 
    		get { return _credentialRoleCode; }
    		set
    		{
    			if (_credentialRoleCode != value )
    			{
    				_credentialRoleCode = value;
    				OnPropertyChanged(() => CredentialRoleCode);
    			}
    		}
    	}
    	
    	private short _credentialActivationModeCode;
    
    	[DataMember]
    	public short CredentialActivationModeCode
    	{ 
    		get { return _credentialActivationModeCode; }
    		set
    		{
    			if (_credentialActivationModeCode != value )
    			{
    				_credentialActivationModeCode = value;
    				OnPropertyChanged(() => CredentialActivationModeCode);
    			}
    		}
    	}
    	
    	private short _credentialExpirationModeCode;
    
    	[DataMember]
    	public short CredentialExpirationModeCode
    	{ 
    		get { return _credentialExpirationModeCode; }
    		set
    		{
    			if (_credentialExpirationModeCode != value )
    			{
    				_credentialExpirationModeCode = value;
    				OnPropertyChanged(() => CredentialExpirationModeCode);
    			}
    		}
    	}
    	
    	private short _noServerReplyBehaviorCode;
    
    	[DataMember]
    	public short NoServerReplyBehaviorCode
    	{ 
    		get { return _noServerReplyBehaviorCode; }
    		set
    		{
    			if (_noServerReplyBehaviorCode != value )
    			{
    				_noServerReplyBehaviorCode = value;
    				OnPropertyChanged(() => NoServerReplyBehaviorCode);
    			}
    		}
    	}
    	
    	private short _deferToServerBehaviorCode;
    
    	[DataMember]
    	public short DeferToServerBehaviorCode
    	{ 
    		get { return _deferToServerBehaviorCode; }
    		set
    		{
    			if (_deferToServerBehaviorCode != value )
    			{
    				_deferToServerBehaviorCode = value;
    				OnPropertyChanged(() => DeferToServerBehaviorCode);
    			}
    		}
    	}
    	
    	private System.DateTime _lastPanelImpactingChangeDate;
    
    	[DataMember]
    	public System.DateTime LastPanelImpactingChangeDate
    	{ 
    		get { return _lastPanelImpactingChangeDate; }
    		set
    		{
    			if (_lastPanelImpactingChangeDate != value )
    			{
    				_lastPanelImpactingChangeDate = value;
    				OnPropertyChanged(() => LastPanelImpactingChangeDate);
    			}
    		}
    	}
    	
    	private byte[] _credentialBits;
    
    	[DataMember]
    	public byte[] CredentialBits
    	{ 
    		get { return _credentialBits; }
    		set
    		{
    			if (_credentialBits != value )
    			{
    				_credentialBits = value;
    				OnPropertyChanged(() => CredentialBits);
    			}
    		}
    	}
    	
    	private string _credentialFormatDisplay;
    
    	[DataMember]
    	public string CredentialFormatDisplay
    	{ 
    		get { return _credentialFormatDisplay; }
    		set
    		{
    			if (_credentialFormatDisplay != value )
    			{
    				_credentialFormatDisplay = value;
    				OnPropertyChanged(() => CredentialFormatDisplay);
    			}
    		}
    	}
    	
    	private short _credentialFormatCode;
    
    	[DataMember]
    	public short CredentialFormatCode
    	{ 
    		get { return _credentialFormatCode; }
    		set
    		{
    			if (_credentialFormatCode != value )
    			{
    				_credentialFormatCode = value;
    				OnPropertyChanged(() => CredentialFormatCode);
    			}
    		}
    	}
    	
    	private short _bitCount;
    
    	[DataMember]
    	public short BitCount
    	{ 
    		get { return _bitCount; }
    		set
    		{
    			if (_bitCount != value )
    			{
    				_bitCount = value;
    				OnPropertyChanged(() => BitCount);
    			}
    		}
    	}
    	
    	private byte[] _cardBinaryData;
    
    	[DataMember]
    	public byte[] CardBinaryData
    	{ 
    		get { return _cardBinaryData; }
    		set
    		{
    			if (_cardBinaryData != value )
    			{
    				_cardBinaryData = value;
    				OnPropertyChanged(() => CardBinaryData);
    			}
    		}
    	}
    	
    	private string _cardNumber;
    
    	[DataMember]
    	public string CardNumber
    	{ 
    		get { return _cardNumber; }
    		set
    		{
    			if (_cardNumber != value )
    			{
    				_cardNumber = value;
    				OnPropertyChanged(() => CardNumber);
    			}
    		}
    	}
    	
    	private bool _cardNumberIsHex;
    
    	[DataMember]
    	public bool CardNumberIsHex
    	{ 
    		get { return _cardNumberIsHex; }
    		set
    		{
    			if (_cardNumberIsHex != value )
    			{
    				_cardNumberIsHex = value;
    				OnPropertyChanged(() => CardNumberIsHex);
    			}
    		}
    	}
    	
    	private Nullable<long> _facCompSiteCode;
    
    	[DataMember]
    	public Nullable<long> FacCompSiteCode
    	{ 
    		get { return _facCompSiteCode; }
    		set
    		{
    			if (_facCompSiteCode != value )
    			{
    				_facCompSiteCode = value;
    				OnPropertyChanged(() => FacCompSiteCode);
    			}
    		}
    	}
    	
    	private Nullable<long> _idCode;
    
    	[DataMember]
    	public Nullable<long> IdCode
    	{ 
    		get { return _idCode; }
    		set
    		{
    			if (_idCode != value )
    			{
    				_idCode = value;
    				OnPropertyChanged(() => IdCode);
    			}
    		}
    	}
    	
    	private Nullable<long> _issueCode;
    
    	[DataMember]
    	public Nullable<long> IssueCode
    	{ 
    		get { return _issueCode; }
    		set
    		{
    			if (_issueCode != value )
    			{
    				_issueCode = value;
    				OnPropertyChanged(() => IssueCode);
    			}
    		}
    	}
    	
    	private System.DateTime _lcdStartingDate;
    
    	[DataMember]
    	public System.DateTime LcdStartingDate
    	{ 
    		get { return _lcdStartingDate; }
    		set
    		{
    			if (_lcdStartingDate != value )
    			{
    				_lcdStartingDate = value;
    				OnPropertyChanged(() => LcdStartingDate);
    			}
    		}
    	}
    	
    	private System.DateTime _lcdEndingDate;
    
    	[DataMember]
    	public System.DateTime LcdEndingDate
    	{ 
    		get { return _lcdEndingDate; }
    		set
    		{
    			if (_lcdEndingDate != value )
    			{
    				_lcdEndingDate = value;
    				OnPropertyChanged(() => LcdEndingDate);
    			}
    		}
    	}
    	
    	private string _lcdMessage;
    
    	[DataMember]
    	public string LcdMessage
    	{ 
    		get { return _lcdMessage; }
    		set
    		{
    			if (_lcdMessage != value )
    			{
    				_lcdMessage = value;
    				OnPropertyChanged(() => LcdMessage);
    			}
    		}
    	}
    	
    	private short _lcdMessageDisplayModeCode;
    
    	[DataMember]
    	public short LcdMessageDisplayModeCode
    	{ 
    		get { return _lcdMessageDisplayModeCode; }
    		set
    		{
    			if (_lcdMessageDisplayModeCode != value )
    			{
    				_lcdMessageDisplayModeCode = value;
    				OnPropertyChanged(() => LcdMessageDisplayModeCode);
    			}
    		}
    	}
    	
    	private System.Guid _clusterUid;
    
    	[DataMember]
    	public System.Guid ClusterUid
    	{ 
    		get { return _clusterUid; }
    		set
    		{
    			if (_clusterUid != value )
    			{
    				_clusterUid = value;
    				OnPropertyChanged(() => ClusterUid);
    			}
    		}
    	}
    	
    	private string _clusterName;
    
    	[DataMember]
    	public string ClusterName
    	{ 
    		get { return _clusterName; }
    		set
    		{
    			if (_clusterName != value )
    			{
    				_clusterName = value;
    				OnPropertyChanged(() => ClusterName);
    			}
    		}
    	}
    	
    	private string _clusterGroupId;
    
    	[DataMember]
    	public string ClusterGroupId
    	{ 
    		get { return _clusterGroupId; }
    		set
    		{
    			if (_clusterGroupId != value )
    			{
    				_clusterGroupId = value;
    				OnPropertyChanged(() => ClusterGroupId);
    			}
    		}
    	}
    	
    	private int _clusterNumber;
    
    	[DataMember]
    	public int ClusterNumber
    	{ 
    		get { return _clusterNumber; }
    		set
    		{
    			if (_clusterNumber != value )
    			{
    				_clusterNumber = value;
    				OnPropertyChanged(() => ClusterNumber);
    			}
    		}
    	}
    	
    	private string _clusterTypeCode;
    
    	[DataMember]
    	public string ClusterTypeCode
    	{ 
    		get { return _clusterTypeCode; }
    		set
    		{
    			if (_clusterTypeCode != value )
    			{
    				_clusterTypeCode = value;
    				OnPropertyChanged(() => ClusterTypeCode);
    			}
    		}
    	}
    	
    	private bool _clusterIsActive;
    
    	[DataMember]
    	public bool ClusterIsActive
    	{ 
    		get { return _clusterIsActive; }
    		set
    		{
    			if (_clusterIsActive != value )
    			{
    				_clusterIsActive = value;
    				OnPropertyChanged(() => ClusterIsActive);
    			}
    		}
    	}
    	
    	private short _credentialDataLength;
    
    	[DataMember]
    	public short CredentialDataLength
    	{ 
    		get { return _credentialDataLength; }
    		set
    		{
    			if (_credentialDataLength != value )
    			{
    				_credentialDataLength = value;
    				OnPropertyChanged(() => CredentialDataLength);
    			}
    		}
    	}
    	
    	private int _panelNumber;
    
    	[DataMember]
    	public int PanelNumber
    	{ 
    		get { return _panelNumber; }
    		set
    		{
    			if (_panelNumber != value )
    			{
    				_panelNumber = value;
    				OnPropertyChanged(() => PanelNumber);
    			}
    		}
    	}
    	
    	private int _cpuNumber;
    
    	[DataMember]
    	public int CpuNumber
    	{ 
    		get { return _cpuNumber; }
    		set
    		{
    			if (_cpuNumber != value )
    			{
    				_cpuNumber = value;
    				OnPropertyChanged(() => CpuNumber);
    			}
    		}
    	}
    	
    	private Nullable<int> _accessGroup1;
    
    	[DataMember]
    	public Nullable<int> AccessGroup1
    	{ 
    		get { return _accessGroup1; }
    		set
    		{
    			if (_accessGroup1 != value )
    			{
    				_accessGroup1 = value;
    				OnPropertyChanged(() => AccessGroup1);
    			}
    		}
    	}
    	
    	private Nullable<int> _accessGroup2;
    
    	[DataMember]
    	public Nullable<int> AccessGroup2
    	{ 
    		get { return _accessGroup2; }
    		set
    		{
    			if (_accessGroup2 != value )
    			{
    				_accessGroup2 = value;
    				OnPropertyChanged(() => AccessGroup2);
    			}
    		}
    	}
    	
    	private Nullable<int> _accessGroup3;
    
    	[DataMember]
    	public Nullable<int> AccessGroup3
    	{ 
    		get { return _accessGroup3; }
    		set
    		{
    			if (_accessGroup3 != value )
    			{
    				_accessGroup3 = value;
    				OnPropertyChanged(() => AccessGroup3);
    			}
    		}
    	}
    	
    	private Nullable<int> _accessGroup4;
    
    	[DataMember]
    	public Nullable<int> AccessGroup4
    	{ 
    		get { return _accessGroup4; }
    		set
    		{
    			if (_accessGroup4 != value )
    			{
    				_accessGroup4 = value;
    				OnPropertyChanged(() => AccessGroup4);
    			}
    		}
    	}
    	
    	private Nullable<int> _personalAccessGroupNumber;
    
    	[DataMember]
    	public Nullable<int> PersonalAccessGroupNumber
    	{ 
    		get { return _personalAccessGroupNumber; }
    		set
    		{
    			if (_personalAccessGroupNumber != value )
    			{
    				_personalAccessGroupNumber = value;
    				OnPropertyChanged(() => PersonalAccessGroupNumber);
    			}
    		}
    	}
    	
    	private Nullable<int> _inputOutputGroup1;
    
    	[DataMember]
    	public Nullable<int> InputOutputGroup1
    	{ 
    		get { return _inputOutputGroup1; }
    		set
    		{
    			if (_inputOutputGroup1 != value )
    			{
    				_inputOutputGroup1 = value;
    				OnPropertyChanged(() => InputOutputGroup1);
    			}
    		}
    	}
    	
    	private Nullable<int> _inputOutputGroup2;
    
    	[DataMember]
    	public Nullable<int> InputOutputGroup2
    	{ 
    		get { return _inputOutputGroup2; }
    		set
    		{
    			if (_inputOutputGroup2 != value )
    			{
    				_inputOutputGroup2 = value;
    				OnPropertyChanged(() => InputOutputGroup2);
    			}
    		}
    	}
    	
    	private Nullable<int> _inputOutputGroup3;
    
    	[DataMember]
    	public Nullable<int> InputOutputGroup3
    	{ 
    		get { return _inputOutputGroup3; }
    		set
    		{
    			if (_inputOutputGroup3 != value )
    			{
    				_inputOutputGroup3 = value;
    				OnPropertyChanged(() => InputOutputGroup3);
    			}
    		}
    	}
    	
    	private Nullable<int> _inputOutputGroup4;
    
    	[DataMember]
    	public Nullable<int> InputOutputGroup4
    	{ 
    		get { return _inputOutputGroup4; }
    		set
    		{
    			if (_inputOutputGroup4 != value )
    			{
    				_inputOutputGroup4 = value;
    				OnPropertyChanged(() => InputOutputGroup4);
    			}
    		}
    	}
    	
    	private bool _otisSplitGroupOperation;
    
    	[DataMember]
    	public bool OtisSplitGroupOperation
    	{ 
    		get { return _otisSplitGroupOperation; }
    		set
    		{
    			if (_otisSplitGroupOperation != value )
    			{
    				_otisSplitGroupOperation = value;
    				OnPropertyChanged(() => OtisSplitGroupOperation);
    			}
    		}
    	}
    	
    	private bool _otisCimOverride;
    
    	[DataMember]
    	public bool OtisCimOverride
    	{ 
    		get { return _otisCimOverride; }
    		set
    		{
    			if (_otisCimOverride != value )
    			{
    				_otisCimOverride = value;
    				OnPropertyChanged(() => OtisCimOverride);
    			}
    		}
    	}
    	
    	private string _cpuUid;
    
    	[DataMember]
    	public string CpuUid
    	{ 
    		get { return _cpuUid; }
    		set
    		{
    			if (_cpuUid != value )
    			{
    				_cpuUid = value;
    				OnPropertyChanged(() => CpuUid);
    			}
    		}
    	}
    	
    	private string _serverAddress;
    
    	[DataMember]
    	public string ServerAddress
    	{ 
    		get { return _serverAddress; }
    		set
    		{
    			if (_serverAddress != value )
    			{
    				_serverAddress = value;
    				OnPropertyChanged(() => ServerAddress);
    			}
    		}
    	}
    	
    	private int _isConnected;
    
    	[DataMember]
    	public int IsConnected
    	{ 
    		get { return _isConnected; }
    		set
    		{
    			if (_isConnected != value )
    			{
    				_isConnected = value;
    				OnPropertyChanged(() => IsConnected);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _personEmploymentDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> PersonEmploymentDate
    	{ 
    		get { return _personEmploymentDate; }
    		set
    		{
    			if (_personEmploymentDate != value )
    			{
    				_personEmploymentDate = value;
    				OnPropertyChanged(() => PersonEmploymentDate);
    			}
    		}
    	}
    }
    
}
