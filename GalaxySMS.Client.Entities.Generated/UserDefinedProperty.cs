//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    
	[DataContract]
	public partial class UserDefinedProperty : DbObjectBase, ITableEntityBase
    {
    
    /*	// Move to partial class
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    using System.Collections.ObjectModel;
    using GCS.Core.Common.Extensions;
    
    namespace GalaxySMS.Client.Entities
    {
        public partial class UserDefinedProperty
        {
        	public UserDefinedProperty() : base()
        	{
        		Initialize();
        	}
        
        	public UserDefinedProperty(UserDefinedProperty e) : base(e)
        	{
        		Initialize(e);
        	}
        
        	public void Initialize()
        	{
        		base.Initialize();
        		this.UserDefinedBooleanPropertyRules = new HashSet<UserDefinedBooleanPropertyRule>();
        		this.UserDefinedDatePropertyRules = new HashSet<UserDefinedDatePropertyRule>();
        		this.UserDefinedListPropertyItems = new HashSet<UserDefinedListPropertyItem>();
        		this.UserDefinedListPropertyRules = new HashSet<UserDefinedListPropertyRule>();
        		this.UserDefinedNumberPropertyRules = new HashSet<UserDefinedNumberPropertyRule>();
        		this.UserDefinedTextPropertyRules = new HashSet<UserDefinedTextPropertyRule>();
        		this.PersonBooleanProperties = new HashSet<PersonBooleanProperty>();
        		this.PersonDateProperties = new HashSet<PersonDateProperty>();
        		this.PersonListPropertyItems = new HashSet<PersonListPropertyItem>();
        		this.PersonNumberProperties = new HashSet<PersonNumberProperty>();
        		this.PersonTextProperties = new HashSet<PersonTextProperty>();
        		this.UserDefinedGuidPropertyRules = new HashSet<UserDefinedGuidPropertyRule>();
        }
        
        	public void Initialize(UserDefinedProperty e)
        	{
        		Initialize();
        		base.Initialize(e);
        
        		if( e == null )
        			return;
        		this.UserDefinedPropertyUid = e.UserDefinedPropertyUid;
        		this.PropertyTypeUid = e.PropertyTypeUid;
        		this.PropertyName = e.PropertyName;
        		this.Display = e.Display;
        		this.DisplayResourceKey = e.DisplayResourceKey;
        		this.Description = e.Description;
        		this.DescriptionResourceKey = e.DescriptionResourceKey;
        		this.Code = e.Code;
        		this.DisplayOrder = e.DisplayOrder;
        		this.IsDefault = e.IsDefault;
        		this.IsActive = e.IsActive;
        		this.InsertName = e.InsertName;
        		this.InsertDate = e.InsertDate;
        		this.UpdateName = e.UpdateName;
        		this.UpdateDate = e.UpdateDate;
        		this.ConcurrencyValue = e.ConcurrencyValue;
        		this.EntityId = e.EntityId;
        		this.SchemaName = e.SchemaName;
        		this.TableName = e.TableName;
        		this.ColumnName = e.ColumnName;
        		this.UniquePropertyName = e.UniquePropertyName;
        		this.PropertySensitivityLevelUid = e.PropertySensitivityLevelUid;
        		this.UserDefinedBooleanPropertyRules = e.UserDefinedBooleanPropertyRules.ToCollection();
        		this.UserDefinedDatePropertyRules = e.UserDefinedDatePropertyRules.ToCollection();
        		this.UserDefinedListPropertyItems = e.UserDefinedListPropertyItems.ToCollection();
        		this.UserDefinedListPropertyRules = e.UserDefinedListPropertyRules.ToCollection();
        		this.UserDefinedNumberPropertyRules = e.UserDefinedNumberPropertyRules.ToCollection();
        		this.UserDefinedTextPropertyRules = e.UserDefinedTextPropertyRules.ToCollection();
        		this.PersonBooleanProperties = e.PersonBooleanProperties.ToCollection();
        		this.PersonDateProperties = e.PersonDateProperties.ToCollection();
        		this.PersonListPropertyItems = e.PersonListPropertyItems.ToCollection();
        		this.PersonNumberProperties = e.PersonNumberProperties.ToCollection();
        		this.PersonTextProperties = e.PersonTextProperties.ToCollection();
        		this.UserDefinedGuidPropertyRules = e.UserDefinedGuidPropertyRules.ToCollection();
        		
        	}
        
        	public UserDefinedProperty Clone(UserDefinedProperty e)
        	{
        		return new UserDefinedProperty(e);
        	}
        
        	public bool Equals(UserDefinedProperty other)
        	{
        		return base.Equals(other);
        	}
        	
        	public bool IsPrimaryKeyEqual(UserDefinedProperty other)
        	{
        		if( other == null ) 
        			return false;
        
        		if(other.UserDefinedPropertyUid != this.UserDefinedPropertyUid )
        			return false;
        		return true;
        	}
        
        	public override int GetHashCode()
        	{
        		return base.GetHashCode();
        	}
        
        	public override string ToString()
        	{
        		return base.ToString();
        	}
        }
    }
    */
    
    	
    	private System.Guid _userDefinedPropertyUid;
    
    	[DataMember]
    	public System.Guid UserDefinedPropertyUid
    	{ 
    		get { return _userDefinedPropertyUid; }
    		set
    		{
    			if (_userDefinedPropertyUid != value )
    			{
    				_userDefinedPropertyUid = value;
    				OnPropertyChanged(() => UserDefinedPropertyUid);
    			}
    		}
    	}
    	
    	private System.Guid _propertyTypeUid;
    
    	[DataMember]
    	public System.Guid PropertyTypeUid
    	{ 
    		get { return _propertyTypeUid; }
    		set
    		{
    			if (_propertyTypeUid != value )
    			{
    				_propertyTypeUid = value;
    				OnPropertyChanged(() => PropertyTypeUid);
    			}
    		}
    	}
    	
    	private string _propertyName;
    
    	[DataMember]
    	public string PropertyName
    	{ 
    		get { return _propertyName; }
    		set
    		{
    			if (_propertyName != value )
    			{
    				_propertyName = value;
    				OnPropertyChanged(() => PropertyName);
    			}
    		}
    	}
    	
    	private string _display;
    
    	[DataMember]
    	public string Display
    	{ 
    		get { return _display; }
    		set
    		{
    			if (_display != value )
    			{
    				_display = value;
    				OnPropertyChanged(() => Display);
    			}
    		}
    	}
    	
    	private Nullable<System.Guid> _displayResourceKey;
    
    	[DataMember]
    	public Nullable<System.Guid> DisplayResourceKey
    	{ 
    		get { return _displayResourceKey; }
    		set
    		{
    			if (_displayResourceKey != value )
    			{
    				_displayResourceKey = value;
    				OnPropertyChanged(() => DisplayResourceKey);
    			}
    		}
    	}
    	
    	private string _description;
    
    	[DataMember]
    	public string Description
    	{ 
    		get { return _description; }
    		set
    		{
    			if (_description != value )
    			{
    				_description = value;
    				OnPropertyChanged(() => Description);
    			}
    		}
    	}
    	
    	private Nullable<System.Guid> _descriptionResourceKey;
    
    	[DataMember]
    	public Nullable<System.Guid> DescriptionResourceKey
    	{ 
    		get { return _descriptionResourceKey; }
    		set
    		{
    			if (_descriptionResourceKey != value )
    			{
    				_descriptionResourceKey = value;
    				OnPropertyChanged(() => DescriptionResourceKey);
    			}
    		}
    	}
    	
    	private short _code;
    
    	[DataMember]
    	public short Code
    	{ 
    		get { return _code; }
    		set
    		{
    			if (_code != value )
    			{
    				_code = value;
    				OnPropertyChanged(() => Code);
    			}
    		}
    	}
    	
    	private int _displayOrder;
    
    	[DataMember]
    	public int DisplayOrder
    	{ 
    		get { return _displayOrder; }
    		set
    		{
    			if (_displayOrder != value )
    			{
    				_displayOrder = value;
    				OnPropertyChanged(() => DisplayOrder);
    			}
    		}
    	}
    	
    	private bool _isDefault;
    
    	[DataMember]
    	public bool IsDefault
    	{ 
    		get { return _isDefault; }
    		set
    		{
    			if (_isDefault != value )
    			{
    				_isDefault = value;
    				OnPropertyChanged(() => IsDefault);
    			}
    		}
    	}
    	
    	private bool _isActive;
    
    	[DataMember]
    	public bool IsActive
    	{ 
    		get { return _isActive; }
    		set
    		{
    			if (_isActive != value )
    			{
    				_isActive = value;
    				OnPropertyChanged(() => IsActive);
    			}
    		}
    	}
    	
    	private string _insertName;
    
    	[DataMember]
    	public string InsertName
    	{ 
    		get { return _insertName; }
    		set
    		{
    			if (_insertName != value )
    			{
    				_insertName = value;
    				OnPropertyChanged(() => InsertName);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _insertDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> InsertDate
    	{ 
    		get { return _insertDate; }
    		set
    		{
    			if (_insertDate != value )
    			{
    				_insertDate = value;
    				OnPropertyChanged(() => InsertDate);
    			}
    		}
    	}
    	
    	private string _updateName;
    
    	[DataMember]
    	public string UpdateName
    	{ 
    		get { return _updateName; }
    		set
    		{
    			if (_updateName != value )
    			{
    				_updateName = value;
    				OnPropertyChanged(() => UpdateName);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _updateDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> UpdateDate
    	{ 
    		get { return _updateDate; }
    		set
    		{
    			if (_updateDate != value )
    			{
    				_updateDate = value;
    				OnPropertyChanged(() => UpdateDate);
    			}
    		}
    	}
    	
    	private Nullable<short> _concurrencyValue;
    
    	[DataMember]
    	public Nullable<short> ConcurrencyValue
    	{ 
    		get { return _concurrencyValue; }
    		set
    		{
    			if (_concurrencyValue != value )
    			{
    				_concurrencyValue = value;
    				OnPropertyChanged(() => ConcurrencyValue);
    			}
    		}
    	}
    	
    	private System.Guid _entityId;
    
    	[DataMember]
    	public System.Guid EntityId
    	{ 
    		get { return _entityId; }
    		set
    		{
    			if (_entityId != value )
    			{
    				_entityId = value;
    				OnPropertyChanged(() => EntityId);
    			}
    		}
    	}
    	
    	private string _schemaName;
    
    	[DataMember]
    	public string SchemaName
    	{ 
    		get { return _schemaName; }
    		set
    		{
    			if (_schemaName != value )
    			{
    				_schemaName = value;
    				OnPropertyChanged(() => SchemaName);
    			}
    		}
    	}
    	
    	private string _tableName;
    
    	[DataMember]
    	public string TableName
    	{ 
    		get { return _tableName; }
    		set
    		{
    			if (_tableName != value )
    			{
    				_tableName = value;
    				OnPropertyChanged(() => TableName);
    			}
    		}
    	}
    	
    	private string _columnName;
    
    	[DataMember]
    	public string ColumnName
    	{ 
    		get { return _columnName; }
    		set
    		{
    			if (_columnName != value )
    			{
    				_columnName = value;
    				OnPropertyChanged(() => ColumnName);
    			}
    		}
    	}
    	
    	private string _uniquePropertyName;
    
    	[DataMember]
    	public string UniquePropertyName
    	{ 
    		get { return _uniquePropertyName; }
    		set
    		{
    			if (_uniquePropertyName != value )
    			{
    				_uniquePropertyName = value;
    				OnPropertyChanged(() => UniquePropertyName);
    			}
    		}
    	}
    	
    	private System.Guid _propertySensitivityLevelUid;
    
    	[DataMember]
    	public System.Guid PropertySensitivityLevelUid
    	{ 
    		get { return _propertySensitivityLevelUid; }
    		set
    		{
    			if (_propertySensitivityLevelUid != value )
    			{
    				_propertySensitivityLevelUid = value;
    				OnPropertyChanged(() => PropertySensitivityLevelUid);
    			}
    		}
    	}
    
    	
    	private ICollection<UserDefinedBooleanPropertyRule> _userDefinedBooleanPropertyRules;
    
    	[DataMember]
    	public virtual ICollection<UserDefinedBooleanPropertyRule> UserDefinedBooleanPropertyRules
    	{ 
    		get { return _userDefinedBooleanPropertyRules; }
    		set
    		{
    			if (_userDefinedBooleanPropertyRules != value )
    			{
    				_userDefinedBooleanPropertyRules = value;
    				OnPropertyChanged(() => UserDefinedBooleanPropertyRules);
    			}
    		}
    	}
    	
    	private ICollection<UserDefinedDatePropertyRule> _userDefinedDatePropertyRules;
    
    	[DataMember]
    	public virtual ICollection<UserDefinedDatePropertyRule> UserDefinedDatePropertyRules
    	{ 
    		get { return _userDefinedDatePropertyRules; }
    		set
    		{
    			if (_userDefinedDatePropertyRules != value )
    			{
    				_userDefinedDatePropertyRules = value;
    				OnPropertyChanged(() => UserDefinedDatePropertyRules);
    			}
    		}
    	}
    	
    	private ICollection<UserDefinedListPropertyItem> _userDefinedListPropertyItems;
    
    	[DataMember]
    	public virtual ICollection<UserDefinedListPropertyItem> UserDefinedListPropertyItems
    	{ 
    		get { return _userDefinedListPropertyItems; }
    		set
    		{
    			if (_userDefinedListPropertyItems != value )
    			{
    				_userDefinedListPropertyItems = value;
    				OnPropertyChanged(() => UserDefinedListPropertyItems);
    			}
    		}
    	}
    	
    	private ICollection<UserDefinedListPropertyRule> _userDefinedListPropertyRules;
    
    	[DataMember]
    	public virtual ICollection<UserDefinedListPropertyRule> UserDefinedListPropertyRules
    	{ 
    		get { return _userDefinedListPropertyRules; }
    		set
    		{
    			if (_userDefinedListPropertyRules != value )
    			{
    				_userDefinedListPropertyRules = value;
    				OnPropertyChanged(() => UserDefinedListPropertyRules);
    			}
    		}
    	}
    	
    	private ICollection<UserDefinedNumberPropertyRule> _userDefinedNumberPropertyRules;
    
    	[DataMember]
    	public virtual ICollection<UserDefinedNumberPropertyRule> UserDefinedNumberPropertyRules
    	{ 
    		get { return _userDefinedNumberPropertyRules; }
    		set
    		{
    			if (_userDefinedNumberPropertyRules != value )
    			{
    				_userDefinedNumberPropertyRules = value;
    				OnPropertyChanged(() => UserDefinedNumberPropertyRules);
    			}
    		}
    	}
    	
    	private UserDefinedPropertyType _userDefinedPropertyType;
    
    	[DataMember]
    	public virtual UserDefinedPropertyType UserDefinedPropertyType
    	{ 
    		get { return _userDefinedPropertyType; }
    		set
    		{
    			if (_userDefinedPropertyType != value )
    			{
    				_userDefinedPropertyType = value;
    				OnPropertyChanged(() => UserDefinedPropertyType);
    			}
    		}
    	}
    	
    	private ICollection<UserDefinedTextPropertyRule> _userDefinedTextPropertyRules;
    
    	[DataMember]
    	public virtual ICollection<UserDefinedTextPropertyRule> UserDefinedTextPropertyRules
    	{ 
    		get { return _userDefinedTextPropertyRules; }
    		set
    		{
    			if (_userDefinedTextPropertyRules != value )
    			{
    				_userDefinedTextPropertyRules = value;
    				OnPropertyChanged(() => UserDefinedTextPropertyRules);
    			}
    		}
    	}
    	
    	private gcsEntity _gcsEntity;
    
    	[DataMember]
    	public virtual gcsEntity gcsEntity
    	{ 
    		get { return _gcsEntity; }
    		set
    		{
    			if (_gcsEntity != value )
    			{
    				_gcsEntity = value;
    				OnPropertyChanged(() => gcsEntity);
    			}
    		}
    	}
    	
    	private ICollection<PersonBooleanProperty> _personBooleanProperties;
    
    	[DataMember]
    	public virtual ICollection<PersonBooleanProperty> PersonBooleanProperties
    	{ 
    		get { return _personBooleanProperties; }
    		set
    		{
    			if (_personBooleanProperties != value )
    			{
    				_personBooleanProperties = value;
    				OnPropertyChanged(() => PersonBooleanProperties);
    			}
    		}
    	}
    	
    	private ICollection<PersonDateProperty> _personDateProperties;
    
    	[DataMember]
    	public virtual ICollection<PersonDateProperty> PersonDateProperties
    	{ 
    		get { return _personDateProperties; }
    		set
    		{
    			if (_personDateProperties != value )
    			{
    				_personDateProperties = value;
    				OnPropertyChanged(() => PersonDateProperties);
    			}
    		}
    	}
    	
    	private ICollection<PersonListPropertyItem> _personListPropertyItems;
    
    	[DataMember]
    	public virtual ICollection<PersonListPropertyItem> PersonListPropertyItems
    	{ 
    		get { return _personListPropertyItems; }
    		set
    		{
    			if (_personListPropertyItems != value )
    			{
    				_personListPropertyItems = value;
    				OnPropertyChanged(() => PersonListPropertyItems);
    			}
    		}
    	}
    	
    	private ICollection<PersonNumberProperty> _personNumberProperties;
    
    	[DataMember]
    	public virtual ICollection<PersonNumberProperty> PersonNumberProperties
    	{ 
    		get { return _personNumberProperties; }
    		set
    		{
    			if (_personNumberProperties != value )
    			{
    				_personNumberProperties = value;
    				OnPropertyChanged(() => PersonNumberProperties);
    			}
    		}
    	}
    	
    	private ICollection<PersonTextProperty> _personTextProperties;
    
    	[DataMember]
    	public virtual ICollection<PersonTextProperty> PersonTextProperties
    	{ 
    		get { return _personTextProperties; }
    		set
    		{
    			if (_personTextProperties != value )
    			{
    				_personTextProperties = value;
    				OnPropertyChanged(() => PersonTextProperties);
    			}
    		}
    	}
    	
    	private ICollection<UserDefinedGuidPropertyRule> _userDefinedGuidPropertyRules;
    
    	[DataMember]
    	public virtual ICollection<UserDefinedGuidPropertyRule> UserDefinedGuidPropertyRules
    	{ 
    		get { return _userDefinedGuidPropertyRules; }
    		set
    		{
    			if (_userDefinedGuidPropertyRules != value )
    			{
    				_userDefinedGuidPropertyRules = value;
    				OnPropertyChanged(() => UserDefinedGuidPropertyRules);
    			}
    		}
    	}
    }
    
}
