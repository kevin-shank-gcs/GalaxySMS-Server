//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    
	[DataContract]
	public partial class Site : DbObjectBase, ITableEntityBase
    {
    
    /*	// Move to partial class
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    using System.Collections.ObjectModel;
    using GCS.Core.Common.Extensions;
    
    namespace GalaxySMS.Client.Entities
    {
        public partial class Site
        {
        	public Site() : base()
        	{
        		Initialize();
        	}
        
        	public Site(Site e) : base(e)
        	{
        		Initialize(e);
        	}
        
        	public void Initialize()
        	{
        		base.Initialize();
        		this.AssaAccessPoints = new HashSet<AssaAccessPoint>();
        		this.GalaxyPanelSites = new HashSet<GalaxyPanelSite>();
        		this.RoleSites = new HashSet<RoleSite>();
        		this.MercScpGroups = new HashSet<MercScpGroup>();
        }
        
        	public void Initialize(Site e)
        	{
        		Initialize();
        		base.Initialize(e);
        
        		if( e == null )
        			return;
        		this.SiteUid = e.SiteUid;
        		this.RegionUid = e.RegionUid;
        		this.SiteName = e.SiteName;
        		this.InsertName = e.InsertName;
        		this.InsertDate = e.InsertDate;
        		this.UpdateName = e.UpdateName;
        		this.UpdateDate = e.UpdateDate;
        		this.ConcurrencyValue = e.ConcurrencyValue;
        		this.SiteId = e.SiteId;
        		this.BinaryResourceUid = e.BinaryResourceUid;
        		this.Longitude = e.Longitude;
        		this.Latitude = e.Latitude;
        		this.AddressUid = e.AddressUid;
        		this.EntityId = e.EntityId;
        		this.AssaAccessPoints = e.AssaAccessPoints.ToCollection();
        		this.GalaxyPanelSites = e.GalaxyPanelSites.ToCollection();
        		this.RoleSites = e.RoleSites.ToCollection();
        		this.MercScpGroups = e.MercScpGroups.ToCollection();
        		
        	}
        
        	public Site Clone(Site e)
        	{
        		return new Site(e);
        	}
        
        	public bool Equals(Site other)
        	{
        		return base.Equals(other);
        	}
        	
        	public bool IsPrimaryKeyEqual(Site other)
        	{
        		if( other == null ) 
        			return false;
        
        		if(other.SiteUid != this.SiteUid )
        			return false;
        		return true;
        	}
        
        	public override int GetHashCode()
        	{
        		return base.GetHashCode();
        	}
        
        	public override string ToString()
        	{
        		return base.ToString();
        	}
        }
    }
    */
    
    	
    	private System.Guid _siteUid;
    
    	[DataMember]
    	public System.Guid SiteUid
    	{ 
    		get { return _siteUid; }
    		set
    		{
    			if (_siteUid != value )
    			{
    				_siteUid = value;
    				OnPropertyChanged(() => SiteUid);
    			}
    		}
    	}
    	
    	private System.Guid _regionUid;
    
    	[DataMember]
    	public System.Guid RegionUid
    	{ 
    		get { return _regionUid; }
    		set
    		{
    			if (_regionUid != value )
    			{
    				_regionUid = value;
    				OnPropertyChanged(() => RegionUid);
    			}
    		}
    	}
    	
    	private string _siteName;
    
    	[DataMember]
    	public string SiteName
    	{ 
    		get { return _siteName; }
    		set
    		{
    			if (_siteName != value )
    			{
    				_siteName = value;
    				OnPropertyChanged(() => SiteName);
    			}
    		}
    	}
    	
    	private string _insertName;
    
    	[DataMember]
    	public string InsertName
    	{ 
    		get { return _insertName; }
    		set
    		{
    			if (_insertName != value )
    			{
    				_insertName = value;
    				OnPropertyChanged(() => InsertName);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _insertDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> InsertDate
    	{ 
    		get { return _insertDate; }
    		set
    		{
    			if (_insertDate != value )
    			{
    				_insertDate = value;
    				OnPropertyChanged(() => InsertDate);
    			}
    		}
    	}
    	
    	private string _updateName;
    
    	[DataMember]
    	public string UpdateName
    	{ 
    		get { return _updateName; }
    		set
    		{
    			if (_updateName != value )
    			{
    				_updateName = value;
    				OnPropertyChanged(() => UpdateName);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _updateDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> UpdateDate
    	{ 
    		get { return _updateDate; }
    		set
    		{
    			if (_updateDate != value )
    			{
    				_updateDate = value;
    				OnPropertyChanged(() => UpdateDate);
    			}
    		}
    	}
    	
    	private Nullable<short> _concurrencyValue;
    
    	[DataMember]
    	public Nullable<short> ConcurrencyValue
    	{ 
    		get { return _concurrencyValue; }
    		set
    		{
    			if (_concurrencyValue != value )
    			{
    				_concurrencyValue = value;
    				OnPropertyChanged(() => ConcurrencyValue);
    			}
    		}
    	}
    	
    	private string _siteId;
    
    	[DataMember]
    	public string SiteId
    	{ 
    		get { return _siteId; }
    		set
    		{
    			if (_siteId != value )
    			{
    				_siteId = value;
    				OnPropertyChanged(() => SiteId);
    			}
    		}
    	}
    	
    	private Nullable<System.Guid> _binaryResourceUid;
    
    	[DataMember]
    	public Nullable<System.Guid> BinaryResourceUid
    	{ 
    		get { return _binaryResourceUid; }
    		set
    		{
    			if (_binaryResourceUid != value )
    			{
    				_binaryResourceUid = value;
    				OnPropertyChanged(() => BinaryResourceUid);
    			}
    		}
    	}
    	
    	private Nullable<double> _longitude;
    
    	[DataMember]
    	public Nullable<double> Longitude
    	{ 
    		get { return _longitude; }
    		set
    		{
    			if (_longitude != value )
    			{
    				_longitude = value;
    				OnPropertyChanged(() => Longitude);
    			}
    		}
    	}
    	
    	private Nullable<double> _latitude;
    
    	[DataMember]
    	public Nullable<double> Latitude
    	{ 
    		get { return _latitude; }
    		set
    		{
    			if (_latitude != value )
    			{
    				_latitude = value;
    				OnPropertyChanged(() => Latitude);
    			}
    		}
    	}
    	
    	private Nullable<System.Guid> _addressUid;
    
    	[DataMember]
    	public Nullable<System.Guid> AddressUid
    	{ 
    		get { return _addressUid; }
    		set
    		{
    			if (_addressUid != value )
    			{
    				_addressUid = value;
    				OnPropertyChanged(() => AddressUid);
    			}
    		}
    	}
    	
    	private System.Guid _entityId;
    
    	[DataMember]
    	public System.Guid EntityId
    	{ 
    		get { return _entityId; }
    		set
    		{
    			if (_entityId != value )
    			{
    				_entityId = value;
    				OnPropertyChanged(() => EntityId);
    			}
    		}
    	}
    
    	
    	private gcsBinaryResource _gcsBinaryResource;
    
    	[DataMember]
    	public virtual gcsBinaryResource gcsBinaryResource
    	{ 
    		get { return _gcsBinaryResource; }
    		set
    		{
    			if (_gcsBinaryResource != value )
    			{
    				_gcsBinaryResource = value;
    				OnPropertyChanged(() => gcsBinaryResource);
    			}
    		}
    	}
    	
    	private Address _address;
    
    	[DataMember]
    	public virtual Address Address
    	{ 
    		get { return _address; }
    		set
    		{
    			if (_address != value )
    			{
    				_address = value;
    				OnPropertyChanged(() => Address);
    			}
    		}
    	}
    	
    	private ICollection<AssaAccessPoint> _assaAccessPoints;
    
    	[DataMember]
    	public virtual ICollection<AssaAccessPoint> AssaAccessPoints
    	{ 
    		get { return _assaAccessPoints; }
    		set
    		{
    			if (_assaAccessPoints != value )
    			{
    				_assaAccessPoints = value;
    				OnPropertyChanged(() => AssaAccessPoints);
    			}
    		}
    	}
    	
    	private ICollection<GalaxyPanelSite> _galaxyPanelSites;
    
    	[DataMember]
    	public virtual ICollection<GalaxyPanelSite> GalaxyPanelSites
    	{ 
    		get { return _galaxyPanelSites; }
    		set
    		{
    			if (_galaxyPanelSites != value )
    			{
    				_galaxyPanelSites = value;
    				OnPropertyChanged(() => GalaxyPanelSites);
    			}
    		}
    	}
    	
    	private ICollection<RoleSite> _roleSites;
    
    	[DataMember]
    	public virtual ICollection<RoleSite> RoleSites
    	{ 
    		get { return _roleSites; }
    		set
    		{
    			if (_roleSites != value )
    			{
    				_roleSites = value;
    				OnPropertyChanged(() => RoleSites);
    			}
    		}
    	}
    	
    	private ICollection<MercScpGroup> _mercScpGroups;
    
    	[DataMember]
    	public virtual ICollection<MercScpGroup> MercScpGroups
    	{ 
    		get { return _mercScpGroups; }
    		set
    		{
    			if (_mercScpGroups != value )
    			{
    				_mercScpGroups = value;
    				OnPropertyChanged(() => MercScpGroups);
    			}
    		}
    	}
    }
    
}
