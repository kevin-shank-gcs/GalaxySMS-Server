//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    
	[DataContract]
	public partial class AccessGroup : DbObjectBase, ITableEntityBase
    {
    
    /*	// Move to partial class
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    using System.Collections.ObjectModel;
    using GCS.Core.Common.Extensions;
    
    namespace GalaxySMS.Client.Entities
    {
        public partial class AccessGroup
        {
        	public AccessGroup() : base()
        	{
        		Initialize();
        	}
        
        	public AccessGroup(AccessGroup e) : base(e)
        	{
        		Initialize(e);
        	}
        
        	public void Initialize()
        	{
        		base.Initialize();
        		this.AccessGroupAccessPortals = new HashSet<AccessGroupAccessPortal>();
        		this.AccessProfileAccessGroups = new HashSet<AccessProfileAccessGroup>();
        		this.PersonalAccessGroupDynamicAccessGroups = new HashSet<PersonalAccessGroupDynamicAccessGroup>();
        }
        
        	public void Initialize(AccessGroup e)
        	{
        		Initialize();
        		base.Initialize(e);
        
        		if( e == null )
        			return;
        		this.AccessGroupUid = e.AccessGroupUid;
        		this.ClusterUid = e.ClusterUid;
        		this.AccessGroupNumber = e.AccessGroupNumber;
        		this.AccessGroupName = e.AccessGroupName;
        		this.Description = e.Description;
        		this.ServiceComment = e.ServiceComment;
        		this.Comment = e.Comment;
        		this.IsExtended = e.IsExtended;
        		this.IsEnabled = e.IsEnabled;
        		this.ActivationDate = e.ActivationDate;
        		this.ExpirationDate = e.ExpirationDate;
        		this.InsertName = e.InsertName;
        		this.InsertDate = e.InsertDate;
        		this.UpdateName = e.UpdateName;
        		this.UpdateDate = e.UpdateDate;
        		this.ConcurrencyValue = e.ConcurrencyValue;
        		this.DisplayResourceKey = e.DisplayResourceKey;
        		this.DescriptionResourceKey = e.DescriptionResourceKey;
        		this.Display = e.Display;
        		this.CrisisModeAccessGroupUid = e.CrisisModeAccessGroupUid;
        		this.EntityId = e.EntityId;
        		this.DefaultTimeScheduleUid = e.DefaultTimeScheduleUid;
        		this.AccessGroupAccessPortals = e.AccessGroupAccessPortals.ToCollection();
        		this.AccessProfileAccessGroups = e.AccessProfileAccessGroups.ToCollection();
        		this.PersonalAccessGroupDynamicAccessGroups = e.PersonalAccessGroupDynamicAccessGroups.ToCollection();
        		
        	}
        
        	public AccessGroup Clone(AccessGroup e)
        	{
        		return new AccessGroup(e);
        	}
        
        	public bool Equals(AccessGroup other)
        	{
        		return base.Equals(other);
        	}
        	
        	public bool IsPrimaryKeyEqual(AccessGroup other)
        	{
        		if( other == null ) 
        			return false;
        
        		if(other.AccessGroupUid != this.AccessGroupUid )
        			return false;
        		return true;
        	}
        
        	public override int GetHashCode()
        	{
        		return base.GetHashCode();
        	}
        
        	public override string ToString()
        	{
        		return base.ToString();
        	}
        }
    }
    */
    
    	
    	private System.Guid _accessGroupUid;
    
    	[DataMember]
    	public System.Guid AccessGroupUid
    	{ 
    		get { return _accessGroupUid; }
    		set
    		{
    			if (_accessGroupUid != value )
    			{
    				_accessGroupUid = value;
    				OnPropertyChanged(() => AccessGroupUid);
    			}
    		}
    	}
    	
    	private System.Guid _clusterUid;
    
    	[DataMember]
    	public System.Guid ClusterUid
    	{ 
    		get { return _clusterUid; }
    		set
    		{
    			if (_clusterUid != value )
    			{
    				_clusterUid = value;
    				OnPropertyChanged(() => ClusterUid);
    			}
    		}
    	}
    	
    	private int _accessGroupNumber;
    
    	[DataMember]
    	public int AccessGroupNumber
    	{ 
    		get { return _accessGroupNumber; }
    		set
    		{
    			if (_accessGroupNumber != value )
    			{
    				_accessGroupNumber = value;
    				OnPropertyChanged(() => AccessGroupNumber);
    			}
    		}
    	}
    	
    	private string _accessGroupName;
    
    	[DataMember]
    	public string AccessGroupName
    	{ 
    		get { return _accessGroupName; }
    		set
    		{
    			if (_accessGroupName != value )
    			{
    				_accessGroupName = value;
    				OnPropertyChanged(() => AccessGroupName);
    			}
    		}
    	}
    	
    	private string _description;
    
    	[DataMember]
    	public string Description
    	{ 
    		get { return _description; }
    		set
    		{
    			if (_description != value )
    			{
    				_description = value;
    				OnPropertyChanged(() => Description);
    			}
    		}
    	}
    	
    	private string _serviceComment;
    
    	[DataMember]
    	public string ServiceComment
    	{ 
    		get { return _serviceComment; }
    		set
    		{
    			if (_serviceComment != value )
    			{
    				_serviceComment = value;
    				OnPropertyChanged(() => ServiceComment);
    			}
    		}
    	}
    	
    	private string _comment;
    
    	[DataMember]
    	public string Comment
    	{ 
    		get { return _comment; }
    		set
    		{
    			if (_comment != value )
    			{
    				_comment = value;
    				OnPropertyChanged(() => Comment);
    			}
    		}
    	}
    	
    	private int _isExtended;
    
    	[DataMember]
    	public int IsExtended
    	{ 
    		get { return _isExtended; }
    		set
    		{
    			if (_isExtended != value )
    			{
    				_isExtended = value;
    				OnPropertyChanged(() => IsExtended);
    			}
    		}
    	}
    	
    	private bool _isEnabled;
    
    	[DataMember]
    	public bool IsEnabled
    	{ 
    		get { return _isEnabled; }
    		set
    		{
    			if (_isEnabled != value )
    			{
    				_isEnabled = value;
    				OnPropertyChanged(() => IsEnabled);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _activationDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> ActivationDate
    	{ 
    		get { return _activationDate; }
    		set
    		{
    			if (_activationDate != value )
    			{
    				_activationDate = value;
    				OnPropertyChanged(() => ActivationDate);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _expirationDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> ExpirationDate
    	{ 
    		get { return _expirationDate; }
    		set
    		{
    			if (_expirationDate != value )
    			{
    				_expirationDate = value;
    				OnPropertyChanged(() => ExpirationDate);
    			}
    		}
    	}
    	
    	private string _insertName;
    
    	[DataMember]
    	public string InsertName
    	{ 
    		get { return _insertName; }
    		set
    		{
    			if (_insertName != value )
    			{
    				_insertName = value;
    				OnPropertyChanged(() => InsertName);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _insertDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> InsertDate
    	{ 
    		get { return _insertDate; }
    		set
    		{
    			if (_insertDate != value )
    			{
    				_insertDate = value;
    				OnPropertyChanged(() => InsertDate);
    			}
    		}
    	}
    	
    	private string _updateName;
    
    	[DataMember]
    	public string UpdateName
    	{ 
    		get { return _updateName; }
    		set
    		{
    			if (_updateName != value )
    			{
    				_updateName = value;
    				OnPropertyChanged(() => UpdateName);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTime> _updateDate;
    
    	[DataMember]
    	public Nullable<System.DateTime> UpdateDate
    	{ 
    		get { return _updateDate; }
    		set
    		{
    			if (_updateDate != value )
    			{
    				_updateDate = value;
    				OnPropertyChanged(() => UpdateDate);
    			}
    		}
    	}
    	
    	private Nullable<short> _concurrencyValue;
    
    	[DataMember]
    	public Nullable<short> ConcurrencyValue
    	{ 
    		get { return _concurrencyValue; }
    		set
    		{
    			if (_concurrencyValue != value )
    			{
    				_concurrencyValue = value;
    				OnPropertyChanged(() => ConcurrencyValue);
    			}
    		}
    	}
    	
    	private Nullable<System.Guid> _displayResourceKey;
    
    	[DataMember]
    	public Nullable<System.Guid> DisplayResourceKey
    	{ 
    		get { return _displayResourceKey; }
    		set
    		{
    			if (_displayResourceKey != value )
    			{
    				_displayResourceKey = value;
    				OnPropertyChanged(() => DisplayResourceKey);
    			}
    		}
    	}
    	
    	private Nullable<System.Guid> _descriptionResourceKey;
    
    	[DataMember]
    	public Nullable<System.Guid> DescriptionResourceKey
    	{ 
    		get { return _descriptionResourceKey; }
    		set
    		{
    			if (_descriptionResourceKey != value )
    			{
    				_descriptionResourceKey = value;
    				OnPropertyChanged(() => DescriptionResourceKey);
    			}
    		}
    	}
    	
    	private string _display;
    
    	[DataMember]
    	public string Display
    	{ 
    		get { return _display; }
    		set
    		{
    			if (_display != value )
    			{
    				_display = value;
    				OnPropertyChanged(() => Display);
    			}
    		}
    	}
    	
    	private Nullable<System.Guid> _crisisModeAccessGroupUid;
    
    	[DataMember]
    	public Nullable<System.Guid> CrisisModeAccessGroupUid
    	{ 
    		get { return _crisisModeAccessGroupUid; }
    		set
    		{
    			if (_crisisModeAccessGroupUid != value )
    			{
    				_crisisModeAccessGroupUid = value;
    				OnPropertyChanged(() => CrisisModeAccessGroupUid);
    			}
    		}
    	}
    	
    	private System.Guid _entityId;
    
    	[DataMember]
    	public System.Guid EntityId
    	{ 
    		get { return _entityId; }
    		set
    		{
    			if (_entityId != value )
    			{
    				_entityId = value;
    				OnPropertyChanged(() => EntityId);
    			}
    		}
    	}
    	
    	private System.Guid _defaultTimeScheduleUid;
    
    	[DataMember]
    	public System.Guid DefaultTimeScheduleUid
    	{ 
    		get { return _defaultTimeScheduleUid; }
    		set
    		{
    			if (_defaultTimeScheduleUid != value )
    			{
    				_defaultTimeScheduleUid = value;
    				OnPropertyChanged(() => DefaultTimeScheduleUid);
    			}
    		}
    	}
    
    	
    	private Cluster _cluster;
    
    	[DataMember]
    	public virtual Cluster Cluster
    	{ 
    		get { return _cluster; }
    		set
    		{
    			if (_cluster != value )
    			{
    				_cluster = value;
    				OnPropertyChanged(() => Cluster);
    			}
    		}
    	}
    	
    	private gcsEntity _gcsEntity;
    
    	[DataMember]
    	public virtual gcsEntity gcsEntity
    	{ 
    		get { return _gcsEntity; }
    		set
    		{
    			if (_gcsEntity != value )
    			{
    				_gcsEntity = value;
    				OnPropertyChanged(() => gcsEntity);
    			}
    		}
    	}
    	
    	private ICollection<AccessGroupAccessPortal> _accessGroupAccessPortals;
    
    	[DataMember]
    	public virtual ICollection<AccessGroupAccessPortal> AccessGroupAccessPortals
    	{ 
    		get { return _accessGroupAccessPortals; }
    		set
    		{
    			if (_accessGroupAccessPortals != value )
    			{
    				_accessGroupAccessPortals = value;
    				OnPropertyChanged(() => AccessGroupAccessPortals);
    			}
    		}
    	}
    	
    	private ICollection<AccessProfileAccessGroup> _accessProfileAccessGroups;
    
    	[DataMember]
    	public virtual ICollection<AccessProfileAccessGroup> AccessProfileAccessGroups
    	{ 
    		get { return _accessProfileAccessGroups; }
    		set
    		{
    			if (_accessProfileAccessGroups != value )
    			{
    				_accessProfileAccessGroups = value;
    				OnPropertyChanged(() => AccessProfileAccessGroups);
    			}
    		}
    	}
    	
    	private ICollection<PersonalAccessGroupDynamicAccessGroup> _personalAccessGroupDynamicAccessGroups;
    
    	[DataMember]
    	public virtual ICollection<PersonalAccessGroupDynamicAccessGroup> PersonalAccessGroupDynamicAccessGroups
    	{ 
    		get { return _personalAccessGroupDynamicAccessGroups; }
    		set
    		{
    			if (_personalAccessGroupDynamicAccessGroups != value )
    			{
    				_personalAccessGroupDynamicAccessGroups = value;
    				OnPropertyChanged(() => PersonalAccessGroupDynamicAccessGroups);
    			}
    		}
    	}
    }
    
}
