using System;
using System.Data;
using System.Text;

using PDSA.Common;
using PDSA.DataLayer;
using PDSA.DataLayer.DataClasses;
using PDSA.Validation;

using GalaxySMS.EntityLayer;
using GalaxySMS.ValidationLayer;

namespace GalaxySMS.DataLayer
{
  /// <summary>
  /// This class calls the stored procedure TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSA
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public class TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAData : PDSAStoredProcReadOnly
  {
    #region Constructors
    /// <summary>
    /// Constructor for the TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAData class
    /// </summary>
    public TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAData() : base()
    {
      Entity = new TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSA();
      ValidatorObject = new  TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator(Entity);

      Init();
    }

    /// <summary>
    /// Constructor for the TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAData class
    /// </summary>
    /// <param name="entity">An instance of a TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSA</param>
    public TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAData(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSA entity) : base()
    {
      Entity = entity;
      ValidatorObject = new TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator(Entity);
            
      Init();
    }
    
    /// <summary>
    /// Constructor for the TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAData class
    /// </summary>
    /// <param name="dataProvider">An instance of a PDSADataProvider</param>
    /// <param name="entity">An instance of a TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSA</param>
    public TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAData(PDSADataProvider dataProvider,
      TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSA entity)
      : base(dataProvider)
    {
      Entity = entity;
      ValidatorObject = new  TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator(Entity);
            
      Init();
    }
    
    /// <summary>
    /// Constructor for the TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAData class
    /// </summary>
    /// <param name="dataProvider">An instance of a PDSADataProvider</param>
    /// <param name="entity">An instance of a TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSA</param>
    /// <param name="validator">An instance of a TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator</param>
    public TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAData(PDSADataProvider dataProvider,
      TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSA entity, TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator validator)
      : base(dataProvider)
    {
      Entity = entity;
      ValidatorObject = validator;

      Init();
    }
    #endregion

    #region Public Property
    /// <summary>
    /// Get/Set the Entity class that will be used to get and set properties/fields for this data class.
    /// </summary>
    public TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSA Entity { get; set; }
    #endregion

    #region Init Method
    /// <summary>
    /// Initializes this class to a valid start state.
    /// </summary>
    protected override void Init()
    {
      ClassName = "TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAData";
      StoredProcName = "TimeSchedule_GetTimeScheduleUsageCountsForCluster";
      SchemaName = "GCS";

      // Create Parameters
      InitParameters();

      // Create Data Columns
      InitDataColumns();
    }
    #endregion

   #region InitParameters Method
    /// <summary>
    /// Creates all the parameters for the stored procedure.
    /// </summary>
    protected override void InitParameters()
    {
      PDSADataParameter param;

      // Clear all parameters each time
      AllParameters.Clear();

      // Create each parameter object and add to Parameters Collection
      param = new PDSADataParameter();
      param.ParameterName = TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ParameterNames.timeScheduleUid;
      param.DBType = DbType.Guid;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ParameterNames.clusterUid;
      param.DBType = DbType.Guid;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ParameterNames.RETURNVALUE;
      param.DBType = DbType.Int32;
      param.ParamDirection = ParameterDirection.ReturnValue;
      param.IsRefCursor = false;
      AllParameters.Add(param);

  
      AddReturnValueParameterToCollection();
    }
    #endregion

    #region InitDataColumns Method
    /// <summary>
    /// Initializes the Data Columns Collection for each field returned from the stored procedure.
    /// </summary>
    protected override void InitDataColumns()
    {
      PDSADataColumn dc;

      // Create each data column
      dc = PDSADataColumn.CreateDataColumn(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.ClusterUid, GetResourceMessage("GCS_TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSA_ClusterUid_Header", "Cluster Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.TimeScheduleUid, GetResourceMessage("GCS_TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSA_TimeScheduleUid_Header", "Time Schedule Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.ClusterName, GetResourceMessage("GCS_TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSA_ClusterName_Header", "Cluster Name"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.TimeScheduleName, GetResourceMessage("GCS_TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSA_TimeScheduleName_Header", "Time Schedule Name"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessGroupDefaultTimeScheduleCount, GetResourceMessage("GCS_TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSA_AccessGroupDefaultTimeScheduleCount_Header", "Access Group Default Time Schedule Count"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessGroupAccessPortalCount, GetResourceMessage("GCS_TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSA_AccessGroupAccessPortalCount_Header", "Access Group Access Portal Count"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessPortalAlertEventCount, GetResourceMessage("GCS_TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSA_AccessPortalAlertEventCount_Header", "Access Portal Alert Event Count"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessPortalAuxOutputCount, GetResourceMessage("GCS_TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSA_AccessPortalAuxOutputCount_Header", "Access Portal Aux Output Count"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessPortalTimeScheduleCount, GetResourceMessage("GCS_TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSA_AccessPortalTimeScheduleCount_Header", "Access Portal Time Schedule Count"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.InputDeviceTimeScheduleCount, GetResourceMessage("GCS_TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSA_InputDeviceTimeScheduleCount_Header", "Input Device Time Schedule Count"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.OutputDeviceTimeScheduleCount, GetResourceMessage("GCS_TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSA_OutputDeviceTimeScheduleCount_Header", "Output Device Time Schedule Count"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.GalaxyPanelAlertEventTimeScheduleCount, GetResourceMessage("GCS_TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSA_GalaxyPanelAlertEventTimeScheduleCount_Header", "Galaxy Panel Alert Event Time Schedule Count"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.InputDeviceEventPropertiesTimeScheduleCount, GetResourceMessage("GCS_TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSA_InputDeviceEventPropertiesTimeScheduleCount_Header", "Input Device Event Properties Time Schedule Count"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.InputOutputGroupTimeScheduleCount, GetResourceMessage("GCS_TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSA_InputOutputGroupTimeScheduleCount_Header", "Input Output Group Time Schedule Count"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.PersonPersonalAccessGroupTimeScheduleCount, GetResourceMessage("GCS_TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSA_PersonPersonalAccessGroupTimeScheduleCount_Header", "Person Personal Access Group Time Schedule Count"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AssaDsrTimeScheduleCount, GetResourceMessage("GCS_TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSA_AssaDsrTimeScheduleCount_Header", "Assa Dsr Time Schedule Count"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.OtisFloorGroupTimeScheduleCount, GetResourceMessage("GCS_TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSA_OtisFloorGroupTimeScheduleCount_Header", "Otis Floor Group Time Schedule Count"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.TotalCount, GetResourceMessage("GCS_TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSA_TotalCount_Header", "Total Count"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
    }
    #endregion

    #region EntityDataToParameterCollection Method
    /// <summary>
    /// Moves the data from the Entity class into the Parameters collection
    /// </summary>
    protected override void EntityDataToParameterCollection()
    {
      if (AllParameters.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ParameterNames.timeScheduleUid).SetAsNull == false)
        AllParameters.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ParameterNames.timeScheduleUid).Value = Entity.timeScheduleUid;
      else
        AllParameters.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ParameterNames.timeScheduleUid).Value = System.Data.SqlTypes.SqlGuid.Null;
      if (AllParameters.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ParameterNames.clusterUid).SetAsNull == false)
        AllParameters.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ParameterNames.clusterUid).Value = Entity.clusterUid;
      else
        AllParameters.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ParameterNames.clusterUid).Value = System.Data.SqlTypes.SqlGuid.Null;
    }
    #endregion

    #region EntityDataToColumnCollection Method
    /// <summary>
    /// Moves the data from the Entity class into the Columns collection
    /// </summary>
    protected override void EntityDataToColumnCollection()
    {
      if (AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.ClusterUid).SetAsNull == false)
        AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.ClusterUid).Value = Entity.ClusterUid;
      else
        AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.ClusterUid).Value = Guid.Empty;
     
      if (AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.TimeScheduleUid).SetAsNull == false)
        AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.TimeScheduleUid).Value = Entity.TimeScheduleUid;
      else
        AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.TimeScheduleUid).Value = Guid.Empty;
     
      if (AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.ClusterName).SetAsNull == false)
        AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.ClusterName).Value = Entity.ClusterName;
      else
        AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.ClusterName).Value = string.Empty;
     
      if (AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.TimeScheduleName).SetAsNull == false)
        AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.TimeScheduleName).Value = Entity.TimeScheduleName;
      else
        AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.TimeScheduleName).Value = string.Empty;
     
      if (AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessGroupDefaultTimeScheduleCount).SetAsNull == false)
        AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessGroupDefaultTimeScheduleCount).Value = Entity.AccessGroupDefaultTimeScheduleCount;
      else
        AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessGroupDefaultTimeScheduleCount).Value = 0;
     
      if (AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessGroupAccessPortalCount).SetAsNull == false)
        AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessGroupAccessPortalCount).Value = Entity.AccessGroupAccessPortalCount;
      else
        AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessGroupAccessPortalCount).Value = 0;
     
      if (AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessPortalAlertEventCount).SetAsNull == false)
        AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessPortalAlertEventCount).Value = Entity.AccessPortalAlertEventCount;
      else
        AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessPortalAlertEventCount).Value = 0;
     
      if (AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessPortalAuxOutputCount).SetAsNull == false)
        AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessPortalAuxOutputCount).Value = Entity.AccessPortalAuxOutputCount;
      else
        AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessPortalAuxOutputCount).Value = 0;
     
      if (AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessPortalTimeScheduleCount).SetAsNull == false)
        AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessPortalTimeScheduleCount).Value = Entity.AccessPortalTimeScheduleCount;
      else
        AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessPortalTimeScheduleCount).Value = 0;
     
      if (AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.InputDeviceTimeScheduleCount).SetAsNull == false)
        AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.InputDeviceTimeScheduleCount).Value = Entity.InputDeviceTimeScheduleCount;
      else
        AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.InputDeviceTimeScheduleCount).Value = 0;
     
      if (AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.OutputDeviceTimeScheduleCount).SetAsNull == false)
        AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.OutputDeviceTimeScheduleCount).Value = Entity.OutputDeviceTimeScheduleCount;
      else
        AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.OutputDeviceTimeScheduleCount).Value = 0;
     
      if (AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.GalaxyPanelAlertEventTimeScheduleCount).SetAsNull == false)
        AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.GalaxyPanelAlertEventTimeScheduleCount).Value = Entity.GalaxyPanelAlertEventTimeScheduleCount;
      else
        AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.GalaxyPanelAlertEventTimeScheduleCount).Value = 0;
     
      if (AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.InputDeviceEventPropertiesTimeScheduleCount).SetAsNull == false)
        AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.InputDeviceEventPropertiesTimeScheduleCount).Value = Entity.InputDeviceEventPropertiesTimeScheduleCount;
      else
        AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.InputDeviceEventPropertiesTimeScheduleCount).Value = 0;
     
      if (AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.InputOutputGroupTimeScheduleCount).SetAsNull == false)
        AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.InputOutputGroupTimeScheduleCount).Value = Entity.InputOutputGroupTimeScheduleCount;
      else
        AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.InputOutputGroupTimeScheduleCount).Value = 0;
     
      if (AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.PersonPersonalAccessGroupTimeScheduleCount).SetAsNull == false)
        AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.PersonPersonalAccessGroupTimeScheduleCount).Value = Entity.PersonPersonalAccessGroupTimeScheduleCount;
      else
        AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.PersonPersonalAccessGroupTimeScheduleCount).Value = 0;
     
      if (AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AssaDsrTimeScheduleCount).SetAsNull == false)
        AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AssaDsrTimeScheduleCount).Value = Entity.AssaDsrTimeScheduleCount;
      else
        AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AssaDsrTimeScheduleCount).Value = 0;
     
      if (AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.OtisFloorGroupTimeScheduleCount).SetAsNull == false)
        AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.OtisFloorGroupTimeScheduleCount).Value = Entity.OtisFloorGroupTimeScheduleCount;
      else
        AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.OtisFloorGroupTimeScheduleCount).Value = 0;
     
      if (AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.TotalCount).SetAsNull == false)
        AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.TotalCount).Value = Entity.TotalCount;
      else
        AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.TotalCount).Value = 0;
     
    }
    #endregion

    #region OutputParametersToEntityData Method
    /// <summary>
    /// Moves the output parameters from the Parameters collection into the Entity class.
    /// </summary>
    protected override void OutputParametersToEntityData()
    {
      if (AllParameters.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ParameterNames.RETURNVALUE).IsValueNull == false)
        Entity.RETURNVALUE = AllParameters.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ParameterNames.RETURNVALUE).GetAsInteger();
      else
        Entity.RETURNVALUE = 0;
    }
    #endregion
    
    #region ColumnCollectionToEntityData Method
    /// <summary>
    /// Moves the data from the Columns collection into the Entity class.
    /// </summary>
    protected override void ColumnCollectionToEntityData()
    {
      if (AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.ClusterUid).IsNull == false)
        Entity.ClusterUid = AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.ClusterUid).GetAsGuid();
      else
        Entity.ClusterUid = Guid.Empty;

      if (AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.TimeScheduleUid).IsNull == false)
        Entity.TimeScheduleUid = AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.TimeScheduleUid).GetAsGuid();
      else
        Entity.TimeScheduleUid = Guid.Empty;

      if (AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.ClusterName).IsNull == false)
        Entity.ClusterName = AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.ClusterName).GetAsString();
      else
        Entity.ClusterName = string.Empty;

      if (AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.TimeScheduleName).IsNull == false)
        Entity.TimeScheduleName = AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.TimeScheduleName).GetAsString();
      else
        Entity.TimeScheduleName = string.Empty;

      if (AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessGroupDefaultTimeScheduleCount).IsNull == false)
        Entity.AccessGroupDefaultTimeScheduleCount = AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessGroupDefaultTimeScheduleCount).GetAsInteger();
      else
        Entity.AccessGroupDefaultTimeScheduleCount = 0;

      if (AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessGroupAccessPortalCount).IsNull == false)
        Entity.AccessGroupAccessPortalCount = AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessGroupAccessPortalCount).GetAsInteger();
      else
        Entity.AccessGroupAccessPortalCount = 0;

      if (AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessPortalAlertEventCount).IsNull == false)
        Entity.AccessPortalAlertEventCount = AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessPortalAlertEventCount).GetAsInteger();
      else
        Entity.AccessPortalAlertEventCount = 0;

      if (AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessPortalAuxOutputCount).IsNull == false)
        Entity.AccessPortalAuxOutputCount = AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessPortalAuxOutputCount).GetAsInteger();
      else
        Entity.AccessPortalAuxOutputCount = 0;

      if (AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessPortalTimeScheduleCount).IsNull == false)
        Entity.AccessPortalTimeScheduleCount = AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessPortalTimeScheduleCount).GetAsInteger();
      else
        Entity.AccessPortalTimeScheduleCount = 0;

      if (AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.InputDeviceTimeScheduleCount).IsNull == false)
        Entity.InputDeviceTimeScheduleCount = AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.InputDeviceTimeScheduleCount).GetAsInteger();
      else
        Entity.InputDeviceTimeScheduleCount = 0;

      if (AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.OutputDeviceTimeScheduleCount).IsNull == false)
        Entity.OutputDeviceTimeScheduleCount = AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.OutputDeviceTimeScheduleCount).GetAsInteger();
      else
        Entity.OutputDeviceTimeScheduleCount = 0;

      if (AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.GalaxyPanelAlertEventTimeScheduleCount).IsNull == false)
        Entity.GalaxyPanelAlertEventTimeScheduleCount = AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.GalaxyPanelAlertEventTimeScheduleCount).GetAsInteger();
      else
        Entity.GalaxyPanelAlertEventTimeScheduleCount = 0;

      if (AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.InputDeviceEventPropertiesTimeScheduleCount).IsNull == false)
        Entity.InputDeviceEventPropertiesTimeScheduleCount = AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.InputDeviceEventPropertiesTimeScheduleCount).GetAsInteger();
      else
        Entity.InputDeviceEventPropertiesTimeScheduleCount = 0;

      if (AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.InputOutputGroupTimeScheduleCount).IsNull == false)
        Entity.InputOutputGroupTimeScheduleCount = AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.InputOutputGroupTimeScheduleCount).GetAsInteger();
      else
        Entity.InputOutputGroupTimeScheduleCount = 0;

      if (AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.PersonPersonalAccessGroupTimeScheduleCount).IsNull == false)
        Entity.PersonPersonalAccessGroupTimeScheduleCount = AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.PersonPersonalAccessGroupTimeScheduleCount).GetAsInteger();
      else
        Entity.PersonPersonalAccessGroupTimeScheduleCount = 0;

      if (AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AssaDsrTimeScheduleCount).IsNull == false)
        Entity.AssaDsrTimeScheduleCount = AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AssaDsrTimeScheduleCount).GetAsInteger();
      else
        Entity.AssaDsrTimeScheduleCount = 0;

      if (AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.OtisFloorGroupTimeScheduleCount).IsNull == false)
        Entity.OtisFloorGroupTimeScheduleCount = AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.OtisFloorGroupTimeScheduleCount).GetAsInteger();
      else
        Entity.OtisFloorGroupTimeScheduleCount = 0;

      if (AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.TotalCount).IsNull == false)
        Entity.TotalCount = AllColumns.GetByName(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.TotalCount).GetAsInteger();
      else
        Entity.TotalCount = 0;

    }
    #endregion

    #region CreateEntityFromDataRow Method
    /// <summary>
    /// Creates an Entity object from a DataRow object.
    /// </summary>
    /// <param name="dr">DataRow object with all fields from the table in it.</param>
    /// <returns>TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSA</returns>
    public TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSA CreateEntityFromDataRow(DataRow dr)
    {
      TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSA entity = new TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSA();

      if (dr.Table.Columns.Contains(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.ClusterUid))
      {
        if (dr[TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.ClusterUid] != DBNull.Value)
          entity.ClusterUid = PDSAProperty.ConvertToGuid(dr[TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.ClusterUid]);
      }
      if (dr.Table.Columns.Contains(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.TimeScheduleUid))
      {
        if (dr[TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.TimeScheduleUid] != DBNull.Value)
          entity.TimeScheduleUid = PDSAProperty.ConvertToGuid(dr[TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.TimeScheduleUid]);
      }
      if (dr.Table.Columns.Contains(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.ClusterName))
      {
        if (dr[TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.ClusterName] != DBNull.Value)
          entity.ClusterName = PDSAString.ConvertToStringTrim(dr[TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.ClusterName]);
      }
      if (dr.Table.Columns.Contains(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.TimeScheduleName))
      {
        if (dr[TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.TimeScheduleName] != DBNull.Value)
          entity.TimeScheduleName = PDSAString.ConvertToStringTrim(dr[TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.TimeScheduleName]);
      }
      if (dr.Table.Columns.Contains(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessGroupDefaultTimeScheduleCount))
      {
        if (dr[TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessGroupDefaultTimeScheduleCount] != DBNull.Value)
          entity.AccessGroupDefaultTimeScheduleCount = Convert.ToInt32(dr[TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessGroupDefaultTimeScheduleCount]);
      }
      if (dr.Table.Columns.Contains(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessGroupAccessPortalCount))
      {
        if (dr[TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessGroupAccessPortalCount] != DBNull.Value)
          entity.AccessGroupAccessPortalCount = Convert.ToInt32(dr[TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessGroupAccessPortalCount]);
      }
      if (dr.Table.Columns.Contains(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessPortalAlertEventCount))
      {
        if (dr[TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessPortalAlertEventCount] != DBNull.Value)
          entity.AccessPortalAlertEventCount = Convert.ToInt32(dr[TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessPortalAlertEventCount]);
      }
      if (dr.Table.Columns.Contains(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessPortalAuxOutputCount))
      {
        if (dr[TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessPortalAuxOutputCount] != DBNull.Value)
          entity.AccessPortalAuxOutputCount = Convert.ToInt32(dr[TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessPortalAuxOutputCount]);
      }
      if (dr.Table.Columns.Contains(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessPortalTimeScheduleCount))
      {
        if (dr[TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessPortalTimeScheduleCount] != DBNull.Value)
          entity.AccessPortalTimeScheduleCount = Convert.ToInt32(dr[TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AccessPortalTimeScheduleCount]);
      }
      if (dr.Table.Columns.Contains(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.InputDeviceTimeScheduleCount))
      {
        if (dr[TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.InputDeviceTimeScheduleCount] != DBNull.Value)
          entity.InputDeviceTimeScheduleCount = Convert.ToInt32(dr[TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.InputDeviceTimeScheduleCount]);
      }
      if (dr.Table.Columns.Contains(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.OutputDeviceTimeScheduleCount))
      {
        if (dr[TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.OutputDeviceTimeScheduleCount] != DBNull.Value)
          entity.OutputDeviceTimeScheduleCount = Convert.ToInt32(dr[TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.OutputDeviceTimeScheduleCount]);
      }
      if (dr.Table.Columns.Contains(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.GalaxyPanelAlertEventTimeScheduleCount))
      {
        if (dr[TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.GalaxyPanelAlertEventTimeScheduleCount] != DBNull.Value)
          entity.GalaxyPanelAlertEventTimeScheduleCount = Convert.ToInt32(dr[TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.GalaxyPanelAlertEventTimeScheduleCount]);
      }
      if (dr.Table.Columns.Contains(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.InputDeviceEventPropertiesTimeScheduleCount))
      {
        if (dr[TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.InputDeviceEventPropertiesTimeScheduleCount] != DBNull.Value)
          entity.InputDeviceEventPropertiesTimeScheduleCount = Convert.ToInt32(dr[TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.InputDeviceEventPropertiesTimeScheduleCount]);
      }
      if (dr.Table.Columns.Contains(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.InputOutputGroupTimeScheduleCount))
      {
        if (dr[TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.InputOutputGroupTimeScheduleCount] != DBNull.Value)
          entity.InputOutputGroupTimeScheduleCount = Convert.ToInt32(dr[TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.InputOutputGroupTimeScheduleCount]);
      }
      if (dr.Table.Columns.Contains(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.PersonPersonalAccessGroupTimeScheduleCount))
      {
        if (dr[TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.PersonPersonalAccessGroupTimeScheduleCount] != DBNull.Value)
          entity.PersonPersonalAccessGroupTimeScheduleCount = Convert.ToInt32(dr[TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.PersonPersonalAccessGroupTimeScheduleCount]);
      }
      if (dr.Table.Columns.Contains(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AssaDsrTimeScheduleCount))
      {
        if (dr[TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AssaDsrTimeScheduleCount] != DBNull.Value)
          entity.AssaDsrTimeScheduleCount = Convert.ToInt32(dr[TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.AssaDsrTimeScheduleCount]);
      }
      if (dr.Table.Columns.Contains(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.OtisFloorGroupTimeScheduleCount))
      {
        if (dr[TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.OtisFloorGroupTimeScheduleCount] != DBNull.Value)
          entity.OtisFloorGroupTimeScheduleCount = Convert.ToInt32(dr[TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.OtisFloorGroupTimeScheduleCount]);
      }
      if (dr.Table.Columns.Contains(TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.TotalCount))
      {
        if (dr[TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.TotalCount] != DBNull.Value)
          entity.TotalCount = Convert.ToInt32(dr[TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSAValidator.ColumnNames.TotalCount]);
      }
      entity.IsDirty = false;

      return entity;
    }
    #endregion

    #region ParameterNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the TimeSchedule_GetTimeScheduleUsageCountsForClusterPDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ParameterNames
    {
    /// <summary>
    /// Returns '@timeScheduleUid'
    /// </summary>
    public static string timeScheduleUid = "@timeScheduleUid";
    /// <summary>
    /// Returns '@clusterUid'
    /// </summary>
    public static string clusterUid = "@clusterUid";
    /// <summary>
    /// Returns '@RETURN_VALUE'
    /// </summary>
    public static string RETURNVALUE = "@RETURN_VALUE";
    }
    #endregion
  }
}
