using System;
using System.Data;
using System.Text;

using PDSA.Common;
using PDSA.DataLayer;
using PDSA.DataLayer.DataClasses;
using PDSA.Validation;

using GalaxySMS.EntityLayer;
using GalaxySMS.ValidationLayer;

namespace GalaxySMS.DataLayer
{
  /// <summary>
  /// Used to Select data from the GalaxyInterfaceBoardSection_PanelLoadDataPDSA view.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public partial class GalaxyInterfaceBoardSection_PanelLoadDataPDSAData : PDSADataClassReadOnly
  {
    #region Constructors
    /// <summary>
    /// Constructor for the GalaxyInterfaceBoardSection_PanelLoadDataPDSAData class
    /// </summary>
    public GalaxyInterfaceBoardSection_PanelLoadDataPDSAData() : base()
    {
      Entity = new GalaxyInterfaceBoardSection_PanelLoadDataPDSA();
      ValidatorObject = new GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator(Entity);

      Init();
    }
    
    /// <summary>
    /// Constructor for the GalaxyInterfaceBoardSection_PanelLoadDataPDSAData class
    /// </summary>
    /// <param name="dataProvider">An instance of a PDSADataProvider</param>
    /// <param name="entity">An instance of a GalaxyInterfaceBoardSection_PanelLoadDataPDSA</param>
    public GalaxyInterfaceBoardSection_PanelLoadDataPDSAData(PDSADataProvider dataProvider,
      GalaxyInterfaceBoardSection_PanelLoadDataPDSA entity)
      : base(dataProvider)
    {
      Entity = entity;
      ValidatorObject = new GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator(Entity);

      Init();
    }
     
    /// <summary>
    /// Constructor for the GalaxyInterfaceBoardSection_PanelLoadDataPDSAData class
    /// </summary>
    /// <param name="dataProvider">An instance of a PDSADataProvider</param>
    /// <param name="entity">An instance of a GalaxyInterfaceBoardSection_PanelLoadDataPDSA</param>
    /// <param name="validator">An instance of a GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator</param>
    public GalaxyInterfaceBoardSection_PanelLoadDataPDSAData(PDSADataProvider dataProvider,
      GalaxyInterfaceBoardSection_PanelLoadDataPDSA entity, GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator validator)
      : base(dataProvider, entity, validator)
    {
      Entity = entity;
      ValidatorObject = validator;

      Init();
    }
    #endregion

    #region Filter Properties and Enumerations
    /// <summary>
    /// Enumeration for selecting a SELECT statement when calling the Load, GetDataSet or GetDataReader method.
    /// </summary>
    public enum SelectFilters
    {
      
      /// <summary>
      /// 'All' SelectFilter
      /// </summary>
      All
      ,
      /// <summary>
      /// 'Search' SelectFilter
      /// </summary>
      Search
      ,
      /// <summary>
      /// A Custom SelectFilter
      /// </summary>
      Custom
    }

    /// <summary>
    /// Enumeration for selecting a WHERE statement when calling the Load, GetDataSet or GetDataReader method.
    /// </summary>
    public enum WhereFilters
    {
      /// <summary>
      /// No WhereFilter Selected
      /// </summary>
      None,
      /// <summary>
      /// A Custom WhereFilter
      /// </summary>
      Custom
      ,
      /// <summary>
      /// 'ClusterUid' WhereFilter
      /// </summary>
      ClusterUid
      ,
      /// <summary>
      /// 'GalaxyInterfaceBoardSectionUid' WhereFilter
      /// </summary>
      GalaxyInterfaceBoardSectionUid
      ,
      /// <summary>
      /// 'GalaxyInterfaceBoardUid' WhereFilter
      /// </summary>
      GalaxyInterfaceBoardUid
      ,
      /// <summary>
      /// 'GalaxyPanelUid' WhereFilter
      /// </summary>
      GalaxyPanelUid
      ,
      /// <summary>
      /// 'InsertName' WhereFilter
      /// </summary>
      InsertName
      ,
      /// <summary>
      /// 'LikeInsertName' WhereFilter
      /// </summary>
      LikeInsertName
    }

    /// <summary>
    /// Enumeration for selecting an ORDER BY statement when calling the Load, GetDataSet or GetDataReader method.
    /// </summary>
    public enum OrderByFilters
    {
      /// <summary>
      /// No OrderByFilter Selected
      /// </summary>
      None,
      /// <summary>
      /// A Custom OrderByFilter
      /// </summary>
      Custom
      ,
      /// <summary>
      /// 'InsertName' OrderByFilter
      /// </summary>
      InsertName
    }
    
    /// <summary>
    /// Enumeration for selecting a Row Count statement or Row Count stored procedure to execute when calling the RowCount() method.
    /// </summary>
    public enum RowCountFilters
    {
      
      /// <summary>
      /// 'All' RowCountFilter
      /// </summary>
      All
      ,
      /// <summary>
      /// A Custom OrderByFilter
      /// </summary>
      Custom
    }

    /// <summary>
    /// Get/Set a Dynamic SQL to execute to return data.
    /// </summary>
    public SelectFilters SelectFilter { get; set; }
    /// <summary>
    /// Get/Set a WHERE clause to be used with a SELECT statement when using Dynamic SQL.
    /// </summary>
    public WhereFilters WhereFilter { get; set; }
    /// <summary>
    /// Get/Set a ORDER BY clause to be used with a SELECT statement when using Dynamic SQL.
    /// </summary>
    public OrderByFilters OrderByFilter { get; set; }
    /// <summary>
    /// Get/Set a Row Count statement or RowCount stored procedure to execute when calling the RowCount() method. You might need to set a WhereFilter as well.
    /// </summary>
    public RowCountFilters RowCountFilter { get; set; }
    #endregion

    #region Public Property Entity Class
        private GalaxyInterfaceBoardSection_PanelLoadDataPDSA _EntityObject = null;

    /// <summary>
    /// Get/Set the Entity class that will be used to get and set properties/fields for this data class.
    /// </summary>
    public GalaxyInterfaceBoardSection_PanelLoadDataPDSA Entity 
    { 
      get { return _EntityObject; }
      set
      {
        _EntityObject = value;
        base.EntityObject = _EntityObject;
      } 
    }
    #endregion

    #region Init Method
    /// <summary>
    /// Initializes this class to a valid start state.
    /// </summary>
    protected override void Init()
    {
      ClassName = "GalaxyInterfaceBoardSection_PanelLoadDataPDSAData";
      DBObjectName = "GCS.GalaxyInterfaceBoardSection_PanelLoadData";
      SchemaName = "GCS";
      base.EntityObject = Entity;
      base.ValidatorObject = ValidatorObject;
      
      // Set Reference to ValidatorObject Properties Collection
      AllColumns = ValidatorObject.Properties;

      // Set any Initial Starting values for data columns
      InitDataColumns();
    }
    #endregion

    #region InitDataColumns Method
    /// <summary>
    /// Initializes all of the Data Columns with valid data for each field in the table.
    /// </summary>
    protected override void InitDataColumns()
    {
      PDSAProperty prop;

      // Fill in Column Properties
      prop = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionUid);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlGuid.Null;
      //prop.ValueForNull = Guid.Empty;

      prop = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInterfaceBoardUid);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlGuid.Null;
      //prop.ValueForNull = Guid.Empty;

      prop = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.InterfaceBoardSectionModeUid);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlGuid.Null;
      //prop.ValueForNull = Guid.Empty;

      prop = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.SectionNumber);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt16.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.IsSectionActive);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlBoolean.Null;
      //prop.ValueForNull = false;

      prop = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.InsertName);
      prop.IsInsertable = true;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.InsertDate);
      prop.IsInsertable = true;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlDateTime.Null;
      //prop.ValueForNull = DateTimeOffset.MinValue;

      prop = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.UpdateName);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.UpdateDate);
      prop.IsInsertable = true;
      prop.IsUpdatable = true;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlDateTime.Null;
      //prop.ValueForNull = DateTimeOffset.MinValue;

      prop = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.ConcurrencyValue);
      prop.IsInsertable = true;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = false;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt16.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.ClusterUid);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlGuid.Null;
      //prop.ValueForNull = Guid.Empty;

      prop = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.GalaxyPanelUid);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlGuid.Null;
      //prop.ValueForNull = Guid.Empty;

      prop = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.ClusterGroupId);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.ClusterNumber);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt32.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.PanelNumber);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt32.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardNumber);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt16.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardSectionMode);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt16.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardSectionModeDisplay);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.PanelModelTypeCode);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.CpuTypeCode);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardTypeModel);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardTypeTypeCode);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlInt16.Null;
      //prop.ValueForNull = 0;

      prop = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardTypeDisplay);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlString.Null;
      //prop.ValueForNull = string.Empty;

      prop = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.EntityId);
      prop.IsInsertable = false;
      prop.IsUpdatable = false;
      prop.IsPrimaryKey = false;
      prop.IncludeInAuditTracking = true;
      prop.DBValueForNull = System.Data.SqlTypes.SqlGuid.Null;
      //prop.ValueForNull = Guid.Empty;

    }
    #endregion

    #region EntityDataToColumnCollection Method
    /// <summary>
    /// Moves the data from the Entity class into the Columns collection
    /// This is called prior to performing a Business Rule Check or an INSERT, UPDATE or DELETE
    /// </summary>
    protected override void EntityDataToColumnCollection()
    {
      // Move all Entity Values into Properties Collection
      ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionUid).Value = Entity.GalaxyInterfaceBoardSectionUid;
      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionUid).SetAsNull == true)
        Entity.GalaxyInterfaceBoardSectionUid = Guid.Empty;
      ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInterfaceBoardUid).Value = Entity.GalaxyInterfaceBoardUid;
      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInterfaceBoardUid).SetAsNull == true)
        Entity.GalaxyInterfaceBoardUid = Guid.Empty;
      ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.InterfaceBoardSectionModeUid).Value = Entity.InterfaceBoardSectionModeUid;
      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.InterfaceBoardSectionModeUid).SetAsNull == true)
        Entity.InterfaceBoardSectionModeUid = Guid.Empty;
      ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.SectionNumber).Value = Entity.SectionNumber;
      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.SectionNumber).SetAsNull == true)
        Entity.SectionNumber = 0;
      ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.IsSectionActive).Value = Entity.IsSectionActive;
      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.IsSectionActive).SetAsNull == true)
        Entity.IsSectionActive = false;
      ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.InsertName).Value = Entity.InsertName;
      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.InsertName).SetAsNull == true)
        Entity.InsertName = string.Empty;
      ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.InsertDate).Value = Entity.InsertDate;
      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.InsertDate).SetAsNull == true)
        Entity.InsertDate = DateTimeOffset.Now;
      ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.UpdateName).Value = Entity.UpdateName;
      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.UpdateName).SetAsNull == true)
        Entity.UpdateName = string.Empty;
      ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.UpdateDate).Value = Entity.UpdateDate;
      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.UpdateDate).SetAsNull == true)
        Entity.UpdateDate = DateTimeOffset.Now;
      ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.ConcurrencyValue).Value = Entity.ConcurrencyValue;
      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.ConcurrencyValue).SetAsNull == true)
        Entity.ConcurrencyValue = 0;
      ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.ClusterUid).Value = Entity.ClusterUid;
      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.ClusterUid).SetAsNull == true)
        Entity.ClusterUid = Guid.Empty;
      ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.GalaxyPanelUid).Value = Entity.GalaxyPanelUid;
      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.GalaxyPanelUid).SetAsNull == true)
        Entity.GalaxyPanelUid = Guid.Empty;
      ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.ClusterGroupId).Value = Entity.ClusterGroupId;
      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.ClusterGroupId).SetAsNull == true)
        Entity.ClusterGroupId = 0;
      ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.ClusterNumber).Value = Entity.ClusterNumber;
      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.ClusterNumber).SetAsNull == true)
        Entity.ClusterNumber = 0;
      ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.PanelNumber).Value = Entity.PanelNumber;
      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.PanelNumber).SetAsNull == true)
        Entity.PanelNumber = 0;
      ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardNumber).Value = Entity.BoardNumber;
      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardNumber).SetAsNull == true)
        Entity.BoardNumber = 0;
      ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardSectionMode).Value = Entity.BoardSectionMode;
      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardSectionMode).SetAsNull == true)
        Entity.BoardSectionMode = 0;
      ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardSectionModeDisplay).Value = Entity.BoardSectionModeDisplay;
      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardSectionModeDisplay).SetAsNull == true)
        Entity.BoardSectionModeDisplay = string.Empty;
      ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.PanelModelTypeCode).Value = Entity.PanelModelTypeCode;
      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.PanelModelTypeCode).SetAsNull == true)
        Entity.PanelModelTypeCode = string.Empty;
      ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.CpuTypeCode).Value = Entity.CpuTypeCode;
      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.CpuTypeCode).SetAsNull == true)
        Entity.CpuTypeCode = string.Empty;
      ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardTypeModel).Value = Entity.BoardTypeModel;
      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardTypeModel).SetAsNull == true)
        Entity.BoardTypeModel = string.Empty;
      ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardTypeTypeCode).Value = Entity.BoardTypeTypeCode;
      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardTypeTypeCode).SetAsNull == true)
        Entity.BoardTypeTypeCode = 0;
      ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardTypeDisplay).Value = Entity.BoardTypeDisplay;
      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardTypeDisplay).SetAsNull == true)
        Entity.BoardTypeDisplay = string.Empty;
      ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.EntityId).Value = Entity.EntityId;
      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.EntityId).SetAsNull == true)
        Entity.EntityId = Guid.Empty;
    }
    #endregion

    #region ColumnCollectionToEntityData Method
    /// <summary>
    /// Moves the data from the Columns collection into the Entity class.
    /// This is called whenever you are reading data in from a database.
    ///   For example, from BuildCollection, Load, LoadByPK, etc.
    /// </summary>
    protected override void ColumnCollectionToEntityData()
    {
      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionUid).IsNull == false)
        Entity.GalaxyInterfaceBoardSectionUid = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionUid).GetAsGuid();
      else
        Entity.GalaxyInterfaceBoardSectionUid = Guid.Empty;
      Entity.SetOriginalValueForProperty(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionUid, ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionUid).Value);

      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInterfaceBoardUid).IsNull == false)
        Entity.GalaxyInterfaceBoardUid = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInterfaceBoardUid).GetAsGuid();
      else
        Entity.GalaxyInterfaceBoardUid = Guid.Empty;
      Entity.SetOriginalValueForProperty(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInterfaceBoardUid, ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.GalaxyInterfaceBoardUid).Value);

      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.InterfaceBoardSectionModeUid).IsNull == false)
        Entity.InterfaceBoardSectionModeUid = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.InterfaceBoardSectionModeUid).GetAsGuid();
      else
        Entity.InterfaceBoardSectionModeUid = Guid.Empty;
      Entity.SetOriginalValueForProperty(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.InterfaceBoardSectionModeUid, ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.InterfaceBoardSectionModeUid).Value);

      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.SectionNumber).IsNull == false)
        Entity.SectionNumber = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.SectionNumber).GetAsShort();
      else
        Entity.SectionNumber = 0;
      Entity.SetOriginalValueForProperty(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.SectionNumber, ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.SectionNumber).Value);

      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.IsSectionActive).IsNull == false)
        Entity.IsSectionActive = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.IsSectionActive).GetAsBool();
      else
        Entity.IsSectionActive = false;
      Entity.SetOriginalValueForProperty(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.IsSectionActive, ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.IsSectionActive).Value);

      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.InsertName).IsNull == false)
        Entity.InsertName = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.InsertName).GetAsString();
      else
        Entity.InsertName = string.Empty;
      Entity.SetOriginalValueForProperty(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.InsertName, ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.InsertName).Value);

      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.InsertDate).IsNull == false)
        Entity.InsertDate = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.InsertDate).GetAsDateTimeOffset();
      else
        Entity.InsertDate = DateTimeOffset.MinValue;
      Entity.SetOriginalValueForProperty(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.InsertDate, ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.InsertDate).Value);

      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.UpdateName).IsNull == false)
        Entity.UpdateName = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.UpdateName).GetAsString();
      else
        Entity.UpdateName = string.Empty;
      Entity.SetOriginalValueForProperty(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.UpdateName, ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.UpdateName).Value);

      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.UpdateDate).IsNull == false)
        Entity.UpdateDate = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.UpdateDate).GetAsDateTimeOffset();
      else
        Entity.UpdateDate = DateTimeOffset.MinValue;
      Entity.SetOriginalValueForProperty(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.UpdateDate, ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.UpdateDate).Value);

      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.ConcurrencyValue).IsNull == false)
        Entity.ConcurrencyValue = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.ConcurrencyValue).GetAsShort();
      else
        Entity.ConcurrencyValue = 0;
      Entity.SetOriginalValueForProperty(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.ConcurrencyValue, ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.ConcurrencyValue).Value);

      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.ClusterUid).IsNull == false)
        Entity.ClusterUid = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.ClusterUid).GetAsGuid();
      else
        Entity.ClusterUid = Guid.Empty;
      Entity.SetOriginalValueForProperty(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.ClusterUid, ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.ClusterUid).Value);

      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.GalaxyPanelUid).IsNull == false)
        Entity.GalaxyPanelUid = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.GalaxyPanelUid).GetAsGuid();
      else
        Entity.GalaxyPanelUid = Guid.Empty;
      Entity.SetOriginalValueForProperty(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.GalaxyPanelUid, ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.GalaxyPanelUid).Value);

      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.ClusterGroupId).IsNull == false)
        Entity.ClusterGroupId = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.ClusterGroupId).GetAsInteger();
      else
        Entity.ClusterGroupId = 0;
      Entity.SetOriginalValueForProperty(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.ClusterGroupId, ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.ClusterGroupId).Value);

      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.ClusterNumber).IsNull == false)
        Entity.ClusterNumber = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.ClusterNumber).GetAsInteger();
      else
        Entity.ClusterNumber = 0;
      Entity.SetOriginalValueForProperty(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.ClusterNumber, ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.ClusterNumber).Value);

      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.PanelNumber).IsNull == false)
        Entity.PanelNumber = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.PanelNumber).GetAsInteger();
      else
        Entity.PanelNumber = 0;
      Entity.SetOriginalValueForProperty(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.PanelNumber, ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.PanelNumber).Value);

      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardNumber).IsNull == false)
        Entity.BoardNumber = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardNumber).GetAsShort();
      else
        Entity.BoardNumber = 0;
      Entity.SetOriginalValueForProperty(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardNumber, ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardNumber).Value);

      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardSectionMode).IsNull == false)
        Entity.BoardSectionMode = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardSectionMode).GetAsShort();
      else
        Entity.BoardSectionMode = 0;
      Entity.SetOriginalValueForProperty(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardSectionMode, ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardSectionMode).Value);

      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardSectionModeDisplay).IsNull == false)
        Entity.BoardSectionModeDisplay = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardSectionModeDisplay).GetAsString();
      else
        Entity.BoardSectionModeDisplay = string.Empty;
      Entity.SetOriginalValueForProperty(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardSectionModeDisplay, ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardSectionModeDisplay).Value);

      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.PanelModelTypeCode).IsNull == false)
        Entity.PanelModelTypeCode = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.PanelModelTypeCode).GetAsString();
      else
        Entity.PanelModelTypeCode = string.Empty;
      Entity.SetOriginalValueForProperty(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.PanelModelTypeCode, ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.PanelModelTypeCode).Value);

      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.CpuTypeCode).IsNull == false)
        Entity.CpuTypeCode = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.CpuTypeCode).GetAsString();
      else
        Entity.CpuTypeCode = string.Empty;
      Entity.SetOriginalValueForProperty(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.CpuTypeCode, ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.CpuTypeCode).Value);

      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardTypeModel).IsNull == false)
        Entity.BoardTypeModel = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardTypeModel).GetAsString();
      else
        Entity.BoardTypeModel = string.Empty;
      Entity.SetOriginalValueForProperty(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardTypeModel, ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardTypeModel).Value);

      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardTypeTypeCode).IsNull == false)
        Entity.BoardTypeTypeCode = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardTypeTypeCode).GetAsShort();
      else
        Entity.BoardTypeTypeCode = 0;
      Entity.SetOriginalValueForProperty(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardTypeTypeCode, ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardTypeTypeCode).Value);

      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardTypeDisplay).IsNull == false)
        Entity.BoardTypeDisplay = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardTypeDisplay).GetAsString();
      else
        Entity.BoardTypeDisplay = string.Empty;
      Entity.SetOriginalValueForProperty(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardTypeDisplay, ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.BoardTypeDisplay).Value);

      if (ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.EntityId).IsNull == false)
        Entity.EntityId = ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.EntityId).GetAsGuid();
      else
        Entity.EntityId = Guid.Empty;
      Entity.SetOriginalValueForProperty(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.EntityId, ValidatorObject.Properties.GetByName(GalaxyInterfaceBoardSection_PanelLoadDataPDSAValidator.ColumnNames.EntityId).Value);

    }
    #endregion

    #region CreateEntityFromDataRow Method
    /// <summary>
    /// Creates an Entity object from a DataRow object.
    /// </summary>
    /// <param name="dr">DataRow object with all fields from the table in it.</param>
    /// <returns>GalaxyInterfaceBoardSection_PanelLoadDataPDSA</returns>
    public GalaxyInterfaceBoardSection_PanelLoadDataPDSA CreateEntityFromDataRow(DataRow dr)
    {
      // Create new Entity Object
      Entity = new GalaxyInterfaceBoardSection_PanelLoadDataPDSA();

      // Move all data into Properties collection
      // This method calls the ColumnCollectionToEntityData method
      DataRowToProperties(dr);
      Entity.IsDirty = false;

      return Entity;
    }
    #endregion

    #region SelectSQL Method
    /// <summary>
    /// Builds the SQL for the SELECT statement based on the SelectFilter property.
    /// </summary>
    /// <returns>string</returns>
    public override string SelectSQL()
    {
      StringBuilder sb = new StringBuilder(SB_INIT_LENGTH);

      switch (SelectFilter)
      {
        case SelectFilters.All:
          
          
          break;
        case SelectFilters.Search:
          
          
          break;

        case SelectFilters.Custom:
          sb.Append(SelectCustom);

          break;          
      }

      SQL = sb.ToString();

      return SQL;
    }
    #endregion

    #region RowCountSQL Method
    /// <summary>
    /// Builds the SELECT Count(*) SQL that will count the number of rows returned from this view.
    /// </summary>
    /// <returns>string</returns>
    public override string RowCountSQL()
    {
      StringBuilder sb = new StringBuilder(SB_INIT_LENGTH);

      switch (RowCountFilter)
      {
        case RowCountFilters.All:
          
          
          break;

        case RowCountFilters.Custom:
          sb.Append(RowCountCustom);

          break;          
      }

      sb.Append(WhereClauseSQL());
     
      SQL = sb.ToString();

      return SQL;
    }
    #endregion
    
    #region WhereClauseSQL Method
    /// <summary>
    /// Builds the WHERE clause to be used in combination with a SELECT statement.
    /// </summary>
    /// <returns>string</returns>
    public override string WhereClauseSQL()
    {
      StringBuilder sb = new StringBuilder(SB_INIT_LENGTH);

      switch (WhereFilter)
      {
        case WhereFilters.Custom:
          sb.Append(" " + WhereCustom);

          break;

        case WhereFilters.None:
          //  Do nothing

          break;

        case WhereFilters.ClusterUid:
          
          
          break;
        case WhereFilters.GalaxyInterfaceBoardSectionUid:
          
          
          break;
        case WhereFilters.GalaxyInterfaceBoardUid:
          
          
          break;
        case WhereFilters.GalaxyPanelUid:
          
          
          break;
        case WhereFilters.InsertName:
          
          
          break;
        case WhereFilters.LikeInsertName:
          
          
          break;
      }
      
      return sb.ToString();
    }
    #endregion

    #region SelectFillInParameters Method
    /// <summary>
    /// Builds the CommandObject.Parameters collection for any SELECT statement parameters.
    /// </summary>
    protected override void SelectFillInParameters()
    {
      switch (SelectFilter)
      {
        case SelectFilters.All:
         
          break;
        case SelectFilters.Search:
         
          break;
      }

      // Add on paging parameters
      if(UsePaging)
      {
        PagingFillInParameters(Entity.ResultSetRowNumberBegin, Entity.ResultSetRowNumberEnd);
      }
    }
    #endregion

    #region WhereClauseFillInParameters Method
    /// <summary>
    /// Builds the CommandObject.Parameters collection for any WHERE clause parameters.
    /// </summary>
    protected override void WhereClauseFillInParameters()
    {
      switch (WhereFilter)
      {
        case WhereFilters.ClusterUid:
         
          break;
        case WhereFilters.GalaxyInterfaceBoardSectionUid:
         
          break;
        case WhereFilters.GalaxyInterfaceBoardUid:
         
          break;
        case WhereFilters.GalaxyPanelUid:
         
          break;
        case WhereFilters.InsertName:
         
          break;
        case WhereFilters.LikeInsertName:
         
          break;
      }
    }
    #endregion

    #region OrderByClauseSQL Method
    /// <summary>
    /// Builds the ORDER BY clause to be used in combination with a SELECT statement.
    /// </summary>
    /// <returns>string</returns>
    public override string OrderByClauseSQL()
    {
      StringBuilder sb = new StringBuilder(SB_INIT_LENGTH);

      switch (OrderByFilter)
      {
        case OrderByFilters.None:
          //  Do Nothing

          break;

        case OrderByFilters.Custom:
          sb.Append(" " + OrderByCustom);

          break;
          
        case OrderByFilters.InsertName:
          
          
          break;
      }

      return sb.ToString();
    }
    #endregion
    
    #region ColumnNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the GalaxyInterfaceBoardSection_PanelLoadDataPDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ColumnNames
    {
    /// <summary>
    /// Returns 'GalaxyInterfaceBoardSectionUid'
    /// </summary>
    public static string GalaxyInterfaceBoardSectionUid = "GalaxyInterfaceBoardSectionUid";
    /// <summary>
    /// Returns 'GalaxyInterfaceBoardUid'
    /// </summary>
    public static string GalaxyInterfaceBoardUid = "GalaxyInterfaceBoardUid";
    /// <summary>
    /// Returns 'InterfaceBoardSectionModeUid'
    /// </summary>
    public static string InterfaceBoardSectionModeUid = "InterfaceBoardSectionModeUid";
    /// <summary>
    /// Returns 'SectionNumber'
    /// </summary>
    public static string SectionNumber = "SectionNumber";
    /// <summary>
    /// Returns 'IsSectionActive'
    /// </summary>
    public static string IsSectionActive = "IsSectionActive";
    /// <summary>
    /// Returns 'InsertName'
    /// </summary>
    public static string InsertName = "InsertName";
    /// <summary>
    /// Returns 'InsertDate'
    /// </summary>
    public static string InsertDate = "InsertDate";
    /// <summary>
    /// Returns 'UpdateName'
    /// </summary>
    public static string UpdateName = "UpdateName";
    /// <summary>
    /// Returns 'UpdateDate'
    /// </summary>
    public static string UpdateDate = "UpdateDate";
    /// <summary>
    /// Returns 'ConcurrencyValue'
    /// </summary>
    public static string ConcurrencyValue = "ConcurrencyValue";
    /// <summary>
    /// Returns 'ClusterUid'
    /// </summary>
    public static string ClusterUid = "ClusterUid";
    /// <summary>
    /// Returns 'GalaxyPanelUid'
    /// </summary>
    public static string GalaxyPanelUid = "GalaxyPanelUid";
    /// <summary>
    /// Returns 'ClusterGroupId'
    /// </summary>
    public static string ClusterGroupId = "ClusterGroupId";
    /// <summary>
    /// Returns 'ClusterNumber'
    /// </summary>
    public static string ClusterNumber = "ClusterNumber";
    /// <summary>
    /// Returns 'PanelNumber'
    /// </summary>
    public static string PanelNumber = "PanelNumber";
    /// <summary>
    /// Returns 'BoardNumber'
    /// </summary>
    public static string BoardNumber = "BoardNumber";
    /// <summary>
    /// Returns 'BoardSectionMode'
    /// </summary>
    public static string BoardSectionMode = "BoardSectionMode";
    /// <summary>
    /// Returns 'BoardSectionModeDisplay'
    /// </summary>
    public static string BoardSectionModeDisplay = "BoardSectionModeDisplay";
    /// <summary>
    /// Returns 'PanelModelTypeCode'
    /// </summary>
    public static string PanelModelTypeCode = "PanelModelTypeCode";
    /// <summary>
    /// Returns 'CpuTypeCode'
    /// </summary>
    public static string CpuTypeCode = "CpuTypeCode";
    /// <summary>
    /// Returns 'BoardTypeModel'
    /// </summary>
    public static string BoardTypeModel = "BoardTypeModel";
    /// <summary>
    /// Returns 'BoardTypeTypeCode'
    /// </summary>
    public static string BoardTypeTypeCode = "BoardTypeTypeCode";
    /// <summary>
    /// Returns 'BoardTypeDisplay'
    /// </summary>
    public static string BoardTypeDisplay = "BoardTypeDisplay";
    /// <summary>
    /// Returns 'EntityId'
    /// </summary>
    public static string EntityId = "EntityId";
    }
    #endregion
  }
}
