using System;
using System.Data;
using System.Text;

using PDSA.Common;
using PDSA.DataLayer;
using PDSA.DataLayer.DataClasses;
using PDSA.Validation;

using GalaxySMS.EntityLayer;
using GalaxySMS.ValidationLayer;

namespace GalaxySMS.DataLayer
{
  /// <summary>
  /// This class calls the stored procedure gcs_UserEntityRolesForUserIdPDSA
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public class gcs_UserEntityRolesForUserIdPDSAData : PDSAStoredProcReadOnly
  {
    #region Constructors
    /// <summary>
    /// Constructor for the gcs_UserEntityRolesForUserIdPDSAData class
    /// </summary>
    public gcs_UserEntityRolesForUserIdPDSAData() : base()
    {
      Entity = new gcs_UserEntityRolesForUserIdPDSA();
      ValidatorObject = new  gcs_UserEntityRolesForUserIdPDSAValidator(Entity);

      Init();
    }

    /// <summary>
    /// Constructor for the gcs_UserEntityRolesForUserIdPDSAData class
    /// </summary>
    /// <param name="entity">An instance of a gcs_UserEntityRolesForUserIdPDSA</param>
    public gcs_UserEntityRolesForUserIdPDSAData(gcs_UserEntityRolesForUserIdPDSA entity) : base()
    {
      Entity = entity;
      ValidatorObject = new gcs_UserEntityRolesForUserIdPDSAValidator(Entity);
            
      Init();
    }
    
    /// <summary>
    /// Constructor for the gcs_UserEntityRolesForUserIdPDSAData class
    /// </summary>
    /// <param name="dataProvider">An instance of a PDSADataProvider</param>
    /// <param name="entity">An instance of a gcs_UserEntityRolesForUserIdPDSA</param>
    public gcs_UserEntityRolesForUserIdPDSAData(PDSADataProvider dataProvider,
      gcs_UserEntityRolesForUserIdPDSA entity)
      : base(dataProvider)
    {
      Entity = entity;
      ValidatorObject = new  gcs_UserEntityRolesForUserIdPDSAValidator(Entity);
            
      Init();
    }
    
    /// <summary>
    /// Constructor for the gcs_UserEntityRolesForUserIdPDSAData class
    /// </summary>
    /// <param name="dataProvider">An instance of a PDSADataProvider</param>
    /// <param name="entity">An instance of a gcs_UserEntityRolesForUserIdPDSA</param>
    /// <param name="validator">An instance of a gcs_UserEntityRolesForUserIdPDSAValidator</param>
    public gcs_UserEntityRolesForUserIdPDSAData(PDSADataProvider dataProvider,
      gcs_UserEntityRolesForUserIdPDSA entity, gcs_UserEntityRolesForUserIdPDSAValidator validator)
      : base(dataProvider)
    {
      Entity = entity;
      ValidatorObject = validator;

      Init();
    }
    #endregion

    #region Public Property
    /// <summary>
    /// Get/Set the Entity class that will be used to get and set properties/fields for this data class.
    /// </summary>
    public gcs_UserEntityRolesForUserIdPDSA Entity { get; set; }
    #endregion

    #region Init Method
    /// <summary>
    /// Initializes this class to a valid start state.
    /// </summary>
    protected override void Init()
    {
      ClassName = "gcs_UserEntityRolesForUserIdPDSAData";
      StoredProcName = "gcs_UserEntityRolesForUserId";
      SchemaName = "GCS";

      // Create Parameters
      InitParameters();

      // Create Data Columns
      InitDataColumns();
    }
    #endregion

   #region InitParameters Method
    /// <summary>
    /// Creates all the parameters for the stored procedure.
    /// </summary>
    protected override void InitParameters()
    {
      PDSADataParameter param;

      // Clear all parameters each time
      AllParameters.Clear();

      // Create each parameter object and add to Parameters Collection
      param = new PDSADataParameter();
      param.ParameterName = gcs_UserEntityRolesForUserIdPDSAValidator.ParameterNames.UserId;
      param.DBType = DbType.Guid;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = gcs_UserEntityRolesForUserIdPDSAValidator.ParameterNames.RETURNVALUE;
      param.DBType = DbType.Int32;
      param.ParamDirection = ParameterDirection.ReturnValue;
      param.IsRefCursor = false;
      AllParameters.Add(param);

  
      AddReturnValueParameterToCollection();
    }
    #endregion

    #region InitDataColumns Method
    /// <summary>
    /// Initializes the Data Columns Collection for each field returned from the stored procedure.
    /// </summary>
    protected override void InitDataColumns()
    {
      PDSADataColumn dc;

      // Create each data column
      dc = PDSADataColumn.CreateDataColumn(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.UserName, GetResourceMessage("GCS_gcs_UserEntityRolesForUserIdPDSA_UserName_Header", "User Name"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.EntityName, GetResourceMessage("GCS_gcs_UserEntityRolesForUserIdPDSA_EntityName_Header", "Entity Name"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.RoleName, GetResourceMessage("GCS_gcs_UserEntityRolesForUserIdPDSA_RoleName_Header", "Role Name"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.UserId, GetResourceMessage("GCS_gcs_UserEntityRolesForUserIdPDSA_UserId_Header", "User Id"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.RoleId, GetResourceMessage("GCS_gcs_UserEntityRolesForUserIdPDSA_RoleId_Header", "Role Id"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.EntityId, GetResourceMessage("GCS_gcs_UserEntityRolesForUserIdPDSA_EntityId_Header", "Entity Id"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.ParentEntityId, GetResourceMessage("GCS_gcs_UserEntityRolesForUserIdPDSA_ParentEntityId_Header", "Parent Entity Id"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IsAdministrator, GetResourceMessage("GCS_gcs_UserEntityRolesForUserIdPDSA_IsAdministrator_Header", "Is Administrator"), false, typeof(bool), DbType.Boolean);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.InheritParentRoles, GetResourceMessage("GCS_gcs_UserEntityRolesForUserIdPDSA_InheritParentRoles_Header", "Inherit Parent Roles"), false, typeof(bool), DbType.Boolean);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IsAdministratorRole, GetResourceMessage("GCS_gcs_UserEntityRolesForUserIdPDSA_IsAdministratorRole_Header", "Is Administrator Role"), false, typeof(bool), DbType.Boolean);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllClusters, GetResourceMessage("GCS_gcs_UserEntityRolesForUserIdPDSA_IncludeAllClusters_Header", "Include All Clusters"), false, typeof(bool), DbType.Boolean);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllAccessPortals, GetResourceMessage("GCS_gcs_UserEntityRolesForUserIdPDSA_IncludeAllAccessPortals_Header", "Include All Access Portals"), false, typeof(bool), DbType.Boolean);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllInputOutputGroups, GetResourceMessage("GCS_gcs_UserEntityRolesForUserIdPDSA_IncludeAllInputOutputGroups_Header", "Include All Input Output Groups"), false, typeof(bool), DbType.Boolean);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllInputDevices, GetResourceMessage("GCS_gcs_UserEntityRolesForUserIdPDSA_IncludeAllInputDevices_Header", "Include All Input Devices"), false, typeof(bool), DbType.Boolean);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllOutputDevices, GetResourceMessage("GCS_gcs_UserEntityRolesForUserIdPDSA_IncludeAllOutputDevices_Header", "Include All Output Devices"), false, typeof(bool), DbType.Boolean);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllSites, GetResourceMessage("GCS_gcs_UserEntityRolesForUserIdPDSA_IncludeAllSites_Header", "Include All Sites"), false, typeof(bool), DbType.Boolean);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllRegions, GetResourceMessage("GCS_gcs_UserEntityRolesForUserIdPDSA_IncludeAllRegions_Header", "Include All Regions"), false, typeof(bool), DbType.Boolean);
      AllColumns.Add(dc);
    }
    #endregion

    #region EntityDataToParameterCollection Method
    /// <summary>
    /// Moves the data from the Entity class into the Parameters collection
    /// </summary>
    protected override void EntityDataToParameterCollection()
    {
      if (AllParameters.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ParameterNames.UserId).SetAsNull == false)
        AllParameters.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ParameterNames.UserId).Value = Entity.UserId;
      else
        AllParameters.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ParameterNames.UserId).Value = System.Data.SqlTypes.SqlGuid.Null;
    }
    #endregion

    #region EntityDataToColumnCollection Method
    /// <summary>
    /// Moves the data from the Entity class into the Columns collection
    /// </summary>
    protected override void EntityDataToColumnCollection()
    {
      if (AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.UserName).SetAsNull == false)
        AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.UserName).Value = Entity.UserName;
      else
        AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.UserName).Value = string.Empty;
     
      if (AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.EntityName).SetAsNull == false)
        AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.EntityName).Value = Entity.EntityName;
      else
        AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.EntityName).Value = string.Empty;
     
      if (AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.RoleName).SetAsNull == false)
        AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.RoleName).Value = Entity.RoleName;
      else
        AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.RoleName).Value = string.Empty;
     
      if (AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.UserId).SetAsNull == false)
        AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.UserId).Value = Entity.UserId;
      else
        AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.UserId).Value = Guid.Empty;
     
      if (AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.RoleId).SetAsNull == false)
        AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.RoleId).Value = Entity.RoleId;
      else
        AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.RoleId).Value = Guid.Empty;
     
      if (AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.EntityId).SetAsNull == false)
        AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.EntityId).Value = Entity.EntityId;
      else
        AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.EntityId).Value = Guid.Empty;
     
      if (AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.ParentEntityId).SetAsNull == false)
        AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.ParentEntityId).Value = Entity.ParentEntityId;
      else
        AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.ParentEntityId).Value = Guid.Empty;
     
      if (AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IsAdministrator).SetAsNull == false)
        AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IsAdministrator).Value = Entity.IsAdministrator;
      else
        AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IsAdministrator).Value = false;
     
      if (AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.InheritParentRoles).SetAsNull == false)
        AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.InheritParentRoles).Value = Entity.InheritParentRoles;
      else
        AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.InheritParentRoles).Value = false;
     
      if (AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IsAdministratorRole).SetAsNull == false)
        AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IsAdministratorRole).Value = Entity.IsAdministratorRole;
      else
        AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IsAdministratorRole).Value = false;
     
      if (AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllClusters).SetAsNull == false)
        AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllClusters).Value = Entity.IncludeAllClusters;
      else
        AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllClusters).Value = false;
     
      if (AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllAccessPortals).SetAsNull == false)
        AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllAccessPortals).Value = Entity.IncludeAllAccessPortals;
      else
        AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllAccessPortals).Value = false;
     
      if (AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllInputOutputGroups).SetAsNull == false)
        AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllInputOutputGroups).Value = Entity.IncludeAllInputOutputGroups;
      else
        AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllInputOutputGroups).Value = false;
     
      if (AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllInputDevices).SetAsNull == false)
        AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllInputDevices).Value = Entity.IncludeAllInputDevices;
      else
        AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllInputDevices).Value = false;
     
      if (AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllOutputDevices).SetAsNull == false)
        AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllOutputDevices).Value = Entity.IncludeAllOutputDevices;
      else
        AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllOutputDevices).Value = false;
     
      if (AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllSites).SetAsNull == false)
        AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllSites).Value = Entity.IncludeAllSites;
      else
        AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllSites).Value = false;
     
      if (AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllRegions).SetAsNull == false)
        AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllRegions).Value = Entity.IncludeAllRegions;
      else
        AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllRegions).Value = false;
     
    }
    #endregion

    #region OutputParametersToEntityData Method
    /// <summary>
    /// Moves the output parameters from the Parameters collection into the Entity class.
    /// </summary>
    protected override void OutputParametersToEntityData()
    {
      if (AllParameters.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ParameterNames.RETURNVALUE).IsValueNull == false)
        Entity.RETURNVALUE = AllParameters.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ParameterNames.RETURNVALUE).GetAsInteger();
      else
        Entity.RETURNVALUE = 0;
    }
    #endregion
    
    #region ColumnCollectionToEntityData Method
    /// <summary>
    /// Moves the data from the Columns collection into the Entity class.
    /// </summary>
    protected override void ColumnCollectionToEntityData()
    {
      if (AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.UserName).IsNull == false)
        Entity.UserName = AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.UserName).GetAsString();
      else
        Entity.UserName = string.Empty;

      if (AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.EntityName).IsNull == false)
        Entity.EntityName = AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.EntityName).GetAsString();
      else
        Entity.EntityName = string.Empty;

      if (AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.RoleName).IsNull == false)
        Entity.RoleName = AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.RoleName).GetAsString();
      else
        Entity.RoleName = string.Empty;

      if (AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.UserId).IsNull == false)
        Entity.UserId = AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.UserId).GetAsGuid();
      else
        Entity.UserId = Guid.Empty;

      if (AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.RoleId).IsNull == false)
        Entity.RoleId = AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.RoleId).GetAsGuid();
      else
        Entity.RoleId = Guid.Empty;

      if (AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.EntityId).IsNull == false)
        Entity.EntityId = AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.EntityId).GetAsGuid();
      else
        Entity.EntityId = Guid.Empty;

      if (AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.ParentEntityId).IsNull == false)
        Entity.ParentEntityId = AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.ParentEntityId).GetAsGuid();
      else
        Entity.ParentEntityId = Guid.Empty;

      if (AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IsAdministrator).IsNull == false)
        Entity.IsAdministrator = AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IsAdministrator).GetAsBool();
      else
        Entity.IsAdministrator = false;

      if (AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.InheritParentRoles).IsNull == false)
        Entity.InheritParentRoles = AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.InheritParentRoles).GetAsBool();
      else
        Entity.InheritParentRoles = false;

      if (AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IsAdministratorRole).IsNull == false)
        Entity.IsAdministratorRole = AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IsAdministratorRole).GetAsBool();
      else
        Entity.IsAdministratorRole = false;

      if (AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllClusters).IsNull == false)
        Entity.IncludeAllClusters = AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllClusters).GetAsBool();
      else
        Entity.IncludeAllClusters = false;

      if (AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllAccessPortals).IsNull == false)
        Entity.IncludeAllAccessPortals = AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllAccessPortals).GetAsBool();
      else
        Entity.IncludeAllAccessPortals = false;

      if (AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllInputOutputGroups).IsNull == false)
        Entity.IncludeAllInputOutputGroups = AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllInputOutputGroups).GetAsBool();
      else
        Entity.IncludeAllInputOutputGroups = false;

      if (AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllInputDevices).IsNull == false)
        Entity.IncludeAllInputDevices = AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllInputDevices).GetAsBool();
      else
        Entity.IncludeAllInputDevices = false;

      if (AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllOutputDevices).IsNull == false)
        Entity.IncludeAllOutputDevices = AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllOutputDevices).GetAsBool();
      else
        Entity.IncludeAllOutputDevices = false;

      if (AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllSites).IsNull == false)
        Entity.IncludeAllSites = AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllSites).GetAsBool();
      else
        Entity.IncludeAllSites = false;

      if (AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllRegions).IsNull == false)
        Entity.IncludeAllRegions = AllColumns.GetByName(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllRegions).GetAsBool();
      else
        Entity.IncludeAllRegions = false;

    }
    #endregion

    #region CreateEntityFromDataRow Method
    /// <summary>
    /// Creates an Entity object from a DataRow object.
    /// </summary>
    /// <param name="dr">DataRow object with all fields from the table in it.</param>
    /// <returns>gcs_UserEntityRolesForUserIdPDSA</returns>
    public gcs_UserEntityRolesForUserIdPDSA CreateEntityFromDataRow(DataRow dr)
    {
      gcs_UserEntityRolesForUserIdPDSA entity = new gcs_UserEntityRolesForUserIdPDSA();

      if (dr.Table.Columns.Contains(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.UserName))
      {
        if (dr[gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.UserName] != DBNull.Value)
          entity.UserName = PDSAString.ConvertToStringTrim(dr[gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.UserName]);
      }
      if (dr.Table.Columns.Contains(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.EntityName))
      {
        if (dr[gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.EntityName] != DBNull.Value)
          entity.EntityName = PDSAString.ConvertToStringTrim(dr[gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.EntityName]);
      }
      if (dr.Table.Columns.Contains(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.RoleName))
      {
        if (dr[gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.RoleName] != DBNull.Value)
          entity.RoleName = PDSAString.ConvertToStringTrim(dr[gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.RoleName]);
      }
      if (dr.Table.Columns.Contains(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.UserId))
      {
        if (dr[gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.UserId] != DBNull.Value)
          entity.UserId = PDSAProperty.ConvertToGuid(dr[gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.UserId]);
      }
      if (dr.Table.Columns.Contains(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.RoleId))
      {
        if (dr[gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.RoleId] != DBNull.Value)
          entity.RoleId = PDSAProperty.ConvertToGuid(dr[gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.RoleId]);
      }
      if (dr.Table.Columns.Contains(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.EntityId))
      {
        if (dr[gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.EntityId] != DBNull.Value)
          entity.EntityId = PDSAProperty.ConvertToGuid(dr[gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.EntityId]);
      }
      if (dr.Table.Columns.Contains(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.ParentEntityId))
      {
        if (dr[gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.ParentEntityId] != DBNull.Value)
          entity.ParentEntityId = PDSAProperty.ConvertToGuid(dr[gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.ParentEntityId]);
      }
      if (dr.Table.Columns.Contains(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IsAdministrator))
      {
        if (dr[gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IsAdministrator] != DBNull.Value)
          entity.IsAdministrator = Convert.ToBoolean(dr[gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IsAdministrator]);
      }
      if (dr.Table.Columns.Contains(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.InheritParentRoles))
      {
        if (dr[gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.InheritParentRoles] != DBNull.Value)
          entity.InheritParentRoles = Convert.ToBoolean(dr[gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.InheritParentRoles]);
      }
      if (dr.Table.Columns.Contains(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IsAdministratorRole))
      {
        if (dr[gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IsAdministratorRole] != DBNull.Value)
          entity.IsAdministratorRole = Convert.ToBoolean(dr[gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IsAdministratorRole]);
      }
      if (dr.Table.Columns.Contains(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllClusters))
      {
        if (dr[gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllClusters] != DBNull.Value)
          entity.IncludeAllClusters = Convert.ToBoolean(dr[gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllClusters]);
      }
      if (dr.Table.Columns.Contains(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllAccessPortals))
      {
        if (dr[gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllAccessPortals] != DBNull.Value)
          entity.IncludeAllAccessPortals = Convert.ToBoolean(dr[gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllAccessPortals]);
      }
      if (dr.Table.Columns.Contains(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllInputOutputGroups))
      {
        if (dr[gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllInputOutputGroups] != DBNull.Value)
          entity.IncludeAllInputOutputGroups = Convert.ToBoolean(dr[gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllInputOutputGroups]);
      }
      if (dr.Table.Columns.Contains(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllInputDevices))
      {
        if (dr[gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllInputDevices] != DBNull.Value)
          entity.IncludeAllInputDevices = Convert.ToBoolean(dr[gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllInputDevices]);
      }
      if (dr.Table.Columns.Contains(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllOutputDevices))
      {
        if (dr[gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllOutputDevices] != DBNull.Value)
          entity.IncludeAllOutputDevices = Convert.ToBoolean(dr[gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllOutputDevices]);
      }
      if (dr.Table.Columns.Contains(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllSites))
      {
        if (dr[gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllSites] != DBNull.Value)
          entity.IncludeAllSites = Convert.ToBoolean(dr[gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllSites]);
      }
      if (dr.Table.Columns.Contains(gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllRegions))
      {
        if (dr[gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllRegions] != DBNull.Value)
          entity.IncludeAllRegions = Convert.ToBoolean(dr[gcs_UserEntityRolesForUserIdPDSAValidator.ColumnNames.IncludeAllRegions]);
      }
      entity.IsDirty = false;

      return entity;
    }
    #endregion

    #region ParameterNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the gcs_UserEntityRolesForUserIdPDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ParameterNames
    {
    /// <summary>
    /// Returns '@UserId'
    /// </summary>
    public static string UserId = "@UserId";
    /// <summary>
    /// Returns '@RETURN_VALUE'
    /// </summary>
    public static string RETURNVALUE = "@RETURN_VALUE";
    }
    #endregion
  }
}
