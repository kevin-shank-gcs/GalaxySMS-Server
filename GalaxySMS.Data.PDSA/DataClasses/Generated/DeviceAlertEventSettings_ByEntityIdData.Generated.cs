using System;
using System.Data;
using System.Text;

using PDSA.Common;
using PDSA.DataLayer;
using PDSA.DataLayer.DataClasses;
using PDSA.Validation;

using GalaxySMS.EntityLayer;
using GalaxySMS.ValidationLayer;

namespace GalaxySMS.DataLayer
{
  /// <summary>
  /// This class calls the stored procedure DeviceAlertEventSettings_ByEntityIdPDSA
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public class DeviceAlertEventSettings_ByEntityIdPDSAData : PDSAStoredProcReadOnly
  {
    #region Constructors
    /// <summary>
    /// Constructor for the DeviceAlertEventSettings_ByEntityIdPDSAData class
    /// </summary>
    public DeviceAlertEventSettings_ByEntityIdPDSAData() : base()
    {
      Entity = new DeviceAlertEventSettings_ByEntityIdPDSA();
      ValidatorObject = new  DeviceAlertEventSettings_ByEntityIdPDSAValidator(Entity);

      Init();
    }

    /// <summary>
    /// Constructor for the DeviceAlertEventSettings_ByEntityIdPDSAData class
    /// </summary>
    /// <param name="entity">An instance of a DeviceAlertEventSettings_ByEntityIdPDSA</param>
    public DeviceAlertEventSettings_ByEntityIdPDSAData(DeviceAlertEventSettings_ByEntityIdPDSA entity) : base()
    {
      Entity = entity;
      ValidatorObject = new DeviceAlertEventSettings_ByEntityIdPDSAValidator(Entity);
            
      Init();
    }
    
    /// <summary>
    /// Constructor for the DeviceAlertEventSettings_ByEntityIdPDSAData class
    /// </summary>
    /// <param name="dataProvider">An instance of a PDSADataProvider</param>
    /// <param name="entity">An instance of a DeviceAlertEventSettings_ByEntityIdPDSA</param>
    public DeviceAlertEventSettings_ByEntityIdPDSAData(PDSADataProvider dataProvider,
      DeviceAlertEventSettings_ByEntityIdPDSA entity)
      : base(dataProvider)
    {
      Entity = entity;
      ValidatorObject = new  DeviceAlertEventSettings_ByEntityIdPDSAValidator(Entity);
            
      Init();
    }
    
    /// <summary>
    /// Constructor for the DeviceAlertEventSettings_ByEntityIdPDSAData class
    /// </summary>
    /// <param name="dataProvider">An instance of a PDSADataProvider</param>
    /// <param name="entity">An instance of a DeviceAlertEventSettings_ByEntityIdPDSA</param>
    /// <param name="validator">An instance of a DeviceAlertEventSettings_ByEntityIdPDSAValidator</param>
    public DeviceAlertEventSettings_ByEntityIdPDSAData(PDSADataProvider dataProvider,
      DeviceAlertEventSettings_ByEntityIdPDSA entity, DeviceAlertEventSettings_ByEntityIdPDSAValidator validator)
      : base(dataProvider)
    {
      Entity = entity;
      ValidatorObject = validator;

      Init();
    }
    #endregion

    #region Public Property
    /// <summary>
    /// Get/Set the Entity class that will be used to get and set properties/fields for this data class.
    /// </summary>
    public DeviceAlertEventSettings_ByEntityIdPDSA Entity { get; set; }
    #endregion

    #region Init Method
    /// <summary>
    /// Initializes this class to a valid start state.
    /// </summary>
    protected override void Init()
    {
      ClassName = "DeviceAlertEventSettings_ByEntityIdPDSAData";
      StoredProcName = "DeviceAlertEventSettings_ByEntityId";
      SchemaName = "GCS";

      // Create Parameters
      InitParameters();

      // Create Data Columns
      InitDataColumns();
    }
    #endregion

   #region InitParameters Method
    /// <summary>
    /// Creates all the parameters for the stored procedure.
    /// </summary>
    protected override void InitParameters()
    {
      PDSADataParameter param;

      // Clear all parameters each time
      AllParameters.Clear();

      // Create each parameter object and add to Parameters Collection
      param = new PDSADataParameter();
      param.ParameterName = DeviceAlertEventSettings_ByEntityIdPDSAValidator.ParameterNames.EntityId;
      param.DBType = DbType.Guid;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = DeviceAlertEventSettings_ByEntityIdPDSAValidator.ParameterNames.IsActive;
      param.DBType = DbType.Boolean;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = DeviceAlertEventSettings_ByEntityIdPDSAValidator.ParameterNames.RETURNVALUE;
      param.DBType = DbType.Int32;
      param.ParamDirection = ParameterDirection.ReturnValue;
      param.IsRefCursor = false;
      AllParameters.Add(param);

  
      AddReturnValueParameterToCollection();
    }
    #endregion

    #region InitDataColumns Method
    /// <summary>
    /// Initializes the Data Columns Collection for each field returned from the stored procedure.
    /// </summary>
    protected override void InitDataColumns()
    {
      PDSADataColumn dc;

      // Create each data column
      dc = PDSADataColumn.CreateDataColumn(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.Pk, GetResourceMessage("GCS_DeviceAlertEventSettings_ByEntityIdPDSA_Pk_Header", "Pk"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.EntityId, GetResourceMessage("GCS_DeviceAlertEventSettings_ByEntityIdPDSA_EntityId_Header", "Entity Id"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.EntityName, GetResourceMessage("GCS_DeviceAlertEventSettings_ByEntityIdPDSA_EntityName_Header", "Entity Name"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.DeviceId, GetResourceMessage("GCS_DeviceAlertEventSettings_ByEntityIdPDSA_DeviceId_Header", "Device Id"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.DeviceName, GetResourceMessage("GCS_DeviceAlertEventSettings_ByEntityIdPDSA_DeviceName_Header", "Device Name"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.EventType, GetResourceMessage("GCS_DeviceAlertEventSettings_ByEntityIdPDSA_EventType_Header", "Event Type"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.DeviceType, GetResourceMessage("GCS_DeviceAlertEventSettings_ByEntityIdPDSA_DeviceType_Header", "Device Type"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.ClusterName, GetResourceMessage("GCS_DeviceAlertEventSettings_ByEntityIdPDSA_ClusterName_Header", "Cluster Name"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.TimeSchedule, GetResourceMessage("GCS_DeviceAlertEventSettings_ByEntityIdPDSA_TimeSchedule_Header", "Time Schedule"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.AlertEventTypeUid, GetResourceMessage("GCS_DeviceAlertEventSettings_ByEntityIdPDSA_AlertEventTypeUid_Header", "Alert Event Type Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.ClusterUid, GetResourceMessage("GCS_DeviceAlertEventSettings_ByEntityIdPDSA_ClusterUid_Header", "Cluster Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.AcknowledgeTimeScheduleUid, GetResourceMessage("GCS_DeviceAlertEventSettings_ByEntityIdPDSA_AcknowledgeTimeScheduleUid_Header", "Acknowledge Time Schedule Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.IsActive, GetResourceMessage("GCS_DeviceAlertEventSettings_ByEntityIdPDSA_IsActive_Header", "Is Active"), false, typeof(bool), DbType.Boolean);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.Flag, GetResourceMessage("GCS_DeviceAlertEventSettings_ByEntityIdPDSA_Flag_Header", "Flag"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.AlertEventsFlag, GetResourceMessage("GCS_DeviceAlertEventSettings_ByEntityIdPDSA_AlertEventsFlag_Header", "Alert Events Flag"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
    }
    #endregion

    #region EntityDataToParameterCollection Method
    /// <summary>
    /// Moves the data from the Entity class into the Parameters collection
    /// </summary>
    protected override void EntityDataToParameterCollection()
    {
      if (AllParameters.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ParameterNames.EntityId).SetAsNull == false)
        AllParameters.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ParameterNames.EntityId).Value = Entity.EntityId;
      else
        AllParameters.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ParameterNames.EntityId).Value = System.Data.SqlTypes.SqlGuid.Null;
      if (AllParameters.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ParameterNames.IsActive).SetAsNull == false)
        AllParameters.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ParameterNames.IsActive).Value = Entity.IsActive;
      else
        AllParameters.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ParameterNames.IsActive).Value = System.Data.SqlTypes.SqlBoolean.Null;
    }
    #endregion

    #region EntityDataToColumnCollection Method
    /// <summary>
    /// Moves the data from the Entity class into the Columns collection
    /// </summary>
    protected override void EntityDataToColumnCollection()
    {
      if (AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.Pk).SetAsNull == false)
        AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.Pk).Value = Entity.Pk;
      else
        AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.Pk).Value = Guid.Empty;
     
      if (AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.EntityId).SetAsNull == false)
        AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.EntityId).Value = Entity.EntityId;
      else
        AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.EntityId).Value = Guid.Empty;
     
      if (AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.EntityName).SetAsNull == false)
        AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.EntityName).Value = Entity.EntityName;
      else
        AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.EntityName).Value = string.Empty;
     
      if (AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.DeviceId).SetAsNull == false)
        AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.DeviceId).Value = Entity.DeviceId;
      else
        AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.DeviceId).Value = Guid.Empty;
     
      if (AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.DeviceName).SetAsNull == false)
        AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.DeviceName).Value = Entity.DeviceName;
      else
        AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.DeviceName).Value = string.Empty;
     
      if (AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.EventType).SetAsNull == false)
        AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.EventType).Value = Entity.EventType;
      else
        AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.EventType).Value = string.Empty;
     
      if (AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.DeviceType).SetAsNull == false)
        AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.DeviceType).Value = Entity.DeviceType;
      else
        AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.DeviceType).Value = string.Empty;
     
      if (AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.ClusterName).SetAsNull == false)
        AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.ClusterName).Value = Entity.ClusterName;
      else
        AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.ClusterName).Value = string.Empty;
     
      if (AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.TimeSchedule).SetAsNull == false)
        AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.TimeSchedule).Value = Entity.TimeSchedule;
      else
        AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.TimeSchedule).Value = string.Empty;
     
      if (AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.AlertEventTypeUid).SetAsNull == false)
        AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.AlertEventTypeUid).Value = Entity.AlertEventTypeUid;
      else
        AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.AlertEventTypeUid).Value = Guid.Empty;
     
      if (AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.ClusterUid).SetAsNull == false)
        AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.ClusterUid).Value = Entity.ClusterUid;
      else
        AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.ClusterUid).Value = Guid.Empty;
     
      if (AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.AcknowledgeTimeScheduleUid).SetAsNull == false)
        AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.AcknowledgeTimeScheduleUid).Value = Entity.AcknowledgeTimeScheduleUid;
      else
        AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.AcknowledgeTimeScheduleUid).Value = Guid.Empty;
     
      if (AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.IsActive).SetAsNull == false)
        AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.IsActive).Value = Entity.IsActive;
      else
        AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.IsActive).Value = false;
     
      if (AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.Flag).SetAsNull == false)
        AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.Flag).Value = Entity.Flag;
      else
        AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.Flag).Value = 0;
     
      if (AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.AlertEventsFlag).SetAsNull == false)
        AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.AlertEventsFlag).Value = Entity.AlertEventsFlag;
      else
        AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.AlertEventsFlag).Value = 0;
     
    }
    #endregion

    #region OutputParametersToEntityData Method
    /// <summary>
    /// Moves the output parameters from the Parameters collection into the Entity class.
    /// </summary>
    protected override void OutputParametersToEntityData()
    {
      if (AllParameters.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ParameterNames.RETURNVALUE).IsValueNull == false)
        Entity.RETURNVALUE = AllParameters.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ParameterNames.RETURNVALUE).GetAsInteger();
      else
        Entity.RETURNVALUE = 0;
    }
    #endregion
    
    #region ColumnCollectionToEntityData Method
    /// <summary>
    /// Moves the data from the Columns collection into the Entity class.
    /// </summary>
    protected override void ColumnCollectionToEntityData()
    {
      if (AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.Pk).IsNull == false)
        Entity.Pk = AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.Pk).GetAsGuid();
      else
        Entity.Pk = Guid.Empty;

      if (AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.EntityId).IsNull == false)
        Entity.EntityId = AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.EntityId).GetAsGuid();
      else
        Entity.EntityId = Guid.Empty;

      if (AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.EntityName).IsNull == false)
        Entity.EntityName = AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.EntityName).GetAsString();
      else
        Entity.EntityName = string.Empty;

      if (AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.DeviceId).IsNull == false)
        Entity.DeviceId = AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.DeviceId).GetAsGuid();
      else
        Entity.DeviceId = Guid.Empty;

      if (AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.DeviceName).IsNull == false)
        Entity.DeviceName = AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.DeviceName).GetAsString();
      else
        Entity.DeviceName = string.Empty;

      if (AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.EventType).IsNull == false)
        Entity.EventType = AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.EventType).GetAsString();
      else
        Entity.EventType = string.Empty;

      if (AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.DeviceType).IsNull == false)
        Entity.DeviceType = AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.DeviceType).GetAsString();
      else
        Entity.DeviceType = string.Empty;

      if (AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.ClusterName).IsNull == false)
        Entity.ClusterName = AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.ClusterName).GetAsString();
      else
        Entity.ClusterName = string.Empty;

      if (AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.TimeSchedule).IsNull == false)
        Entity.TimeSchedule = AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.TimeSchedule).GetAsString();
      else
        Entity.TimeSchedule = string.Empty;

      if (AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.AlertEventTypeUid).IsNull == false)
        Entity.AlertEventTypeUid = AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.AlertEventTypeUid).GetAsGuid();
      else
        Entity.AlertEventTypeUid = Guid.Empty;

      if (AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.ClusterUid).IsNull == false)
        Entity.ClusterUid = AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.ClusterUid).GetAsGuid();
      else
        Entity.ClusterUid = Guid.Empty;

      if (AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.AcknowledgeTimeScheduleUid).IsNull == false)
        Entity.AcknowledgeTimeScheduleUid = AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.AcknowledgeTimeScheduleUid).GetAsGuid();
      else
        Entity.AcknowledgeTimeScheduleUid = Guid.Empty;

      if (AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.IsActive).IsNull == false)
        Entity.IsActive = AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.IsActive).GetAsBool();
      else
        Entity.IsActive = false;

      if (AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.Flag).IsNull == false)
        Entity.Flag = AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.Flag).GetAsInteger();
      else
        Entity.Flag = 0;

      if (AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.AlertEventsFlag).IsNull == false)
        Entity.AlertEventsFlag = AllColumns.GetByName(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.AlertEventsFlag).GetAsInteger();
      else
        Entity.AlertEventsFlag = 0;

    }
    #endregion

    #region CreateEntityFromDataRow Method
    /// <summary>
    /// Creates an Entity object from a DataRow object.
    /// </summary>
    /// <param name="dr">DataRow object with all fields from the table in it.</param>
    /// <returns>DeviceAlertEventSettings_ByEntityIdPDSA</returns>
    public DeviceAlertEventSettings_ByEntityIdPDSA CreateEntityFromDataRow(DataRow dr)
    {
      DeviceAlertEventSettings_ByEntityIdPDSA entity = new DeviceAlertEventSettings_ByEntityIdPDSA();

      if (dr.Table.Columns.Contains(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.Pk))
      {
        if (dr[DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.Pk] != DBNull.Value)
          entity.Pk = PDSAProperty.ConvertToGuid(dr[DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.Pk]);
      }
      if (dr.Table.Columns.Contains(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.EntityId))
      {
        if (dr[DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.EntityId] != DBNull.Value)
          entity.EntityId = PDSAProperty.ConvertToGuid(dr[DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.EntityId]);
      }
      if (dr.Table.Columns.Contains(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.EntityName))
      {
        if (dr[DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.EntityName] != DBNull.Value)
          entity.EntityName = PDSAString.ConvertToStringTrim(dr[DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.EntityName]);
      }
      if (dr.Table.Columns.Contains(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.DeviceId))
      {
        if (dr[DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.DeviceId] != DBNull.Value)
          entity.DeviceId = PDSAProperty.ConvertToGuid(dr[DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.DeviceId]);
      }
      if (dr.Table.Columns.Contains(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.DeviceName))
      {
        if (dr[DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.DeviceName] != DBNull.Value)
          entity.DeviceName = PDSAString.ConvertToStringTrim(dr[DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.DeviceName]);
      }
      if (dr.Table.Columns.Contains(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.EventType))
      {
        if (dr[DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.EventType] != DBNull.Value)
          entity.EventType = PDSAString.ConvertToStringTrim(dr[DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.EventType]);
      }
      if (dr.Table.Columns.Contains(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.DeviceType))
      {
        if (dr[DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.DeviceType] != DBNull.Value)
          entity.DeviceType = PDSAString.ConvertToStringTrim(dr[DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.DeviceType]);
      }
      if (dr.Table.Columns.Contains(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.ClusterName))
      {
        if (dr[DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.ClusterName] != DBNull.Value)
          entity.ClusterName = PDSAString.ConvertToStringTrim(dr[DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.ClusterName]);
      }
      if (dr.Table.Columns.Contains(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.TimeSchedule))
      {
        if (dr[DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.TimeSchedule] != DBNull.Value)
          entity.TimeSchedule = PDSAString.ConvertToStringTrim(dr[DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.TimeSchedule]);
      }
      if (dr.Table.Columns.Contains(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.AlertEventTypeUid))
      {
        if (dr[DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.AlertEventTypeUid] != DBNull.Value)
          entity.AlertEventTypeUid = PDSAProperty.ConvertToGuid(dr[DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.AlertEventTypeUid]);
      }
      if (dr.Table.Columns.Contains(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.ClusterUid))
      {
        if (dr[DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.ClusterUid] != DBNull.Value)
          entity.ClusterUid = PDSAProperty.ConvertToGuid(dr[DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.ClusterUid]);
      }
      if (dr.Table.Columns.Contains(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.AcknowledgeTimeScheduleUid))
      {
        if (dr[DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.AcknowledgeTimeScheduleUid] != DBNull.Value)
          entity.AcknowledgeTimeScheduleUid = PDSAProperty.ConvertToGuid(dr[DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.AcknowledgeTimeScheduleUid]);
      }
      if (dr.Table.Columns.Contains(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.IsActive))
      {
        if (dr[DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.IsActive] != DBNull.Value)
          entity.IsActive = Convert.ToBoolean(dr[DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.IsActive]);
      }
      if (dr.Table.Columns.Contains(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.Flag))
      {
        if (dr[DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.Flag] != DBNull.Value)
          entity.Flag = Convert.ToInt32(dr[DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.Flag]);
      }
      if (dr.Table.Columns.Contains(DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.AlertEventsFlag))
      {
        if (dr[DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.AlertEventsFlag] != DBNull.Value)
          entity.AlertEventsFlag = Convert.ToInt32(dr[DeviceAlertEventSettings_ByEntityIdPDSAValidator.ColumnNames.AlertEventsFlag]);
      }
      entity.IsDirty = false;

      return entity;
    }
    #endregion

    #region ParameterNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the DeviceAlertEventSettings_ByEntityIdPDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ParameterNames
    {
    /// <summary>
    /// Returns '@EntityId'
    /// </summary>
    public static string EntityId = "@EntityId";
    /// <summary>
    /// Returns '@IsActive'
    /// </summary>
    public static string IsActive = "@IsActive";
    /// <summary>
    /// Returns '@RETURN_VALUE'
    /// </summary>
    public static string RETURNVALUE = "@RETURN_VALUE";
    }
    #endregion
  }
}
