using System;
using System.Data;
using System.Text;

using PDSA.Common;
using PDSA.DataLayer;
using PDSA.DataLayer.DataClasses;
using PDSA.Validation;

using GalaxySMS.EntityLayer;
using GalaxySMS.ValidationLayer;

namespace GalaxySMS.DataLayer
{
  /// <summary>
  /// This class calls the stored procedure GalaxyCpuConnection_SavePDSAData
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public class GalaxyCpuConnection_SavePDSAData : PDSAStoredProcExecute
  {
    #region Constructors
    /// <summary>
    /// Constructor for the GalaxyCpuConnection_SavePDSAData class
    /// </summary>
    public GalaxyCpuConnection_SavePDSAData() : base()
    {
      Entity = new GalaxyCpuConnection_SavePDSA();
      ValidatorObject = new  GalaxyCpuConnection_SavePDSAValidator(Entity);

      Init();
    }

    /// <summary>
    /// Constructor for the GalaxyCpuConnection_SavePDSAData class
    /// </summary>
    /// <param name="entity">An instance of a GalaxyCpuConnection_SavePDSA</param>
    public GalaxyCpuConnection_SavePDSAData(GalaxyCpuConnection_SavePDSA entity) : base()
    {
      Entity = entity;
      ValidatorObject = new GalaxyCpuConnection_SavePDSAValidator(Entity);
            
      Init();
    }
    
    /// <summary>
    /// Constructor for the GalaxyCpuConnection_SavePDSAData class
    /// </summary>
    /// <param name="dataProvider">An instance of a PDSADataProvider</param>
    /// <param name="entity">An instance of a GalaxyCpuConnection_SavePDSA</param>
    public GalaxyCpuConnection_SavePDSAData(PDSADataProvider dataProvider,
      GalaxyCpuConnection_SavePDSA entity)
      : base(dataProvider)
    {
      Entity = entity;
      ValidatorObject = new  GalaxyCpuConnection_SavePDSAValidator(Entity);
            
      Init();
    }
    
    /// <summary>
    /// Constructor for the GalaxyCpuConnection_SavePDSAData class
    /// </summary>
    /// <param name="dataProvider">An instance of a PDSADataProvider</param>
    /// <param name="entity">An instance of a GalaxyCpuConnection_SavePDSA</param>
    /// <param name="validator">An instance of a GalaxyCpuConnection_SavePDSAValidator</param>
    public GalaxyCpuConnection_SavePDSAData(PDSADataProvider dataProvider,
      GalaxyCpuConnection_SavePDSA entity, GalaxyCpuConnection_SavePDSAValidator validator)
      : base(dataProvider)
    {
      Entity = entity;
      ValidatorObject = validator;

      Init();
    }
    #endregion

    #region Public Property
    /// <summary>
    /// Get/Set the Entity class that will be used to get and set parameters and columns for this data class.
    /// </summary>
    public GalaxyCpuConnection_SavePDSA Entity { get; set; }
    #endregion

    #region Init Method
    /// <summary>
    /// Initializes this class to a valid start state.
    /// </summary>
    protected override void Init()
    {
      ClassName = "GalaxyCpuConnection_SavePDSAData";
      StoredProcName = "GalaxyCpuConnection_Save";
      SchemaName = "GCS";

      // Move validator Properties collection into the Parameters collection
      PropertiesToParameters(ValidatorObject.Properties);

      // Create Parameters
      InitParameters();
    }
    #endregion
    
   #region InitParameters Method
    /// <summary>
    /// Creates all the parameters for the stored procedure.
    /// </summary>
    protected override void InitParameters()
    {
      PDSADataParameter param;

      // Clear all parameters each time
      AllParameters.Clear();

      // Create each parameter object and add to Parameters Collection
      param = new PDSADataParameter();
      param.ParameterName = GalaxyCpuConnection_SavePDSAData.ParameterNames.CpuUid;
      param.DBType = DbType.Guid;
      param.IsRefCursor = false;
      param.ParamDirection = ParameterDirection.Input;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = GalaxyCpuConnection_SavePDSAData.ParameterNames.IsConnected;
      param.DBType = DbType.Boolean;
      param.IsRefCursor = false;
      param.ParamDirection = ParameterDirection.Input;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = GalaxyCpuConnection_SavePDSAData.ParameterNames.ServerAddress;
      param.DBType = DbType.String;
      param.IsRefCursor = false;
      param.ParamDirection = ParameterDirection.Input;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = GalaxyCpuConnection_SavePDSAData.ParameterNames.RETURNVALUE;
      param.DBType = DbType.Int32;
      param.IsRefCursor = false;
      param.ParamDirection = ParameterDirection.ReturnValue;
      AllParameters.Add(param);


      AddReturnValueParameterToCollection();
    }
    #endregion

    #region EntityDataToParameterCollection Method
    /// <summary>
    /// Moves the data from the Entity class into the Parameters collection
    /// </summary>
    protected override void EntityDataToParameterCollection()
    {
      if (AllParameters.GetByName(GalaxyCpuConnection_SavePDSAValidator.ParameterNames.CpuUid).SetAsNull == false)
        AllParameters.GetByName(GalaxyCpuConnection_SavePDSAValidator.ParameterNames.CpuUid).Value = Entity.CpuUid;
      else
        AllParameters.GetByName(GalaxyCpuConnection_SavePDSAValidator.ParameterNames.CpuUid).Value = System.Data.SqlTypes.SqlGuid.Null;
      if (AllParameters.GetByName(GalaxyCpuConnection_SavePDSAValidator.ParameterNames.IsConnected).SetAsNull == false)
        AllParameters.GetByName(GalaxyCpuConnection_SavePDSAValidator.ParameterNames.IsConnected).Value = Entity.IsConnected;
      else
        AllParameters.GetByName(GalaxyCpuConnection_SavePDSAValidator.ParameterNames.IsConnected).Value = System.Data.SqlTypes.SqlBoolean.Null;
      if (AllParameters.GetByName(GalaxyCpuConnection_SavePDSAValidator.ParameterNames.ServerAddress).SetAsNull == false)
        AllParameters.GetByName(GalaxyCpuConnection_SavePDSAValidator.ParameterNames.ServerAddress).Value = Entity.ServerAddress;
      else
        AllParameters.GetByName(GalaxyCpuConnection_SavePDSAValidator.ParameterNames.ServerAddress).Value = System.Data.SqlTypes.SqlChars.Null;
    }
    #endregion
    
    #region OutputParametersToEntityData Method
    /// <summary>
    /// Moves the output parameters from the Parameters collection into the Entity class.
    /// </summary>
    protected override void OutputParametersToEntityData()
    {
      if (AllParameters.GetByName(GalaxyCpuConnection_SavePDSAData.ParameterNames.RETURNVALUE).IsValueNull == false)
        Entity.RETURNVALUE = AllParameters.GetByName(GalaxyCpuConnection_SavePDSAData.ParameterNames.RETURNVALUE).GetAsInteger();
      else
        Entity.RETURNVALUE = 0;
    }
    #endregion
        
    #region SetDirtyFlag Methods
    /// <summary>
    /// This is called with a 'false' value after each successful Insert/Update method call.
    /// </summary>
    /// <param name="isDirty">Called with 'false' by default</param>
    protected override void SetDirtyFlag(bool isDirty)
    {
      Entity.IsDirty = isDirty;
    }
    #endregion
       
    #region ParameterNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the GalaxyCpuConnection_SavePDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ParameterNames
    {
    /// <summary>
    /// Returns '@CpuUid'
    /// </summary>
    public static string CpuUid = "@CpuUid";
    /// <summary>
    /// Returns '@IsConnected'
    /// </summary>
    public static string IsConnected = "@IsConnected";
    /// <summary>
    /// Returns '@ServerAddress'
    /// </summary>
    public static string ServerAddress = "@ServerAddress";
    /// <summary>
    /// Returns '@RETURN_VALUE'
    /// </summary>
    public static string RETURNVALUE = "@RETURN_VALUE";
    }
    #endregion
  }
}
