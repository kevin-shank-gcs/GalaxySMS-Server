using System;
using System.Data;
using System.Text;

using PDSA.Common;
using PDSA.DataLayer;
using PDSA.DataLayer.DataClasses;
using PDSA.Validation;

using GalaxySMS.EntityLayer;
using GalaxySMS.ValidationLayer;

namespace GalaxySMS.DataLayer
{
  /// <summary>
  /// This class calls the stored procedure InputOutputGroup_GetPanelLoadDataByClusterUidPDSA
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public class InputOutputGroup_GetPanelLoadDataByClusterUidPDSAData : PDSAStoredProcReadOnly
  {
    #region Constructors
    /// <summary>
    /// Constructor for the InputOutputGroup_GetPanelLoadDataByClusterUidPDSAData class
    /// </summary>
    public InputOutputGroup_GetPanelLoadDataByClusterUidPDSAData() : base()
    {
      Entity = new InputOutputGroup_GetPanelLoadDataByClusterUidPDSA();
      ValidatorObject = new  InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator(Entity);

      Init();
    }

    /// <summary>
    /// Constructor for the InputOutputGroup_GetPanelLoadDataByClusterUidPDSAData class
    /// </summary>
    /// <param name="entity">An instance of a InputOutputGroup_GetPanelLoadDataByClusterUidPDSA</param>
    public InputOutputGroup_GetPanelLoadDataByClusterUidPDSAData(InputOutputGroup_GetPanelLoadDataByClusterUidPDSA entity) : base()
    {
      Entity = entity;
      ValidatorObject = new InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator(Entity);
            
      Init();
    }
    
    /// <summary>
    /// Constructor for the InputOutputGroup_GetPanelLoadDataByClusterUidPDSAData class
    /// </summary>
    /// <param name="dataProvider">An instance of a PDSADataProvider</param>
    /// <param name="entity">An instance of a InputOutputGroup_GetPanelLoadDataByClusterUidPDSA</param>
    public InputOutputGroup_GetPanelLoadDataByClusterUidPDSAData(PDSADataProvider dataProvider,
      InputOutputGroup_GetPanelLoadDataByClusterUidPDSA entity)
      : base(dataProvider)
    {
      Entity = entity;
      ValidatorObject = new  InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator(Entity);
            
      Init();
    }
    
    /// <summary>
    /// Constructor for the InputOutputGroup_GetPanelLoadDataByClusterUidPDSAData class
    /// </summary>
    /// <param name="dataProvider">An instance of a PDSADataProvider</param>
    /// <param name="entity">An instance of a InputOutputGroup_GetPanelLoadDataByClusterUidPDSA</param>
    /// <param name="validator">An instance of a InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator</param>
    public InputOutputGroup_GetPanelLoadDataByClusterUidPDSAData(PDSADataProvider dataProvider,
      InputOutputGroup_GetPanelLoadDataByClusterUidPDSA entity, InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator validator)
      : base(dataProvider)
    {
      Entity = entity;
      ValidatorObject = validator;

      Init();
    }
    #endregion

    #region Public Property
    /// <summary>
    /// Get/Set the Entity class that will be used to get and set properties/fields for this data class.
    /// </summary>
    public InputOutputGroup_GetPanelLoadDataByClusterUidPDSA Entity { get; set; }
    #endregion

    #region Init Method
    /// <summary>
    /// Initializes this class to a valid start state.
    /// </summary>
    protected override void Init()
    {
      ClassName = "InputOutputGroup_GetPanelLoadDataByClusterUidPDSAData";
      StoredProcName = "InputOutputGroup_GetPanelLoadDataByClusterUid";
      SchemaName = "GCS";

      // Create Parameters
      InitParameters();

      // Create Data Columns
      InitDataColumns();
    }
    #endregion

   #region InitParameters Method
    /// <summary>
    /// Creates all the parameters for the stored procedure.
    /// </summary>
    protected override void InitParameters()
    {
      PDSADataParameter param;

      // Clear all parameters each time
      AllParameters.Clear();

      // Create each parameter object and add to Parameters Collection
      param = new PDSADataParameter();
      param.ParameterName = InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ParameterNames.ClusterUid;
      param.DBType = DbType.Guid;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ParameterNames.RETURNVALUE;
      param.DBType = DbType.Int32;
      param.ParamDirection = ParameterDirection.ReturnValue;
      param.IsRefCursor = false;
      AllParameters.Add(param);

  
      AddReturnValueParameterToCollection();
    }
    #endregion

    #region InitDataColumns Method
    /// <summary>
    /// Initializes the Data Columns Collection for each field returned from the stored procedure.
    /// </summary>
    protected override void InitDataColumns()
    {
      PDSADataColumn dc;

      // Create each data column
      dc = PDSADataColumn.CreateDataColumn(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.InputOutputGroupUid, GetResourceMessage("GCS_InputOutputGroup_GetPanelLoadDataByClusterUidPDSA_InputOutputGroupUid_Header", "Input Output Group Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.InputOutputGroupName, GetResourceMessage("GCS_InputOutputGroup_GetPanelLoadDataByClusterUidPDSA_InputOutputGroupName_Header", "Input Output Group Name"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.IOGroupNumber, GetResourceMessage("GCS_InputOutputGroup_GetPanelLoadDataByClusterUidPDSA_IOGroupNumber_Header", "IO Group Number"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.PanelScheduleNumber, GetResourceMessage("GCS_InputOutputGroup_GetPanelLoadDataByClusterUidPDSA_PanelScheduleNumber_Header", "Panel Schedule Number"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.LocalIOGroup, GetResourceMessage("GCS_InputOutputGroup_GetPanelLoadDataByClusterUidPDSA_LocalIOGroup_Header", "Local IO Group"), false, typeof(bool), DbType.Boolean);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.TimeScheduleName, GetResourceMessage("GCS_InputOutputGroup_GetPanelLoadDataByClusterUidPDSA_TimeScheduleName_Header", "Time Schedule Name"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.EntityName, GetResourceMessage("GCS_InputOutputGroup_GetPanelLoadDataByClusterUidPDSA_EntityName_Header", "Entity Name"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.EntityId, GetResourceMessage("GCS_InputOutputGroup_GetPanelLoadDataByClusterUidPDSA_EntityId_Header", "Entity Id"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterUid, GetResourceMessage("GCS_InputOutputGroup_GetPanelLoadDataByClusterUidPDSA_ClusterUid_Header", "Cluster Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterGroupId, GetResourceMessage("GCS_InputOutputGroup_GetPanelLoadDataByClusterUidPDSA_AccountCode_Header", "Account Code"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterNumber, GetResourceMessage("GCS_InputOutputGroup_GetPanelLoadDataByClusterUidPDSA_ClusterNumber_Header", "Cluster Number"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterName, GetResourceMessage("GCS_InputOutputGroup_GetPanelLoadDataByClusterUidPDSA_ClusterName_Header", "Cluster Name"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
    }
    #endregion

    #region EntityDataToParameterCollection Method
    /// <summary>
    /// Moves the data from the Entity class into the Parameters collection
    /// </summary>
    protected override void EntityDataToParameterCollection()
    {
      if (AllParameters.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ParameterNames.ClusterUid).SetAsNull == false)
        AllParameters.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ParameterNames.ClusterUid).Value = Entity.ClusterUid;
      else
        AllParameters.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ParameterNames.ClusterUid).Value = System.Data.SqlTypes.SqlGuid.Null;
    }
    #endregion

    #region EntityDataToColumnCollection Method
    /// <summary>
    /// Moves the data from the Entity class into the Columns collection
    /// </summary>
    protected override void EntityDataToColumnCollection()
    {
      if (AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.InputOutputGroupUid).SetAsNull == false)
        AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.InputOutputGroupUid).Value = Entity.InputOutputGroupUid;
      else
        AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.InputOutputGroupUid).Value = Guid.Empty;
     
      if (AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.InputOutputGroupName).SetAsNull == false)
        AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.InputOutputGroupName).Value = Entity.InputOutputGroupName;
      else
        AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.InputOutputGroupName).Value = string.Empty;
     
      if (AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.IOGroupNumber).SetAsNull == false)
        AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.IOGroupNumber).Value = Entity.IOGroupNumber;
      else
        AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.IOGroupNumber).Value = 0;
     
      if (AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.PanelScheduleNumber).SetAsNull == false)
        AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.PanelScheduleNumber).Value = Entity.PanelScheduleNumber;
      else
        AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.PanelScheduleNumber).Value = 0;
     
      if (AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.LocalIOGroup).SetAsNull == false)
        AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.LocalIOGroup).Value = Entity.LocalIOGroup;
      else
        AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.LocalIOGroup).Value = false;
     
      if (AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.TimeScheduleName).SetAsNull == false)
        AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.TimeScheduleName).Value = Entity.TimeScheduleName;
      else
        AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.TimeScheduleName).Value = string.Empty;
     
      if (AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.EntityName).SetAsNull == false)
        AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.EntityName).Value = Entity.EntityName;
      else
        AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.EntityName).Value = string.Empty;
     
      if (AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.EntityId).SetAsNull == false)
        AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.EntityId).Value = Entity.EntityId;
      else
        AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.EntityId).Value = Guid.Empty;
     
      if (AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterUid).SetAsNull == false)
        AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterUid).Value = Entity.ClusterUid;
      else
        AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterUid).Value = Guid.Empty;
     
      if (AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterGroupId).SetAsNull == false)
        AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterGroupId).Value = Entity.ClusterGroupId;
      else
        AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterGroupId).Value = string.Empty;
     
      if (AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterNumber).SetAsNull == false)
        AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterNumber).Value = Entity.ClusterNumber;
      else
        AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterNumber).Value = 0;
     
      if (AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterName).SetAsNull == false)
        AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterName).Value = Entity.ClusterName;
      else
        AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterName).Value = string.Empty;
     
    }
    #endregion

    #region OutputParametersToEntityData Method
    /// <summary>
    /// Moves the output parameters from the Parameters collection into the Entity class.
    /// </summary>
    protected override void OutputParametersToEntityData()
    {
      if (AllParameters.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ParameterNames.RETURNVALUE).IsValueNull == false)
        Entity.RETURNVALUE = AllParameters.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ParameterNames.RETURNVALUE).GetAsInteger();
      else
        Entity.RETURNVALUE = 0;
    }
    #endregion
    
    #region ColumnCollectionToEntityData Method
    /// <summary>
    /// Moves the data from the Columns collection into the Entity class.
    /// </summary>
    protected override void ColumnCollectionToEntityData()
    {
      if (AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.InputOutputGroupUid).IsNull == false)
        Entity.InputOutputGroupUid = AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.InputOutputGroupUid).GetAsGuid();
      else
        Entity.InputOutputGroupUid = Guid.Empty;

      if (AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.InputOutputGroupName).IsNull == false)
        Entity.InputOutputGroupName = AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.InputOutputGroupName).GetAsString();
      else
        Entity.InputOutputGroupName = string.Empty;

      if (AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.IOGroupNumber).IsNull == false)
        Entity.IOGroupNumber = AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.IOGroupNumber).GetAsInteger();
      else
        Entity.IOGroupNumber = 0;

      if (AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.PanelScheduleNumber).IsNull == false)
        Entity.PanelScheduleNumber = AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.PanelScheduleNumber).GetAsInteger();
      else
        Entity.PanelScheduleNumber = 0;

      if (AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.LocalIOGroup).IsNull == false)
        Entity.LocalIOGroup = AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.LocalIOGroup).GetAsBool();
      else
        Entity.LocalIOGroup = false;

      if (AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.TimeScheduleName).IsNull == false)
        Entity.TimeScheduleName = AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.TimeScheduleName).GetAsString();
      else
        Entity.TimeScheduleName = string.Empty;

      if (AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.EntityName).IsNull == false)
        Entity.EntityName = AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.EntityName).GetAsString();
      else
        Entity.EntityName = string.Empty;

      if (AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.EntityId).IsNull == false)
        Entity.EntityId = AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.EntityId).GetAsGuid();
      else
        Entity.EntityId = Guid.Empty;

      if (AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterUid).IsNull == false)
        Entity.ClusterUid = AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterUid).GetAsGuid();
      else
        Entity.ClusterUid = Guid.Empty;

      if (AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterGroupId).IsNull == false)
        Entity.ClusterGroupId = AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterGroupId).GetAsInteger();
      else
        Entity.ClusterGroupId = 0;

      if (AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterNumber).IsNull == false)
        Entity.ClusterNumber = AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterNumber).GetAsInteger();
      else
        Entity.ClusterNumber = 0;

      if (AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterName).IsNull == false)
        Entity.ClusterName = AllColumns.GetByName(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterName).GetAsString();
      else
        Entity.ClusterName = string.Empty;

    }
    #endregion

    #region CreateEntityFromDataRow Method
    /// <summary>
    /// Creates an Entity object from a DataRow object.
    /// </summary>
    /// <param name="dr">DataRow object with all fields from the table in it.</param>
    /// <returns>InputOutputGroup_GetPanelLoadDataByClusterUidPDSA</returns>
    public InputOutputGroup_GetPanelLoadDataByClusterUidPDSA CreateEntityFromDataRow(DataRow dr)
    {
      InputOutputGroup_GetPanelLoadDataByClusterUidPDSA entity = new InputOutputGroup_GetPanelLoadDataByClusterUidPDSA();

      if (dr.Table.Columns.Contains(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.InputOutputGroupUid))
      {
        if (dr[InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.InputOutputGroupUid] != DBNull.Value)
          entity.InputOutputGroupUid = PDSAProperty.ConvertToGuid(dr[InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.InputOutputGroupUid]);
      }
      if (dr.Table.Columns.Contains(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.InputOutputGroupName))
      {
        if (dr[InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.InputOutputGroupName] != DBNull.Value)
          entity.InputOutputGroupName = PDSAString.ConvertToStringTrim(dr[InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.InputOutputGroupName]);
      }
      if (dr.Table.Columns.Contains(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.IOGroupNumber))
      {
        if (dr[InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.IOGroupNumber] != DBNull.Value)
          entity.IOGroupNumber = Convert.ToInt32(dr[InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.IOGroupNumber]);
      }
      if (dr.Table.Columns.Contains(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.PanelScheduleNumber))
      {
        if (dr[InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.PanelScheduleNumber] != DBNull.Value)
          entity.PanelScheduleNumber = Convert.ToInt32(dr[InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.PanelScheduleNumber]);
      }
      if (dr.Table.Columns.Contains(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.LocalIOGroup))
      {
        if (dr[InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.LocalIOGroup] != DBNull.Value)
          entity.LocalIOGroup = Convert.ToBoolean(dr[InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.LocalIOGroup]);
      }
      if (dr.Table.Columns.Contains(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.TimeScheduleName))
      {
        if (dr[InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.TimeScheduleName] != DBNull.Value)
          entity.TimeScheduleName = PDSAString.ConvertToStringTrim(dr[InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.TimeScheduleName]);
      }
      if (dr.Table.Columns.Contains(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.EntityName))
      {
        if (dr[InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.EntityName] != DBNull.Value)
          entity.EntityName = PDSAString.ConvertToStringTrim(dr[InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.EntityName]);
      }
      if (dr.Table.Columns.Contains(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.EntityId))
      {
        if (dr[InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.EntityId] != DBNull.Value)
          entity.EntityId = PDSAProperty.ConvertToGuid(dr[InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.EntityId]);
      }
      if (dr.Table.Columns.Contains(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterUid))
      {
        if (dr[InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterUid] != DBNull.Value)
          entity.ClusterUid = PDSAProperty.ConvertToGuid(dr[InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterUid]);
      }
      if (dr.Table.Columns.Contains(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterGroupId))
      {
        if (dr[InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterGroupId] != DBNull.Value)
          entity.ClusterGroupId = Convert.ToInt32(dr[InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterGroupId]);
      }
      if (dr.Table.Columns.Contains(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterNumber))
      {
        if (dr[InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterNumber] != DBNull.Value)
          entity.ClusterNumber = Convert.ToInt32(dr[InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterNumber]);
      }
      if (dr.Table.Columns.Contains(InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterName))
      {
        if (dr[InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterName] != DBNull.Value)
          entity.ClusterName = PDSAString.ConvertToStringTrim(dr[InputOutputGroup_GetPanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterName]);
      }
      entity.IsDirty = false;

      return entity;
    }
    #endregion

    #region ParameterNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the InputOutputGroup_GetPanelLoadDataByClusterUidPDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ParameterNames
    {
    /// <summary>
    /// Returns '@ClusterUid'
    /// </summary>
    public static string ClusterUid = "@ClusterUid";
    /// <summary>
    /// Returns '@RETURN_VALUE'
    /// </summary>
    public static string RETURNVALUE = "@RETURN_VALUE";
    }
    #endregion
  }
}
