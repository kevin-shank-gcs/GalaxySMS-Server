using System;
using System.Data;
using System.Text;

using PDSA.Common;
using PDSA.DataLayer;
using PDSA.DataLayer.DataClasses;
using PDSA.Validation;

using GalaxySMS.EntityLayer;
using GalaxySMS.ValidationLayer;
using GCS.Core.Common.Extensions;


namespace GalaxySMS.DataLayer
{
  /// <summary>
  /// This class calls the stored procedure AccessGroup_GetPersonInfoPDSA
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public class AccessGroup_GetPersonInfoPDSAData : PDSAStoredProcReadOnly
  {
    #region Constructors
    /// <summary>
    /// Constructor for the AccessGroup_GetPersonInfoPDSAData class
    /// </summary>
    public AccessGroup_GetPersonInfoPDSAData() : base()
    {
      Entity = new AccessGroup_GetPersonInfoPDSA();
      ValidatorObject = new  AccessGroup_GetPersonInfoPDSAValidator(Entity);

      Init();
    }

    /// <summary>
    /// Constructor for the AccessGroup_GetPersonInfoPDSAData class
    /// </summary>
    /// <param name="entity">An instance of a AccessGroup_GetPersonInfoPDSA</param>
    public AccessGroup_GetPersonInfoPDSAData(AccessGroup_GetPersonInfoPDSA entity) : base()
    {
      Entity = entity;
      ValidatorObject = new AccessGroup_GetPersonInfoPDSAValidator(Entity);
            
      Init();
    }
    
    /// <summary>
    /// Constructor for the AccessGroup_GetPersonInfoPDSAData class
    /// </summary>
    /// <param name="dataProvider">An instance of a PDSADataProvider</param>
    /// <param name="entity">An instance of a AccessGroup_GetPersonInfoPDSA</param>
    public AccessGroup_GetPersonInfoPDSAData(PDSADataProvider dataProvider,
      AccessGroup_GetPersonInfoPDSA entity)
      : base(dataProvider)
    {
      Entity = entity;
      ValidatorObject = new  AccessGroup_GetPersonInfoPDSAValidator(Entity);
            
      Init();
    }
    
    /// <summary>
    /// Constructor for the AccessGroup_GetPersonInfoPDSAData class
    /// </summary>
    /// <param name="dataProvider">An instance of a PDSADataProvider</param>
    /// <param name="entity">An instance of a AccessGroup_GetPersonInfoPDSA</param>
    /// <param name="validator">An instance of a AccessGroup_GetPersonInfoPDSAValidator</param>
    public AccessGroup_GetPersonInfoPDSAData(PDSADataProvider dataProvider,
      AccessGroup_GetPersonInfoPDSA entity, AccessGroup_GetPersonInfoPDSAValidator validator)
      : base(dataProvider)
    {
      Entity = entity;
      ValidatorObject = validator;

      Init();
    }
    #endregion

    #region Public Property
    /// <summary>
    /// Get/Set the Entity class that will be used to get and set properties/fields for this data class.
    /// </summary>
    public AccessGroup_GetPersonInfoPDSA Entity { get; set; }
    #endregion

    #region Init Method
    /// <summary>
    /// Initializes this class to a valid start state.
    /// </summary>
    protected override void Init()
    {
      ClassName = "AccessGroup_GetPersonInfoPDSAData";
      StoredProcName = "AccessGroup_GetPersonInfo";
      SchemaName = "GCS";

      // Create Parameters
      InitParameters();

      // Create Data Columns
      InitDataColumns();
    }
    #endregion

   #region InitParameters Method
    /// <summary>
    /// Creates all the parameters for the stored procedure.
    /// </summary>
    protected override void InitParameters()
    {
      PDSADataParameter param;

      // Clear all parameters each time
      AllParameters.Clear();

      // Create each parameter object and add to Parameters Collection
      param = new PDSADataParameter();
      param.ParameterName = AccessGroup_GetPersonInfoPDSAValidator.ParameterNames.AccessGroupUid;
      param.DBType = DbType.Guid;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = AccessGroup_GetPersonInfoPDSAValidator.ParameterNames.PageNumber;
      param.DBType = DbType.Int32;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = AccessGroup_GetPersonInfoPDSAValidator.ParameterNames.PageSize;
      param.DBType = DbType.Int32;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = AccessGroup_GetPersonInfoPDSAValidator.ParameterNames.RETURNVALUE;
      param.DBType = DbType.Int32;
      param.ParamDirection = ParameterDirection.ReturnValue;
      param.IsRefCursor = false;
      AllParameters.Add(param);

  
      AddReturnValueParameterToCollection();
    }
    #endregion

    #region InitDataColumns Method
    /// <summary>
    /// Initializes the Data Columns Collection for each field returned from the stored procedure.
    /// </summary>
    protected override void InitDataColumns()
    {
      PDSADataColumn dc;

      // Create each data column
      dc = PDSADataColumn.CreateDataColumn(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.Id, GetResourceMessage("GCS_AccessGroup_GetPersonInfoPDSA_Id_Header", "Id"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.FirstName, GetResourceMessage("GCS_AccessGroup_GetPersonInfoPDSA_FirstName_Header", "First Name"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastName, GetResourceMessage("GCS_AccessGroup_GetPersonInfoPDSA_LastName_Header", "Last Name"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.DepartmentUid, GetResourceMessage("GCS_AccessGroup_GetPersonInfoPDSA_DepartmentUid_Header", "Department Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.DepartmentName, GetResourceMessage("GCS_AccessGroup_GetPersonInfoPDSA_DepartmentName_Header", "Department Name"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.SmallPhotoURL, GetResourceMessage("GCS_AccessGroup_GetPersonInfoPDSA_SmallPhotoURL_Header", "Small Photo URL"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.ActiveStatusCode, GetResourceMessage("GCS_AccessGroup_GetPersonInfoPDSA_ActiveStatusCode_Header", "Active Status Code"), false, typeof(short), DbType.Int16);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageActivityDateTime, GetResourceMessage("GCS_AccessGroup_GetPersonInfoPDSA_LastUsageActivityDateTime_Header", "Last Usage Activity Date Time"), false, typeof(DateTimeOffset), DbType.DateTimeOffset);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageAccessPortal, GetResourceMessage("GCS_AccessGroup_GetPersonInfoPDSA_LastUsageAccessPortal_Header", "Last Usage Access Portal"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageClusterName, GetResourceMessage("GCS_AccessGroup_GetPersonInfoPDSA_LastUsageClusterName_Header", "Last Usage Cluster Name"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageSiteName, GetResourceMessage("GCS_AccessGroup_GetPersonInfoPDSA_LastUsageSiteName_Header", "Last Usage Site Name"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageEntityName, GetResourceMessage("GCS_AccessGroup_GetPersonInfoPDSA_LastUsageEntityName_Header", "Last Usage Entity Name"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastCredentialName, GetResourceMessage("GCS_AccessGroup_GetPersonInfoPDSA_LastCredentialName_Header", "Last Credential Name"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.TotalRowCount, GetResourceMessage("GCS_AccessGroup_GetPersonInfoPDSA_TotalRowCount_Header", "Total Row Count"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
    }
    #endregion

    #region EntityDataToParameterCollection Method
    /// <summary>
    /// Moves the data from the Entity class into the Parameters collection
    /// </summary>
    protected override void EntityDataToParameterCollection()
    {
      if (AllParameters.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ParameterNames.AccessGroupUid).SetAsNull == false)
        AllParameters.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ParameterNames.AccessGroupUid).Value = Entity.AccessGroupUid;
      else
        AllParameters.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ParameterNames.AccessGroupUid).Value = System.Data.SqlTypes.SqlGuid.Null;
      if (AllParameters.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ParameterNames.PageNumber).SetAsNull == false)
        AllParameters.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ParameterNames.PageNumber).Value = Entity.PageNumber;
      else
        AllParameters.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ParameterNames.PageNumber).Value = System.Data.SqlTypes.SqlInt32.Null;
      if (AllParameters.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ParameterNames.PageSize).SetAsNull == false)
        AllParameters.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ParameterNames.PageSize).Value = Entity.PageSize;
      else
        AllParameters.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ParameterNames.PageSize).Value = System.Data.SqlTypes.SqlInt32.Null;
    }
    #endregion

    #region EntityDataToColumnCollection Method
    /// <summary>
    /// Moves the data from the Entity class into the Columns collection
    /// </summary>
    protected override void EntityDataToColumnCollection()
    {
      if (AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.Id).SetAsNull == false)
        AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.Id).Value = Entity.Id;
      else
        AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.Id).Value = Guid.Empty;
     
      if (AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.FirstName).SetAsNull == false)
        AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.FirstName).Value = Entity.FirstName;
      else
        AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.FirstName).Value = string.Empty;
     
      if (AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastName).SetAsNull == false)
        AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastName).Value = Entity.LastName;
      else
        AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastName).Value = string.Empty;
     
      if (AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.DepartmentUid).SetAsNull == false)
        AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.DepartmentUid).Value = Entity.DepartmentUid;
      else
        AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.DepartmentUid).Value = Guid.Empty;
     
      if (AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.DepartmentName).SetAsNull == false)
        AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.DepartmentName).Value = Entity.DepartmentName;
      else
        AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.DepartmentName).Value = string.Empty;
     
      if (AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.SmallPhotoURL).SetAsNull == false)
        AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.SmallPhotoURL).Value = Entity.SmallPhotoURL;
      else
        AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.SmallPhotoURL).Value = string.Empty;
     
      if (AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.ActiveStatusCode).SetAsNull == false)
        AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.ActiveStatusCode).Value = Entity.ActiveStatusCode;
      else
        AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.ActiveStatusCode).Value = 0;
     
      if (AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageActivityDateTime).SetAsNull == false)
        AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageActivityDateTime).Value = Entity.LastUsageActivityDateTime;
      else
        AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageActivityDateTime).Value = null;
     
      if (AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageAccessPortal).SetAsNull == false)
        AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageAccessPortal).Value = Entity.LastUsageAccessPortal;
      else
        AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageAccessPortal).Value = string.Empty;
     
      if (AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageClusterName).SetAsNull == false)
        AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageClusterName).Value = Entity.LastUsageClusterName;
      else
        AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageClusterName).Value = string.Empty;
     
      if (AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageSiteName).SetAsNull == false)
        AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageSiteName).Value = Entity.LastUsageSiteName;
      else
        AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageSiteName).Value = string.Empty;
     
      if (AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageEntityName).SetAsNull == false)
        AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageEntityName).Value = Entity.LastUsageEntityName;
      else
        AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageEntityName).Value = string.Empty;
     
      if (AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastCredentialName).SetAsNull == false)
        AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastCredentialName).Value = Entity.LastCredentialName;
      else
        AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastCredentialName).Value = string.Empty;
     
      if (AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.TotalRowCount).SetAsNull == false)
        AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.TotalRowCount).Value = Entity.TotalRowCount;
      else
        AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.TotalRowCount).Value = 0;
     
    }
    #endregion

    #region OutputParametersToEntityData Method
    /// <summary>
    /// Moves the output parameters from the Parameters collection into the Entity class.
    /// </summary>
    protected override void OutputParametersToEntityData()
    {
      if (AllParameters.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ParameterNames.RETURNVALUE).IsValueNull == false)
        Entity.RETURNVALUE = AllParameters.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ParameterNames.RETURNVALUE).GetAsInteger();
      else
        Entity.RETURNVALUE = 0;
    }
    #endregion
    
    #region ColumnCollectionToEntityData Method
    /// <summary>
    /// Moves the data from the Columns collection into the Entity class.
    /// </summary>
    protected override void ColumnCollectionToEntityData()
    {
      if (AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.Id).IsNull == false)
        Entity.Id = AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.Id).GetAsGuid();
      else
        Entity.Id = Guid.Empty;

      if (AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.FirstName).IsNull == false)
        Entity.FirstName = AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.FirstName).GetAsString();
      else
        Entity.FirstName = string.Empty;

      if (AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastName).IsNull == false)
        Entity.LastName = AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastName).GetAsString();
      else
        Entity.LastName = string.Empty;

      if (AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.DepartmentUid).IsNull == false)
        Entity.DepartmentUid = AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.DepartmentUid).GetAsGuid();
      else
        Entity.DepartmentUid = Guid.Empty;

      if (AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.DepartmentName).IsNull == false)
        Entity.DepartmentName = AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.DepartmentName).GetAsString();
      else
        Entity.DepartmentName = string.Empty;

      if (AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.SmallPhotoURL).IsNull == false)
        Entity.SmallPhotoURL = AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.SmallPhotoURL).GetAsString();
      else
        Entity.SmallPhotoURL = string.Empty;

      if (AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.ActiveStatusCode).IsNull == false)
        Entity.ActiveStatusCode = AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.ActiveStatusCode).GetAsShort();
      else
        Entity.ActiveStatusCode = 0;

      if (AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageActivityDateTime).IsNull == false)
        Entity.LastUsageActivityDateTime = AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageActivityDateTime).GetAsDateTimeOffset();
      else
        Entity.LastUsageActivityDateTime = null;

      if (AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageAccessPortal).IsNull == false)
        Entity.LastUsageAccessPortal = AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageAccessPortal).GetAsString();
      else
        Entity.LastUsageAccessPortal = string.Empty;

      if (AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageClusterName).IsNull == false)
        Entity.LastUsageClusterName = AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageClusterName).GetAsString();
      else
        Entity.LastUsageClusterName = string.Empty;

      if (AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageSiteName).IsNull == false)
        Entity.LastUsageSiteName = AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageSiteName).GetAsString();
      else
        Entity.LastUsageSiteName = string.Empty;

      if (AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageEntityName).IsNull == false)
        Entity.LastUsageEntityName = AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageEntityName).GetAsString();
      else
        Entity.LastUsageEntityName = string.Empty;

      if (AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastCredentialName).IsNull == false)
        Entity.LastCredentialName = AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastCredentialName).GetAsString();
      else
        Entity.LastCredentialName = string.Empty;

      if (AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.TotalRowCount).IsNull == false)
        Entity.TotalRowCount = AllColumns.GetByName(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.TotalRowCount).GetAsInteger();
      else
        Entity.TotalRowCount = 0;

    }
    #endregion

    #region CreateEntityFromDataRow Method
    /// <summary>
    /// Creates an Entity object from a DataRow object.
    /// </summary>
    /// <param name="dr">DataRow object with all fields from the table in it.</param>
    /// <returns>AccessGroup_GetPersonInfoPDSA</returns>
    public AccessGroup_GetPersonInfoPDSA CreateEntityFromDataRow(DataRow dr)
    {
      AccessGroup_GetPersonInfoPDSA entity = new AccessGroup_GetPersonInfoPDSA();

      if (dr.Table.Columns.Contains(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.Id))
      {
        if (dr[AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.Id] != DBNull.Value)
          entity.Id = PDSAProperty.ConvertToGuid(dr[AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.Id]);
      }
      if (dr.Table.Columns.Contains(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.FirstName))
      {
        if (dr[AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.FirstName] != DBNull.Value)
          entity.FirstName = PDSAString.ConvertToStringTrim(dr[AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.FirstName]);
      }
      if (dr.Table.Columns.Contains(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastName))
      {
        if (dr[AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastName] != DBNull.Value)
          entity.LastName = PDSAString.ConvertToStringTrim(dr[AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastName]);
      }
      if (dr.Table.Columns.Contains(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.DepartmentUid))
      {
        if (dr[AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.DepartmentUid] != DBNull.Value)
          entity.DepartmentUid = PDSAProperty.ConvertToGuid(dr[AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.DepartmentUid]);
      }
      if (dr.Table.Columns.Contains(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.DepartmentName))
      {
        if (dr[AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.DepartmentName] != DBNull.Value)
          entity.DepartmentName = PDSAString.ConvertToStringTrim(dr[AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.DepartmentName]);
      }
      if (dr.Table.Columns.Contains(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.SmallPhotoURL))
      {
        if (dr[AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.SmallPhotoURL] != DBNull.Value)
          entity.SmallPhotoURL = PDSAString.ConvertToStringTrim(dr[AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.SmallPhotoURL]);
      }
      if (dr.Table.Columns.Contains(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.ActiveStatusCode))
      {
        if (dr[AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.ActiveStatusCode] != DBNull.Value)
          entity.ActiveStatusCode = Convert.ToInt16(dr[AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.ActiveStatusCode]);
      }
      if (dr.Table.Columns.Contains(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageActivityDateTime))
      {
        if (dr[AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageActivityDateTime] != DBNull.Value)
          entity.LastUsageActivityDateTime = GCS.Core.Common.Extensions.DateTimeExtensions.ToDateTimeOffset(dr[AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageActivityDateTime]);
      }
      if (dr.Table.Columns.Contains(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageAccessPortal))
      {
        if (dr[AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageAccessPortal] != DBNull.Value)
          entity.LastUsageAccessPortal = PDSAString.ConvertToStringTrim(dr[AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageAccessPortal]);
      }
      if (dr.Table.Columns.Contains(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageClusterName))
      {
        if (dr[AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageClusterName] != DBNull.Value)
          entity.LastUsageClusterName = PDSAString.ConvertToStringTrim(dr[AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageClusterName]);
      }
      if (dr.Table.Columns.Contains(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageSiteName))
      {
        if (dr[AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageSiteName] != DBNull.Value)
          entity.LastUsageSiteName = PDSAString.ConvertToStringTrim(dr[AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageSiteName]);
      }
      if (dr.Table.Columns.Contains(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageEntityName))
      {
        if (dr[AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageEntityName] != DBNull.Value)
          entity.LastUsageEntityName = PDSAString.ConvertToStringTrim(dr[AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastUsageEntityName]);
      }
      if (dr.Table.Columns.Contains(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastCredentialName))
      {
        if (dr[AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastCredentialName] != DBNull.Value)
          entity.LastCredentialName = PDSAString.ConvertToStringTrim(dr[AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.LastCredentialName]);
      }
      if (dr.Table.Columns.Contains(AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.TotalRowCount))
      {
        if (dr[AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.TotalRowCount] != DBNull.Value)
          entity.TotalRowCount = Convert.ToInt32(dr[AccessGroup_GetPersonInfoPDSAValidator.ColumnNames.TotalRowCount]);
      }
      entity.IsDirty = false;

      return entity;
    }
    #endregion

    #region ParameterNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the AccessGroup_GetPersonInfoPDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ParameterNames
    {
    /// <summary>
    /// Returns '@AccessGroupUid'
    /// </summary>
    public static string AccessGroupUid = "@AccessGroupUid";
    /// <summary>
    /// Returns '@PageNumber'
    /// </summary>
    public static string PageNumber = "@PageNumber";
    /// <summary>
    /// Returns '@PageSize'
    /// </summary>
    public static string PageSize = "@PageSize";
    /// <summary>
    /// Returns '@RETURN_VALUE'
    /// </summary>
    public static string RETURNVALUE = "@RETURN_VALUE";
    }
    #endregion
  }
}
