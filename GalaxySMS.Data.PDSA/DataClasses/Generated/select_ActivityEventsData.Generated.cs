using System;
using System.Data;
using System.Text;

using PDSA.Common;
using PDSA.DataLayer;
using PDSA.DataLayer.DataClasses;
using PDSA.Validation;

using GalaxySMS.EntityLayer;
using GalaxySMS.ValidationLayer;

namespace GalaxySMS.DataLayer
{
  /// <summary>
  /// This class calls the stored procedure select_ActivityEventsPDSA
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public class select_ActivityEventsPDSAData : PDSAStoredProcReadOnly
  {
    #region Constructors
    /// <summary>
    /// Constructor for the select_ActivityEventsPDSAData class
    /// </summary>
    public select_ActivityEventsPDSAData() : base()
    {
      Entity = new select_ActivityEventsPDSA();
      ValidatorObject = new  select_ActivityEventsPDSAValidator(Entity);

      Init();
    }

    /// <summary>
    /// Constructor for the select_ActivityEventsPDSAData class
    /// </summary>
    /// <param name="entity">An instance of a select_ActivityEventsPDSA</param>
    public select_ActivityEventsPDSAData(select_ActivityEventsPDSA entity) : base()
    {
      Entity = entity;
      ValidatorObject = new select_ActivityEventsPDSAValidator(Entity);
            
      Init();
    }
    
    /// <summary>
    /// Constructor for the select_ActivityEventsPDSAData class
    /// </summary>
    /// <param name="dataProvider">An instance of a PDSADataProvider</param>
    /// <param name="entity">An instance of a select_ActivityEventsPDSA</param>
    public select_ActivityEventsPDSAData(PDSADataProvider dataProvider,
      select_ActivityEventsPDSA entity)
      : base(dataProvider)
    {
      Entity = entity;
      ValidatorObject = new  select_ActivityEventsPDSAValidator(Entity);
            
      Init();
    }
    
    /// <summary>
    /// Constructor for the select_ActivityEventsPDSAData class
    /// </summary>
    /// <param name="dataProvider">An instance of a PDSADataProvider</param>
    /// <param name="entity">An instance of a select_ActivityEventsPDSA</param>
    /// <param name="validator">An instance of a select_ActivityEventsPDSAValidator</param>
    public select_ActivityEventsPDSAData(PDSADataProvider dataProvider,
      select_ActivityEventsPDSA entity, select_ActivityEventsPDSAValidator validator)
      : base(dataProvider)
    {
      Entity = entity;
      ValidatorObject = validator;

      Init();
    }
    #endregion

    #region Public Property
    /// <summary>
    /// Get/Set the Entity class that will be used to get and set properties/fields for this data class.
    /// </summary>
    public select_ActivityEventsPDSA Entity { get; set; }
    #endregion

    #region Init Method
    /// <summary>
    /// Initializes this class to a valid start state.
    /// </summary>
    protected override void Init()
    {
      ClassName = "select_ActivityEventsPDSAData";
      StoredProcName = "select_ActivityEvents";
      SchemaName = "GCS";

      // Create Parameters
      InitParameters();

      // Create Data Columns
      InitDataColumns();
    }
    #endregion

   #region InitParameters Method
    /// <summary>
    /// Creates all the parameters for the stored procedure.
    /// </summary>
    protected override void InitParameters()
    {
      PDSADataParameter param;

      // Clear all parameters each time
      AllParameters.Clear();

      // Create each parameter object and add to Parameters Collection
      param = new PDSADataParameter();
      param.ParameterName = select_ActivityEventsPDSAValidator.ParameterNames.EntityId;
      param.DBType = DbType.Guid;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = select_ActivityEventsPDSAValidator.ParameterNames.UserId;
      param.DBType = DbType.Guid;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = select_ActivityEventsPDSAValidator.ParameterNames.StartDateTime;
      param.DBType = DbType.DateTimeOffset;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = select_ActivityEventsPDSAValidator.ParameterNames.EndDateTime;
      param.DBType = DbType.DateTimeOffset;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = select_ActivityEventsPDSAValidator.ParameterNames.DeviceUid;
      param.DBType = DbType.Guid;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = select_ActivityEventsPDSAValidator.ParameterNames.PersonUid;
      param.DBType = DbType.Guid;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = select_ActivityEventsPDSAValidator.ParameterNames.CredentialUid;
      param.DBType = DbType.Guid;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = select_ActivityEventsPDSAValidator.ParameterNames.ClusterUid;
      param.DBType = DbType.Guid;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = select_ActivityEventsPDSAValidator.ParameterNames.EventTypeUids;
      param.DBType = DbType.String;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = select_ActivityEventsPDSAValidator.ParameterNames.IsAcknowledgeable;
      param.DBType = DbType.Boolean;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = select_ActivityEventsPDSAValidator.ParameterNames.IsActionRequired;
      param.DBType = DbType.Boolean;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = select_ActivityEventsPDSAValidator.ParameterNames.IsTraced;
      param.DBType = DbType.Boolean;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = select_ActivityEventsPDSAValidator.ParameterNames.StartPriority;
      param.DBType = DbType.Int32;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = select_ActivityEventsPDSAValidator.ParameterNames.EndPriority;
      param.DBType = DbType.Int32;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = select_ActivityEventsPDSAValidator.ParameterNames.Priorities;
      param.DBType = DbType.String;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = select_ActivityEventsPDSAValidator.ParameterNames.JustNumber;
      param.DBType = DbType.Boolean;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = select_ActivityEventsPDSAValidator.ParameterNames.PageNumber;
      param.DBType = DbType.Int32;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = select_ActivityEventsPDSAValidator.ParameterNames.PageSize;
      param.DBType = DbType.Int32;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = select_ActivityEventsPDSAValidator.ParameterNames.SortColumn;
      param.DBType = DbType.String;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = select_ActivityEventsPDSAValidator.ParameterNames.DescendingOrder;
      param.DBType = DbType.Boolean;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = select_ActivityEventsPDSAValidator.ParameterNames.CultureName;
      param.DBType = DbType.String;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = select_ActivityEventsPDSAValidator.ParameterNames.IncludeLoggingOnOffEvents;
      param.DBType = DbType.Boolean;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = select_ActivityEventsPDSAValidator.ParameterNames.RETURNVALUE;
      param.DBType = DbType.Int32;
      param.ParamDirection = ParameterDirection.ReturnValue;
      param.IsRefCursor = false;
      AllParameters.Add(param);

  
      AddReturnValueParameterToCollection();
    }
    #endregion

    #region InitDataColumns Method
    /// <summary>
    /// Initializes the Data Columns Collection for each field returned from the stored procedure.
    /// </summary>
    protected override void InitDataColumns()
    {
      PDSADataColumn dc;

      // Create each data column
      dc = PDSADataColumn.CreateDataColumn(select_ActivityEventsPDSAValidator.ColumnNames.TotalItemCount, GetResourceMessage("GCS_select_ActivityEventsPDSA_TotalItemCount_Header", "Total Item Count"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(select_ActivityEventsPDSAValidator.ColumnNames.PK, GetResourceMessage("GCS_select_ActivityEventsPDSA_PK_Header", "PK"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(select_ActivityEventsPDSAValidator.ColumnNames.ActivityDateTime, GetResourceMessage("GCS_select_ActivityEventsPDSA_ActivityDateTime_Header", "Activity Date Time"), false, typeof(DateTimeOffset), DbType.DateTimeOffset);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(select_ActivityEventsPDSAValidator.ColumnNames.ActivityDateTimeUTC, GetResourceMessage("GCS_select_ActivityEventsPDSA_ActivityDateTimeUTC_Header", "Activity Date Time UTC"), false, typeof(DateTimeOffset), DbType.DateTimeOffset);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(select_ActivityEventsPDSAValidator.ColumnNames.AcknowledgeComment, GetResourceMessage("GCS_select_ActivityEventsPDSA_AcknowledgeComment_Header", "Acknowledge Comment"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(select_ActivityEventsPDSAValidator.ColumnNames.AcknowledgedTime, GetResourceMessage("GCS_select_ActivityEventsPDSA_AcknowledgedTime_Header", "Acknowledged Time"), false, typeof(DateTimeOffset), DbType.DateTimeOffset);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(select_ActivityEventsPDSAValidator.ColumnNames.EventTypeUid, GetResourceMessage("GCS_select_ActivityEventsPDSA_EventTypeUid_Header", "Event Type Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(select_ActivityEventsPDSAValidator.ColumnNames.EventTypeMessage, GetResourceMessage("GCS_select_ActivityEventsPDSA_EventTypeMessage_Header", "Event Type Message"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(select_ActivityEventsPDSAValidator.ColumnNames.ForeColorHex, GetResourceMessage("GCS_select_ActivityEventsPDSA_ForeColorHex_Header", "Fore Color Hex"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(select_ActivityEventsPDSAValidator.ColumnNames.AlarmPriority, GetResourceMessage("GCS_select_ActivityEventsPDSA_AlarmPriority_Header", "Alarm Priority"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(select_ActivityEventsPDSAValidator.ColumnNames.DeviceType, GetResourceMessage("GCS_select_ActivityEventsPDSA_DeviceType_Header", "Device Type"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(select_ActivityEventsPDSAValidator.ColumnNames.DeviceUid, GetResourceMessage("GCS_select_ActivityEventsPDSA_DeviceUid_Header", "Device Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(select_ActivityEventsPDSAValidator.ColumnNames.DeviceName, GetResourceMessage("GCS_select_ActivityEventsPDSA_DeviceName_Header", "Device Name"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(select_ActivityEventsPDSAValidator.ColumnNames.PersonUid, GetResourceMessage("GCS_select_ActivityEventsPDSA_PersonUid_Header", "Person Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(select_ActivityEventsPDSAValidator.ColumnNames.LastName, GetResourceMessage("GCS_select_ActivityEventsPDSA_LastName_Header", "Last Name"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(select_ActivityEventsPDSAValidator.ColumnNames.FirstName, GetResourceMessage("GCS_select_ActivityEventsPDSA_FirstName_Header", "First Name"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(select_ActivityEventsPDSAValidator.ColumnNames.IsTraced, GetResourceMessage("GCS_select_ActivityEventsPDSA_IsTraced_Header", "Is Traced"), false, typeof(bool), DbType.Boolean);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(select_ActivityEventsPDSAValidator.ColumnNames.CredentialDescription, GetResourceMessage("GCS_select_ActivityEventsPDSA_CredentialDescription_Header", "Credential Description"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(select_ActivityEventsPDSAValidator.ColumnNames.ClusterUid, GetResourceMessage("GCS_select_ActivityEventsPDSA_ClusterUid_Header", "Cluster Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(select_ActivityEventsPDSAValidator.ColumnNames.ClusterName, GetResourceMessage("GCS_select_ActivityEventsPDSA_ClusterName_Header", "Cluster Name"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(select_ActivityEventsPDSAValidator.ColumnNames.InputOutputGroupName, GetResourceMessage("GCS_select_ActivityEventsPDSA_InputOutputGroupName_Header", "Input Output Group Name"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(select_ActivityEventsPDSAValidator.ColumnNames.IsAcknowledgeable, GetResourceMessage("GCS_select_ActivityEventsPDSA_IsAcknowledgeable_Header", "Is Acknowledgeable"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(select_ActivityEventsPDSAValidator.ColumnNames.AckCount, GetResourceMessage("GCS_select_ActivityEventsPDSA_AckCount_Header", "Ack Count"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(select_ActivityEventsPDSAValidator.ColumnNames.IsAcknowledged, GetResourceMessage("GCS_select_ActivityEventsPDSA_IsAcknowledged_Header", "Is Acknowledged"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(select_ActivityEventsPDSAValidator.ColumnNames.AcknowledgedByUser, GetResourceMessage("GCS_select_ActivityEventsPDSA_AcknowledgedByUser_Header", "Acknowledged By User"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(select_ActivityEventsPDSAValidator.ColumnNames.EntityId, GetResourceMessage("GCS_select_ActivityEventsPDSA_EntityId_Header", "Entity Id"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(select_ActivityEventsPDSAValidator.ColumnNames.EntityName, GetResourceMessage("GCS_select_ActivityEventsPDSA_EntityName_Header", "Entity Name"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(select_ActivityEventsPDSAValidator.ColumnNames.EntityType, GetResourceMessage("GCS_select_ActivityEventsPDSA_EntityType_Header", "Entity Type"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
    }
    #endregion

    #region EntityDataToParameterCollection Method
    /// <summary>
    /// Moves the data from the Entity class into the Parameters collection
    /// </summary>
    protected override void EntityDataToParameterCollection()
    {
      if (AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.EntityId).SetAsNull == false)
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.EntityId).Value = Entity.EntityId;
      else
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.EntityId).Value = System.Data.SqlTypes.SqlGuid.Null;
      if (AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.UserId).SetAsNull == false)
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.UserId).Value = Entity.UserId;
      else
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.UserId).Value = System.Data.SqlTypes.SqlGuid.Null;
      if (AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.StartDateTime).SetAsNull == false)
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.StartDateTime).Value = Entity.StartDateTime;
      else
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.StartDateTime).Value = System.Data.SqlTypes.SqlDateTime.Null;
      if (AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.EndDateTime).SetAsNull == false)
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.EndDateTime).Value = Entity.EndDateTime;
      else
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.EndDateTime).Value = System.Data.SqlTypes.SqlDateTime.Null;
      if (AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.DeviceUid).SetAsNull == false)
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.DeviceUid).Value = Entity.DeviceUid;
      else
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.DeviceUid).Value = System.Data.SqlTypes.SqlGuid.Null;
      if (AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.PersonUid).SetAsNull == false)
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.PersonUid).Value = Entity.PersonUid;
      else
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.PersonUid).Value = System.Data.SqlTypes.SqlGuid.Null;
      if (AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.CredentialUid).SetAsNull == false)
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.CredentialUid).Value = Entity.CredentialUid;
      else
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.CredentialUid).Value = System.Data.SqlTypes.SqlGuid.Null;
      if (AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.ClusterUid).SetAsNull == false)
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.ClusterUid).Value = Entity.ClusterUid;
      else
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.ClusterUid).Value = System.Data.SqlTypes.SqlGuid.Null;
      if (AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.EventTypeUids).SetAsNull == false)
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.EventTypeUids).Value = Entity.EventTypeUids;
      else
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.EventTypeUids).Value = System.Data.SqlTypes.SqlChars.Null;
      if (AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.IsAcknowledgeable).SetAsNull == false)
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.IsAcknowledgeable).Value = Entity.IsAcknowledgeable;
      else
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.IsAcknowledgeable).Value = System.Data.SqlTypes.SqlBoolean.Null;
      if (AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.IsActionRequired).SetAsNull == false)
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.IsActionRequired).Value = Entity.IsActionRequired;
      else
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.IsActionRequired).Value = System.Data.SqlTypes.SqlBoolean.Null;
      if (AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.IsTraced).SetAsNull == false)
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.IsTraced).Value = Entity.IsTraced;
      else
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.IsTraced).Value = System.Data.SqlTypes.SqlBoolean.Null;
      if (AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.StartPriority).SetAsNull == false)
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.StartPriority).Value = Entity.StartPriority;
      else
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.StartPriority).Value = System.Data.SqlTypes.SqlInt32.Null;
      if (AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.EndPriority).SetAsNull == false)
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.EndPriority).Value = Entity.EndPriority;
      else
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.EndPriority).Value = System.Data.SqlTypes.SqlInt32.Null;
      if (AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.Priorities).SetAsNull == false)
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.Priorities).Value = Entity.Priorities;
      else
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.Priorities).Value = System.Data.SqlTypes.SqlChars.Null;
      if (AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.JustNumber).SetAsNull == false)
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.JustNumber).Value = Entity.JustNumber;
      else
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.JustNumber).Value = System.Data.SqlTypes.SqlBoolean.Null;
      if (AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.PageNumber).SetAsNull == false)
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.PageNumber).Value = Entity.PageNumber;
      else
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.PageNumber).Value = System.Data.SqlTypes.SqlInt32.Null;
      if (AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.PageSize).SetAsNull == false)
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.PageSize).Value = Entity.PageSize;
      else
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.PageSize).Value = System.Data.SqlTypes.SqlInt32.Null;
      if (AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.SortColumn).SetAsNull == false)
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.SortColumn).Value = Entity.SortColumn;
      else
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.SortColumn).Value = System.Data.SqlTypes.SqlChars.Null;
      if (AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.DescendingOrder).SetAsNull == false)
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.DescendingOrder).Value = Entity.DescendingOrder;
      else
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.DescendingOrder).Value = System.Data.SqlTypes.SqlBoolean.Null;
      if (AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.CultureName).SetAsNull == false)
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.CultureName).Value = Entity.CultureName;
      else
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.CultureName).Value = System.Data.SqlTypes.SqlChars.Null;
      if (AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.IncludeLoggingOnOffEvents).SetAsNull == false)
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.IncludeLoggingOnOffEvents).Value = Entity.IncludeLoggingOnOffEvents;
      else
        AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.IncludeLoggingOnOffEvents).Value = System.Data.SqlTypes.SqlBoolean.Null;
    }
    #endregion

    #region EntityDataToColumnCollection Method
    /// <summary>
    /// Moves the data from the Entity class into the Columns collection
    /// </summary>
    protected override void EntityDataToColumnCollection()
    {
      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.TotalItemCount).SetAsNull == false)
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.TotalItemCount).Value = Entity.TotalItemCount;
      else
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.TotalItemCount).Value = 0;
     
      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.PK).SetAsNull == false)
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.PK).Value = Entity.PK;
      else
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.PK).Value = Guid.Empty;
     
      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.ActivityDateTime).SetAsNull == false)
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.ActivityDateTime).Value = Entity.ActivityDateTime;
      else
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.ActivityDateTime).Value = DateTimeOffset.Now;
     
      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.ActivityDateTimeUTC).SetAsNull == false)
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.ActivityDateTimeUTC).Value = Entity.ActivityDateTimeUTC;
      else
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.ActivityDateTimeUTC).Value = DateTimeOffset.Now;
     
      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.AcknowledgeComment).SetAsNull == false)
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.AcknowledgeComment).Value = Entity.AcknowledgeComment;
      else
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.AcknowledgeComment).Value = string.Empty;
     
      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.AcknowledgedTime).SetAsNull == false)
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.AcknowledgedTime).Value = Entity.AcknowledgedTime;
      else
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.AcknowledgedTime).Value = DateTimeOffset.Now;
     
      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.EventTypeUid).SetAsNull == false)
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.EventTypeUid).Value = Entity.EventTypeUid;
      else
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.EventTypeUid).Value = Guid.Empty;
     
      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.EventTypeMessage).SetAsNull == false)
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.EventTypeMessage).Value = Entity.EventTypeMessage;
      else
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.EventTypeMessage).Value = string.Empty;
     
      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.ForeColorHex).SetAsNull == false)
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.ForeColorHex).Value = Entity.ForeColorHex;
      else
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.ForeColorHex).Value = string.Empty;
     
      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.AlarmPriority).SetAsNull == false)
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.AlarmPriority).Value = Entity.AlarmPriority;
      else
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.AlarmPriority).Value = 0;
     
      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.DeviceType).SetAsNull == false)
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.DeviceType).Value = Entity.DeviceType;
      else
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.DeviceType).Value = string.Empty;
     
      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.DeviceUid).SetAsNull == false)
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.DeviceUid).Value = Entity.DeviceUid;
      else
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.DeviceUid).Value = Guid.Empty;
     
      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.DeviceName).SetAsNull == false)
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.DeviceName).Value = Entity.DeviceName;
      else
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.DeviceName).Value = string.Empty;
     
      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.PersonUid).SetAsNull == false)
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.PersonUid).Value = Entity.PersonUid;
      else
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.PersonUid).Value = Guid.Empty;
     
      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.LastName).SetAsNull == false)
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.LastName).Value = Entity.LastName;
      else
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.LastName).Value = string.Empty;
     
      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.FirstName).SetAsNull == false)
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.FirstName).Value = Entity.FirstName;
      else
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.FirstName).Value = string.Empty;
     
      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.IsTraced).SetAsNull == false)
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.IsTraced).Value = Entity.IsTraced;
      else
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.IsTraced).Value = false;
     
      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.CredentialDescription).SetAsNull == false)
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.CredentialDescription).Value = Entity.CredentialDescription;
      else
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.CredentialDescription).Value = string.Empty;
     
      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.ClusterUid).SetAsNull == false)
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.ClusterUid).Value = Entity.ClusterUid;
      else
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.ClusterUid).Value = Guid.Empty;
     
      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.ClusterName).SetAsNull == false)
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.ClusterName).Value = Entity.ClusterName;
      else
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.ClusterName).Value = string.Empty;
     
      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.InputOutputGroupName).SetAsNull == false)
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.InputOutputGroupName).Value = Entity.InputOutputGroupName;
      else
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.InputOutputGroupName).Value = string.Empty;
     
      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.IsAcknowledgeable).SetAsNull == false)
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.IsAcknowledgeable).Value = Entity.IsAcknowledgeable;
      else
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.IsAcknowledgeable).Value = 0;
     
      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.AckCount).SetAsNull == false)
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.AckCount).Value = Entity.AckCount;
      else
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.AckCount).Value = 0;
     
      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.IsAcknowledged).SetAsNull == false)
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.IsAcknowledged).Value = Entity.IsAcknowledged;
      else
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.IsAcknowledged).Value = false;
     
      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.AcknowledgedByUser).SetAsNull == false)
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.AcknowledgedByUser).Value = Entity.AcknowledgedByUser;
      else
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.AcknowledgedByUser).Value = string.Empty;
     
      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.EntityId).SetAsNull == false)
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.EntityId).Value = Entity.EntityId;
      else
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.EntityId).Value = Guid.Empty;
     
      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.EntityName).SetAsNull == false)
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.EntityName).Value = Entity.EntityName;
      else
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.EntityName).Value = string.Empty;
     
      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.EntityType).SetAsNull == false)
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.EntityType).Value = Entity.EntityType;
      else
        AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.EntityType).Value = string.Empty;
     
    }
    #endregion

    #region OutputParametersToEntityData Method
    /// <summary>
    /// Moves the output parameters from the Parameters collection into the Entity class.
    /// </summary>
    protected override void OutputParametersToEntityData()
    {
      if (AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.RETURNVALUE).IsValueNull == false)
        Entity.RETURNVALUE = AllParameters.GetByName(select_ActivityEventsPDSAValidator.ParameterNames.RETURNVALUE).GetAsInteger();
      else
        Entity.RETURNVALUE = 0;
    }
    #endregion
    
    #region ColumnCollectionToEntityData Method
    /// <summary>
    /// Moves the data from the Columns collection into the Entity class.
    /// </summary>
    protected override void ColumnCollectionToEntityData()
    {
      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.TotalItemCount).IsNull == false)
        Entity.TotalItemCount = AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.TotalItemCount).GetAsInteger();
      else
        Entity.TotalItemCount = 0;

      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.PK).IsNull == false)
        Entity.PK = AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.PK).GetAsGuid();
      else
        Entity.PK = Guid.Empty;

      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.ActivityDateTime).IsNull == false)
        Entity.ActivityDateTime = AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.ActivityDateTime).GetAsDateTimeOffset();
      else
        Entity.ActivityDateTime = DateTimeOffset.Now;

      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.ActivityDateTimeUTC).IsNull == false)
        Entity.ActivityDateTimeUTC = AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.ActivityDateTimeUTC).GetAsDateTimeOffset();
      else
        Entity.ActivityDateTimeUTC = DateTimeOffset.Now;

      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.AcknowledgeComment).IsNull == false)
        Entity.AcknowledgeComment = AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.AcknowledgeComment).GetAsString();
      else
        Entity.AcknowledgeComment = string.Empty;

      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.AcknowledgedTime).IsNull == false)
        Entity.AcknowledgedTime = AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.AcknowledgedTime).GetAsDateTimeOffset();
      else
        Entity.AcknowledgedTime = DateTimeOffset.Now;

      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.EventTypeUid).IsNull == false)
        Entity.EventTypeUid = AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.EventTypeUid).GetAsGuid();
      else
        Entity.EventTypeUid = Guid.Empty;

      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.EventTypeMessage).IsNull == false)
        Entity.EventTypeMessage = AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.EventTypeMessage).GetAsString();
      else
        Entity.EventTypeMessage = string.Empty;

      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.ForeColorHex).IsNull == false)
        Entity.ForeColorHex = AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.ForeColorHex).GetAsString();
      else
        Entity.ForeColorHex = string.Empty;

      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.AlarmPriority).IsNull == false)
        Entity.AlarmPriority = AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.AlarmPriority).GetAsInteger();
      else
        Entity.AlarmPriority = 0;

      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.DeviceType).IsNull == false)
        Entity.DeviceType = AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.DeviceType).GetAsString();
      else
        Entity.DeviceType = string.Empty;

      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.DeviceUid).IsNull == false)
        Entity.DeviceUid = AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.DeviceUid).GetAsGuid();
      else
        Entity.DeviceUid = Guid.Empty;

      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.DeviceName).IsNull == false)
        Entity.DeviceName = AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.DeviceName).GetAsString();
      else
        Entity.DeviceName = string.Empty;

      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.PersonUid).IsNull == false)
        Entity.PersonUid = AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.PersonUid).GetAsGuid();
      else
        Entity.PersonUid = Guid.Empty;

      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.LastName).IsNull == false)
        Entity.LastName = AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.LastName).GetAsString();
      else
        Entity.LastName = string.Empty;

      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.FirstName).IsNull == false)
        Entity.FirstName = AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.FirstName).GetAsString();
      else
        Entity.FirstName = string.Empty;

      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.IsTraced).IsNull == false)
        Entity.IsTraced = AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.IsTraced).GetAsBool();
      else
        Entity.IsTraced = false;

      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.CredentialDescription).IsNull == false)
        Entity.CredentialDescription = AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.CredentialDescription).GetAsString();
      else
        Entity.CredentialDescription = string.Empty;

      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.ClusterUid).IsNull == false)
        Entity.ClusterUid = AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.ClusterUid).GetAsGuid();
      else
        Entity.ClusterUid = Guid.Empty;

      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.ClusterName).IsNull == false)
        Entity.ClusterName = AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.ClusterName).GetAsString();
      else
        Entity.ClusterName = string.Empty;

      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.InputOutputGroupName).IsNull == false)
        Entity.InputOutputGroupName = AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.InputOutputGroupName).GetAsString();
      else
        Entity.InputOutputGroupName = string.Empty;

      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.IsAcknowledgeable).IsNull == false)
        Entity.IsAcknowledgeable = AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.IsAcknowledgeable).GetAsBool();
      else
        Entity.IsAcknowledgeable = false;

      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.AckCount).IsNull == false)
        Entity.AckCount = AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.AckCount).GetAsInteger();
      else
        Entity.AckCount = 0;

      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.IsAcknowledged).IsNull == false)
        Entity.IsAcknowledged = AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.IsAcknowledged).GetAsBool();
      else
        Entity.IsAcknowledged = false;

      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.AcknowledgedByUser).IsNull == false)
        Entity.AcknowledgedByUser = AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.AcknowledgedByUser).GetAsString();
      else
        Entity.AcknowledgedByUser = string.Empty;

      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.EntityId).IsNull == false)
        Entity.EntityId = AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.EntityId).GetAsGuid();
      else
        Entity.EntityId = Guid.Empty;

      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.EntityName).IsNull == false)
        Entity.EntityName = AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.EntityName).GetAsString();
      else
        Entity.EntityName = string.Empty;

      if (AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.EntityType).IsNull == false)
        Entity.EntityType = AllColumns.GetByName(select_ActivityEventsPDSAValidator.ColumnNames.EntityType).GetAsString();
      else
        Entity.EntityType = string.Empty;

    }
    #endregion

    #region CreateEntityFromDataRow Method
    /// <summary>
    /// Creates an Entity object from a DataRow object.
    /// </summary>
    /// <param name="dr">DataRow object with all fields from the table in it.</param>
    /// <returns>select_ActivityEventsPDSA</returns>
    public select_ActivityEventsPDSA CreateEntityFromDataRow(DataRow dr)
    {
      select_ActivityEventsPDSA entity = new select_ActivityEventsPDSA();

      if (dr.Table.Columns.Contains(select_ActivityEventsPDSAValidator.ColumnNames.TotalItemCount))
      {
        if (dr[select_ActivityEventsPDSAValidator.ColumnNames.TotalItemCount] != DBNull.Value)
          entity.TotalItemCount = Convert.ToInt32(dr[select_ActivityEventsPDSAValidator.ColumnNames.TotalItemCount]);
      }
      if (dr.Table.Columns.Contains(select_ActivityEventsPDSAValidator.ColumnNames.PK))
      {
        if (dr[select_ActivityEventsPDSAValidator.ColumnNames.PK] != DBNull.Value)
          entity.PK = PDSAProperty.ConvertToGuid(dr[select_ActivityEventsPDSAValidator.ColumnNames.PK]);
      }
      if (dr.Table.Columns.Contains(select_ActivityEventsPDSAValidator.ColumnNames.ActivityDateTime))
      {
        if (dr[select_ActivityEventsPDSAValidator.ColumnNames.ActivityDateTime] != DBNull.Value)
          entity.ActivityDateTime = PDSAProperty.ConvertToDateTimeOffset(dr[select_ActivityEventsPDSAValidator.ColumnNames.ActivityDateTime]);
      }
      if (dr.Table.Columns.Contains(select_ActivityEventsPDSAValidator.ColumnNames.ActivityDateTimeUTC))
      {
        if (dr[select_ActivityEventsPDSAValidator.ColumnNames.ActivityDateTimeUTC] != DBNull.Value)
          entity.ActivityDateTimeUTC = PDSAProperty.ConvertToDateTimeOffset(dr[select_ActivityEventsPDSAValidator.ColumnNames.ActivityDateTimeUTC]);
      }
      if (dr.Table.Columns.Contains(select_ActivityEventsPDSAValidator.ColumnNames.AcknowledgeComment))
      {
        if (dr[select_ActivityEventsPDSAValidator.ColumnNames.AcknowledgeComment] != DBNull.Value)
          entity.AcknowledgeComment = PDSAString.ConvertToStringTrim(dr[select_ActivityEventsPDSAValidator.ColumnNames.AcknowledgeComment]);
      }
      if (dr.Table.Columns.Contains(select_ActivityEventsPDSAValidator.ColumnNames.AcknowledgedTime))
      {
        if (dr[select_ActivityEventsPDSAValidator.ColumnNames.AcknowledgedTime] != DBNull.Value)
          entity.AcknowledgedTime = PDSAProperty.ConvertToDateTimeOffset(dr[select_ActivityEventsPDSAValidator.ColumnNames.AcknowledgedTime]);
      }
      if (dr.Table.Columns.Contains(select_ActivityEventsPDSAValidator.ColumnNames.EventTypeUid))
      {
        if (dr[select_ActivityEventsPDSAValidator.ColumnNames.EventTypeUid] != DBNull.Value)
          entity.EventTypeUid = PDSAProperty.ConvertToGuid(dr[select_ActivityEventsPDSAValidator.ColumnNames.EventTypeUid]);
      }
      if (dr.Table.Columns.Contains(select_ActivityEventsPDSAValidator.ColumnNames.EventTypeMessage))
      {
        if (dr[select_ActivityEventsPDSAValidator.ColumnNames.EventTypeMessage] != DBNull.Value)
          entity.EventTypeMessage = PDSAString.ConvertToStringTrim(dr[select_ActivityEventsPDSAValidator.ColumnNames.EventTypeMessage]);
      }
      if (dr.Table.Columns.Contains(select_ActivityEventsPDSAValidator.ColumnNames.ForeColorHex))
      {
        if (dr[select_ActivityEventsPDSAValidator.ColumnNames.ForeColorHex] != DBNull.Value)
          entity.ForeColorHex = PDSAString.ConvertToStringTrim(dr[select_ActivityEventsPDSAValidator.ColumnNames.ForeColorHex]);
      }
      if (dr.Table.Columns.Contains(select_ActivityEventsPDSAValidator.ColumnNames.AlarmPriority))
      {
        if (dr[select_ActivityEventsPDSAValidator.ColumnNames.AlarmPriority] != DBNull.Value)
          entity.AlarmPriority = Convert.ToInt32(dr[select_ActivityEventsPDSAValidator.ColumnNames.AlarmPriority]);
      }
      if (dr.Table.Columns.Contains(select_ActivityEventsPDSAValidator.ColumnNames.DeviceType))
      {
        if (dr[select_ActivityEventsPDSAValidator.ColumnNames.DeviceType] != DBNull.Value)
          entity.DeviceType = PDSAString.ConvertToStringTrim(dr[select_ActivityEventsPDSAValidator.ColumnNames.DeviceType]);
      }
      if (dr.Table.Columns.Contains(select_ActivityEventsPDSAValidator.ColumnNames.DeviceUid))
      {
        if (dr[select_ActivityEventsPDSAValidator.ColumnNames.DeviceUid] != DBNull.Value)
          entity.DeviceUid = PDSAProperty.ConvertToGuid(dr[select_ActivityEventsPDSAValidator.ColumnNames.DeviceUid]);
      }
      if (dr.Table.Columns.Contains(select_ActivityEventsPDSAValidator.ColumnNames.DeviceName))
      {
        if (dr[select_ActivityEventsPDSAValidator.ColumnNames.DeviceName] != DBNull.Value)
          entity.DeviceName = PDSAString.ConvertToStringTrim(dr[select_ActivityEventsPDSAValidator.ColumnNames.DeviceName]);
      }
      if (dr.Table.Columns.Contains(select_ActivityEventsPDSAValidator.ColumnNames.PersonUid))
      {
        if (dr[select_ActivityEventsPDSAValidator.ColumnNames.PersonUid] != DBNull.Value)
          entity.PersonUid = PDSAProperty.ConvertToGuid(dr[select_ActivityEventsPDSAValidator.ColumnNames.PersonUid]);
      }
      if (dr.Table.Columns.Contains(select_ActivityEventsPDSAValidator.ColumnNames.LastName))
      {
        if (dr[select_ActivityEventsPDSAValidator.ColumnNames.LastName] != DBNull.Value)
          entity.LastName = PDSAString.ConvertToStringTrim(dr[select_ActivityEventsPDSAValidator.ColumnNames.LastName]);
      }
      if (dr.Table.Columns.Contains(select_ActivityEventsPDSAValidator.ColumnNames.FirstName))
      {
        if (dr[select_ActivityEventsPDSAValidator.ColumnNames.FirstName] != DBNull.Value)
          entity.FirstName = PDSAString.ConvertToStringTrim(dr[select_ActivityEventsPDSAValidator.ColumnNames.FirstName]);
      }
      if (dr.Table.Columns.Contains(select_ActivityEventsPDSAValidator.ColumnNames.IsTraced))
      {
        if (dr[select_ActivityEventsPDSAValidator.ColumnNames.IsTraced] != DBNull.Value)
          entity.IsTraced = Convert.ToBoolean(dr[select_ActivityEventsPDSAValidator.ColumnNames.IsTraced]);
      }
      if (dr.Table.Columns.Contains(select_ActivityEventsPDSAValidator.ColumnNames.CredentialDescription))
      {
        if (dr[select_ActivityEventsPDSAValidator.ColumnNames.CredentialDescription] != DBNull.Value)
          entity.CredentialDescription = PDSAString.ConvertToStringTrim(dr[select_ActivityEventsPDSAValidator.ColumnNames.CredentialDescription]);
      }
      if (dr.Table.Columns.Contains(select_ActivityEventsPDSAValidator.ColumnNames.ClusterUid))
      {
        if (dr[select_ActivityEventsPDSAValidator.ColumnNames.ClusterUid] != DBNull.Value)
          entity.ClusterUid = PDSAProperty.ConvertToGuid(dr[select_ActivityEventsPDSAValidator.ColumnNames.ClusterUid]);
      }
      if (dr.Table.Columns.Contains(select_ActivityEventsPDSAValidator.ColumnNames.ClusterName))
      {
        if (dr[select_ActivityEventsPDSAValidator.ColumnNames.ClusterName] != DBNull.Value)
          entity.ClusterName = PDSAString.ConvertToStringTrim(dr[select_ActivityEventsPDSAValidator.ColumnNames.ClusterName]);
      }
      if (dr.Table.Columns.Contains(select_ActivityEventsPDSAValidator.ColumnNames.InputOutputGroupName))
      {
        if (dr[select_ActivityEventsPDSAValidator.ColumnNames.InputOutputGroupName] != DBNull.Value)
          entity.InputOutputGroupName = PDSAString.ConvertToStringTrim(dr[select_ActivityEventsPDSAValidator.ColumnNames.InputOutputGroupName]);
      }
      if (dr.Table.Columns.Contains(select_ActivityEventsPDSAValidator.ColumnNames.IsAcknowledgeable))
      {
        if (dr[select_ActivityEventsPDSAValidator.ColumnNames.IsAcknowledgeable] != DBNull.Value)
          entity.IsAcknowledgeable = Convert.ToBoolean(dr[select_ActivityEventsPDSAValidator.ColumnNames.IsAcknowledgeable]);
      }
      if (dr.Table.Columns.Contains(select_ActivityEventsPDSAValidator.ColumnNames.AckCount))
      {
        if (dr[select_ActivityEventsPDSAValidator.ColumnNames.AckCount] != DBNull.Value)
          entity.AckCount = Convert.ToInt32(dr[select_ActivityEventsPDSAValidator.ColumnNames.AckCount]);
      }
      if (dr.Table.Columns.Contains(select_ActivityEventsPDSAValidator.ColumnNames.IsAcknowledged))
      {
        if (dr[select_ActivityEventsPDSAValidator.ColumnNames.IsAcknowledged] != DBNull.Value)
          entity.IsAcknowledged = Convert.ToBoolean(dr[select_ActivityEventsPDSAValidator.ColumnNames.IsAcknowledged]);
      }
      if (dr.Table.Columns.Contains(select_ActivityEventsPDSAValidator.ColumnNames.AcknowledgedByUser))
      {
        if (dr[select_ActivityEventsPDSAValidator.ColumnNames.AcknowledgedByUser] != DBNull.Value)
          entity.AcknowledgedByUser = PDSAString.ConvertToStringTrim(dr[select_ActivityEventsPDSAValidator.ColumnNames.AcknowledgedByUser]);
      }
      if (dr.Table.Columns.Contains(select_ActivityEventsPDSAValidator.ColumnNames.EntityId))
      {
        if (dr[select_ActivityEventsPDSAValidator.ColumnNames.EntityId] != DBNull.Value)
          entity.EntityId = PDSAProperty.ConvertToGuid(dr[select_ActivityEventsPDSAValidator.ColumnNames.EntityId]);
      }
      if (dr.Table.Columns.Contains(select_ActivityEventsPDSAValidator.ColumnNames.EntityName))
      {
        if (dr[select_ActivityEventsPDSAValidator.ColumnNames.EntityName] != DBNull.Value)
          entity.EntityName = PDSAString.ConvertToStringTrim(dr[select_ActivityEventsPDSAValidator.ColumnNames.EntityName]);
      }
      if (dr.Table.Columns.Contains(select_ActivityEventsPDSAValidator.ColumnNames.EntityType))
      {
        if (dr[select_ActivityEventsPDSAValidator.ColumnNames.EntityType] != DBNull.Value)
          entity.EntityType = PDSAString.ConvertToStringTrim(dr[select_ActivityEventsPDSAValidator.ColumnNames.EntityType]);
      }
      entity.IsDirty = false;

      return entity;
    }
    #endregion

    #region ParameterNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the select_ActivityEventsPDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ParameterNames
    {
    /// <summary>
    /// Returns '@EntityId'
    /// </summary>
    public static string EntityId = "@EntityId";
    /// <summary>
    /// Returns '@UserId'
    /// </summary>
    public static string UserId = "@UserId";
    /// <summary>
    /// Returns '@StartDateTime'
    /// </summary>
    public static string StartDateTime = "@StartDateTime";
    /// <summary>
    /// Returns '@EndDateTime'
    /// </summary>
    public static string EndDateTime = "@EndDateTime";
    /// <summary>
    /// Returns '@DeviceUid'
    /// </summary>
    public static string DeviceUid = "@DeviceUid";
    /// <summary>
    /// Returns '@PersonUid'
    /// </summary>
    public static string PersonUid = "@PersonUid";
    /// <summary>
    /// Returns '@CredentialUid'
    /// </summary>
    public static string CredentialUid = "@CredentialUid";
    /// <summary>
    /// Returns '@ClusterUid'
    /// </summary>
    public static string ClusterUid = "@ClusterUid";
    /// <summary>
    /// Returns '@EventTypeUids'
    /// </summary>
    public static string EventTypeUids = "@EventTypeUids";
    /// <summary>
    /// Returns '@IsAcknowledgeable'
    /// </summary>
    public static string IsAcknowledgeable = "@IsAcknowledgeable";
    /// <summary>
    /// Returns '@IsActionRequired'
    /// </summary>
    public static string IsActionRequired = "@IsActionRequired";
    /// <summary>
    /// Returns '@IsTraced'
    /// </summary>
    public static string IsTraced = "@IsTraced";
    /// <summary>
    /// Returns '@StartPriority'
    /// </summary>
    public static string StartPriority = "@StartPriority";
    /// <summary>
    /// Returns '@EndPriority'
    /// </summary>
    public static string EndPriority = "@EndPriority";
    /// <summary>
    /// Returns '@Priorities'
    /// </summary>
    public static string Priorities = "@Priorities";
    /// <summary>
    /// Returns '@JustNumber'
    /// </summary>
    public static string JustNumber = "@JustNumber";
    /// <summary>
    /// Returns '@PageNumber'
    /// </summary>
    public static string PageNumber = "@PageNumber";
    /// <summary>
    /// Returns '@PageSize'
    /// </summary>
    public static string PageSize = "@PageSize";
    /// <summary>
    /// Returns '@SortColumn'
    /// </summary>
    public static string SortColumn = "@SortColumn";
    /// <summary>
    /// Returns '@DescendingOrder'
    /// </summary>
    public static string DescendingOrder = "@DescendingOrder";
    /// <summary>
    /// Returns '@CultureName'
    /// </summary>
    public static string CultureName = "@CultureName";
    /// <summary>
    /// Returns '@IncludeLoggingOnOffEvents'
    /// </summary>
    public static string IncludeLoggingOnOffEvents = "@IncludeLoggingOnOffEvents";
    /// <summary>
    /// Returns '@RETURN_VALUE'
    /// </summary>
    public static string RETURNVALUE = "@RETURN_VALUE";
    }
    #endregion
  }
}
