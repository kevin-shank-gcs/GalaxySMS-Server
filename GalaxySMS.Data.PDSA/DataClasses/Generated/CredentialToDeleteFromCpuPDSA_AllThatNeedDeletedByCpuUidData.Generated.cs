using System;
using System.Data;
using System.Text;

using PDSA.Common;
using PDSA.DataLayer;
using PDSA.DataLayer.DataClasses;
using PDSA.Validation;

using GalaxySMS.EntityLayer;
using GalaxySMS.ValidationLayer;

namespace GalaxySMS.DataLayer
{
    /// <summary>
    /// This class calls the stored procedure CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSA
    /// This class is generated by the Haystack Code Generator for .NET.
    /// You should NOT modify this class as it is intended to be re-generated.
    /// </summary>
    public class CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAData : PDSAStoredProcReadOnly
    {
        #region Constructors
        /// <summary>
        /// Constructor for the CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAData class
        /// </summary>
        public CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAData() : base()
        {
            Entity = new CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSA();
            ValidatorObject = new CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator(Entity);

            Init();
        }

        /// <summary>
        /// Constructor for the CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAData class
        /// </summary>
        /// <param name="entity">An instance of a CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSA</param>
        public CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAData(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSA entity) : base()
        {
            Entity = entity;
            ValidatorObject = new CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator(Entity);

            Init();
        }

        /// <summary>
        /// Constructor for the CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAData class
        /// </summary>
        /// <param name="dataProvider">An instance of a PDSADataProvider</param>
        /// <param name="entity">An instance of a CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSA</param>
        public CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAData(PDSADataProvider dataProvider,
          CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSA entity)
          : base(dataProvider)
        {
            Entity = entity;
            ValidatorObject = new CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator(Entity);

            Init();
        }

        /// <summary>
        /// Constructor for the CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAData class
        /// </summary>
        /// <param name="dataProvider">An instance of a PDSADataProvider</param>
        /// <param name="entity">An instance of a CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSA</param>
        /// <param name="validator">An instance of a CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator</param>
        public CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAData(PDSADataProvider dataProvider,
          CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSA entity, CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator validator)
          : base(dataProvider)
        {
            Entity = entity;
            ValidatorObject = validator;

            Init();
        }
        #endregion

        #region Public Property
        /// <summary>
        /// Get/Set the Entity class that will be used to get and set properties/fields for this data class.
        /// </summary>
        public CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSA Entity { get; set; }
        #endregion

        #region Init Method
        /// <summary>
        /// Initializes this class to a valid start state.
        /// </summary>
        protected override void Init()
        {
            ClassName = "CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAData";
            StoredProcName = "CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUid";
            SchemaName = "GCS";

            // Create Parameters
            InitParameters();

            // Create Data Columns
            InitDataColumns();
        }
        #endregion

        #region InitParameters Method
        /// <summary>
        /// Creates all the parameters for the stored procedure.
        /// </summary>
        protected override void InitParameters()
        {
            PDSADataParameter param;

            // Clear all parameters each time
            AllParameters.Clear();

            // Create each parameter object and add to Parameters Collection
            param = new PDSADataParameter();
            param.ParameterName = CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ParameterNames.CpuUid;
            param.DBType = DbType.Guid;
            param.ParamDirection = ParameterDirection.Input;
            param.IsRefCursor = false;
            AllParameters.Add(param);

            param = new PDSADataParameter();
            param.ParameterName = CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ParameterNames.ServerAddress;
            param.DBType = DbType.String;
            param.ParamDirection = ParameterDirection.Input;
            param.IsRefCursor = false;
            AllParameters.Add(param);

            param = new PDSADataParameter();
            param.ParameterName = CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ParameterNames.IsConnected;
            param.DBType = DbType.Boolean;
            param.ParamDirection = ParameterDirection.Input;
            param.IsRefCursor = false;
            AllParameters.Add(param);

            param = new PDSADataParameter();
            param.ParameterName = CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ParameterNames.RETURNVALUE;
            param.DBType = DbType.Int32;
            param.ParamDirection = ParameterDirection.ReturnValue;
            param.IsRefCursor = false;
            AllParameters.Add(param);


            AddReturnValueParameterToCollection();
        }
        #endregion

        #region InitDataColumns Method
        /// <summary>
        /// Initializes the Data Columns Collection for each field returned from the stored procedure.
        /// </summary>
        protected override void InitDataColumns()
        {
            PDSADataColumn dc;

            // Create each data column
            dc = PDSADataColumn.CreateDataColumn(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.CredentialToDeleteFromCpuUid, GetResourceMessage("GCS_CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSA_CredentialToDeleteFromCpuUid_Header", "Credential To Delete From Cpu Uid"), false, typeof(Guid), DbType.Guid);
            AllColumns.Add(dc);
            dc = PDSADataColumn.CreateDataColumn(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.CpuUid, GetResourceMessage("GCS_CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSA_CpuUid_Header", "Cpu Uid"), false, typeof(Guid), DbType.Guid);
            AllColumns.Add(dc);
            dc = PDSADataColumn.CreateDataColumn(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.CardBinaryData, GetResourceMessage("GCS_CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSA_CardBinaryData_Header", "Card Binary Data"), false, typeof(string), DbType.String);
            AllColumns.Add(dc);
            dc = PDSADataColumn.CreateDataColumn(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.DeletedFromDatabaseDate, GetResourceMessage("GCS_CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSA_DeletedFromDatabaseDate_Header", "Deleted From Database Date"), false, typeof(DateTime), DbType.DateTime);
            AllColumns.Add(dc);
            dc = PDSADataColumn.CreateDataColumn(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.DeletedFromCpuDate, GetResourceMessage("GCS_CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSA_DeletedFromCpuDate_Header", "Deleted From Cpu Date"), false, typeof(DateTime), DbType.DateTime);
            AllColumns.Add(dc);
            dc = PDSADataColumn.CreateDataColumn(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.ClusterNumber, GetResourceMessage("GCS_CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSA_ClusterNumber_Header", "Cluster Number"), false, typeof(int), DbType.Int32);
            AllColumns.Add(dc);
            dc = PDSADataColumn.CreateDataColumn(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.PanelNumber, GetResourceMessage("GCS_CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSA_PanelNumber_Header", "Panel Number"), false, typeof(int), DbType.Int32);
            AllColumns.Add(dc);
            dc = PDSADataColumn.CreateDataColumn(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.CpuNumber, GetResourceMessage("GCS_CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSA_CpuNumber_Header", "Cpu Number"), false, typeof(short), DbType.Int16);
            AllColumns.Add(dc);
            dc = PDSADataColumn.CreateDataColumn(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.ClusterGroupId, GetResourceMessage("GCS_CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSA_ClusterGroupId_Header", "Cluster Group Id"), false, typeof(int), DbType.Int32);
            AllColumns.Add(dc);
            dc = PDSADataColumn.CreateDataColumn(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.ServerAddress, GetResourceMessage("GCS_CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSA_ServerAddress_Header", "Server Address"), false, typeof(string), DbType.String);
            AllColumns.Add(dc);
            dc = PDSADataColumn.CreateDataColumn(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.IsConnected, GetResourceMessage("GCS_CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSA_IsConnected_Header", "Is Connected"), false, typeof(bool), DbType.Boolean);
            AllColumns.Add(dc);
            dc = PDSADataColumn.CreateDataColumn(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.DataLength, GetResourceMessage("GCS_CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSA_DataLength_Header", "Data Length"), false, typeof(short), DbType.Int16);
            AllColumns.Add(dc);
            dc = PDSADataColumn.CreateDataColumn(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.IsExtended, GetResourceMessage("GCS_CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSA_IsExtended_Header", "Is Extended"), false, typeof(bool), DbType.Boolean);
            AllColumns.Add(dc);
        }
        #endregion

        #region EntityDataToParameterCollection Method
        /// <summary>
        /// Moves the data from the Entity class into the Parameters collection
        /// </summary>
        protected override void EntityDataToParameterCollection()
        {
            if (AllParameters.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ParameterNames.CpuUid).SetAsNull == false)
                AllParameters.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ParameterNames.CpuUid).Value = Entity.CpuUid;
            else
                AllParameters.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ParameterNames.CpuUid).Value = System.Data.SqlTypes.SqlGuid.Null;
            if (AllParameters.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ParameterNames.ServerAddress).SetAsNull == false)
                AllParameters.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ParameterNames.ServerAddress).Value = Entity.ServerAddress;
            else
                AllParameters.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ParameterNames.ServerAddress).Value = System.Data.SqlTypes.SqlString.Null;
            if (AllParameters.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ParameterNames.IsConnected).SetAsNull == false)
                AllParameters.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ParameterNames.IsConnected).Value = Entity.IsConnected;
            else
                AllParameters.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ParameterNames.IsConnected).Value = System.Data.SqlTypes.SqlBoolean.Null;
        }
        #endregion

        #region EntityDataToColumnCollection Method
        /// <summary>
        /// Moves the data from the Entity class into the Columns collection
        /// </summary>
        protected override void EntityDataToColumnCollection()
        {
            if (AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.CredentialToDeleteFromCpuUid).SetAsNull == false)
                AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.CredentialToDeleteFromCpuUid).Value = Entity.CredentialToDeleteFromCpuUid;
            else
                AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.CredentialToDeleteFromCpuUid).Value = Guid.Empty;

            if (AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.CpuUid).SetAsNull == false)
                AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.CpuUid).Value = Entity.CpuUid;
            else
                AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.CpuUid).Value = Guid.Empty;

            if (AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.CardBinaryData).SetAsNull == false)
                AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.CardBinaryData).Value = Entity.CardBinaryData;
            else
                AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.CardBinaryData).Value = string.Empty;

            if (AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.DeletedFromDatabaseDate).SetAsNull == false)
                AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.DeletedFromDatabaseDate).Value = Entity.DeletedFromDatabaseDate;
            else
                AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.DeletedFromDatabaseDate).Value = DateTimeOffset.MinValue;

            if (AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.DeletedFromCpuDate).SetAsNull == false)
                AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.DeletedFromCpuDate).Value = Entity.DeletedFromCpuDate;
            else
                AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.DeletedFromCpuDate).Value = null;

            if (AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.ClusterNumber).SetAsNull == false)
                AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.ClusterNumber).Value = Entity.ClusterNumber;
            else
                AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.ClusterNumber).Value = 0;

            if (AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.PanelNumber).SetAsNull == false)
                AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.PanelNumber).Value = Entity.PanelNumber;
            else
                AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.PanelNumber).Value = 0;

            if (AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.CpuNumber).SetAsNull == false)
                AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.CpuNumber).Value = Entity.CpuNumber;
            else
                AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.CpuNumber).Value = 0;

            if (AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.ClusterGroupId).SetAsNull == false)
                AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.ClusterGroupId).Value = Entity.ClusterGroupId;
            else
                AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.ClusterGroupId).Value = 0;

            if (AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.ServerAddress).SetAsNull == false)
                AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.ServerAddress).Value = Entity.ServerAddress;
            else
                AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.ServerAddress).Value = string.Empty;

            if (AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.IsConnected).SetAsNull == false)
                AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.IsConnected).Value = Entity.IsConnected;
            else
                AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.IsConnected).Value = false;

            if (AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.DataLength).SetAsNull == false)
                AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.DataLength).Value = Entity.DataLength;
            else
                AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.DataLength).Value = 0;

            if (AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.IsExtended).SetAsNull == false)
                AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.IsExtended).Value = Entity.IsExtended;
            else
                AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.IsExtended).Value = false;

        }
        #endregion

        #region OutputParametersToEntityData Method
        /// <summary>
        /// Moves the output parameters from the Parameters collection into the Entity class.
        /// </summary>
        protected override void OutputParametersToEntityData()
        {
            if (AllParameters.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ParameterNames.RETURNVALUE).IsValueNull == false)
                Entity.RETURNVALUE = AllParameters.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ParameterNames.RETURNVALUE).GetAsInteger();
            else
                Entity.RETURNVALUE = 0;
        }
        #endregion

        #region ColumnCollectionToEntityData Method
        /// <summary>
        /// Moves the data from the Columns collection into the Entity class.
        /// </summary>
        protected override void ColumnCollectionToEntityData()
        {
            if (AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.CredentialToDeleteFromCpuUid).IsNull == false)
                Entity.CredentialToDeleteFromCpuUid = AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.CredentialToDeleteFromCpuUid).GetAsGuid();
            else
                Entity.CredentialToDeleteFromCpuUid = Guid.Empty;

            if (AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.CpuUid).IsNull == false)
                Entity.CpuUid = AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.CpuUid).GetAsGuid();
            else
                Entity.CpuUid = Guid.Empty;

            if (AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.CardBinaryData).IsNull == false)
                Entity.CardBinaryData = AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.CardBinaryData).GetAsByteArray();
            else
                Entity.CardBinaryData = null;

            if (AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames
                    .DeletedFromDatabaseDate).IsNull == false)
                Entity.DeletedFromDatabaseDate = AllColumns
                    .GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames
                        .DeletedFromDatabaseDate).GetAsDateTimeOffset();
            else
                Entity.DeletedFromDatabaseDate = DateTimeOffset.MinValue;

            if (AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames
                    .DeletedFromCpuDate).IsNull == false)
                Entity.DeletedFromCpuDate = AllColumns
                    .GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames
                        .DeletedFromCpuDate).GetAsDateTimeOffset();
            else
                Entity.DeletedFromCpuDate = null;

            if (AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.ClusterNumber).IsNull == false)
                Entity.ClusterNumber = AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.ClusterNumber).GetAsInteger();
            else
                Entity.ClusterNumber = 0;

            if (AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.PanelNumber).IsNull == false)
                Entity.PanelNumber = AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.PanelNumber).GetAsInteger();
            else
                Entity.PanelNumber = 0;

            if (AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.CpuNumber).IsNull == false)
                Entity.CpuNumber = AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.CpuNumber).GetAsShort();
            else
                Entity.CpuNumber = 0;

            if (AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.ClusterGroupId).IsNull == false)
                Entity.ClusterGroupId = AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.ClusterGroupId).GetAsInteger();
            else
                Entity.ClusterGroupId = 0;

            if (AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.ServerAddress).IsNull == false)
                Entity.ServerAddress = AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.ServerAddress).GetAsString();
            else
                Entity.ServerAddress = string.Empty;

            if (AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.IsConnected).IsNull == false)
                Entity.IsConnected = AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.IsConnected).GetAsBool();
            else
                Entity.IsConnected = false;

            if (AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.DataLength).IsNull == false)
                Entity.DataLength = AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.DataLength).GetAsShort();
            else
                Entity.DataLength = 0;

            if (AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.IsExtended).IsNull == false)
                Entity.IsExtended = AllColumns.GetByName(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.IsExtended).GetAsBool();
            else
                Entity.IsExtended = false;

        }
        #endregion

        #region CreateEntityFromDataRow Method
        /// <summary>
        /// Creates an Entity object from a DataRow object.
        /// </summary>
        /// <param name="dr">DataRow object with all fields from the table in it.</param>
        /// <returns>CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSA</returns>
        public CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSA CreateEntityFromDataRow(DataRow dr)
        {
            CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSA entity = new CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSA();

            if (dr.Table.Columns.Contains(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.CredentialToDeleteFromCpuUid))
            {
                if (dr[CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.CredentialToDeleteFromCpuUid] != DBNull.Value)
                    entity.CredentialToDeleteFromCpuUid = PDSAProperty.ConvertToGuid(dr[CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.CredentialToDeleteFromCpuUid]);
            }
            if (dr.Table.Columns.Contains(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.CpuUid))
            {
                if (dr[CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.CpuUid] != DBNull.Value)
                    entity.CpuUid = PDSAProperty.ConvertToGuid(dr[CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.CpuUid]);
            }
            if (dr.Table.Columns.Contains(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.CardBinaryData))
            {
                if (dr[CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.CardBinaryData] != DBNull.Value)
                    entity.CardBinaryData = (byte[])(dr[CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.CardBinaryData]);
            }
            if (dr.Table.Columns.Contains(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.DeletedFromDatabaseDate))
            {
                if (dr[CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.DeletedFromDatabaseDate] != DBNull.Value)
                    entity.DeletedFromDatabaseDate = GCS.Core.Common.Extensions.DateTimeExtensions.ToDateTimeOffset(dr[CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.DeletedFromDatabaseDate]);
            }
            if (dr.Table.Columns.Contains(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.DeletedFromCpuDate))
            {
                if (dr[CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.DeletedFromCpuDate] != DBNull.Value)
                    entity.DeletedFromCpuDate = GCS.Core.Common.Extensions.DateTimeExtensions.ToDateTimeOffset(dr[CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.DeletedFromCpuDate]);
            }
            if (dr.Table.Columns.Contains(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.ClusterNumber))
            {
                if (dr[CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.ClusterNumber] != DBNull.Value)
                    entity.ClusterNumber = Convert.ToInt32(dr[CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.ClusterNumber]);
            }
            if (dr.Table.Columns.Contains(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.PanelNumber))
            {
                if (dr[CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.PanelNumber] != DBNull.Value)
                    entity.PanelNumber = Convert.ToInt32(dr[CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.PanelNumber]);
            }
            if (dr.Table.Columns.Contains(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.CpuNumber))
            {
                if (dr[CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.CpuNumber] != DBNull.Value)
                    entity.CpuNumber = Convert.ToInt16(dr[CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.CpuNumber]);
            }
            if (dr.Table.Columns.Contains(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.ClusterGroupId))
            {
                if (dr[CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.ClusterGroupId] != DBNull.Value)
                    entity.ClusterGroupId = Convert.ToInt32(dr[CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.ClusterGroupId]);
            }
            if (dr.Table.Columns.Contains(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.ServerAddress))
            {
                if (dr[CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.ServerAddress] != DBNull.Value)
                    entity.ServerAddress = PDSAString.ConvertToStringTrim(dr[CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.ServerAddress]);
            }
            if (dr.Table.Columns.Contains(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.IsConnected))
            {
                if (dr[CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.IsConnected] != DBNull.Value)
                    entity.IsConnected = Convert.ToBoolean(dr[CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.IsConnected]);
            }
            if (dr.Table.Columns.Contains(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.DataLength))
            {
                if (dr[CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.DataLength] != DBNull.Value)
                    entity.DataLength = Convert.ToInt16(dr[CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.DataLength]);
            }
            if (dr.Table.Columns.Contains(CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.IsExtended))
            {
                if (dr[CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.IsExtended] != DBNull.Value)
                    entity.IsExtended = Convert.ToBoolean(dr[CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSAValidator.ColumnNames.IsExtended]);
            }
            entity.IsDirty = false;

            return entity;
        }
        #endregion

        #region ParameterNames Class
        /// <summary>
        /// Contains static string properties that represent the name of each property in the CredentialToDeleteFromCpuPDSA_AllThatNeedDeletedByCpuUidPDSA class.
        /// This class is generated by the Haystack Code Generator for .NET.
        /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
        /// </summary>
        public class ParameterNames
        {
            /// <summary>
            /// Returns '@CpuUid'
            /// </summary>
            public static string CpuUid = "@CpuUid";
            /// <summary>
            /// Returns '@ServerAddress'
            /// </summary>
            public static string ServerAddress = "@ServerAddress";
            /// <summary>
            /// Returns '@IsConnected'
            /// </summary>
            public static string IsConnected = "@IsConnected";
            /// <summary>
            /// Returns '@RETURN_VALUE'
            /// </summary>
            public static string RETURNVALUE = "@RETURN_VALUE";
        }
        #endregion
    }
}
