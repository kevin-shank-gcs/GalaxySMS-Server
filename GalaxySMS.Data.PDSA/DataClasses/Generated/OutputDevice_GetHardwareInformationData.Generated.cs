using System;
using System.Data;
using System.Text;

using PDSA.Common;
using PDSA.DataLayer;
using PDSA.DataLayer.DataClasses;
using PDSA.Validation;

using GalaxySMS.EntityLayer;
using GalaxySMS.ValidationLayer;

namespace GalaxySMS.DataLayer
{
  /// <summary>
  /// This class calls the stored procedure OutputDevice_GetHardwareInformationPDSA
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public class OutputDevice_GetHardwareInformationPDSAData : PDSAStoredProcReadOnly
  {
    #region Constructors
    /// <summary>
    /// Constructor for the OutputDevice_GetHardwareInformationPDSAData class
    /// </summary>
    public OutputDevice_GetHardwareInformationPDSAData() : base()
    {
      Entity = new OutputDevice_GetHardwareInformationPDSA();
      ValidatorObject = new  OutputDevice_GetHardwareInformationPDSAValidator(Entity);

      Init();
    }

    /// <summary>
    /// Constructor for the OutputDevice_GetHardwareInformationPDSAData class
    /// </summary>
    /// <param name="entity">An instance of a OutputDevice_GetHardwareInformationPDSA</param>
    public OutputDevice_GetHardwareInformationPDSAData(OutputDevice_GetHardwareInformationPDSA entity) : base()
    {
      Entity = entity;
      ValidatorObject = new OutputDevice_GetHardwareInformationPDSAValidator(Entity);
            
      Init();
    }
    
    /// <summary>
    /// Constructor for the OutputDevice_GetHardwareInformationPDSAData class
    /// </summary>
    /// <param name="dataProvider">An instance of a PDSADataProvider</param>
    /// <param name="entity">An instance of a OutputDevice_GetHardwareInformationPDSA</param>
    public OutputDevice_GetHardwareInformationPDSAData(PDSADataProvider dataProvider,
      OutputDevice_GetHardwareInformationPDSA entity)
      : base(dataProvider)
    {
      Entity = entity;
      ValidatorObject = new  OutputDevice_GetHardwareInformationPDSAValidator(Entity);
            
      Init();
    }
    
    /// <summary>
    /// Constructor for the OutputDevice_GetHardwareInformationPDSAData class
    /// </summary>
    /// <param name="dataProvider">An instance of a PDSADataProvider</param>
    /// <param name="entity">An instance of a OutputDevice_GetHardwareInformationPDSA</param>
    /// <param name="validator">An instance of a OutputDevice_GetHardwareInformationPDSAValidator</param>
    public OutputDevice_GetHardwareInformationPDSAData(PDSADataProvider dataProvider,
      OutputDevice_GetHardwareInformationPDSA entity, OutputDevice_GetHardwareInformationPDSAValidator validator)
      : base(dataProvider)
    {
      Entity = entity;
      ValidatorObject = validator;

      Init();
    }
    #endregion

    #region Public Property
    /// <summary>
    /// Get/Set the Entity class that will be used to get and set properties/fields for this data class.
    /// </summary>
    public OutputDevice_GetHardwareInformationPDSA Entity { get; set; }
    #endregion

    #region Init Method
    /// <summary>
    /// Initializes this class to a valid start state.
    /// </summary>
    protected override void Init()
    {
      ClassName = "OutputDevice_GetHardwareInformationPDSAData";
      StoredProcName = "OutputDevice_GetHardwareInformation";
      SchemaName = "GCS";

      // Create Parameters
      InitParameters();

      // Create Data Columns
      InitDataColumns();
    }
    #endregion

   #region InitParameters Method
    /// <summary>
    /// Creates all the parameters for the stored procedure.
    /// </summary>
    protected override void InitParameters()
    {
      PDSADataParameter param;

      // Clear all parameters each time
      AllParameters.Clear();

      // Create each parameter object and add to Parameters Collection
      param = new PDSADataParameter();
      param.ParameterName = OutputDevice_GetHardwareInformationPDSAValidator.ParameterNames.OutputDeviceUid;
      param.DBType = DbType.Guid;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = OutputDevice_GetHardwareInformationPDSAValidator.ParameterNames.RETURNVALUE;
      param.DBType = DbType.Int32;
      param.ParamDirection = ParameterDirection.ReturnValue;
      param.IsRefCursor = false;
      AllParameters.Add(param);

  
      AddReturnValueParameterToCollection();
    }
    #endregion

    #region InitDataColumns Method
    /// <summary>
    /// Initializes the Data Columns Collection for each field returned from the stored procedure.
    /// </summary>
    protected override void InitDataColumns()
    {
      PDSADataColumn dc;

      // Create each data column
      dc = PDSADataColumn.CreateDataColumn(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.OutputDeviceUid, GetResourceMessage("GCS_OutputDevice_GetHardwareInformationPDSA_OutputDeviceUid_Header", "Output Device Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.OutputName, GetResourceMessage("GCS_OutputDevice_GetHardwareInformationPDSA_OutputName_Header", "Output Name"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.EntityId, GetResourceMessage("GCS_OutputDevice_GetHardwareInformationPDSA_EntityId_Header", "Entity Id"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyOutputModeCode, GetResourceMessage("GCS_OutputDevice_GetHardwareInformationPDSA_GalaxyOutputModeCode_Header", "Galaxy Output Mode Code"), false, typeof(short), DbType.Int16);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.RegionUid, GetResourceMessage("GCS_OutputDevice_GetHardwareInformationPDSA_RegionUid_Header", "Region Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.SiteName, GetResourceMessage("GCS_OutputDevice_GetHardwareInformationPDSA_SiteName_Header", "Site Name"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterGroupId, GetResourceMessage("GCS_OutputDevice_GetHardwareInformationPDSA_AccountCode_Header", "Account Code"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterNumber, GetResourceMessage("GCS_OutputDevice_GetHardwareInformationPDSA_ClusterNumber_Header", "Cluster Number"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.PanelNumber, GetResourceMessage("GCS_OutputDevice_GetHardwareInformationPDSA_PanelNumber_Header", "Panel Number"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.BoardNumber, GetResourceMessage("GCS_OutputDevice_GetHardwareInformationPDSA_BoardNumber_Header", "Board Number"), false, typeof(short), DbType.Int16);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.SectionNumber, GetResourceMessage("GCS_OutputDevice_GetHardwareInformationPDSA_SectionNumber_Header", "Section Number"), false, typeof(short), DbType.Int16);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ModuleNumber, GetResourceMessage("GCS_OutputDevice_GetHardwareInformationPDSA_ModuleNumber_Header", "Module Number"), false, typeof(short), DbType.Int16);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.NodeNumber, GetResourceMessage("GCS_OutputDevice_GetHardwareInformationPDSA_NodeNumber_Header", "Node Number"), false, typeof(short), DbType.Int16);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterTypeUid, GetResourceMessage("GCS_OutputDevice_GetHardwareInformationPDSA_ClusterTypeUid_Header", "Cluster Type Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterTypeCode, GetResourceMessage("GCS_OutputDevice_GetHardwareInformationPDSA_ClusterTypeCode_Header", "Cluster Type Code"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyPanelModelUid, GetResourceMessage("GCS_OutputDevice_GetHardwareInformationPDSA_GalaxyPanelModelUid_Header", "Galaxy Panel Model Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyPanelTypeCode, GetResourceMessage("GCS_OutputDevice_GetHardwareInformationPDSA_GalaxyPanelTypeCode_Header", "Galaxy Panel Type Code"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardTypeUid, GetResourceMessage("GCS_OutputDevice_GetHardwareInformationPDSA_InterfaceBoardTypeUid_Header", "Interface Board Type Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardTypeCode, GetResourceMessage("GCS_OutputDevice_GetHardwareInformationPDSA_InterfaceBoardTypeCode_Header", "Interface Board Type Code"), false, typeof(short), DbType.Int16);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardModel, GetResourceMessage("GCS_OutputDevice_GetHardwareInformationPDSA_InterfaceBoardModel_Header", "Interface Board Model"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardSectionModeUid, GetResourceMessage("GCS_OutputDevice_GetHardwareInformationPDSA_InterfaceBoardSectionModeUid_Header", "Interface Board Section Mode Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardSectionModeCode, GetResourceMessage("GCS_OutputDevice_GetHardwareInformationPDSA_InterfaceBoardSectionModeCode_Header", "Interface Board Section Mode Code"), false, typeof(short), DbType.Int16);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyHardwareModuleTypeUid, GetResourceMessage("GCS_OutputDevice_GetHardwareInformationPDSA_GalaxyHardwareModuleTypeUid_Header", "Galaxy Hardware Module Type Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ModuleTypeCode, GetResourceMessage("GCS_OutputDevice_GetHardwareInformationPDSA_ModuleTypeCode_Header", "Module Type Code"), false, typeof(short), DbType.Int16);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterUid, GetResourceMessage("GCS_OutputDevice_GetHardwareInformationPDSA_ClusterUid_Header", "Cluster Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyPanelUid, GetResourceMessage("GCS_OutputDevice_GetHardwareInformationPDSA_GalaxyPanelUid_Header", "Galaxy Panel Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyInterfaceBoardUid, GetResourceMessage("GCS_OutputDevice_GetHardwareInformationPDSA_GalaxyInterfaceBoardUid_Header", "Galaxy Interface Board Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionUid, GetResourceMessage("GCS_OutputDevice_GetHardwareInformationPDSA_GalaxyInterfaceBoardSectionUid_Header", "Galaxy Interface Board Section Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyHardwareModuleUid, GetResourceMessage("GCS_OutputDevice_GetHardwareInformationPDSA_GalaxyHardwareModuleUid_Header", "Galaxy Hardware Module Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionNodeUid, GetResourceMessage("GCS_OutputDevice_GetHardwareInformationPDSA_GalaxyInterfaceBoardSectionNodeUid_Header", "Galaxy Interface Board Section Node Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.IsNodeActive, GetResourceMessage("GCS_OutputDevice_GetHardwareInformationPDSA_IsNodeActive_Header", "Is Node Active"), false, typeof(bool), DbType.Boolean);
      AllColumns.Add(dc);
    }
    #endregion

    #region EntityDataToParameterCollection Method
    /// <summary>
    /// Moves the data from the Entity class into the Parameters collection
    /// </summary>
    protected override void EntityDataToParameterCollection()
    {
      if (AllParameters.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ParameterNames.OutputDeviceUid).SetAsNull == false)
        AllParameters.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ParameterNames.OutputDeviceUid).Value = Entity.OutputDeviceUid;
      else
        AllParameters.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ParameterNames.OutputDeviceUid).Value = System.Data.SqlTypes.SqlGuid.Null;
    }
    #endregion

    #region EntityDataToColumnCollection Method
    /// <summary>
    /// Moves the data from the Entity class into the Columns collection
    /// </summary>
    protected override void EntityDataToColumnCollection()
    {
      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.OutputDeviceUid).SetAsNull == false)
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.OutputDeviceUid).Value = Entity.OutputDeviceUid;
      else
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.OutputDeviceUid).Value = Guid.Empty;
     
      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.OutputName).SetAsNull == false)
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.OutputName).Value = Entity.OutputName;
      else
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.OutputName).Value = string.Empty;
     
      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.EntityId).SetAsNull == false)
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.EntityId).Value = Entity.EntityId;
      else
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.EntityId).Value = Guid.Empty;
     
      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyOutputModeCode).SetAsNull == false)
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyOutputModeCode).Value = Entity.GalaxyOutputModeCode;
      else
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyOutputModeCode).Value = 0;
     
      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.RegionUid).SetAsNull == false)
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.RegionUid).Value = Entity.RegionUid;
      else
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.RegionUid).Value = Guid.Empty;
     
      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.SiteName).SetAsNull == false)
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.SiteName).Value = Entity.SiteName;
      else
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.SiteName).Value = string.Empty;
     
      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterGroupId).SetAsNull == false)
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterGroupId).Value = Entity.ClusterGroupId;
      else
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterGroupId).Value = string.Empty;
     
      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterNumber).SetAsNull == false)
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterNumber).Value = Entity.ClusterNumber;
      else
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterNumber).Value = 0;
     
      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.PanelNumber).SetAsNull == false)
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.PanelNumber).Value = Entity.PanelNumber;
      else
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.PanelNumber).Value = 0;
     
      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.BoardNumber).SetAsNull == false)
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.BoardNumber).Value = Entity.BoardNumber;
      else
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.BoardNumber).Value = 0;
     
      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.SectionNumber).SetAsNull == false)
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.SectionNumber).Value = Entity.SectionNumber;
      else
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.SectionNumber).Value = 0;
     
      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ModuleNumber).SetAsNull == false)
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ModuleNumber).Value = Entity.ModuleNumber;
      else
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ModuleNumber).Value = 0;
     
      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.NodeNumber).SetAsNull == false)
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.NodeNumber).Value = Entity.NodeNumber;
      else
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.NodeNumber).Value = 0;
     
      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterTypeUid).SetAsNull == false)
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterTypeUid).Value = Entity.ClusterTypeUid;
      else
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterTypeUid).Value = Guid.Empty;
     
      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterTypeCode).SetAsNull == false)
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterTypeCode).Value = Entity.ClusterTypeCode;
      else
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterTypeCode).Value = string.Empty;
     
      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyPanelModelUid).SetAsNull == false)
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyPanelModelUid).Value = Entity.GalaxyPanelModelUid;
      else
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyPanelModelUid).Value = Guid.Empty;
     
      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyPanelTypeCode).SetAsNull == false)
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyPanelTypeCode).Value = Entity.GalaxyPanelTypeCode;
      else
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyPanelTypeCode).Value = string.Empty;
     
      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardTypeUid).SetAsNull == false)
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardTypeUid).Value = Entity.InterfaceBoardTypeUid;
      else
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardTypeUid).Value = Guid.Empty;
     
      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardTypeCode).SetAsNull == false)
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardTypeCode).Value = Entity.InterfaceBoardTypeCode;
      else
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardTypeCode).Value = 0;
     
      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardModel).SetAsNull == false)
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardModel).Value = Entity.InterfaceBoardModel;
      else
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardModel).Value = string.Empty;
     
      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardSectionModeUid).SetAsNull == false)
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardSectionModeUid).Value = Entity.InterfaceBoardSectionModeUid;
      else
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardSectionModeUid).Value = Guid.Empty;
     
      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardSectionModeCode).SetAsNull == false)
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardSectionModeCode).Value = Entity.InterfaceBoardSectionModeCode;
      else
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardSectionModeCode).Value = 0;
     
      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyHardwareModuleTypeUid).SetAsNull == false)
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyHardwareModuleTypeUid).Value = Entity.GalaxyHardwareModuleTypeUid;
      else
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyHardwareModuleTypeUid).Value = Guid.Empty;
     
      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ModuleTypeCode).SetAsNull == false)
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ModuleTypeCode).Value = Entity.ModuleTypeCode;
      else
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ModuleTypeCode).Value = 0;
     
      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterUid).SetAsNull == false)
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterUid).Value = Entity.ClusterUid;
      else
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterUid).Value = Guid.Empty;
     
      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyPanelUid).SetAsNull == false)
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyPanelUid).Value = Entity.GalaxyPanelUid;
      else
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyPanelUid).Value = Guid.Empty;
     
      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyInterfaceBoardUid).SetAsNull == false)
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyInterfaceBoardUid).Value = Entity.GalaxyInterfaceBoardUid;
      else
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyInterfaceBoardUid).Value = Guid.Empty;
     
      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionUid).SetAsNull == false)
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionUid).Value = Entity.GalaxyInterfaceBoardSectionUid;
      else
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionUid).Value = Guid.Empty;
     
      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyHardwareModuleUid).SetAsNull == false)
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyHardwareModuleUid).Value = Entity.GalaxyHardwareModuleUid;
      else
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyHardwareModuleUid).Value = Guid.Empty;
     
      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionNodeUid).SetAsNull == false)
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionNodeUid).Value = Entity.GalaxyInterfaceBoardSectionNodeUid;
      else
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionNodeUid).Value = Guid.Empty;
     
      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.IsNodeActive).SetAsNull == false)
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.IsNodeActive).Value = Entity.IsNodeActive;
      else
        AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.IsNodeActive).Value = false;
     
    }
    #endregion

    #region OutputParametersToEntityData Method
    /// <summary>
    /// Moves the output parameters from the Parameters collection into the Entity class.
    /// </summary>
    protected override void OutputParametersToEntityData()
    {
      if (AllParameters.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ParameterNames.RETURNVALUE).IsValueNull == false)
        Entity.RETURNVALUE = AllParameters.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ParameterNames.RETURNVALUE).GetAsInteger();
      else
        Entity.RETURNVALUE = 0;
    }
    #endregion
    
    #region ColumnCollectionToEntityData Method
    /// <summary>
    /// Moves the data from the Columns collection into the Entity class.
    /// </summary>
    protected override void ColumnCollectionToEntityData()
    {
      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.OutputDeviceUid).IsNull == false)
        Entity.OutputDeviceUid = AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.OutputDeviceUid).GetAsGuid();
      else
        Entity.OutputDeviceUid = Guid.Empty;

      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.OutputName).IsNull == false)
        Entity.OutputName = AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.OutputName).GetAsString();
      else
        Entity.OutputName = string.Empty;

      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.EntityId).IsNull == false)
        Entity.EntityId = AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.EntityId).GetAsGuid();
      else
        Entity.EntityId = Guid.Empty;

      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyOutputModeCode).IsNull == false)
        Entity.GalaxyOutputModeCode = AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyOutputModeCode).GetAsShort();
      else
        Entity.GalaxyOutputModeCode = 0;

      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.RegionUid).IsNull == false)
        Entity.RegionUid = AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.RegionUid).GetAsGuid();
      else
        Entity.RegionUid = Guid.Empty;

      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.SiteName).IsNull == false)
        Entity.SiteName = AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.SiteName).GetAsString();
      else
        Entity.SiteName = string.Empty;

      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterGroupId).IsNull == false)
        Entity.ClusterGroupId = AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterGroupId).GetAsInteger();
      else
        Entity.ClusterGroupId = 0;

      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterNumber).IsNull == false)
        Entity.ClusterNumber = AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterNumber).GetAsInteger();
      else
        Entity.ClusterNumber = 0;

      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.PanelNumber).IsNull == false)
        Entity.PanelNumber = AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.PanelNumber).GetAsInteger();
      else
        Entity.PanelNumber = 0;

      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.BoardNumber).IsNull == false)
        Entity.BoardNumber = AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.BoardNumber).GetAsShort();
      else
        Entity.BoardNumber = 0;

      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.SectionNumber).IsNull == false)
        Entity.SectionNumber = AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.SectionNumber).GetAsShort();
      else
        Entity.SectionNumber = 0;

      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ModuleNumber).IsNull == false)
        Entity.ModuleNumber = AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ModuleNumber).GetAsShort();
      else
        Entity.ModuleNumber = 0;

      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.NodeNumber).IsNull == false)
        Entity.NodeNumber = AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.NodeNumber).GetAsShort();
      else
        Entity.NodeNumber = 0;

      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterTypeUid).IsNull == false)
        Entity.ClusterTypeUid = AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterTypeUid).GetAsGuid();
      else
        Entity.ClusterTypeUid = Guid.Empty;

      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterTypeCode).IsNull == false)
        Entity.ClusterTypeCode = AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterTypeCode).GetAsString();
      else
        Entity.ClusterTypeCode = string.Empty;

      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyPanelModelUid).IsNull == false)
        Entity.GalaxyPanelModelUid = AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyPanelModelUid).GetAsGuid();
      else
        Entity.GalaxyPanelModelUid = Guid.Empty;

      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyPanelTypeCode).IsNull == false)
        Entity.GalaxyPanelTypeCode = AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyPanelTypeCode).GetAsString();
      else
        Entity.GalaxyPanelTypeCode = string.Empty;

      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardTypeUid).IsNull == false)
        Entity.InterfaceBoardTypeUid = AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardTypeUid).GetAsGuid();
      else
        Entity.InterfaceBoardTypeUid = Guid.Empty;

      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardTypeCode).IsNull == false)
        Entity.InterfaceBoardTypeCode = AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardTypeCode).GetAsShort();
      else
        Entity.InterfaceBoardTypeCode = 0;

      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardModel).IsNull == false)
        Entity.InterfaceBoardModel = AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardModel).GetAsString();
      else
        Entity.InterfaceBoardModel = string.Empty;

      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardSectionModeUid).IsNull == false)
        Entity.InterfaceBoardSectionModeUid = AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardSectionModeUid).GetAsGuid();
      else
        Entity.InterfaceBoardSectionModeUid = Guid.Empty;

      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardSectionModeCode).IsNull == false)
        Entity.InterfaceBoardSectionModeCode = AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardSectionModeCode).GetAsShort();
      else
        Entity.InterfaceBoardSectionModeCode = 0;

      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyHardwareModuleTypeUid).IsNull == false)
        Entity.GalaxyHardwareModuleTypeUid = AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyHardwareModuleTypeUid).GetAsGuid();
      else
        Entity.GalaxyHardwareModuleTypeUid = Guid.Empty;

      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ModuleTypeCode).IsNull == false)
        Entity.ModuleTypeCode = AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ModuleTypeCode).GetAsShort();
      else
        Entity.ModuleTypeCode = 0;

      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterUid).IsNull == false)
        Entity.ClusterUid = AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterUid).GetAsGuid();
      else
        Entity.ClusterUid = Guid.Empty;

      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyPanelUid).IsNull == false)
        Entity.GalaxyPanelUid = AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyPanelUid).GetAsGuid();
      else
        Entity.GalaxyPanelUid = Guid.Empty;

      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyInterfaceBoardUid).IsNull == false)
        Entity.GalaxyInterfaceBoardUid = AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyInterfaceBoardUid).GetAsGuid();
      else
        Entity.GalaxyInterfaceBoardUid = Guid.Empty;

      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionUid).IsNull == false)
        Entity.GalaxyInterfaceBoardSectionUid = AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionUid).GetAsGuid();
      else
        Entity.GalaxyInterfaceBoardSectionUid = Guid.Empty;

      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyHardwareModuleUid).IsNull == false)
        Entity.GalaxyHardwareModuleUid = AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyHardwareModuleUid).GetAsGuid();
      else
        Entity.GalaxyHardwareModuleUid = Guid.Empty;

      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionNodeUid).IsNull == false)
        Entity.GalaxyInterfaceBoardSectionNodeUid = AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionNodeUid).GetAsGuid();
      else
        Entity.GalaxyInterfaceBoardSectionNodeUid = Guid.Empty;

      if (AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.IsNodeActive).IsNull == false)
        Entity.IsNodeActive = AllColumns.GetByName(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.IsNodeActive).GetAsBool();
      else
        Entity.IsNodeActive = false;

    }
    #endregion

    #region CreateEntityFromDataRow Method
    /// <summary>
    /// Creates an Entity object from a DataRow object.
    /// </summary>
    /// <param name="dr">DataRow object with all fields from the table in it.</param>
    /// <returns>OutputDevice_GetHardwareInformationPDSA</returns>
    public OutputDevice_GetHardwareInformationPDSA CreateEntityFromDataRow(DataRow dr)
    {
      OutputDevice_GetHardwareInformationPDSA entity = new OutputDevice_GetHardwareInformationPDSA();

      if (dr.Table.Columns.Contains(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.OutputDeviceUid))
      {
        if (dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.OutputDeviceUid] != DBNull.Value)
          entity.OutputDeviceUid = PDSAProperty.ConvertToGuid(dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.OutputDeviceUid]);
      }
      if (dr.Table.Columns.Contains(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.OutputName))
      {
        if (dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.OutputName] != DBNull.Value)
          entity.OutputName = PDSAString.ConvertToStringTrim(dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.OutputName]);
      }
      if (dr.Table.Columns.Contains(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.EntityId))
      {
        if (dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.EntityId] != DBNull.Value)
          entity.EntityId = PDSAProperty.ConvertToGuid(dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.EntityId]);
      }
      if (dr.Table.Columns.Contains(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyOutputModeCode))
      {
        if (dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyOutputModeCode] != DBNull.Value)
          entity.GalaxyOutputModeCode = Convert.ToInt16(dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyOutputModeCode]);
      }
      if (dr.Table.Columns.Contains(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.RegionUid))
      {
        if (dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.RegionUid] != DBNull.Value)
          entity.RegionUid = PDSAProperty.ConvertToGuid(dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.RegionUid]);
      }
      if (dr.Table.Columns.Contains(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.SiteName))
      {
        if (dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.SiteName] != DBNull.Value)
          entity.SiteName = PDSAString.ConvertToStringTrim(dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.SiteName]);
      }
      if (dr.Table.Columns.Contains(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterGroupId))
      {
        if (dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterGroupId] != DBNull.Value)
          entity.ClusterGroupId = Convert.ToInt32(dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterGroupId]);
      }
      if (dr.Table.Columns.Contains(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterNumber))
      {
        if (dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterNumber] != DBNull.Value)
          entity.ClusterNumber = Convert.ToInt32(dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterNumber]);
      }
      if (dr.Table.Columns.Contains(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.PanelNumber))
      {
        if (dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.PanelNumber] != DBNull.Value)
          entity.PanelNumber = Convert.ToInt32(dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.PanelNumber]);
      }
      if (dr.Table.Columns.Contains(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.BoardNumber))
      {
        if (dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.BoardNumber] != DBNull.Value)
          entity.BoardNumber = Convert.ToInt16(dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.BoardNumber]);
      }
      if (dr.Table.Columns.Contains(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.SectionNumber))
      {
        if (dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.SectionNumber] != DBNull.Value)
          entity.SectionNumber = Convert.ToInt16(dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.SectionNumber]);
      }
      if (dr.Table.Columns.Contains(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ModuleNumber))
      {
        if (dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ModuleNumber] != DBNull.Value)
          entity.ModuleNumber = Convert.ToInt16(dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ModuleNumber]);
      }
      if (dr.Table.Columns.Contains(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.NodeNumber))
      {
        if (dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.NodeNumber] != DBNull.Value)
          entity.NodeNumber = Convert.ToInt16(dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.NodeNumber]);
      }
      if (dr.Table.Columns.Contains(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterTypeUid))
      {
        if (dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterTypeUid] != DBNull.Value)
          entity.ClusterTypeUid = PDSAProperty.ConvertToGuid(dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterTypeUid]);
      }
      if (dr.Table.Columns.Contains(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterTypeCode))
      {
        if (dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterTypeCode] != DBNull.Value)
          entity.ClusterTypeCode = PDSAString.ConvertToStringTrim(dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterTypeCode]);
      }
      if (dr.Table.Columns.Contains(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyPanelModelUid))
      {
        if (dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyPanelModelUid] != DBNull.Value)
          entity.GalaxyPanelModelUid = PDSAProperty.ConvertToGuid(dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyPanelModelUid]);
      }
      if (dr.Table.Columns.Contains(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyPanelTypeCode))
      {
        if (dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyPanelTypeCode] != DBNull.Value)
          entity.GalaxyPanelTypeCode = PDSAString.ConvertToStringTrim(dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyPanelTypeCode]);
      }
      if (dr.Table.Columns.Contains(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardTypeUid))
      {
        if (dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardTypeUid] != DBNull.Value)
          entity.InterfaceBoardTypeUid = PDSAProperty.ConvertToGuid(dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardTypeUid]);
      }
      if (dr.Table.Columns.Contains(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardTypeCode))
      {
        if (dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardTypeCode] != DBNull.Value)
          entity.InterfaceBoardTypeCode = Convert.ToInt16(dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardTypeCode]);
      }
      if (dr.Table.Columns.Contains(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardModel))
      {
        if (dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardModel] != DBNull.Value)
          entity.InterfaceBoardModel = PDSAString.ConvertToStringTrim(dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardModel]);
      }
      if (dr.Table.Columns.Contains(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardSectionModeUid))
      {
        if (dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardSectionModeUid] != DBNull.Value)
          entity.InterfaceBoardSectionModeUid = PDSAProperty.ConvertToGuid(dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardSectionModeUid]);
      }
      if (dr.Table.Columns.Contains(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardSectionModeCode))
      {
        if (dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardSectionModeCode] != DBNull.Value)
          entity.InterfaceBoardSectionModeCode = Convert.ToInt16(dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.InterfaceBoardSectionModeCode]);
      }
      if (dr.Table.Columns.Contains(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyHardwareModuleTypeUid))
      {
        if (dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyHardwareModuleTypeUid] != DBNull.Value)
          entity.GalaxyHardwareModuleTypeUid = PDSAProperty.ConvertToGuid(dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyHardwareModuleTypeUid]);
      }
      if (dr.Table.Columns.Contains(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ModuleTypeCode))
      {
        if (dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ModuleTypeCode] != DBNull.Value)
          entity.ModuleTypeCode = Convert.ToInt16(dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ModuleTypeCode]);
      }
      if (dr.Table.Columns.Contains(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterUid))
      {
        if (dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterUid] != DBNull.Value)
          entity.ClusterUid = PDSAProperty.ConvertToGuid(dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.ClusterUid]);
      }
      if (dr.Table.Columns.Contains(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyPanelUid))
      {
        if (dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyPanelUid] != DBNull.Value)
          entity.GalaxyPanelUid = PDSAProperty.ConvertToGuid(dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyPanelUid]);
      }
      if (dr.Table.Columns.Contains(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyInterfaceBoardUid))
      {
        if (dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyInterfaceBoardUid] != DBNull.Value)
          entity.GalaxyInterfaceBoardUid = PDSAProperty.ConvertToGuid(dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyInterfaceBoardUid]);
      }
      if (dr.Table.Columns.Contains(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionUid))
      {
        if (dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionUid] != DBNull.Value)
          entity.GalaxyInterfaceBoardSectionUid = PDSAProperty.ConvertToGuid(dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionUid]);
      }
      if (dr.Table.Columns.Contains(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyHardwareModuleUid))
      {
        if (dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyHardwareModuleUid] != DBNull.Value)
          entity.GalaxyHardwareModuleUid = PDSAProperty.ConvertToGuid(dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyHardwareModuleUid]);
      }
      if (dr.Table.Columns.Contains(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionNodeUid))
      {
        if (dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionNodeUid] != DBNull.Value)
          entity.GalaxyInterfaceBoardSectionNodeUid = PDSAProperty.ConvertToGuid(dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.GalaxyInterfaceBoardSectionNodeUid]);
      }
      if (dr.Table.Columns.Contains(OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.IsNodeActive))
      {
        if (dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.IsNodeActive] != DBNull.Value)
          entity.IsNodeActive = Convert.ToBoolean(dr[OutputDevice_GetHardwareInformationPDSAValidator.ColumnNames.IsNodeActive]);
      }
      entity.IsDirty = false;

      return entity;
    }
    #endregion

    #region ParameterNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the OutputDevice_GetHardwareInformationPDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ParameterNames
    {
    /// <summary>
    /// Returns '@OutputDeviceUid'
    /// </summary>
    public static string OutputDeviceUid = "@OutputDeviceUid";
    /// <summary>
    /// Returns '@RETURN_VALUE'
    /// </summary>
    public static string RETURNVALUE = "@RETURN_VALUE";
    }
    #endregion
  }
}
