using System;
using System.Data;
using System.Text;

using PDSA.Common;
using PDSA.DataLayer;
using PDSA.DataLayer.DataClasses;
using PDSA.Validation;

using GalaxySMS.EntityLayer;
using GalaxySMS.ValidationLayer;

namespace GalaxySMS.DataLayer
{
    /// <summary>
    /// This class calls the stored procedure TimeSchedule15MinuteFormat_GetPanelLoadDataPDSA
    /// This class is generated by the Haystack Code Generator for .NET.
    /// You should NOT modify this class as it is intended to be re-generated.
    /// </summary>
    public class TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAData : PDSAStoredProcReadOnly
    {
        #region Constructors
        /// <summary>
        /// Constructor for the TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAData class
        /// </summary>
        public TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAData() : base()
        {
            Entity = new TimeSchedule15MinuteFormat_GetPanelLoadDataPDSA();
            ValidatorObject = new TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator(Entity);

            Init();
        }

        /// <summary>
        /// Constructor for the TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAData class
        /// </summary>
        /// <param name="entity">An instance of a TimeSchedule15MinuteFormat_GetPanelLoadDataPDSA</param>
        public TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAData(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSA entity) : base()
        {
            Entity = entity;
            ValidatorObject = new TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator(Entity);

            Init();
        }

        /// <summary>
        /// Constructor for the TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAData class
        /// </summary>
        /// <param name="dataProvider">An instance of a PDSADataProvider</param>
        /// <param name="entity">An instance of a TimeSchedule15MinuteFormat_GetPanelLoadDataPDSA</param>
        public TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAData(PDSADataProvider dataProvider,
          TimeSchedule15MinuteFormat_GetPanelLoadDataPDSA entity)
          : base(dataProvider)
        {
            Entity = entity;
            ValidatorObject = new TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator(Entity);

            Init();
        }

        /// <summary>
        /// Constructor for the TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAData class
        /// </summary>
        /// <param name="dataProvider">An instance of a PDSADataProvider</param>
        /// <param name="entity">An instance of a TimeSchedule15MinuteFormat_GetPanelLoadDataPDSA</param>
        /// <param name="validator">An instance of a TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator</param>
        public TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAData(PDSADataProvider dataProvider,
          TimeSchedule15MinuteFormat_GetPanelLoadDataPDSA entity, TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator validator)
          : base(dataProvider)
        {
            Entity = entity;
            ValidatorObject = validator;

            Init();
        }
        #endregion

        #region Public Property
        /// <summary>
        /// Get/Set the Entity class that will be used to get and set properties/fields for this data class.
        /// </summary>
        public TimeSchedule15MinuteFormat_GetPanelLoadDataPDSA Entity { get; set; }
        #endregion

        #region Init Method
        /// <summary>
        /// Initializes this class to a valid start state.
        /// </summary>
        protected override void Init()
        {
            ClassName = "TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAData";
            StoredProcName = "TimeSchedule15MinuteFormat_GetPanelLoadData";
            SchemaName = "GCS";

            // Create Parameters
            InitParameters();

            // Create Data Columns
            InitDataColumns();
        }
        #endregion

        #region InitParameters Method
        /// <summary>
        /// Creates all the parameters for the stored procedure.
        /// </summary>
        protected override void InitParameters()
        {
            PDSADataParameter param;

            // Clear all parameters each time
            AllParameters.Clear();

            // Create each parameter object and add to Parameters Collection
            param = new PDSADataParameter();
            param.ParameterName = TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ParameterNames.TimeScheduleUid;
            param.DBType = DbType.Guid;
            param.ParamDirection = ParameterDirection.Input;
            param.IsRefCursor = false;
            AllParameters.Add(param);

            param = new PDSADataParameter();
            param.ParameterName = TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ParameterNames.ClusterUid;
            param.DBType = DbType.Guid;
            param.ParamDirection = ParameterDirection.Input;
            param.IsRefCursor = false;
            AllParameters.Add(param);

            param = new PDSADataParameter();
            param.ParameterName = TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ParameterNames.RETURNVALUE;
            param.DBType = DbType.Int32;
            param.ParamDirection = ParameterDirection.ReturnValue;
            param.IsRefCursor = false;
            AllParameters.Add(param);


            AddReturnValueParameterToCollection();
        }
        #endregion

        #region InitDataColumns Method
        /// <summary>
        /// Initializes the Data Columns Collection for each field returned from the stored procedure.
        /// </summary>
        protected override void InitDataColumns()
        {
            PDSADataColumn dc;

            // Create each data column
            dc = PDSADataColumn.CreateDataColumn(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.TimeScheduleUid, GetResourceMessage("GCS_TimeSchedule15MinuteFormat_GetPanelLoadDataPDSA_TimeScheduleUid_Header", "Time Schedule Uid"), false, typeof(Guid), DbType.Guid);
            AllColumns.Add(dc);
            dc = PDSADataColumn.CreateDataColumn(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ScheduleName, GetResourceMessage("GCS_TimeSchedule15MinuteFormat_GetPanelLoadDataPDSA_ScheduleName_Header", "Schedule Name"), false, typeof(string), DbType.String);
            AllColumns.Add(dc);
            dc = PDSADataColumn.CreateDataColumn(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.DayTypeName, GetResourceMessage("GCS_TimeSchedule15MinuteFormat_GetPanelLoadDataPDSA_DayTypeName_Header", "Day Type Name"), false, typeof(string), DbType.String);
            AllColumns.Add(dc);
            dc = PDSADataColumn.CreateDataColumn(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.DayTypeCode, GetResourceMessage("GCS_TimeSchedule15MinuteFormat_GetPanelLoadDataPDSA_DayTypeCode_Header", "Day Type Code"), false, typeof(short), DbType.Int16);
            AllColumns.Add(dc);
            dc = PDSADataColumn.CreateDataColumn(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.PanelScheduleNumber, GetResourceMessage("GCS_TimeSchedule15MinuteFormat_GetPanelLoadDataPDSA_PanelScheduleNumber_Header", "Panel Schedule Number"), false, typeof(int), DbType.Int32);
            AllColumns.Add(dc);
            dc = PDSADataColumn.CreateDataColumn(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.FifteenMinuteFormatUsesHolidays, GetResourceMessage("GCS_TimeSchedule15MinuteFormat_GetPanelLoadDataPDSA_FifteenMinuteFormatUsesHolidays_Header", "Fifteen Minute Format Uses Holidays"), false, typeof(bool?), DbType.Boolean);
            AllColumns.Add(dc);
            dc = PDSADataColumn.CreateDataColumn(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.StartTime, GetResourceMessage("GCS_TimeSchedule15MinuteFormat_GetPanelLoadDataPDSA_StartTime_Header", "Start Time"), false, typeof(DateTimeOffset), DbType.Time);
            AllColumns.Add(dc);
            dc = PDSADataColumn.CreateDataColumn(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.EndTime, GetResourceMessage("GCS_TimeSchedule15MinuteFormat_GetPanelLoadDataPDSA_EndTime_Header", "End Time"), false, typeof(DateTimeOffset), DbType.Time);
            AllColumns.Add(dc);
            dc = PDSADataColumn.CreateDataColumn(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.EntityName, GetResourceMessage("GCS_TimeSchedule15MinuteFormat_GetPanelLoadDataPDSA_EntityName_Header", "Entity Name"), false, typeof(string), DbType.String);
            AllColumns.Add(dc);
            dc = PDSADataColumn.CreateDataColumn(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.EntityId, GetResourceMessage("GCS_TimeSchedule15MinuteFormat_GetPanelLoadDataPDSA_EntityId_Header", "Entity Id"), false, typeof(Guid), DbType.Guid);
            AllColumns.Add(dc);
            dc = PDSADataColumn.CreateDataColumn(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ClusterUid, GetResourceMessage("GCS_TimeSchedule15MinuteFormat_GetPanelLoadDataPDSA_ClusterUid_Header", "Cluster Uid"), false, typeof(Guid), DbType.Guid);
            AllColumns.Add(dc);
            dc = PDSADataColumn.CreateDataColumn(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ClusterGroupId, GetResourceMessage("GCS_TimeSchedule15MinuteFormat_GetPanelLoadDataPDSA_AccountCode_Header", "Account Code"), false, typeof(string), DbType.String);
            AllColumns.Add(dc);
            dc = PDSADataColumn.CreateDataColumn(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ClusterNumber, GetResourceMessage("GCS_TimeSchedule15MinuteFormat_GetPanelLoadDataPDSA_ClusterNumber_Header", "Cluster Number"), false, typeof(int), DbType.Int32);
            AllColumns.Add(dc);
            dc = PDSADataColumn.CreateDataColumn(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ClusterName, GetResourceMessage("GCS_TimeSchedule15MinuteFormat_GetPanelLoadDataPDSA_ClusterName_Header", "Cluster Name"), false, typeof(string), DbType.String);
            AllColumns.Add(dc);
            dc = PDSADataColumn.CreateDataColumn(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ScheduleTypeCode, GetResourceMessage("GCS_TimeSchedule15MinuteFormat_GetPanelLoadDataPDSA_ScheduleTypeCode_Header", "Schedule Type Code"), false, typeof(short), DbType.Int16);
            AllColumns.Add(dc);
            dc = PDSADataColumn.CreateDataColumn(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ScheduleTypeDisplay, GetResourceMessage("GCS_TimeSchedule15MinuteFormat_GetPanelLoadDataPDSA_ScheduleTypeDisplay_Header", "Schedule Type Display"), false, typeof(string), DbType.String);
            AllColumns.Add(dc);
        }
        #endregion

        #region EntityDataToParameterCollection Method
        /// <summary>
        /// Moves the data from the Entity class into the Parameters collection
        /// </summary>
        protected override void EntityDataToParameterCollection()
        {
            if (AllParameters.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ParameterNames.TimeScheduleUid).SetAsNull == false)
                AllParameters.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ParameterNames.TimeScheduleUid).Value = Entity.TimeScheduleUid;
            else
                AllParameters.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ParameterNames.TimeScheduleUid).Value = System.Data.SqlTypes.SqlGuid.Null;
            if (AllParameters.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ParameterNames.ClusterUid).SetAsNull == false)
                AllParameters.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ParameterNames.ClusterUid).Value = Entity.ClusterUid;
            else
                AllParameters.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ParameterNames.ClusterUid).Value = System.Data.SqlTypes.SqlGuid.Null;
        }
        #endregion

        #region EntityDataToColumnCollection Method
        /// <summary>
        /// Moves the data from the Entity class into the Columns collection
        /// </summary>
        protected override void EntityDataToColumnCollection()
        {
            if (AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.TimeScheduleUid).SetAsNull == false)
                AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.TimeScheduleUid).Value = Entity.TimeScheduleUid;
            else
                AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.TimeScheduleUid).Value = Guid.Empty;

            if (AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ScheduleName).SetAsNull == false)
                AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ScheduleName).Value = Entity.ScheduleName;
            else
                AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ScheduleName).Value = string.Empty;

            if (AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.DayTypeName).SetAsNull == false)
                AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.DayTypeName).Value = Entity.DayTypeName;
            else
                AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.DayTypeName).Value = string.Empty;

            if (AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.DayTypeCode).SetAsNull == false)
                AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.DayTypeCode).Value = Entity.DayTypeCode;
            else
                AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.DayTypeCode).Value = 0;

            if (AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.PanelScheduleNumber).SetAsNull == false)
                AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.PanelScheduleNumber).Value = Entity.PanelScheduleNumber;
            else
                AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.PanelScheduleNumber).Value = 0;

            if (AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.FifteenMinuteFormatUsesHolidays).SetAsNull == false)
                AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.FifteenMinuteFormatUsesHolidays).Value = Entity.FifteenMinuteFormatUsesHolidays;
            else
                AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.FifteenMinuteFormatUsesHolidays).Value = false;

            if (AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.StartTime).SetAsNull == false)
                AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.StartTime).Value = Entity.StartTime;
            else
                AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.StartTime).Value = DateTimeOffset.Now;

            if (AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.EndTime).SetAsNull == false)
                AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.EndTime).Value = Entity.EndTime;
            else
                AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.EndTime).Value = DateTimeOffset.Now;

            if (AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.EntityName).SetAsNull == false)
                AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.EntityName).Value = Entity.EntityName;
            else
                AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.EntityName).Value = string.Empty;

            if (AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.EntityId).SetAsNull == false)
                AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.EntityId).Value = Entity.EntityId;
            else
                AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.EntityId).Value = Guid.Empty;

            if (AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ClusterUid).SetAsNull == false)
                AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ClusterUid).Value = Entity.ClusterUid;
            else
                AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ClusterUid).Value = Guid.Empty;

            if (AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ClusterGroupId).SetAsNull == false)
                AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ClusterGroupId).Value = Entity.ClusterGroupId;
            else
                AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ClusterGroupId).Value = string.Empty;

            if (AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ClusterNumber).SetAsNull == false)
                AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ClusterNumber).Value = Entity.ClusterNumber;
            else
                AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ClusterNumber).Value = 0;

            if (AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ClusterName).SetAsNull == false)
                AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ClusterName).Value = Entity.ClusterName;
            else
                AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ClusterName).Value = string.Empty;

            if (AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ScheduleTypeCode).SetAsNull == false)
                AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ScheduleTypeCode).Value = Entity.ScheduleTypeCode;
            else
                AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ScheduleTypeCode).Value = 0;

            if (AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ScheduleTypeDisplay).SetAsNull == false)
                AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ScheduleTypeDisplay).Value = Entity.ScheduleTypeDisplay;
            else
                AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ScheduleTypeDisplay).Value = string.Empty;

        }
        #endregion

        #region OutputParametersToEntityData Method
        /// <summary>
        /// Moves the output parameters from the Parameters collection into the Entity class.
        /// </summary>
        protected override void OutputParametersToEntityData()
        {
            if (AllParameters.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ParameterNames.RETURNVALUE).IsValueNull == false)
                Entity.RETURNVALUE = AllParameters.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ParameterNames.RETURNVALUE).GetAsInteger();
            else
                Entity.RETURNVALUE = 0;
        }
        #endregion

        #region ColumnCollectionToEntityData Method
        /// <summary>
        /// Moves the data from the Columns collection into the Entity class.
        /// </summary>
        protected override void ColumnCollectionToEntityData()
        {
            if (AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.TimeScheduleUid).IsNull == false)
                Entity.TimeScheduleUid = AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.TimeScheduleUid).GetAsGuid();
            else
                Entity.TimeScheduleUid = Guid.Empty;

            if (AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ScheduleName).IsNull == false)
                Entity.ScheduleName = AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ScheduleName).GetAsString();
            else
                Entity.ScheduleName = string.Empty;

            if (AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.DayTypeName).IsNull == false)
                Entity.DayTypeName = AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.DayTypeName).GetAsString();
            else
                Entity.DayTypeName = string.Empty;

            if (AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.DayTypeCode).IsNull == false)
                Entity.DayTypeCode = AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.DayTypeCode).GetAsShort();
            else
                Entity.DayTypeCode = 0;

            if (AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.PanelScheduleNumber).IsNull == false)
                Entity.PanelScheduleNumber = AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.PanelScheduleNumber).GetAsInteger();
            else
                Entity.PanelScheduleNumber = 0;

            if (AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.FifteenMinuteFormatUsesHolidays).IsNull == false)
                Entity.FifteenMinuteFormatUsesHolidays = AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.FifteenMinuteFormatUsesHolidays).GetValueAsBoolean();
            else
                Entity.FifteenMinuteFormatUsesHolidays = false;

            if (AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.StartTime).IsNull == false)
                Entity.StartTime = AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.StartTime).GetAsTimeSpan();
            else
                Entity.StartTime = TimeSpan.MinValue;

            if (AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.EndTime).IsNull == false)
                Entity.EndTime = AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.EndTime).GetAsTimeSpan();
            else
                Entity.EndTime = TimeSpan.MinValue;

            if (AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.EntityName).IsNull == false)
                Entity.EntityName = AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.EntityName).GetAsString();
            else
                Entity.EntityName = string.Empty;

            if (AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.EntityId).IsNull == false)
                Entity.EntityId = AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.EntityId).GetAsGuid();
            else
                Entity.EntityId = Guid.Empty;

            if (AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ClusterUid).IsNull == false)
                Entity.ClusterUid = AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ClusterUid).GetAsGuid();
            else
                Entity.ClusterUid = Guid.Empty;

            if (AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ClusterGroupId).IsNull == false)
                Entity.ClusterGroupId = AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ClusterGroupId).GetAsInteger();
            else
                Entity.ClusterGroupId = 0;

            if (AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ClusterNumber).IsNull == false)
                Entity.ClusterNumber = AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ClusterNumber).GetAsInteger();
            else
                Entity.ClusterNumber = 0;

            if (AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ClusterName).IsNull == false)
                Entity.ClusterName = AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ClusterName).GetAsString();
            else
                Entity.ClusterName = string.Empty;

            if (AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ScheduleTypeCode).IsNull == false)
                Entity.ScheduleTypeCode = AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ScheduleTypeCode).GetAsShort();
            else
                Entity.ScheduleTypeCode = 0;

            if (AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ScheduleTypeDisplay).IsNull == false)
                Entity.ScheduleTypeDisplay = AllColumns.GetByName(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ScheduleTypeDisplay).GetAsString();
            else
                Entity.ScheduleTypeDisplay = string.Empty;

        }
        #endregion

        #region CreateEntityFromDataRow Method
        /// <summary>
        /// Creates an Entity object from a DataRow object.
        /// </summary>
        /// <param name="dr">DataRow object with all fields from the table in it.</param>
        /// <returns>TimeSchedule15MinuteFormat_GetPanelLoadDataPDSA</returns>
        public TimeSchedule15MinuteFormat_GetPanelLoadDataPDSA CreateEntityFromDataRow(DataRow dr)
        {
            TimeSchedule15MinuteFormat_GetPanelLoadDataPDSA entity = new TimeSchedule15MinuteFormat_GetPanelLoadDataPDSA();

            if (dr.Table.Columns.Contains(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.TimeScheduleUid))
            {
                if (dr[TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.TimeScheduleUid] != DBNull.Value)
                    entity.TimeScheduleUid = PDSAProperty.ConvertToGuid(dr[TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.TimeScheduleUid]);
            }
            if (dr.Table.Columns.Contains(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ScheduleName))
            {
                if (dr[TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ScheduleName] != DBNull.Value)
                    entity.ScheduleName = PDSAString.ConvertToStringTrim(dr[TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ScheduleName]);
            }
            if (dr.Table.Columns.Contains(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.DayTypeName))
            {
                if (dr[TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.DayTypeName] != DBNull.Value)
                    entity.DayTypeName = PDSAString.ConvertToStringTrim(dr[TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.DayTypeName]);
            }
            if (dr.Table.Columns.Contains(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.DayTypeCode))
            {
                if (dr[TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.DayTypeCode] != DBNull.Value)
                    entity.DayTypeCode = Convert.ToInt16(dr[TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.DayTypeCode]);
            }
            if (dr.Table.Columns.Contains(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.PanelScheduleNumber))
            {
                if (dr[TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.PanelScheduleNumber] != DBNull.Value)
                    entity.PanelScheduleNumber = Convert.ToInt32(dr[TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.PanelScheduleNumber]);
            }
            if (dr.Table.Columns.Contains(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.FifteenMinuteFormatUsesHolidays))
            {
                if (dr[TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.FifteenMinuteFormatUsesHolidays] != DBNull.Value)
                    entity.FifteenMinuteFormatUsesHolidays = Convert.ToBoolean(dr[TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.FifteenMinuteFormatUsesHolidays]);
            }
            if (dr.Table.Columns.Contains(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.StartTime))
            {
                if (dr[TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.StartTime] != DBNull.Value)
                {
                    entity.StartTime = (TimeSpan)dr[TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.StartTime];// Convert.ToDateTime(dr[TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.StartTime]);
                }
            }
            if (dr.Table.Columns.Contains(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.EndTime))
            {
                if (dr[TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.EndTime] != DBNull.Value)
                {
                    entity.EndTime = (TimeSpan)dr[TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.EndTime];
                    
                }
            }
            if (dr.Table.Columns.Contains(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.EntityName))
            {
                if (dr[TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.EntityName] != DBNull.Value)
                    entity.EntityName = PDSAString.ConvertToStringTrim(dr[TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.EntityName]);
            }
            if (dr.Table.Columns.Contains(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.EntityId))
            {
                if (dr[TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.EntityId] != DBNull.Value)
                    entity.EntityId = PDSAProperty.ConvertToGuid(dr[TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.EntityId]);
            }
            if (dr.Table.Columns.Contains(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ClusterUid))
            {
                if (dr[TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ClusterUid] != DBNull.Value)
                    entity.ClusterUid = PDSAProperty.ConvertToGuid(dr[TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ClusterUid]);
            }
            if (dr.Table.Columns.Contains(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ClusterGroupId))
            {
                if (dr[TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ClusterGroupId] != DBNull.Value)
                    entity.ClusterGroupId = Convert.ToInt32(dr[TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ClusterGroupId]);
            }
            if (dr.Table.Columns.Contains(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ClusterNumber))
            {
                if (dr[TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ClusterNumber] != DBNull.Value)
                    entity.ClusterNumber = Convert.ToInt32(dr[TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ClusterNumber]);
            }
            if (dr.Table.Columns.Contains(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ClusterName))
            {
                if (dr[TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ClusterName] != DBNull.Value)
                    entity.ClusterName = PDSAString.ConvertToStringTrim(dr[TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ClusterName]);
            }
            if (dr.Table.Columns.Contains(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ScheduleTypeCode))
            {
                if (dr[TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ScheduleTypeCode] != DBNull.Value)
                    entity.ScheduleTypeCode = Convert.ToInt16(dr[TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ScheduleTypeCode]);
            }
            if (dr.Table.Columns.Contains(TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ScheduleTypeDisplay))
            {
                if (dr[TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ScheduleTypeDisplay] != DBNull.Value)
                    entity.ScheduleTypeDisplay = PDSAString.ConvertToStringTrim(dr[TimeSchedule15MinuteFormat_GetPanelLoadDataPDSAValidator.ColumnNames.ScheduleTypeDisplay]);
            }
            entity.IsDirty = false;

            return entity;
        }
        #endregion

        #region ParameterNames Class
        /// <summary>
        /// Contains static string properties that represent the name of each property in the TimeSchedule15MinuteFormat_GetPanelLoadDataPDSA class.
        /// This class is generated by the Haystack Code Generator for .NET.
        /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
        /// </summary>
        public class ParameterNames
        {
            /// <summary>
            /// Returns '@TimeScheduleUid'
            /// </summary>
            public static string TimeScheduleUid = "@TimeScheduleUid";
            /// <summary>
            /// Returns '@ClusterUid'
            /// </summary>
            public static string ClusterUid = "@ClusterUid";
            /// <summary>
            /// Returns '@RETURN_VALUE'
            /// </summary>
            public static string RETURNVALUE = "@RETURN_VALUE";
        }
        #endregion
    }
}
