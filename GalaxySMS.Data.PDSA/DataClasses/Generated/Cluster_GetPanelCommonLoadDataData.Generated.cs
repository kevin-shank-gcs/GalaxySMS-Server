using System;
using System.Data;
using System.Text;

using PDSA.Common;
using PDSA.DataLayer;
using PDSA.DataLayer.DataClasses;
using PDSA.Validation;

using GalaxySMS.EntityLayer;
using GalaxySMS.ValidationLayer;

namespace GalaxySMS.DataLayer
{
  /// <summary>
  /// This class calls the stored procedure Cluster_GetPanelCommonLoadDataPDSA
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public class Cluster_GetPanelCommonLoadDataPDSAData : PDSAStoredProcReadOnly
  {
    #region Constructors
    /// <summary>
    /// Constructor for the Cluster_GetPanelCommonLoadDataPDSAData class
    /// </summary>
    public Cluster_GetPanelCommonLoadDataPDSAData() : base()
    {
      Entity = new Cluster_GetPanelCommonLoadDataPDSA();
      ValidatorObject = new  Cluster_GetPanelCommonLoadDataPDSAValidator(Entity);

      Init();
    }

    /// <summary>
    /// Constructor for the Cluster_GetPanelCommonLoadDataPDSAData class
    /// </summary>
    /// <param name="entity">An instance of a Cluster_GetPanelCommonLoadDataPDSA</param>
    public Cluster_GetPanelCommonLoadDataPDSAData(Cluster_GetPanelCommonLoadDataPDSA entity) : base()
    {
      Entity = entity;
      ValidatorObject = new Cluster_GetPanelCommonLoadDataPDSAValidator(Entity);
            
      Init();
    }
    
    /// <summary>
    /// Constructor for the Cluster_GetPanelCommonLoadDataPDSAData class
    /// </summary>
    /// <param name="dataProvider">An instance of a PDSADataProvider</param>
    /// <param name="entity">An instance of a Cluster_GetPanelCommonLoadDataPDSA</param>
    public Cluster_GetPanelCommonLoadDataPDSAData(PDSADataProvider dataProvider,
      Cluster_GetPanelCommonLoadDataPDSA entity)
      : base(dataProvider)
    {
      Entity = entity;
      ValidatorObject = new  Cluster_GetPanelCommonLoadDataPDSAValidator(Entity);
            
      Init();
    }
    
    /// <summary>
    /// Constructor for the Cluster_GetPanelCommonLoadDataPDSAData class
    /// </summary>
    /// <param name="dataProvider">An instance of a PDSADataProvider</param>
    /// <param name="entity">An instance of a Cluster_GetPanelCommonLoadDataPDSA</param>
    /// <param name="validator">An instance of a Cluster_GetPanelCommonLoadDataPDSAValidator</param>
    public Cluster_GetPanelCommonLoadDataPDSAData(PDSADataProvider dataProvider,
      Cluster_GetPanelCommonLoadDataPDSA entity, Cluster_GetPanelCommonLoadDataPDSAValidator validator)
      : base(dataProvider)
    {
      Entity = entity;
      ValidatorObject = validator;

      Init();
    }
    #endregion

    #region Public Property
    /// <summary>
    /// Get/Set the Entity class that will be used to get and set properties/fields for this data class.
    /// </summary>
    public Cluster_GetPanelCommonLoadDataPDSA Entity { get; set; }
    #endregion

    #region Init Method
    /// <summary>
    /// Initializes this class to a valid start state.
    /// </summary>
    protected override void Init()
    {
      ClassName = "Cluster_GetPanelCommonLoadDataPDSAData";
      StoredProcName = "Cluster_GetPanelCommonLoadData";
      SchemaName = "GCS";

      // Create Parameters
      InitParameters();

      // Create Data Columns
      InitDataColumns();
    }
    #endregion

   #region InitParameters Method
    /// <summary>
    /// Creates all the parameters for the stored procedure.
    /// </summary>
    protected override void InitParameters()
    {
      PDSADataParameter param;

      // Clear all parameters each time
      AllParameters.Clear();

      // Create each parameter object and add to Parameters Collection
      param = new PDSADataParameter();
      param.ParameterName = Cluster_GetPanelCommonLoadDataPDSAValidator.ParameterNames.ClusterUid;
      param.DBType = DbType.Guid;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = Cluster_GetPanelCommonLoadDataPDSAValidator.ParameterNames.ClusterGroupId;
      param.DBType = DbType.Int32;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = Cluster_GetPanelCommonLoadDataPDSAValidator.ParameterNames.ClusterNumber;
      param.DBType = DbType.Int32;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = Cluster_GetPanelCommonLoadDataPDSAValidator.ParameterNames.RETURNVALUE;
      param.DBType = DbType.Int32;
      param.ParamDirection = ParameterDirection.ReturnValue;
      param.IsRefCursor = false;
      AllParameters.Add(param);

  
      AddReturnValueParameterToCollection();
    }
    #endregion

    #region InitDataColumns Method
    /// <summary>
    /// Initializes the Data Columns Collection for each field returned from the stored procedure.
    /// </summary>
    protected override void InitDataColumns()
    {
      PDSADataColumn dc;

      // Create each data column
      dc = PDSADataColumn.CreateDataColumn(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterUid, GetResourceMessage("GCS_Cluster_GetPanelCommonLoadDataPDSA_ClusterUid_Header", "Cluster Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterNumber, GetResourceMessage("GCS_Cluster_GetPanelCommonLoadDataPDSA_ClusterNumber_Header", "Cluster Number"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterName, GetResourceMessage("GCS_Cluster_GetPanelCommonLoadDataPDSA_ClusterName_Header", "Cluster Name"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.InsertDate, GetResourceMessage("GCS_Cluster_GetPanelCommonLoadDataPDSA_InsertDate_Header", "Insert Date"), false, typeof(DateTimeOffset), DbType.DateTimeOffset);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.UpdateDate, GetResourceMessage("GCS_Cluster_GetPanelCommonLoadDataPDSA_UpdateDate_Header", "Update Date"), false, typeof(DateTimeOffset), DbType.DateTimeOffset);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterGroupId, GetResourceMessage("GCS_Cluster_GetPanelCommonLoadDataPDSA_ClusterGroupId_Header", "Cluster Group Id"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.IsActive, GetResourceMessage("GCS_Cluster_GetPanelCommonLoadDataPDSA_IsActive_Header", "Is Active"), false, typeof(bool), DbType.Boolean);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AbaStartDigit, GetResourceMessage("GCS_Cluster_GetPanelCommonLoadDataPDSA_AbaStartDigit_Header", "Aba Start Digit"), false, typeof(short), DbType.Int16);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AbaStopDigit, GetResourceMessage("GCS_Cluster_GetPanelCommonLoadDataPDSA_AbaStopDigit_Header", "Aba Stop Digit"), false, typeof(short), DbType.Int16);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AbaFoldOption, GetResourceMessage("GCS_Cluster_GetPanelCommonLoadDataPDSA_AbaFoldOption_Header", "Aba Fold Option"), false, typeof(bool), DbType.Boolean);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AbaClipOption, GetResourceMessage("GCS_Cluster_GetPanelCommonLoadDataPDSA_AbaClipOption_Header", "Aba Clip Option"), false, typeof(bool), DbType.Boolean);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.WiegandStartBit, GetResourceMessage("GCS_Cluster_GetPanelCommonLoadDataPDSA_WiegandStartBit_Header", "Wiegand Start Bit"), false, typeof(short), DbType.Int16);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.WiegandStopBit, GetResourceMessage("GCS_Cluster_GetPanelCommonLoadDataPDSA_WiegandStopBit_Header", "Wiegand Stop Bit"), false, typeof(short), DbType.Int16);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.CardaxStartBit, GetResourceMessage("GCS_Cluster_GetPanelCommonLoadDataPDSA_CardaxStartBit_Header", "Cardax Start Bit"), false, typeof(short), DbType.Int16);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.CardaxStopBit, GetResourceMessage("GCS_Cluster_GetPanelCommonLoadDataPDSA_CardaxStopBit_Header", "Cardax Stop Bit"), false, typeof(short), DbType.Int16);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.LockoutAfterInvalidAttempts, GetResourceMessage("GCS_Cluster_GetPanelCommonLoadDataPDSA_LockoutAfterInvalidAttempts_Header", "Lockout After Invalid Attempts"), false, typeof(short), DbType.Int16);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.LockoutDurationSeconds, GetResourceMessage("GCS_Cluster_GetPanelCommonLoadDataPDSA_LockoutDurationSeconds_Header", "Lockout Duration Seconds"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AccessRuleOverrideTimeout, GetResourceMessage("GCS_Cluster_GetPanelCommonLoadDataPDSA_AccessRuleOverrideTimeout_Header", "Access Rule Override Timeout"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.UnlimitedCredentialTimeout, GetResourceMessage("GCS_Cluster_GetPanelCommonLoadDataPDSA_UnlimitedCredentialTimeout_Header", "Unlimited Credential Timeout"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.TimeZoneId, GetResourceMessage("GCS_Cluster_GetPanelCommonLoadDataPDSA_TimeZoneId_Header", "Time Zone Id"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ActivateCrisisIOGroupNumber, GetResourceMessage("GCS_Cluster_GetPanelCommonLoadDataPDSA_ActivateCrisisIOGroupNumber_Header", "Activate Crisis IO Group Number"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ResetCrisisIOGroupNumber, GetResourceMessage("GCS_Cluster_GetPanelCommonLoadDataPDSA_ResetCrisisIOGroupNumber_Header", "Reset Crisis IO Group Number"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.LockedLED, GetResourceMessage("GCS_Cluster_GetPanelCommonLoadDataPDSA_LockedLED_Header", "Locked LED"), false, typeof(short), DbType.Int16);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.UnlockedLED, GetResourceMessage("GCS_Cluster_GetPanelCommonLoadDataPDSA_UnlockedLED_Header", "Unlocked LED"), false, typeof(short), DbType.Int16);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterTypeCode, GetResourceMessage("GCS_Cluster_GetPanelCommonLoadDataPDSA_ClusterTypeCode_Header", "Cluster Type Code"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.CredentialDataLength, GetResourceMessage("GCS_Cluster_GetPanelCommonLoadDataPDSA_CredentialDataLength_Header", "Credential Data Length"), false, typeof(short), DbType.Int16);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.TimeScheduleTypeCode, GetResourceMessage("GCS_Cluster_GetPanelCommonLoadDataPDSA_TimeScheduleTypeCode_Header", "Time Schedule Type Code"), false, typeof(short), DbType.Int16);
      AllColumns.Add(dc);
    }
    #endregion

    #region EntityDataToParameterCollection Method
    /// <summary>
    /// Moves the data from the Entity class into the Parameters collection
    /// </summary>
    protected override void EntityDataToParameterCollection()
    {
      if (AllParameters.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ParameterNames.ClusterUid).SetAsNull == false)
        AllParameters.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ParameterNames.ClusterUid).Value = Entity.ClusterUid;
      else
        AllParameters.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ParameterNames.ClusterUid).Value = System.Data.SqlTypes.SqlGuid.Null;
      if (AllParameters.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ParameterNames.ClusterGroupId).SetAsNull == false)
        AllParameters.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ParameterNames.ClusterGroupId).Value = Entity.ClusterGroupId;
      else
        AllParameters.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ParameterNames.ClusterGroupId).Value = System.Data.SqlTypes.SqlInt32.Null;
      if (AllParameters.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ParameterNames.ClusterNumber).SetAsNull == false)
        AllParameters.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ParameterNames.ClusterNumber).Value = Entity.ClusterNumber;
      else
        AllParameters.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ParameterNames.ClusterNumber).Value = System.Data.SqlTypes.SqlInt32.Null;
    }
    #endregion

    #region EntityDataToColumnCollection Method
    /// <summary>
    /// Moves the data from the Entity class into the Columns collection
    /// </summary>
    protected override void EntityDataToColumnCollection()
    {
      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterUid).SetAsNull == false)
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterUid).Value = Entity.ClusterUid;
      else
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterUid).Value = Guid.Empty;
     
      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterNumber).SetAsNull == false)
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterNumber).Value = Entity.ClusterNumber;
      else
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterNumber).Value = 0;
     
      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterName).SetAsNull == false)
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterName).Value = Entity.ClusterName;
      else
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterName).Value = string.Empty;
     
      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.InsertDate).SetAsNull == false)
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.InsertDate).Value = Entity.InsertDate;
      else
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.InsertDate).Value = DateTimeOffset.Now;
     
      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.UpdateDate).SetAsNull == false)
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.UpdateDate).Value = Entity.UpdateDate;
      else
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.UpdateDate).Value = DateTimeOffset.Now;
     
      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterGroupId).SetAsNull == false)
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterGroupId).Value = Entity.ClusterGroupId;
      else
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterGroupId).Value = 0;
     
      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.IsActive).SetAsNull == false)
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.IsActive).Value = Entity.IsActive;
      else
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.IsActive).Value = false;
     
      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AbaStartDigit).SetAsNull == false)
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AbaStartDigit).Value = Entity.AbaStartDigit;
      else
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AbaStartDigit).Value = 0;
     
      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AbaStopDigit).SetAsNull == false)
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AbaStopDigit).Value = Entity.AbaStopDigit;
      else
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AbaStopDigit).Value = 0;
     
      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AbaFoldOption).SetAsNull == false)
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AbaFoldOption).Value = Entity.AbaFoldOption;
      else
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AbaFoldOption).Value = false;
     
      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AbaClipOption).SetAsNull == false)
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AbaClipOption).Value = Entity.AbaClipOption;
      else
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AbaClipOption).Value = false;
     
      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.WiegandStartBit).SetAsNull == false)
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.WiegandStartBit).Value = Entity.WiegandStartBit;
      else
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.WiegandStartBit).Value = 0;
     
      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.WiegandStopBit).SetAsNull == false)
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.WiegandStopBit).Value = Entity.WiegandStopBit;
      else
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.WiegandStopBit).Value = 0;
     
      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.CardaxStartBit).SetAsNull == false)
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.CardaxStartBit).Value = Entity.CardaxStartBit;
      else
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.CardaxStartBit).Value = 0;
     
      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.CardaxStopBit).SetAsNull == false)
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.CardaxStopBit).Value = Entity.CardaxStopBit;
      else
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.CardaxStopBit).Value = 0;
     
      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.LockoutAfterInvalidAttempts).SetAsNull == false)
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.LockoutAfterInvalidAttempts).Value = Entity.LockoutAfterInvalidAttempts;
      else
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.LockoutAfterInvalidAttempts).Value = 0;
     
      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.LockoutDurationSeconds).SetAsNull == false)
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.LockoutDurationSeconds).Value = Entity.LockoutDurationSeconds;
      else
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.LockoutDurationSeconds).Value = 0;
     
      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AccessRuleOverrideTimeout).SetAsNull == false)
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AccessRuleOverrideTimeout).Value = Entity.AccessRuleOverrideTimeout;
      else
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AccessRuleOverrideTimeout).Value = 0;
     
      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.UnlimitedCredentialTimeout).SetAsNull == false)
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.UnlimitedCredentialTimeout).Value = Entity.UnlimitedCredentialTimeout;
      else
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.UnlimitedCredentialTimeout).Value = 0;
     
      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.TimeZoneId).SetAsNull == false)
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.TimeZoneId).Value = Entity.TimeZoneId;
      else
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.TimeZoneId).Value = string.Empty;
     
      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ActivateCrisisIOGroupNumber).SetAsNull == false)
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ActivateCrisisIOGroupNumber).Value = Entity.ActivateCrisisIOGroupNumber;
      else
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ActivateCrisisIOGroupNumber).Value = 0;
     
      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ResetCrisisIOGroupNumber).SetAsNull == false)
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ResetCrisisIOGroupNumber).Value = Entity.ResetCrisisIOGroupNumber;
      else
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ResetCrisisIOGroupNumber).Value = 0;
     
      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.LockedLED).SetAsNull == false)
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.LockedLED).Value = Entity.LockedLED;
      else
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.LockedLED).Value = 0;
     
      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.UnlockedLED).SetAsNull == false)
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.UnlockedLED).Value = Entity.UnlockedLED;
      else
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.UnlockedLED).Value = 0;
     
      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterTypeCode).SetAsNull == false)
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterTypeCode).Value = Entity.ClusterTypeCode;
      else
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterTypeCode).Value = string.Empty;
     
      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.CredentialDataLength).SetAsNull == false)
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.CredentialDataLength).Value = Entity.CredentialDataLength;
      else
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.CredentialDataLength).Value = 0;
     
      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.TimeScheduleTypeCode).SetAsNull == false)
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.TimeScheduleTypeCode).Value = Entity.TimeScheduleTypeCode;
      else
        AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.TimeScheduleTypeCode).Value = 0;
     
    }
    #endregion

    #region OutputParametersToEntityData Method
    /// <summary>
    /// Moves the output parameters from the Parameters collection into the Entity class.
    /// </summary>
    protected override void OutputParametersToEntityData()
    {
      if (AllParameters.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ParameterNames.RETURNVALUE).IsValueNull == false)
        Entity.RETURNVALUE = AllParameters.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ParameterNames.RETURNVALUE).GetAsInteger();
      else
        Entity.RETURNVALUE = 0;
    }
    #endregion
    
    #region ColumnCollectionToEntityData Method
    /// <summary>
    /// Moves the data from the Columns collection into the Entity class.
    /// </summary>
    protected override void ColumnCollectionToEntityData()
    {
      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterUid).IsNull == false)
        Entity.ClusterUid = AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterUid).GetAsGuid();
      else
        Entity.ClusterUid = Guid.Empty;

      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterNumber).IsNull == false)
        Entity.ClusterNumber = AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterNumber).GetAsInteger();
      else
        Entity.ClusterNumber = 0;

      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterName).IsNull == false)
        Entity.ClusterName = AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterName).GetAsString();
      else
        Entity.ClusterName = string.Empty;

      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.InsertDate).IsNull == false)
        Entity.InsertDate = AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.InsertDate).GetAsDateTimeOffset();
      else
        Entity.InsertDate = DateTimeOffset.Now;

      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.UpdateDate).IsNull == false)
        Entity.UpdateDate = AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.UpdateDate).GetAsDateTimeOffset();
      else
        Entity.UpdateDate = DateTimeOffset.Now;

      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterGroupId).IsNull == false)
        Entity.ClusterGroupId = AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterGroupId).GetAsInteger();
      else
        Entity.ClusterGroupId = 0;

      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.IsActive).IsNull == false)
        Entity.IsActive = AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.IsActive).GetAsBool();
      else
        Entity.IsActive = false;

      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AbaStartDigit).IsNull == false)
        Entity.AbaStartDigit = AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AbaStartDigit).GetAsShort();
      else
        Entity.AbaStartDigit = 0;

      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AbaStopDigit).IsNull == false)
        Entity.AbaStopDigit = AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AbaStopDigit).GetAsShort();
      else
        Entity.AbaStopDigit = 0;

      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AbaFoldOption).IsNull == false)
        Entity.AbaFoldOption = AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AbaFoldOption).GetAsBool();
      else
        Entity.AbaFoldOption = false;

      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AbaClipOption).IsNull == false)
        Entity.AbaClipOption = AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AbaClipOption).GetAsBool();
      else
        Entity.AbaClipOption = false;

      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.WiegandStartBit).IsNull == false)
        Entity.WiegandStartBit = AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.WiegandStartBit).GetAsShort();
      else
        Entity.WiegandStartBit = 0;

      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.WiegandStopBit).IsNull == false)
        Entity.WiegandStopBit = AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.WiegandStopBit).GetAsShort();
      else
        Entity.WiegandStopBit = 0;

      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.CardaxStartBit).IsNull == false)
        Entity.CardaxStartBit = AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.CardaxStartBit).GetAsShort();
      else
        Entity.CardaxStartBit = 0;

      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.CardaxStopBit).IsNull == false)
        Entity.CardaxStopBit = AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.CardaxStopBit).GetAsShort();
      else
        Entity.CardaxStopBit = 0;

      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.LockoutAfterInvalidAttempts).IsNull == false)
        Entity.LockoutAfterInvalidAttempts = AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.LockoutAfterInvalidAttempts).GetAsShort();
      else
        Entity.LockoutAfterInvalidAttempts = 0;

      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.LockoutDurationSeconds).IsNull == false)
        Entity.LockoutDurationSeconds = AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.LockoutDurationSeconds).GetAsInteger();
      else
        Entity.LockoutDurationSeconds = 0;

      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AccessRuleOverrideTimeout).IsNull == false)
        Entity.AccessRuleOverrideTimeout = AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AccessRuleOverrideTimeout).GetAsInteger();
      else
        Entity.AccessRuleOverrideTimeout = 0;

      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.UnlimitedCredentialTimeout).IsNull == false)
        Entity.UnlimitedCredentialTimeout = AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.UnlimitedCredentialTimeout).GetAsInteger();
      else
        Entity.UnlimitedCredentialTimeout = 0;

      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.TimeZoneId).IsNull == false)
        Entity.TimeZoneId = AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.TimeZoneId).GetAsString();
      else
        Entity.TimeZoneId = string.Empty;

      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ActivateCrisisIOGroupNumber).IsNull == false)
        Entity.ActivateCrisisIOGroupNumber = AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ActivateCrisisIOGroupNumber).GetAsInteger();
      else
        Entity.ActivateCrisisIOGroupNumber = 0;

      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ResetCrisisIOGroupNumber).IsNull == false)
        Entity.ResetCrisisIOGroupNumber = AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ResetCrisisIOGroupNumber).GetAsInteger();
      else
        Entity.ResetCrisisIOGroupNumber = 0;

      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.LockedLED).IsNull == false)
        Entity.LockedLED = AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.LockedLED).GetAsShort();
      else
        Entity.LockedLED = 0;

      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.UnlockedLED).IsNull == false)
        Entity.UnlockedLED = AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.UnlockedLED).GetAsShort();
      else
        Entity.UnlockedLED = 0;

      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterTypeCode).IsNull == false)
        Entity.ClusterTypeCode = AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterTypeCode).GetAsString();
      else
        Entity.ClusterTypeCode = string.Empty;

      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.CredentialDataLength).IsNull == false)
        Entity.CredentialDataLength = AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.CredentialDataLength).GetAsShort();
      else
        Entity.CredentialDataLength = 0;

      if (AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.TimeScheduleTypeCode).IsNull == false)
        Entity.TimeScheduleTypeCode = AllColumns.GetByName(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.TimeScheduleTypeCode).GetAsShort();
      else
        Entity.TimeScheduleTypeCode = 0;

    }
    #endregion

    #region CreateEntityFromDataRow Method
    /// <summary>
    /// Creates an Entity object from a DataRow object.
    /// </summary>
    /// <param name="dr">DataRow object with all fields from the table in it.</param>
    /// <returns>Cluster_GetPanelCommonLoadDataPDSA</returns>
    public Cluster_GetPanelCommonLoadDataPDSA CreateEntityFromDataRow(DataRow dr)
    {
      Cluster_GetPanelCommonLoadDataPDSA entity = new Cluster_GetPanelCommonLoadDataPDSA();

      if (dr.Table.Columns.Contains(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterUid))
      {
        if (dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterUid] != DBNull.Value)
          entity.ClusterUid = PDSAProperty.ConvertToGuid(dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterUid]);
      }
      if (dr.Table.Columns.Contains(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterNumber))
      {
        if (dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterNumber] != DBNull.Value)
          entity.ClusterNumber = Convert.ToInt32(dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterNumber]);
      }
      if (dr.Table.Columns.Contains(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterName))
      {
        if (dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterName] != DBNull.Value)
          entity.ClusterName = PDSAString.ConvertToStringTrim(dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterName]);
      }
      if (dr.Table.Columns.Contains(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.InsertDate))
      {
        if (dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.InsertDate] != DBNull.Value)
          entity.InsertDate = GCS.Core.Common.Extensions.DateTimeExtensions.ToDateTimeOffset(dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.InsertDate]);
      }
      if (dr.Table.Columns.Contains(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.UpdateDate))
      {
        if (dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.UpdateDate] != DBNull.Value)
          entity.UpdateDate = GCS.Core.Common.Extensions.DateTimeExtensions.ToDateTimeOffset(dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.UpdateDate]);
      }
      if (dr.Table.Columns.Contains(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterGroupId))
      {
        if (dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterGroupId] != DBNull.Value)
          entity.ClusterGroupId = Convert.ToInt32(dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterGroupId]);
      }
      if (dr.Table.Columns.Contains(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.IsActive))
      {
        if (dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.IsActive] != DBNull.Value)
          entity.IsActive = Convert.ToBoolean(dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.IsActive]);
      }
      if (dr.Table.Columns.Contains(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AbaStartDigit))
      {
        if (dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AbaStartDigit] != DBNull.Value)
          entity.AbaStartDigit = Convert.ToInt16(dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AbaStartDigit]);
      }
      if (dr.Table.Columns.Contains(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AbaStopDigit))
      {
        if (dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AbaStopDigit] != DBNull.Value)
          entity.AbaStopDigit = Convert.ToInt16(dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AbaStopDigit]);
      }
      if (dr.Table.Columns.Contains(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AbaFoldOption))
      {
        if (dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AbaFoldOption] != DBNull.Value)
          entity.AbaFoldOption = Convert.ToBoolean(dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AbaFoldOption]);
      }
      if (dr.Table.Columns.Contains(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AbaClipOption))
      {
        if (dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AbaClipOption] != DBNull.Value)
          entity.AbaClipOption = Convert.ToBoolean(dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AbaClipOption]);
      }
      if (dr.Table.Columns.Contains(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.WiegandStartBit))
      {
        if (dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.WiegandStartBit] != DBNull.Value)
          entity.WiegandStartBit = Convert.ToInt16(dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.WiegandStartBit]);
      }
      if (dr.Table.Columns.Contains(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.WiegandStopBit))
      {
        if (dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.WiegandStopBit] != DBNull.Value)
          entity.WiegandStopBit = Convert.ToInt16(dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.WiegandStopBit]);
      }
      if (dr.Table.Columns.Contains(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.CardaxStartBit))
      {
        if (dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.CardaxStartBit] != DBNull.Value)
          entity.CardaxStartBit = Convert.ToInt16(dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.CardaxStartBit]);
      }
      if (dr.Table.Columns.Contains(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.CardaxStopBit))
      {
        if (dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.CardaxStopBit] != DBNull.Value)
          entity.CardaxStopBit = Convert.ToInt16(dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.CardaxStopBit]);
      }
      if (dr.Table.Columns.Contains(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.LockoutAfterInvalidAttempts))
      {
        if (dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.LockoutAfterInvalidAttempts] != DBNull.Value)
          entity.LockoutAfterInvalidAttempts = Convert.ToInt16(dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.LockoutAfterInvalidAttempts]);
      }
      if (dr.Table.Columns.Contains(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.LockoutDurationSeconds))
      {
        if (dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.LockoutDurationSeconds] != DBNull.Value)
          entity.LockoutDurationSeconds = Convert.ToInt32(dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.LockoutDurationSeconds]);
      }
      if (dr.Table.Columns.Contains(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AccessRuleOverrideTimeout))
      {
        if (dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AccessRuleOverrideTimeout] != DBNull.Value)
          entity.AccessRuleOverrideTimeout = Convert.ToInt32(dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.AccessRuleOverrideTimeout]);
      }
      if (dr.Table.Columns.Contains(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.UnlimitedCredentialTimeout))
      {
        if (dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.UnlimitedCredentialTimeout] != DBNull.Value)
          entity.UnlimitedCredentialTimeout = Convert.ToInt32(dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.UnlimitedCredentialTimeout]);
      }
      if (dr.Table.Columns.Contains(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.TimeZoneId))
      {
        if (dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.TimeZoneId] != DBNull.Value)
          entity.TimeZoneId = PDSAString.ConvertToStringTrim(dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.TimeZoneId]);
      }
      if (dr.Table.Columns.Contains(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ActivateCrisisIOGroupNumber))
      {
        if (dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ActivateCrisisIOGroupNumber] != DBNull.Value)
          entity.ActivateCrisisIOGroupNumber = Convert.ToInt32(dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ActivateCrisisIOGroupNumber]);
      }
      if (dr.Table.Columns.Contains(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ResetCrisisIOGroupNumber))
      {
        if (dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ResetCrisisIOGroupNumber] != DBNull.Value)
          entity.ResetCrisisIOGroupNumber = Convert.ToInt32(dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ResetCrisisIOGroupNumber]);
      }
      if (dr.Table.Columns.Contains(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.LockedLED))
      {
        if (dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.LockedLED] != DBNull.Value)
          entity.LockedLED = Convert.ToInt16(dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.LockedLED]);
      }
      if (dr.Table.Columns.Contains(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.UnlockedLED))
      {
        if (dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.UnlockedLED] != DBNull.Value)
          entity.UnlockedLED = Convert.ToInt16(dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.UnlockedLED]);
      }
      if (dr.Table.Columns.Contains(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterTypeCode))
      {
        if (dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterTypeCode] != DBNull.Value)
          entity.ClusterTypeCode = PDSAString.ConvertToStringTrim(dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.ClusterTypeCode]);
      }
      if (dr.Table.Columns.Contains(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.CredentialDataLength))
      {
        if (dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.CredentialDataLength] != DBNull.Value)
          entity.CredentialDataLength = Convert.ToInt16(dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.CredentialDataLength]);
      }
      if (dr.Table.Columns.Contains(Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.TimeScheduleTypeCode))
      {
        if (dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.TimeScheduleTypeCode] != DBNull.Value)
          entity.TimeScheduleTypeCode = Convert.ToInt16(dr[Cluster_GetPanelCommonLoadDataPDSAValidator.ColumnNames.TimeScheduleTypeCode]);
      }
      entity.IsDirty = false;

      return entity;
    }
    #endregion

    #region ParameterNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the Cluster_GetPanelCommonLoadDataPDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ParameterNames
    {
    /// <summary>
    /// Returns '@ClusterUid'
    /// </summary>
    public static string ClusterUid = "@ClusterUid";
    /// <summary>
    /// Returns '@ClusterGroupId'
    /// </summary>
    public static string ClusterGroupId = "@ClusterGroupId";
    /// <summary>
    /// Returns '@ClusterNumber'
    /// </summary>
    public static string ClusterNumber = "@ClusterNumber";
    /// <summary>
    /// Returns '@RETURN_VALUE'
    /// </summary>
    public static string RETURNVALUE = "@RETURN_VALUE";
    }
    #endregion
  }
}
