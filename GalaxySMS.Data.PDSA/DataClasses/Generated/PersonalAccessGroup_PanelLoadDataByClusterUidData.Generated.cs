using System;
using System.Data;
using System.Text;

using PDSA.Common;
using PDSA.DataLayer;
using PDSA.DataLayer.DataClasses;
using PDSA.Validation;

using GalaxySMS.EntityLayer;
using GalaxySMS.ValidationLayer;

namespace GalaxySMS.DataLayer
{
  /// <summary>
  /// This class calls the stored procedure PersonalAccessGroup_PanelLoadDataByClusterUidPDSA
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public class PersonalAccessGroup_PanelLoadDataByClusterUidPDSAData : PDSAStoredProcReadOnly
  {
    #region Constructors
    /// <summary>
    /// Constructor for the PersonalAccessGroup_PanelLoadDataByClusterUidPDSAData class
    /// </summary>
    public PersonalAccessGroup_PanelLoadDataByClusterUidPDSAData() : base()
    {
      Entity = new PersonalAccessGroup_PanelLoadDataByClusterUidPDSA();
      ValidatorObject = new  PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator(Entity);

      Init();
    }

    /// <summary>
    /// Constructor for the PersonalAccessGroup_PanelLoadDataByClusterUidPDSAData class
    /// </summary>
    /// <param name="entity">An instance of a PersonalAccessGroup_PanelLoadDataByClusterUidPDSA</param>
    public PersonalAccessGroup_PanelLoadDataByClusterUidPDSAData(PersonalAccessGroup_PanelLoadDataByClusterUidPDSA entity) : base()
    {
      Entity = entity;
      ValidatorObject = new PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator(Entity);
            
      Init();
    }
    
    /// <summary>
    /// Constructor for the PersonalAccessGroup_PanelLoadDataByClusterUidPDSAData class
    /// </summary>
    /// <param name="dataProvider">An instance of a PDSADataProvider</param>
    /// <param name="entity">An instance of a PersonalAccessGroup_PanelLoadDataByClusterUidPDSA</param>
    public PersonalAccessGroup_PanelLoadDataByClusterUidPDSAData(PDSADataProvider dataProvider,
      PersonalAccessGroup_PanelLoadDataByClusterUidPDSA entity)
      : base(dataProvider)
    {
      Entity = entity;
      ValidatorObject = new  PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator(Entity);
            
      Init();
    }
    
    /// <summary>
    /// Constructor for the PersonalAccessGroup_PanelLoadDataByClusterUidPDSAData class
    /// </summary>
    /// <param name="dataProvider">An instance of a PDSADataProvider</param>
    /// <param name="entity">An instance of a PersonalAccessGroup_PanelLoadDataByClusterUidPDSA</param>
    /// <param name="validator">An instance of a PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator</param>
    public PersonalAccessGroup_PanelLoadDataByClusterUidPDSAData(PDSADataProvider dataProvider,
      PersonalAccessGroup_PanelLoadDataByClusterUidPDSA entity, PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator validator)
      : base(dataProvider)
    {
      Entity = entity;
      ValidatorObject = validator;

      Init();
    }
    #endregion

    #region Public Property
    /// <summary>
    /// Get/Set the Entity class that will be used to get and set properties/fields for this data class.
    /// </summary>
    public PersonalAccessGroup_PanelLoadDataByClusterUidPDSA Entity { get; set; }
    #endregion

    #region Init Method
    /// <summary>
    /// Initializes this class to a valid start state.
    /// </summary>
    protected override void Init()
    {
      ClassName = "PersonalAccessGroup_PanelLoadDataByClusterUidPDSAData";
      StoredProcName = "PersonalAccessGroup_PanelLoadDataByClusterUid";
      SchemaName = "GCS";

      // Create Parameters
      InitParameters();

      // Create Data Columns
      InitDataColumns();
    }
    #endregion

   #region InitParameters Method
    /// <summary>
    /// Creates all the parameters for the stored procedure.
    /// </summary>
    protected override void InitParameters()
    {
      PDSADataParameter param;

      // Clear all parameters each time
      AllParameters.Clear();

      // Create each parameter object and add to Parameters Collection
      param = new PDSADataParameter();
      param.ParameterName = PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ParameterNames.ClusterUid;
      param.DBType = DbType.Guid;
      param.ParamDirection = ParameterDirection.Input;
      param.IsRefCursor = false;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ParameterNames.RETURNVALUE;
      param.DBType = DbType.Int32;
      param.ParamDirection = ParameterDirection.ReturnValue;
      param.IsRefCursor = false;
      AllParameters.Add(param);

  
      AddReturnValueParameterToCollection();
    }
    #endregion

    #region InitDataColumns Method
    /// <summary>
    /// Initializes the Data Columns Collection for each field returned from the stored procedure.
    /// </summary>
    protected override void InitDataColumns()
    {
      PDSADataColumn dc;

      // Create each data column
      dc = PDSADataColumn.CreateDataColumn(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.PersonUid, GetResourceMessage("GCS_PersonalAccessGroup_PanelLoadDataByClusterUidPDSA_PersonUid_Header", "Person Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterUid, GetResourceMessage("GCS_PersonalAccessGroup_PanelLoadDataByClusterUidPDSA_ClusterUid_Header", "Cluster Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.GalaxyPanelUid, GetResourceMessage("GCS_PersonalAccessGroup_PanelLoadDataByClusterUidPDSA_GalaxyPanelUid_Header", "Galaxy Panel Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.PersonalAccessGroupNumber, GetResourceMessage("GCS_PersonalAccessGroup_PanelLoadDataByClusterUidPDSA_PersonalAccessGroupNumber_Header", "Personal Access Group Number"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterNumber, GetResourceMessage("GCS_PersonalAccessGroup_PanelLoadDataByClusterUidPDSA_ClusterNumber_Header", "Cluster Number"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterGroupId, GetResourceMessage("GCS_PersonalAccessGroup_PanelLoadDataByClusterUidPDSA_ClusterGroupId_Header", "Cluster Group Id"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.PanelScheduleNumber, GetResourceMessage("GCS_PersonalAccessGroup_PanelLoadDataByClusterUidPDSA_PanelScheduleNumber_Header", "Panel Schedule Number"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.DoorNumber, GetResourceMessage("GCS_PersonalAccessGroup_PanelLoadDataByClusterUidPDSA_DoorNumber_Header", "Door Number"), false, typeof(short), DbType.Int16);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.PanelNumber, GetResourceMessage("GCS_PersonalAccessGroup_PanelLoadDataByClusterUidPDSA_PanelNumber_Header", "Panel Number"), false, typeof(int), DbType.Int32);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.AccessGroupDisplay, GetResourceMessage("GCS_PersonalAccessGroup_PanelLoadDataByClusterUidPDSA_AccessGroupDisplay_Header", "Access Group Display"), false, typeof(string), DbType.String);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.TimeScheduleUid, GetResourceMessage("GCS_PersonalAccessGroup_PanelLoadDataByClusterUidPDSA_TimeScheduleUid_Header", "Time Schedule Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
      dc = PDSADataColumn.CreateDataColumn(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.DefaultTimeScheduleUid, GetResourceMessage("GCS_PersonalAccessGroup_PanelLoadDataByClusterUidPDSA_DefaultTimeScheduleUid_Header", "Default Time Schedule Uid"), false, typeof(Guid), DbType.Guid);
      AllColumns.Add(dc);
    }
    #endregion

    #region EntityDataToParameterCollection Method
    /// <summary>
    /// Moves the data from the Entity class into the Parameters collection
    /// </summary>
    protected override void EntityDataToParameterCollection()
    {
      if (AllParameters.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ParameterNames.ClusterUid).SetAsNull == false)
        AllParameters.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ParameterNames.ClusterUid).Value = Entity.ClusterUid;
      else
        AllParameters.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ParameterNames.ClusterUid).Value = System.Data.SqlTypes.SqlGuid.Null;
    }
    #endregion

    #region EntityDataToColumnCollection Method
    /// <summary>
    /// Moves the data from the Entity class into the Columns collection
    /// </summary>
    protected override void EntityDataToColumnCollection()
    {
      if (AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.PersonUid).SetAsNull == false)
        AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.PersonUid).Value = Entity.PersonUid;
      else
        AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.PersonUid).Value = Guid.Empty;
     
      if (AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterUid).SetAsNull == false)
        AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterUid).Value = Entity.ClusterUid;
      else
        AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterUid).Value = Guid.Empty;
     
      if (AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.GalaxyPanelUid).SetAsNull == false)
        AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.GalaxyPanelUid).Value = Entity.GalaxyPanelUid;
      else
        AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.GalaxyPanelUid).Value = Guid.Empty;
     
      if (AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.PersonalAccessGroupNumber).SetAsNull == false)
        AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.PersonalAccessGroupNumber).Value = Entity.PersonalAccessGroupNumber;
      else
        AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.PersonalAccessGroupNumber).Value = 0;
     
      if (AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterNumber).SetAsNull == false)
        AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterNumber).Value = Entity.ClusterNumber;
      else
        AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterNumber).Value = 0;
     
      if (AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterGroupId).SetAsNull == false)
        AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterGroupId).Value = Entity.ClusterGroupId;
      else
        AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterGroupId).Value = 0;
     
      if (AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.PanelScheduleNumber).SetAsNull == false)
        AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.PanelScheduleNumber).Value = Entity.PanelScheduleNumber;
      else
        AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.PanelScheduleNumber).Value = 0;
     
      if (AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.DoorNumber).SetAsNull == false)
        AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.DoorNumber).Value = Entity.DoorNumber;
      else
        AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.DoorNumber).Value = 0;
     
      if (AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.PanelNumber).SetAsNull == false)
        AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.PanelNumber).Value = Entity.PanelNumber;
      else
        AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.PanelNumber).Value = 0;
     
      if (AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.AccessGroupDisplay).SetAsNull == false)
        AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.AccessGroupDisplay).Value = Entity.AccessGroupDisplay;
      else
        AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.AccessGroupDisplay).Value = string.Empty;
     
      if (AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.TimeScheduleUid).SetAsNull == false)
        AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.TimeScheduleUid).Value = Entity.TimeScheduleUid;
      else
        AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.TimeScheduleUid).Value = Guid.Empty;
     
      if (AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.DefaultTimeScheduleUid).SetAsNull == false)
        AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.DefaultTimeScheduleUid).Value = Entity.DefaultTimeScheduleUid;
      else
        AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.DefaultTimeScheduleUid).Value = Guid.Empty;
     
    }
    #endregion

    #region OutputParametersToEntityData Method
    /// <summary>
    /// Moves the output parameters from the Parameters collection into the Entity class.
    /// </summary>
    protected override void OutputParametersToEntityData()
    {
      if (AllParameters.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ParameterNames.RETURNVALUE).IsValueNull == false)
        Entity.RETURNVALUE = AllParameters.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ParameterNames.RETURNVALUE).GetAsInteger();
      else
        Entity.RETURNVALUE = 0;
    }
    #endregion
    
    #region ColumnCollectionToEntityData Method
    /// <summary>
    /// Moves the data from the Columns collection into the Entity class.
    /// </summary>
    protected override void ColumnCollectionToEntityData()
    {
      if (AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.PersonUid).IsNull == false)
        Entity.PersonUid = AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.PersonUid).GetAsGuid();
      else
        Entity.PersonUid = Guid.Empty;

      if (AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterUid).IsNull == false)
        Entity.ClusterUid = AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterUid).GetAsGuid();
      else
        Entity.ClusterUid = Guid.Empty;

      if (AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.GalaxyPanelUid).IsNull == false)
        Entity.GalaxyPanelUid = AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.GalaxyPanelUid).GetAsGuid();
      else
        Entity.GalaxyPanelUid = Guid.Empty;

      if (AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.PersonalAccessGroupNumber).IsNull == false)
        Entity.PersonalAccessGroupNumber = AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.PersonalAccessGroupNumber).GetAsInteger();
      else
        Entity.PersonalAccessGroupNumber = 0;

      if (AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterNumber).IsNull == false)
        Entity.ClusterNumber = AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterNumber).GetAsInteger();
      else
        Entity.ClusterNumber = 0;

      if (AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterGroupId).IsNull == false)
        Entity.ClusterGroupId = AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterGroupId).GetAsInteger();
      else
        Entity.ClusterGroupId = 0;

      if (AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.PanelScheduleNumber).IsNull == false)
        Entity.PanelScheduleNumber = AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.PanelScheduleNumber).GetAsInteger();
      else
        Entity.PanelScheduleNumber = 0;

      if (AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.DoorNumber).IsNull == false)
        Entity.DoorNumber = AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.DoorNumber).GetAsShort();
      else
        Entity.DoorNumber = 0;

      if (AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.PanelNumber).IsNull == false)
        Entity.PanelNumber = AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.PanelNumber).GetAsInteger();
      else
        Entity.PanelNumber = 0;

      if (AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.AccessGroupDisplay).IsNull == false)
        Entity.AccessGroupDisplay = AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.AccessGroupDisplay).GetAsString();
      else
        Entity.AccessGroupDisplay = string.Empty;

      if (AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.TimeScheduleUid).IsNull == false)
        Entity.TimeScheduleUid = AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.TimeScheduleUid).GetAsGuid();
      else
        Entity.TimeScheduleUid = null;

      if (AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.DefaultTimeScheduleUid).IsNull == false)
        Entity.DefaultTimeScheduleUid = AllColumns.GetByName(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.DefaultTimeScheduleUid).GetAsGuid();
      else
        Entity.DefaultTimeScheduleUid = Guid.Empty;

    }
    #endregion

    #region CreateEntityFromDataRow Method
    /// <summary>
    /// Creates an Entity object from a DataRow object.
    /// </summary>
    /// <param name="dr">DataRow object with all fields from the table in it.</param>
    /// <returns>PersonalAccessGroup_PanelLoadDataByClusterUidPDSA</returns>
    public PersonalAccessGroup_PanelLoadDataByClusterUidPDSA CreateEntityFromDataRow(DataRow dr)
    {
      PersonalAccessGroup_PanelLoadDataByClusterUidPDSA entity = new PersonalAccessGroup_PanelLoadDataByClusterUidPDSA();

      if (dr.Table.Columns.Contains(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.PersonUid))
      {
        if (dr[PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.PersonUid] != DBNull.Value)
          entity.PersonUid = PDSAProperty.ConvertToGuid(dr[PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.PersonUid]);
      }
      if (dr.Table.Columns.Contains(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterUid))
      {
        if (dr[PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterUid] != DBNull.Value)
          entity.ClusterUid = PDSAProperty.ConvertToGuid(dr[PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterUid]);
      }
      if (dr.Table.Columns.Contains(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.GalaxyPanelUid))
      {
        if (dr[PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.GalaxyPanelUid] != DBNull.Value)
          entity.GalaxyPanelUid = PDSAProperty.ConvertToGuid(dr[PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.GalaxyPanelUid]);
      }
      if (dr.Table.Columns.Contains(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.PersonalAccessGroupNumber))
      {
        if (dr[PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.PersonalAccessGroupNumber] != DBNull.Value)
          entity.PersonalAccessGroupNumber = Convert.ToInt32(dr[PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.PersonalAccessGroupNumber]);
      }
      if (dr.Table.Columns.Contains(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterNumber))
      {
        if (dr[PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterNumber] != DBNull.Value)
          entity.ClusterNumber = Convert.ToInt32(dr[PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterNumber]);
      }
      if (dr.Table.Columns.Contains(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterGroupId))
      {
        if (dr[PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterGroupId] != DBNull.Value)
          entity.ClusterGroupId = Convert.ToInt32(dr[PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.ClusterGroupId]);
      }
      if (dr.Table.Columns.Contains(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.PanelScheduleNumber))
      {
        if (dr[PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.PanelScheduleNumber] != DBNull.Value)
          entity.PanelScheduleNumber = Convert.ToInt32(dr[PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.PanelScheduleNumber]);
      }
      if (dr.Table.Columns.Contains(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.DoorNumber))
      {
        if (dr[PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.DoorNumber] != DBNull.Value)
          entity.DoorNumber = Convert.ToInt16(dr[PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.DoorNumber]);
      }
      if (dr.Table.Columns.Contains(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.PanelNumber))
      {
        if (dr[PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.PanelNumber] != DBNull.Value)
          entity.PanelNumber = Convert.ToInt32(dr[PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.PanelNumber]);
      }
      if (dr.Table.Columns.Contains(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.AccessGroupDisplay))
      {
        if (dr[PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.AccessGroupDisplay] != DBNull.Value)
          entity.AccessGroupDisplay = PDSAString.ConvertToStringTrim(dr[PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.AccessGroupDisplay]);
      }
      if (dr.Table.Columns.Contains(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.TimeScheduleUid))
      {
        if (dr[PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.TimeScheduleUid] != DBNull.Value)
          entity.TimeScheduleUid = PDSAProperty.ConvertToGuid(dr[PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.TimeScheduleUid]);
      }
      if (dr.Table.Columns.Contains(PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.DefaultTimeScheduleUid))
      {
        if (dr[PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.DefaultTimeScheduleUid] != DBNull.Value)
          entity.DefaultTimeScheduleUid = PDSAProperty.ConvertToGuid(dr[PersonalAccessGroup_PanelLoadDataByClusterUidPDSAValidator.ColumnNames.DefaultTimeScheduleUid]);
      }
      entity.IsDirty = false;

      return entity;
    }
    #endregion

    #region ParameterNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the PersonalAccessGroup_PanelLoadDataByClusterUidPDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ParameterNames
    {
    /// <summary>
    /// Returns '@ClusterUid'
    /// </summary>
    public static string ClusterUid = "@ClusterUid";
    /// <summary>
    /// Returns '@RETURN_VALUE'
    /// </summary>
    public static string RETURNVALUE = "@RETURN_VALUE";
    }
    #endregion
  }
}
