using System;
using System.Data;
using System.Text;

using PDSA.Common;
using PDSA.DataLayer;
using PDSA.DataLayer.DataClasses;
using PDSA.Validation;

using GalaxySMS.EntityLayer;
using GalaxySMS.ValidationLayer;

namespace GalaxySMS.DataLayer
{
  /// <summary>
  /// This class calls the stored procedure GalaxyCpuPDSA_UpdatePDSAData
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public class GalaxyCpuPDSA_UpdatePDSAData : PDSAStoredProcExecute
  {
    #region Constructors
    /// <summary>
    /// Constructor for the GalaxyCpuPDSA_UpdatePDSAData class
    /// </summary>
    public GalaxyCpuPDSA_UpdatePDSAData() : base()
    {
      Entity = new GalaxyCpuPDSA_UpdatePDSA();
      ValidatorObject = new  GalaxyCpuPDSA_UpdatePDSAValidator(Entity);

      Init();
    }

    /// <summary>
    /// Constructor for the GalaxyCpuPDSA_UpdatePDSAData class
    /// </summary>
    /// <param name="entity">An instance of a GalaxyCpuPDSA_UpdatePDSA</param>
    public GalaxyCpuPDSA_UpdatePDSAData(GalaxyCpuPDSA_UpdatePDSA entity) : base()
    {
      Entity = entity;
      ValidatorObject = new GalaxyCpuPDSA_UpdatePDSAValidator(Entity);
            
      Init();
    }
    
    /// <summary>
    /// Constructor for the GalaxyCpuPDSA_UpdatePDSAData class
    /// </summary>
    /// <param name="dataProvider">An instance of a PDSADataProvider</param>
    /// <param name="entity">An instance of a GalaxyCpuPDSA_UpdatePDSA</param>
    public GalaxyCpuPDSA_UpdatePDSAData(PDSADataProvider dataProvider,
      GalaxyCpuPDSA_UpdatePDSA entity)
      : base(dataProvider)
    {
      Entity = entity;
      ValidatorObject = new  GalaxyCpuPDSA_UpdatePDSAValidator(Entity);
            
      Init();
    }
    
    /// <summary>
    /// Constructor for the GalaxyCpuPDSA_UpdatePDSAData class
    /// </summary>
    /// <param name="dataProvider">An instance of a PDSADataProvider</param>
    /// <param name="entity">An instance of a GalaxyCpuPDSA_UpdatePDSA</param>
    /// <param name="validator">An instance of a GalaxyCpuPDSA_UpdatePDSAValidator</param>
    public GalaxyCpuPDSA_UpdatePDSAData(PDSADataProvider dataProvider,
      GalaxyCpuPDSA_UpdatePDSA entity, GalaxyCpuPDSA_UpdatePDSAValidator validator)
      : base(dataProvider)
    {
      Entity = entity;
      ValidatorObject = validator;

      Init();
    }
    #endregion

    #region Public Property
    /// <summary>
    /// Get/Set the Entity class that will be used to get and set parameters and columns for this data class.
    /// </summary>
    public GalaxyCpuPDSA_UpdatePDSA Entity { get; set; }
    #endregion

    #region Init Method
    /// <summary>
    /// Initializes this class to a valid start state.
    /// </summary>
    protected override void Init()
    {
      ClassName = "GalaxyCpuPDSA_UpdatePDSAData";
      StoredProcName = "GalaxyCpuPDSA_Update";
      SchemaName = "GCS";

      // Move validator Properties collection into the Parameters collection
      PropertiesToParameters(ValidatorObject.Properties);

      // Create Parameters
      InitParameters();
    }
    #endregion
    
   #region InitParameters Method
    /// <summary>
    /// Creates all the parameters for the stored procedure.
    /// </summary>
    protected override void InitParameters()
    {
      PDSADataParameter param;

      // Clear all parameters each time
      AllParameters.Clear();

      // Create each parameter object and add to Parameters Collection
      param = new PDSADataParameter();
      param.ParameterName = GalaxyCpuPDSA_UpdatePDSAData.ParameterNames.CpuUid;
      param.DBType = DbType.Guid;
      param.IsRefCursor = false;
      param.ParamDirection = ParameterDirection.Input;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = GalaxyCpuPDSA_UpdatePDSAData.ParameterNames.GalaxyPanelUid;
      param.DBType = DbType.Guid;
      param.IsRefCursor = false;
      param.ParamDirection = ParameterDirection.Input;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = GalaxyCpuPDSA_UpdatePDSAData.ParameterNames.GalaxyCpuModelUid;
      param.DBType = DbType.Guid;
      param.IsRefCursor = false;
      param.ParamDirection = ParameterDirection.Input;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = GalaxyCpuPDSA_UpdatePDSAData.ParameterNames.ClusterGroupId;
      param.DBType = DbType.Int32;
      param.IsRefCursor = false;
      param.ParamDirection = ParameterDirection.Input;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = GalaxyCpuPDSA_UpdatePDSAData.ParameterNames.ClusterNumber;
      param.DBType = DbType.Int32;
      param.IsRefCursor = false;
      param.ParamDirection = ParameterDirection.Input;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = GalaxyCpuPDSA_UpdatePDSAData.ParameterNames.PanelNumber;
      param.DBType = DbType.Int32;
      param.IsRefCursor = false;
      param.ParamDirection = ParameterDirection.Input;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = GalaxyCpuPDSA_UpdatePDSAData.ParameterNames.CpuNumber;
      param.DBType = DbType.Int16;
      param.IsRefCursor = false;
      param.ParamDirection = ParameterDirection.Input;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = GalaxyCpuPDSA_UpdatePDSAData.ParameterNames.SerialNumber;
      param.DBType = DbType.String;
      param.IsRefCursor = false;
      param.ParamDirection = ParameterDirection.Input;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = GalaxyCpuPDSA_UpdatePDSAData.ParameterNames.IpAddress;
      param.DBType = DbType.String;
      param.IsRefCursor = false;
      param.ParamDirection = ParameterDirection.Input;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = GalaxyCpuPDSA_UpdatePDSAData.ParameterNames.Model;
      param.DBType = DbType.Int32;
      param.IsRefCursor = false;
      param.ParamDirection = ParameterDirection.Input;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = GalaxyCpuPDSA_UpdatePDSAData.ParameterNames.PreventFlashLoading;
      param.DBType = DbType.Boolean;
      param.IsRefCursor = false;
      param.ParamDirection = ParameterDirection.Input;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = GalaxyCpuPDSA_UpdatePDSAData.ParameterNames.PreventDataLoading;
      param.DBType = DbType.Boolean;
      param.IsRefCursor = false;
      param.ParamDirection = ParameterDirection.Input;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = GalaxyCpuPDSA_UpdatePDSAData.ParameterNames.DefaultEventLoggingOn;
      param.DBType = DbType.Boolean;
      param.IsRefCursor = false;
      param.ParamDirection = ParameterDirection.Input;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = GalaxyCpuPDSA_UpdatePDSAData.ParameterNames.UpdateName;
      param.DBType = DbType.String;
      param.IsRefCursor = false;
      param.ParamDirection = ParameterDirection.Input;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = GalaxyCpuPDSA_UpdatePDSAData.ParameterNames.UpdateDate;
      param.DBType = DbType.DateTimeOffset;
      param.IsRefCursor = false;
      param.ParamDirection = ParameterDirection.Input;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = GalaxyCpuPDSA_UpdatePDSAData.ParameterNames.IsActive;
      param.DBType = DbType.Boolean;
      param.IsRefCursor = false;
      param.ParamDirection = ParameterDirection.Input;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = GalaxyCpuPDSA_UpdatePDSAData.ParameterNames.ConcurrencyValue;
      param.DBType = DbType.Int16;
      param.IsRefCursor = false;
      param.ParamDirection = ParameterDirection.Input;
      AllParameters.Add(param);

      param = new PDSADataParameter();
      param.ParameterName = GalaxyCpuPDSA_UpdatePDSAData.ParameterNames.RETURNVALUE;
      param.DBType = DbType.Int32;
      param.IsRefCursor = false;
      param.ParamDirection = ParameterDirection.ReturnValue;
      AllParameters.Add(param);


      AddReturnValueParameterToCollection();
    }
    #endregion

    #region EntityDataToParameterCollection Method
    /// <summary>
    /// Moves the data from the Entity class into the Parameters collection
    /// </summary>
    protected override void EntityDataToParameterCollection()
    {
      if (AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.CpuUid).SetAsNull == false)
        AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.CpuUid).Value = Entity.CpuUid;
      else
        AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.CpuUid).Value = System.Data.SqlTypes.SqlGuid.Null;
      if (AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.GalaxyPanelUid).SetAsNull == false)
        AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.GalaxyPanelUid).Value = Entity.GalaxyPanelUid;
      else
        AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.GalaxyPanelUid).Value = System.Data.SqlTypes.SqlGuid.Null;
      if (AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.GalaxyCpuModelUid).SetAsNull == false)
        AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.GalaxyCpuModelUid).Value = Entity.GalaxyCpuModelUid;
      else
        AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.GalaxyCpuModelUid).Value = System.Data.SqlTypes.SqlGuid.Null;
      if (AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.ClusterGroupId).SetAsNull == false)
        AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.ClusterGroupId).Value = Entity.ClusterGroupId;
      else
        AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.ClusterGroupId).Value = System.Data.SqlTypes.SqlInt32.Null;
      if (AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.ClusterNumber).SetAsNull == false)
        AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.ClusterNumber).Value = Entity.ClusterNumber;
      else
        AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.ClusterNumber).Value = System.Data.SqlTypes.SqlInt32.Null;
      if (AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.PanelNumber).SetAsNull == false)
        AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.PanelNumber).Value = Entity.PanelNumber;
      else
        AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.PanelNumber).Value = System.Data.SqlTypes.SqlInt32.Null;
      if (AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.CpuNumber).SetAsNull == false)
        AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.CpuNumber).Value = Entity.CpuNumber;
      else
        AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.CpuNumber).Value = System.Data.SqlTypes.SqlInt16.Null;
      if (AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.SerialNumber).SetAsNull == false)
        AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.SerialNumber).Value = Entity.SerialNumber;
      else
        AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.SerialNumber).Value = System.Data.SqlTypes.SqlChars.Null;
      if (AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.IpAddress).SetAsNull == false)
        AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.IpAddress).Value = Entity.IpAddress;
      else
        AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.IpAddress).Value = System.Data.SqlTypes.SqlChars.Null;
      if (AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.Model).SetAsNull == false)
        AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.Model).Value = Entity.Model;
      else
        AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.Model).Value = System.Data.SqlTypes.SqlInt32.Null;
      if (AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.PreventFlashLoading).SetAsNull == false)
        AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.PreventFlashLoading).Value = Entity.PreventFlashLoading;
      else
        AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.PreventFlashLoading).Value = System.Data.SqlTypes.SqlBoolean.Null;
      if (AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.PreventDataLoading).SetAsNull == false)
        AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.PreventDataLoading).Value = Entity.PreventDataLoading;
      else
        AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.PreventDataLoading).Value = System.Data.SqlTypes.SqlBoolean.Null;
      if (AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.DefaultEventLoggingOn).SetAsNull == false)
        AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.DefaultEventLoggingOn).Value = Entity.DefaultEventLoggingOn;
      else
        AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.DefaultEventLoggingOn).Value = System.Data.SqlTypes.SqlBoolean.Null;
      if (AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.UpdateName).SetAsNull == false)
        AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.UpdateName).Value = Entity.UpdateName;
      else
        AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.UpdateName).Value = System.Data.SqlTypes.SqlChars.Null;
      if (AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.UpdateDate).SetAsNull == false)
        AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.UpdateDate).Value = Entity.UpdateDate;
      else
        AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.UpdateDate).Value = System.Data.SqlTypes.SqlDateTime.Null;
      if (AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.IsActive).SetAsNull == false)
        AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.IsActive).Value = Entity.IsActive;
      else
        AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.IsActive).Value = System.Data.SqlTypes.SqlBoolean.Null;
      if (AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.ConcurrencyValue).SetAsNull == false)
        AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.ConcurrencyValue).Value = Entity.ConcurrencyValue;
      else
        AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAValidator.ParameterNames.ConcurrencyValue).Value = System.Data.SqlTypes.SqlInt16.Null;
    }
    #endregion
    
    #region OutputParametersToEntityData Method
    /// <summary>
    /// Moves the output parameters from the Parameters collection into the Entity class.
    /// </summary>
    protected override void OutputParametersToEntityData()
    {
      if (AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAData.ParameterNames.RETURNVALUE).IsValueNull == false)
        Entity.RETURNVALUE = AllParameters.GetByName(GalaxyCpuPDSA_UpdatePDSAData.ParameterNames.RETURNVALUE).GetAsInteger();
      else
        Entity.RETURNVALUE = 0;
    }
    #endregion
        
    #region SetDirtyFlag Methods
    /// <summary>
    /// This is called with a 'false' value after each successful Insert/Update method call.
    /// </summary>
    /// <param name="isDirty">Called with 'false' by default</param>
    protected override void SetDirtyFlag(bool isDirty)
    {
      Entity.IsDirty = isDirty;
    }
    #endregion
       
    #region ParameterNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the GalaxyCpuPDSA_UpdatePDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ParameterNames
    {
    /// <summary>
    /// Returns '@CpuUid'
    /// </summary>
    public static string CpuUid = "@CpuUid";
    /// <summary>
    /// Returns '@GalaxyPanelUid'
    /// </summary>
    public static string GalaxyPanelUid = "@GalaxyPanelUid";
    /// <summary>
    /// Returns '@GalaxyCpuModelUid'
    /// </summary>
    public static string GalaxyCpuModelUid = "@GalaxyCpuModelUid";
    /// <summary>
    /// Returns '@ClusterGroupId'
    /// </summary>
    public static string ClusterGroupId = "@ClusterGroupId";
    /// <summary>
    /// Returns '@ClusterNumber'
    /// </summary>
    public static string ClusterNumber = "@ClusterNumber";
    /// <summary>
    /// Returns '@PanelNumber'
    /// </summary>
    public static string PanelNumber = "@PanelNumber";
    /// <summary>
    /// Returns '@CpuNumber'
    /// </summary>
    public static string CpuNumber = "@CpuNumber";
    /// <summary>
    /// Returns '@SerialNumber'
    /// </summary>
    public static string SerialNumber = "@SerialNumber";
    /// <summary>
    /// Returns '@IpAddress'
    /// </summary>
    public static string IpAddress = "@IpAddress";
    /// <summary>
    /// Returns '@Model'
    /// </summary>
    public static string Model = "@Model";
    /// <summary>
    /// Returns '@PreventFlashLoading'
    /// </summary>
    public static string PreventFlashLoading = "@PreventFlashLoading";
    /// <summary>
    /// Returns '@PreventDataLoading'
    /// </summary>
    public static string PreventDataLoading = "@PreventDataLoading";
    /// <summary>
    /// Returns '@DefaultEventLoggingOn'
    /// </summary>
    public static string DefaultEventLoggingOn = "@DefaultEventLoggingOn";
    /// <summary>
    /// Returns '@UpdateName'
    /// </summary>
    public static string UpdateName = "@UpdateName";
    /// <summary>
    /// Returns '@UpdateDate'
    /// </summary>
    public static string UpdateDate = "@UpdateDate";
    /// <summary>
    /// Returns '@IsActive'
    /// </summary>
    public static string IsActive = "@IsActive";
    /// <summary>
    /// Returns '@ConcurrencyValue'
    /// </summary>
    public static string ConcurrencyValue = "@ConcurrencyValue";
    /// <summary>
    /// Returns '@RETURN_VALUE'
    /// </summary>
    public static string RETURNVALUE = "@RETURN_VALUE";
    }
    #endregion
  }
}
