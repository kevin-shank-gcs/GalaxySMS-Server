using System;

using PDSA.Validation;

using GalaxySMS.EntityLayer;

namespace GalaxySMS.ValidationLayer
{
  /// <summary>
  /// Used to validate all properties of the AccessGroup_PanelLoadDataChangesForCpuPDSA class.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public partial class AccessGroup_PanelLoadDataChangesForCpuPDSAValidator : PDSAValidatorBase
  {
    #region Public Entity Property
    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    private AccessGroup_PanelLoadDataChangesForCpuPDSA _Entity = null;

    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    public new AccessGroup_PanelLoadDataChangesForCpuPDSA Entity
    {
      get { return _Entity; }
      set
      {
        _Entity = value;
        base.Entity = value;
      }
    }
    #endregion
    
    #region Clone Entity Class
    /// <summary>
    /// Clones the current AccessGroup_PanelLoadDataChangesForCpuPDSA
    /// </summary>
    /// <returns>A cloned AccessGroup_PanelLoadDataChangesForCpuPDSA object</returns>
    public AccessGroup_PanelLoadDataChangesForCpuPDSA CloneEntity()
    {
      return CloneEntity(this.Entity);
    }
    
    /// <summary>
    /// Clones the passed in AccessGroup_PanelLoadDataChangesForCpuPDSA
    /// </summary>
    /// <param name="entityToClone">The AccessGroup_PanelLoadDataChangesForCpuPDSA entity to clone</param>
    /// <returns>A cloned AccessGroup_PanelLoadDataChangesForCpuPDSA object</returns>
    public AccessGroup_PanelLoadDataChangesForCpuPDSA CloneEntity(AccessGroup_PanelLoadDataChangesForCpuPDSA entityToClone)
    {
      AccessGroup_PanelLoadDataChangesForCpuPDSA newEntity = new AccessGroup_PanelLoadDataChangesForCpuPDSA();

      newEntity.AccessGroupUid = entityToClone.AccessGroupUid;
      newEntity.ClusterUid = entityToClone.ClusterUid;
      newEntity.AccessGroupName = entityToClone.AccessGroupName;
      newEntity.AccessGroupNumber = entityToClone.AccessGroupNumber;
      newEntity.ActivationDate = entityToClone.ActivationDate;
      newEntity.ExpirationDate = entityToClone.ExpirationDate;
      newEntity.IsEnabled = entityToClone.IsEnabled;
      newEntity.CrisisModeAccessGroupUid = entityToClone.CrisisModeAccessGroupUid;
      newEntity.CrisisModeAccessGroupName = entityToClone.CrisisModeAccessGroupName;
      newEntity.CrisisModeAccessGroupNumber = entityToClone.CrisisModeAccessGroupNumber;
      newEntity.CurrentTimeForCluster = entityToClone.CurrentTimeForCluster;
      newEntity.ClusterGroupId = entityToClone.ClusterGroupId;
      newEntity.ClusterNumber = entityToClone.ClusterNumber;
      newEntity.PanelNumber = entityToClone.PanelNumber;
      newEntity.GalaxyPanelUid = entityToClone.GalaxyPanelUid;
      newEntity.CpuNumber = entityToClone.CpuNumber;
      newEntity.CpuUid = entityToClone.CpuUid;
      newEntity.AccessGroupLoadToCpuUid = entityToClone.AccessGroupLoadToCpuUid;
      newEntity.ServerAddress = entityToClone.ServerAddress;
      newEntity.IsConnected = entityToClone.IsConnected;

      return newEntity;
    }
    #endregion

    #region CreateProperties Method
    /// <summary>
    /// Creates the collection of PDSAProperty objects. These are used to control validation and null handling.
    /// </summary>
    /// <returns>A collection of PDSAProperty objects</returns>
    public override PDSAProperties CreateProperties()
    {
      PDSAProperties props = new PDSAProperties();
      
      props.Add(PDSAProperty.Create(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroupUid, GetResourceMessage("GCS_AccessGroup_PanelLoadDataChangesForCpuPDSA_AccessGroupUid_Header", "Access Group Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_AccessGroup_PanelLoadDataChangesForCpuPDSA_AccessGroupUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterUid, GetResourceMessage("GCS_AccessGroup_PanelLoadDataChangesForCpuPDSA_ClusterUid_Header", "Cluster Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_AccessGroup_PanelLoadDataChangesForCpuPDSA_ClusterUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroupName, GetResourceMessage("GCS_AccessGroup_PanelLoadDataChangesForCpuPDSA_AccessGroupName_Header", "Access Group Name"), false, typeof(string), 65, GetResourceMessage("GCS_AccessGroup_PanelLoadDataChangesForCpuPDSA_AccessGroupName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroupNumber, GetResourceMessage("GCS_AccessGroup_PanelLoadDataChangesForCpuPDSA_AccessGroupNumber_Header", "Access Group Number"), false, typeof(int), 10, GetResourceMessage("GCS_AccessGroup_PanelLoadDataChangesForCpuPDSA_AccessGroupNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ActivationDate, GetResourceMessage("GCS_AccessGroup_PanelLoadDataChangesForCpuPDSA_ActivationDate_Header", "Activation Date"), false, typeof(DateTime), -1, GetResourceMessage("GCS_AccessGroup_PanelLoadDataChangesForCpuPDSA_ActivationDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTime.MinValue, DateTime.MaxValue, 0, null, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ExpirationDate, GetResourceMessage("GCS_AccessGroup_PanelLoadDataChangesForCpuPDSA_ExpirationDate_Header", "Expiration Date"), false, typeof(DateTime), -1, GetResourceMessage("GCS_AccessGroup_PanelLoadDataChangesForCpuPDSA_ExpirationDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTime.MinValue, DateTime.MaxValue, 0, null, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IsEnabled, GetResourceMessage("GCS_AccessGroup_PanelLoadDataChangesForCpuPDSA_IsEnabled_Header", "Is Enabled"), false, typeof(bool), -1, GetResourceMessage("GCS_AccessGroup_PanelLoadDataChangesForCpuPDSA_IsEnabled_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CrisisModeAccessGroupUid, GetResourceMessage("GCS_AccessGroup_PanelLoadDataChangesForCpuPDSA_CrisisModeAccessGroupUid_Header", "Crisis Mode Access Group Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_AccessGroup_PanelLoadDataChangesForCpuPDSA_CrisisModeAccessGroupUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CrisisModeAccessGroupName, GetResourceMessage("GCS_AccessGroup_PanelLoadDataChangesForCpuPDSA_CrisisModeAccessGroupName_Header", "Crisis Mode Access Group Name"), false, typeof(string), 65, GetResourceMessage("GCS_AccessGroup_PanelLoadDataChangesForCpuPDSA_CrisisModeAccessGroupName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CrisisModeAccessGroupNumber, GetResourceMessage("GCS_AccessGroup_PanelLoadDataChangesForCpuPDSA_CrisisModeAccessGroupNumber_Header", "Crisis Mode Access Group Number"), false, typeof(int), 10, GetResourceMessage("GCS_AccessGroup_PanelLoadDataChangesForCpuPDSA_CrisisModeAccessGroupNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CurrentTimeForCluster, GetResourceMessage("GCS_AccessGroup_PanelLoadDataChangesForCpuPDSA_CurrentTimeForCluster_Header", "Current Time For Cluster"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_AccessGroup_PanelLoadDataChangesForCpuPDSA_CurrentTimeForCluster_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterGroupId, GetResourceMessage("GCS_AccessGroup_PanelLoadDataChangesForCpuPDSA_ClusterGroupId_Header", "Cluster Group Id"), false, typeof(int), 10, GetResourceMessage("GCS_AccessGroup_PanelLoadDataChangesForCpuPDSA_ClusterGroupId_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterNumber, GetResourceMessage("GCS_AccessGroup_PanelLoadDataChangesForCpuPDSA_ClusterNumber_Header", "Cluster Number"), false, typeof(int), 10, GetResourceMessage("GCS_AccessGroup_PanelLoadDataChangesForCpuPDSA_ClusterNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PanelNumber, GetResourceMessage("GCS_AccessGroup_PanelLoadDataChangesForCpuPDSA_PanelNumber_Header", "Panel Number"), false, typeof(int), 10, GetResourceMessage("GCS_AccessGroup_PanelLoadDataChangesForCpuPDSA_PanelNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.GalaxyPanelUid, GetResourceMessage("GCS_AccessGroup_PanelLoadDataChangesForCpuPDSA_GalaxyPanelUid_Header", "Galaxy Panel Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_AccessGroup_PanelLoadDataChangesForCpuPDSA_GalaxyPanelUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuNumber, GetResourceMessage("GCS_AccessGroup_PanelLoadDataChangesForCpuPDSA_CpuNumber_Header", "Cpu Number"), false, typeof(short), 5, GetResourceMessage("GCS_AccessGroup_PanelLoadDataChangesForCpuPDSA_CpuNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuUid, GetResourceMessage("GCS_AccessGroup_PanelLoadDataChangesForCpuPDSA_CpuUid_Header", "Cpu Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_AccessGroup_PanelLoadDataChangesForCpuPDSA_CpuUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroupLoadToCpuUid, GetResourceMessage("GCS_AccessGroup_PanelLoadDataChangesForCpuPDSA_AccessGroupLoadToCpuUid_Header", "Access Group Load To Cpu Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_AccessGroup_PanelLoadDataChangesForCpuPDSA_AccessGroupLoadToCpuUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ServerAddress, GetResourceMessage("GCS_AccessGroup_PanelLoadDataChangesForCpuPDSA_ServerAddress_Header", "Server Address"), false, typeof(string), 255, GetResourceMessage("GCS_AccessGroup_PanelLoadDataChangesForCpuPDSA_ServerAddress_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IsConnected, GetResourceMessage("GCS_AccessGroup_PanelLoadDataChangesForCpuPDSA_IsConnected_Header", "Is Connected"), false, typeof(bool), -1, GetResourceMessage("GCS_AccessGroup_PanelLoadDataChangesForCpuPDSA_IsConnected_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      
      return props;
    }
    #endregion

    #region Initialize Entity
    /// <summary>
    /// This method is called from the CreateNewEntity Method. All the properties for the Entity are set to default values here by the code generator.
    /// </summary>
    protected override void InitializeEntity()
    {
      Entity.AccessGroupUid = Guid.Empty;
      Entity.ClusterUid = Guid.Empty;
      Entity.AccessGroupName = string.Empty;
      Entity.AccessGroupNumber = 0;
      Entity.ActivationDate = null;
      Entity.ExpirationDate = null;
      Entity.IsEnabled = false;
      Entity.CrisisModeAccessGroupUid = Guid.Empty;
      Entity.CrisisModeAccessGroupName = string.Empty;
      Entity.CrisisModeAccessGroupNumber = 0;
      Entity.CurrentTimeForCluster = DateTimeOffset.Now;
      Entity.ClusterGroupId = 0;
      Entity.ClusterNumber = 0;
      Entity.PanelNumber = 0;
      Entity.GalaxyPanelUid = Guid.Empty;
      Entity.CpuNumber = 0;
      Entity.CpuUid = Guid.Empty;
      Entity.AccessGroupLoadToCpuUid = Guid.Empty;
      Entity.ServerAddress = string.Empty;
      Entity.IsConnected = false;

      Entity.ResetAllIsDirtyProperties();
    }
    #endregion
    
    #region InitProperties Method
    /// <summary>
    /// Called by the constructor to create the PDSAProperties collection of all properties that will be validated.
    /// </summary>
    protected override void InitProperties()
    {
      // Set the Properties collection to the collection of Entity Properties
      Properties = CreateProperties();
    }
    #endregion

    #region EntityDataToProperties Method
    /// <summary>
    /// Moves the Entity class data into the Properties collection.
    /// </summary>
    protected override void EntityDataToProperties()
    {
      if (Properties == null)
        InitProperties();
      
      if(!Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroupUid).SetAsNull)
        Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroupUid).Value = Entity.AccessGroupUid;
      if(!Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterUid).SetAsNull)
        Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterUid).Value = Entity.ClusterUid;
      if(!Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroupName).SetAsNull)
        Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroupName).Value = Entity.AccessGroupName;
      if(!Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroupNumber).SetAsNull)
        Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroupNumber).Value = Entity.AccessGroupNumber;
      if(!Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ActivationDate).SetAsNull)
        Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ActivationDate).Value = Entity.ActivationDate;
      if(!Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ExpirationDate).SetAsNull)
        Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ExpirationDate).Value = Entity.ExpirationDate;
      if(!Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IsEnabled).SetAsNull)
        Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IsEnabled).Value = Entity.IsEnabled;
      if(!Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CrisisModeAccessGroupUid).SetAsNull)
        Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CrisisModeAccessGroupUid).Value = Entity.CrisisModeAccessGroupUid;
      if(!Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CrisisModeAccessGroupName).SetAsNull)
        Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CrisisModeAccessGroupName).Value = Entity.CrisisModeAccessGroupName;
      if(!Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CrisisModeAccessGroupNumber).SetAsNull)
        Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CrisisModeAccessGroupNumber).Value = Entity.CrisisModeAccessGroupNumber;
      if(!Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CurrentTimeForCluster).SetAsNull)
        Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CurrentTimeForCluster).Value = Entity.CurrentTimeForCluster;
      if(!Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterGroupId).SetAsNull)
        Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterGroupId).Value = Entity.ClusterGroupId;
      if(!Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterNumber).SetAsNull)
        Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterNumber).Value = Entity.ClusterNumber;
      if(!Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PanelNumber).SetAsNull)
        Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PanelNumber).Value = Entity.PanelNumber;
      if(!Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.GalaxyPanelUid).SetAsNull)
        Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.GalaxyPanelUid).Value = Entity.GalaxyPanelUid;
      if(!Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuNumber).SetAsNull)
        Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuNumber).Value = Entity.CpuNumber;
      if(!Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuUid).SetAsNull)
        Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuUid).Value = Entity.CpuUid;
      if(!Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroupLoadToCpuUid).SetAsNull)
        Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroupLoadToCpuUid).Value = Entity.AccessGroupLoadToCpuUid;
      if(!Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ServerAddress).SetAsNull)
        Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ServerAddress).Value = Entity.ServerAddress;
      if(!Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IsConnected).SetAsNull)
        Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IsConnected).Value = Entity.IsConnected;
    }

    /// <summary>
    /// Moves the Properties collection objects into the Entity properties
    /// </summary>
    protected override void PropertiesToEntityData()
    {
      if (Properties == null)
        InitProperties();

      if(Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroupUid).IsNull == false)
        Entity.AccessGroupUid = Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroupUid).GetAsGuid();
      if(Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterUid).IsNull == false)
        Entity.ClusterUid = Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterUid).GetAsGuid();
      if(Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroupName).IsNull == false)
        Entity.AccessGroupName = Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroupName).GetAsString();
      if(Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroupNumber).IsNull == false)
        Entity.AccessGroupNumber = Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroupNumber).GetAsInteger();
      if(Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ActivationDate).IsNull == false)
        Entity.ActivationDate = Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ActivationDate).GetAsDate();
      if(Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ExpirationDate).IsNull == false)
        Entity.ExpirationDate = Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ExpirationDate).GetAsDate();
      if(Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IsEnabled).IsNull == false)
        Entity.IsEnabled = Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IsEnabled).GetAsBool();
      if(Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CrisisModeAccessGroupUid).IsNull == false)
        Entity.CrisisModeAccessGroupUid = Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CrisisModeAccessGroupUid).GetAsGuid();
      if(Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CrisisModeAccessGroupName).IsNull == false)
        Entity.CrisisModeAccessGroupName = Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CrisisModeAccessGroupName).GetAsString();
      if(Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CrisisModeAccessGroupNumber).IsNull == false)
        Entity.CrisisModeAccessGroupNumber = Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CrisisModeAccessGroupNumber).GetAsInteger();
      if(Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CurrentTimeForCluster).IsNull == false)
        Entity.CurrentTimeForCluster = Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CurrentTimeForCluster).GetAsDateTimeOffset();
      if(Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterGroupId).IsNull == false)
        Entity.ClusterGroupId = Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterGroupId).GetAsInteger();
      if(Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterNumber).IsNull == false)
        Entity.ClusterNumber = Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterNumber).GetAsInteger();
      if(Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PanelNumber).IsNull == false)
        Entity.PanelNumber = Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PanelNumber).GetAsInteger();
      if(Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.GalaxyPanelUid).IsNull == false)
        Entity.GalaxyPanelUid = Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.GalaxyPanelUid).GetAsGuid();
      if(Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuNumber).IsNull == false)
        Entity.CpuNumber = Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuNumber).GetAsShort();
      if(Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuUid).IsNull == false)
        Entity.CpuUid = Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuUid).GetAsGuid();
      if(Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroupLoadToCpuUid).IsNull == false)
        Entity.AccessGroupLoadToCpuUid = Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroupLoadToCpuUid).GetAsGuid();
      if(Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ServerAddress).IsNull == false)
        Entity.ServerAddress = Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ServerAddress).GetAsString();
      if(Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IsConnected).IsNull == false)
        Entity.IsConnected = Properties.GetByName(AccessGroup_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IsConnected).GetAsBool();
    }
    #endregion
    
    #region ColumnNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the AccessGroup_PanelLoadDataChangesForCpuPDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ColumnNames
    {
    /// <summary>
    /// Returns 'AccessGroupUid'
    /// </summary>
    public static string AccessGroupUid = "AccessGroupUid";
    /// <summary>
    /// Returns 'ClusterUid'
    /// </summary>
    public static string ClusterUid = "ClusterUid";
    /// <summary>
    /// Returns 'AccessGroupName'
    /// </summary>
    public static string AccessGroupName = "AccessGroupName";
    /// <summary>
    /// Returns 'AccessGroupNumber'
    /// </summary>
    public static string AccessGroupNumber = "AccessGroupNumber";
    /// <summary>
    /// Returns 'ActivationDate'
    /// </summary>
    public static string ActivationDate = "ActivationDate";
    /// <summary>
    /// Returns 'ExpirationDate'
    /// </summary>
    public static string ExpirationDate = "ExpirationDate";
    /// <summary>
    /// Returns 'IsEnabled'
    /// </summary>
    public static string IsEnabled = "IsEnabled";
    /// <summary>
    /// Returns 'CrisisModeAccessGroupUid'
    /// </summary>
    public static string CrisisModeAccessGroupUid = "CrisisModeAccessGroupUid";
    /// <summary>
    /// Returns 'CrisisModeAccessGroupName'
    /// </summary>
    public static string CrisisModeAccessGroupName = "CrisisModeAccessGroupName";
    /// <summary>
    /// Returns 'CrisisModeAccessGroupNumber'
    /// </summary>
    public static string CrisisModeAccessGroupNumber = "CrisisModeAccessGroupNumber";
    /// <summary>
    /// Returns 'CurrentTimeForCluster'
    /// </summary>
    public static string CurrentTimeForCluster = "CurrentTimeForCluster";
    /// <summary>
    /// Returns 'ClusterGroupId'
    /// </summary>
    public static string ClusterGroupId = "ClusterGroupId";
    /// <summary>
    /// Returns 'ClusterNumber'
    /// </summary>
    public static string ClusterNumber = "ClusterNumber";
    /// <summary>
    /// Returns 'PanelNumber'
    /// </summary>
    public static string PanelNumber = "PanelNumber";
    /// <summary>
    /// Returns 'GalaxyPanelUid'
    /// </summary>
    public static string GalaxyPanelUid = "GalaxyPanelUid";
    /// <summary>
    /// Returns 'CpuNumber'
    /// </summary>
    public static string CpuNumber = "CpuNumber";
    /// <summary>
    /// Returns 'CpuUid'
    /// </summary>
    public static string CpuUid = "CpuUid";
    /// <summary>
    /// Returns 'AccessGroupLoadToCpuUid'
    /// </summary>
    public static string AccessGroupLoadToCpuUid = "AccessGroupLoadToCpuUid";
    /// <summary>
    /// Returns 'ServerAddress'
    /// </summary>
    public static string ServerAddress = "ServerAddress";
    /// <summary>
    /// Returns 'IsConnected'
    /// </summary>
    public static string IsConnected = "IsConnected";
    }
    #endregion
  }
}
