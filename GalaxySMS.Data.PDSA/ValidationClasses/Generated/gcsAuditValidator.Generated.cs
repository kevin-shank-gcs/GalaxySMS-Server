using System;

using PDSA.Validation;

using GalaxySMS.EntityLayer;

namespace GalaxySMS.ValidationLayer
{
  /// <summary>
  /// Used to validate all properties of the gcsAuditPDSA class.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public partial class gcsAuditPDSAValidator : PDSAValidatorBase
  {
    #region Public Entity Property
    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    private gcsAuditPDSA _Entity = null;

    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    public new gcsAuditPDSA Entity
    {
      get { return _Entity; }
      set
      {
        _Entity = value;
        base.Entity = value;
      }
    }
    #endregion
    
    #region Clone Entity Class
    /// <summary>
    /// Clones the current gcsAuditPDSA
    /// </summary>
    /// <returns>A cloned gcsAuditPDSA object</returns>
    public gcsAuditPDSA CloneEntity()
    {
      return CloneEntity(this.Entity);
    }
    
    /// <summary>
    /// Clones the passed in gcsAuditPDSA
    /// </summary>
    /// <param name="entityToClone">The gcsAuditPDSA entity to clone</param>
    /// <returns>A cloned gcsAuditPDSA object</returns>
    public gcsAuditPDSA CloneEntity(gcsAuditPDSA entityToClone)
    {
      gcsAuditPDSA newEntity = new gcsAuditPDSA();

      newEntity.AuditId = entityToClone.AuditId;
      newEntity.TransactionId = entityToClone.TransactionId;
      newEntity.TableName = entityToClone.TableName;
      newEntity.OperationType = entityToClone.OperationType;
      newEntity.PrimaryKeyColumn = entityToClone.PrimaryKeyColumn;
      newEntity.PrimaryKeyValue = entityToClone.PrimaryKeyValue;
      newEntity.RecordTag = entityToClone.RecordTag;
      newEntity.AuditXml = entityToClone.AuditXml;
      newEntity.ColumnName = entityToClone.ColumnName;
      newEntity.OriginalValue = entityToClone.OriginalValue;
      newEntity.NewValue = entityToClone.NewValue;
      newEntity.OriginalBinaryValue = entityToClone.OriginalBinaryValue;
      newEntity.NewBinaryValue = entityToClone.NewBinaryValue;
      newEntity.InsertName = entityToClone.InsertName;
      newEntity.InsertDate = entityToClone.InsertDate;

      return newEntity;
    }
    #endregion

    #region CreateProperties Method
    /// <summary>
    /// Creates the collection of PDSAProperty objects. These are used to control validation and null handling.
    /// </summary>
    /// <returns>A collection of PDSAProperty objects</returns>
    public override PDSAProperties CreateProperties()
    {
      PDSAProperties props = new PDSAProperties();
      
      props.Add(PDSAProperty.Create(gcsAuditPDSAValidator.ColumnNames.AuditId, GetResourceMessage("GCS_gcsAuditPDSA_AuditId_Header", "Audit Id"), true, typeof(Guid), -1, GetResourceMessage("GCS_gcsAuditPDSA_AuditId_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.NewGuid(), @"", ""));
      props.Add(PDSAProperty.Create(gcsAuditPDSAValidator.ColumnNames.TransactionId, GetResourceMessage("GCS_gcsAuditPDSA_TransactionId_Header", "Transaction Id"), true, typeof(Guid), -1, GetResourceMessage("GCS_gcsAuditPDSA_TransactionId_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.NewGuid(), @"", ""));
      props.Add(PDSAProperty.Create(gcsAuditPDSAValidator.ColumnNames.TableName, GetResourceMessage("GCS_gcsAuditPDSA_TableName_Header", "Table Name"), true, typeof(string), 128, GetResourceMessage("GCS_gcsAuditPDSA_TableName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(gcsAuditPDSAValidator.ColumnNames.OperationType, GetResourceMessage("GCS_gcsAuditPDSA_OperationType_Header", "Operation Type"), true, typeof(string), 10, GetResourceMessage("GCS_gcsAuditPDSA_OperationType_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(gcsAuditPDSAValidator.ColumnNames.PrimaryKeyColumn, GetResourceMessage("GCS_gcsAuditPDSA_PrimaryKeyColumn_Header", "Primary Key Column"), true, typeof(string), 128, GetResourceMessage("GCS_gcsAuditPDSA_PrimaryKeyColumn_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(gcsAuditPDSAValidator.ColumnNames.PrimaryKeyValue, GetResourceMessage("GCS_gcsAuditPDSA_PrimaryKeyValue_Header", "Primary Key Value"), true, typeof(Guid), -1, GetResourceMessage("GCS_gcsAuditPDSA_PrimaryKeyValue_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.NewGuid(), @"", ""));
      props.Add(PDSAProperty.Create(gcsAuditPDSAValidator.ColumnNames.RecordTag, GetResourceMessage("GCS_gcsAuditPDSA_RecordTag_Header", "Record Tag"), true, typeof(string), 255, GetResourceMessage("GCS_gcsAuditPDSA_RecordTag_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(gcsAuditPDSAValidator.ColumnNames.AuditXml, GetResourceMessage("GCS_gcsAuditPDSA_AuditXml_Header", "Audit Xml"), false, typeof(string), -1, GetResourceMessage("GCS_gcsAuditPDSA_AuditXml_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(gcsAuditPDSAValidator.ColumnNames.ColumnName, GetResourceMessage("GCS_gcsAuditPDSA_ColumnName_Header", "Column Name"), false, typeof(string), 128, GetResourceMessage("GCS_gcsAuditPDSA_ColumnName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(gcsAuditPDSAValidator.ColumnNames.OriginalValue, GetResourceMessage("GCS_gcsAuditPDSA_OriginalValue_Header", "Original Value"), false, typeof(string), 1073741823, GetResourceMessage("GCS_gcsAuditPDSA_OriginalValue_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(gcsAuditPDSAValidator.ColumnNames.NewValue, GetResourceMessage("GCS_gcsAuditPDSA_NewValue_Header", "New Value"), false, typeof(string), 1073741823, GetResourceMessage("GCS_gcsAuditPDSA_NewValue_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(gcsAuditPDSAValidator.ColumnNames.OriginalBinaryValue, GetResourceMessage("GCS_gcsAuditPDSA_OriginalBinaryValue_Header", "Original Binary Value"), false, typeof(byte[]), 2147483647, GetResourceMessage("GCS_gcsAuditPDSA_OriginalBinaryValue_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, null, @"", ""));
      props.Add(PDSAProperty.Create(gcsAuditPDSAValidator.ColumnNames.NewBinaryValue, GetResourceMessage("GCS_gcsAuditPDSA_NewBinaryValue_Header", "New Binary Value"), false, typeof(byte[]), 2147483647, GetResourceMessage("GCS_gcsAuditPDSA_NewBinaryValue_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, null, @"", ""));
      props.Add(PDSAProperty.Create(gcsAuditPDSAValidator.ColumnNames.InsertName, GetResourceMessage("GCS_gcsAuditPDSA_InsertName_Header", "Insert Name"), true, typeof(string), 100, GetResourceMessage("GCS_gcsAuditPDSA_InsertName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(gcsAuditPDSAValidator.ColumnNames.InsertDate, GetResourceMessage("GCS_gcsAuditPDSA_InsertDate_Header", "Insert Date"), true, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_gcsAuditPDSA_InsertDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      
      return props;
    }
    #endregion

    #region Initialize Entity
    /// <summary>
    /// This method is called from the CreateNewEntity Method. All the properties for the Entity are set to default values here by the code generator.
    /// </summary>
    protected override void InitializeEntity()
    {
      Entity.AuditId = Guid.NewGuid();
      Entity.TransactionId = Guid.NewGuid();
      Entity.TableName = string.Empty;
      Entity.OperationType = string.Empty;
      Entity.PrimaryKeyColumn = string.Empty;
      Entity.PrimaryKeyValue = Guid.NewGuid();
      Entity.RecordTag = string.Empty;
      Entity.AuditXml = string.Empty;
      Entity.ColumnName = string.Empty;
      Entity.OriginalValue = string.Empty;
      Entity.NewValue = string.Empty;
      Entity.OriginalBinaryValue = null;
      Entity.NewBinaryValue = null;
      Entity.InsertName = string.Empty;
      Entity.InsertDate = DateTimeOffset.Now;

      Entity.ResetAllIsDirtyProperties();
    }
    #endregion
    
    #region InitProperties Method
    /// <summary>
    /// Called by the constructor to create the PDSAProperties collection of all properties that will be validated.
    /// </summary>
    protected override void InitProperties()
    {
      // Set the Properties collection to the collection of Entity Properties
      Properties = CreateProperties();
    }
    #endregion

    #region EntityDataToProperties Method
    /// <summary>
    /// Moves the Entity class data into the Properties collection.
    /// </summary>
    protected override void EntityDataToProperties()
    {
      if (Properties == null)
        InitProperties();
      
      if(!Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.AuditId).SetAsNull)
        Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.AuditId).Value = Entity.AuditId;
      if(!Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.TransactionId).SetAsNull)
        Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.TransactionId).Value = Entity.TransactionId;
      if(!Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.TableName).SetAsNull)
        Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.TableName).Value = Entity.TableName;
      if(!Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.OperationType).SetAsNull)
        Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.OperationType).Value = Entity.OperationType;
      if(!Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.PrimaryKeyColumn).SetAsNull)
        Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.PrimaryKeyColumn).Value = Entity.PrimaryKeyColumn;
      if(!Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.PrimaryKeyValue).SetAsNull)
        Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.PrimaryKeyValue).Value = Entity.PrimaryKeyValue;
      if(!Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.RecordTag).SetAsNull)
        Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.RecordTag).Value = Entity.RecordTag;
      if(!Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.AuditXml).SetAsNull)
        Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.AuditXml).Value = Entity.AuditXml;
      if(!Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.ColumnName).SetAsNull)
        Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.ColumnName).Value = Entity.ColumnName;
      if(!Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.OriginalValue).SetAsNull)
        Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.OriginalValue).Value = Entity.OriginalValue;
      if(!Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.NewValue).SetAsNull)
        Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.NewValue).Value = Entity.NewValue;
      if(!Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.OriginalBinaryValue).SetAsNull)
        Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.OriginalBinaryValue).Value = Entity.OriginalBinaryValue;
      if(!Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.NewBinaryValue).SetAsNull)
        Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.NewBinaryValue).Value = Entity.NewBinaryValue;
      if(!Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.InsertName).SetAsNull)
        Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.InsertName).Value = Entity.InsertName;
      if(!Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.InsertDate).SetAsNull)
        Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.InsertDate).Value = Entity.InsertDate;
    }

    /// <summary>
    /// Moves the Properties collection objects into the Entity properties
    /// </summary>
    protected override void PropertiesToEntityData()
    {
      if (Properties == null)
        InitProperties();

      if(Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.AuditId).IsNull == false)
        Entity.AuditId = Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.AuditId).GetAsGuid();
      if(Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.TransactionId).IsNull == false)
        Entity.TransactionId = Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.TransactionId).GetAsGuid();
      if(Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.TableName).IsNull == false)
        Entity.TableName = Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.TableName).GetAsString();
      if(Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.OperationType).IsNull == false)
        Entity.OperationType = Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.OperationType).GetAsString();
      if(Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.PrimaryKeyColumn).IsNull == false)
        Entity.PrimaryKeyColumn = Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.PrimaryKeyColumn).GetAsString();
      if(Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.PrimaryKeyValue).IsNull == false)
        Entity.PrimaryKeyValue = Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.PrimaryKeyValue).GetAsGuid();
      if(Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.RecordTag).IsNull == false)
        Entity.RecordTag = Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.RecordTag).GetAsString();
      if(Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.AuditXml).IsNull == false)
        Entity.AuditXml = Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.AuditXml).GetAsString();
      if(Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.ColumnName).IsNull == false)
        Entity.ColumnName = Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.ColumnName).GetAsString();
      if(Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.OriginalValue).IsNull == false)
        Entity.OriginalValue = Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.OriginalValue).GetAsString();
      if(Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.NewValue).IsNull == false)
        Entity.NewValue = Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.NewValue).GetAsString();
      if(Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.OriginalBinaryValue).IsNull == false)
        Entity.OriginalBinaryValue = Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.OriginalBinaryValue).GetAsByteArray();
      if(Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.NewBinaryValue).IsNull == false)
        Entity.NewBinaryValue = Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.NewBinaryValue).GetAsByteArray();
      if(Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.InsertName).IsNull == false)
        Entity.InsertName = Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.InsertName).GetAsString();
      if(Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.InsertDate).IsNull == false)
        Entity.InsertDate = Properties.GetByName(gcsAuditPDSAValidator.ColumnNames.InsertDate).GetAsDateTimeOffset();
    }
    #endregion
    
    #region ColumnNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the gcsAuditPDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ColumnNames
    {
    /// <summary>
    /// Returns 'AuditId'
    /// </summary>
    public static string AuditId = "AuditId";
    /// <summary>
    /// Returns 'TransactionId'
    /// </summary>
    public static string TransactionId = "TransactionId";
    /// <summary>
    /// Returns 'TableName'
    /// </summary>
    public static string TableName = "TableName";
    /// <summary>
    /// Returns 'OperationType'
    /// </summary>
    public static string OperationType = "OperationType";
    /// <summary>
    /// Returns 'PrimaryKeyColumn'
    /// </summary>
    public static string PrimaryKeyColumn = "PrimaryKeyColumn";
    /// <summary>
    /// Returns 'PrimaryKeyValue'
    /// </summary>
    public static string PrimaryKeyValue = "PrimaryKeyValue";
    /// <summary>
    /// Returns 'RecordTag'
    /// </summary>
    public static string RecordTag = "RecordTag";
    /// <summary>
    /// Returns 'AuditXml'
    /// </summary>
    public static string AuditXml = "AuditXml";
    /// <summary>
    /// Returns 'ColumnName'
    /// </summary>
    public static string ColumnName = "ColumnName";
    /// <summary>
    /// Returns 'OriginalValue'
    /// </summary>
    public static string OriginalValue = "OriginalValue";
    /// <summary>
    /// Returns 'NewValue'
    /// </summary>
    public static string NewValue = "NewValue";
    /// <summary>
    /// Returns 'OriginalBinaryValue'
    /// </summary>
    public static string OriginalBinaryValue = "OriginalBinaryValue";
    /// <summary>
    /// Returns 'NewBinaryValue'
    /// </summary>
    public static string NewBinaryValue = "NewBinaryValue";
    /// <summary>
    /// Returns 'InsertName'
    /// </summary>
    public static string InsertName = "InsertName";
    /// <summary>
    /// Returns 'InsertDate'
    /// </summary>
    public static string InsertDate = "InsertDate";
    }
    #endregion
  }
}
