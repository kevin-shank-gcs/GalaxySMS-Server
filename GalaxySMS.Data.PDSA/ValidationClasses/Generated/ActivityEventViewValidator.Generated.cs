using System;

using PDSA.Validation;

using GalaxySMS.EntityLayer;

namespace GalaxySMS.ValidationLayer
{
  /// <summary>
  /// Used to validate all properties of the ActivityEventViewPDSA class.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public partial class ActivityEventViewPDSAValidator : PDSAValidatorBase
  {
    #region Public Entity Property
    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    private ActivityEventViewPDSA _Entity = null;

    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    public new ActivityEventViewPDSA Entity
    {
      get { return _Entity; }
      set
      {
        _Entity = value;
        base.Entity = value;
      }
    }
    #endregion
    
    #region Clone Entity Class
    /// <summary>
    /// Clones the current ActivityEventViewPDSA
    /// </summary>
    /// <returns>A cloned ActivityEventViewPDSA object</returns>
    public ActivityEventViewPDSA CloneEntity()
    {
      return CloneEntity(this.Entity);
    }
    
    /// <summary>
    /// Clones the passed in ActivityEventViewPDSA
    /// </summary>
    /// <param name="entityToClone">The ActivityEventViewPDSA entity to clone</param>
    /// <returns>A cloned ActivityEventViewPDSA object</returns>
    public ActivityEventViewPDSA CloneEntity(ActivityEventViewPDSA entityToClone)
    {
      ActivityEventViewPDSA newEntity = new ActivityEventViewPDSA();

      newEntity.ActivityDateTime = entityToClone.ActivityDateTime;
      newEntity.ActivityDateTimeUTC = entityToClone.ActivityDateTimeUTC;
      newEntity.EventTypeMessage = entityToClone.EventTypeMessage;
      newEntity.ForeColor = entityToClone.ForeColor;
      newEntity.ForeColorHex = entityToClone.ForeColorHex;
      newEntity.DeviceName = entityToClone.DeviceName;
      newEntity.SiteName = entityToClone.SiteName;
      newEntity.EntityId = entityToClone.EntityId;
      newEntity.DeviceUid = entityToClone.DeviceUid;
      newEntity.EventTypeUid = entityToClone.EventTypeUid;
      newEntity.DeviceType = entityToClone.DeviceType;
      newEntity.LastName = entityToClone.LastName;
      newEntity.FirstName = entityToClone.FirstName;
      newEntity.IsTraced = entityToClone.IsTraced;
      newEntity.CredentialDescription = entityToClone.CredentialDescription;
      newEntity.PersonUid = entityToClone.PersonUid;
      newEntity.CredentialUid = entityToClone.CredentialUid;
      newEntity.ClusterUid = entityToClone.ClusterUid;
      newEntity.ClusterNumber = entityToClone.ClusterNumber;
      newEntity.ClusterName = entityToClone.ClusterName;
      newEntity.ClusterGroupId = entityToClone.ClusterGroupId;
      newEntity.PanelNumber = entityToClone.PanelNumber;
      newEntity.InputOutputGroupName = entityToClone.InputOutputGroupName;
      newEntity.InputOutputGroupNumber = entityToClone.InputOutputGroupNumber;
      newEntity.CpuNumber = entityToClone.CpuNumber;
      newEntity.BoardNumber = entityToClone.BoardNumber;
      newEntity.SectionNumber = entityToClone.SectionNumber;
      newEntity.ModuleNumber = entityToClone.ModuleNumber;
      newEntity.NodeNumber = entityToClone.NodeNumber;
      newEntity.ActivityEventUid = entityToClone.ActivityEventUid;
      newEntity.AlarmPriority = entityToClone.AlarmPriority;
      newEntity.ResponseRequired = entityToClone.ResponseRequired;
      newEntity.AcknowledgedTime = entityToClone.AcknowledgedTime;
      newEntity.AcknowledgeComment = entityToClone.AcknowledgeComment;
      newEntity.IsAcknowledgeable = entityToClone.IsAcknowledgeable;
      newEntity.IsAcknowledged = entityToClone.IsAcknowledged;
      newEntity.AcknowledgedByUser = entityToClone.AcknowledgedByUser;
      newEntity.EntityName = entityToClone.EntityName;
      newEntity.EntityType = entityToClone.EntityType;
      newEntity.AckCount = entityToClone.AckCount;
      newEntity.TotalRecordCount = entityToClone.TotalRecordCount;
      newEntity.PageNumber = entityToClone.PageNumber;
      newEntity.PageSize = entityToClone.PageSize;

      return newEntity;
    }
    #endregion

    #region CreateProperties Method
    /// <summary>
    /// Creates the collection of PDSAProperty objects. These are used to control validation and null handling.
    /// </summary>
    /// <returns>A collection of PDSAProperty objects</returns>
    public override PDSAProperties CreateProperties()
    {
      PDSAProperties props = new PDSAProperties();
      
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.ActivityDateTime, GetResourceMessage("GCS_ActivityEventViewPDSA_ActivityDateTime_Header", "Activity Date Time"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_ActivityEventViewPDSA_ActivityDateTime_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.ActivityDateTimeUTC, GetResourceMessage("GCS_ActivityEventViewPDSA_ActivityDateTimeUTC_Header", "Activity Date Time UTC"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_ActivityEventViewPDSA_ActivityDateTimeUTC_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.EventTypeMessage, GetResourceMessage("GCS_ActivityEventViewPDSA_EventTypeMessage_Header", "Event Type Message"), false, typeof(string), 65, GetResourceMessage("GCS_ActivityEventViewPDSA_EventTypeMessage_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.ForeColor, GetResourceMessage("GCS_ActivityEventViewPDSA_ForeColor_Header", "Fore Color"), false, typeof(int), 10, GetResourceMessage("GCS_ActivityEventViewPDSA_ForeColor_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.ForeColorHex, GetResourceMessage("GCS_ActivityEventViewPDSA_ForeColorHex_Header", "Fore Color Hex"), false, typeof(string), 20, GetResourceMessage("GCS_ActivityEventViewPDSA_ForeColorHex_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.DeviceName, GetResourceMessage("GCS_ActivityEventViewPDSA_DeviceName_Header", "Device Name"), false, typeof(string), 65, GetResourceMessage("GCS_ActivityEventViewPDSA_DeviceName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.SiteName, GetResourceMessage("GCS_ActivityEventViewPDSA_SiteName_Header", "Site Name"), false, typeof(string), 65, GetResourceMessage("GCS_ActivityEventViewPDSA_SiteName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.EntityId, GetResourceMessage("GCS_ActivityEventViewPDSA_EntityId_Header", "Entity Id"), false, typeof(Guid), -1, GetResourceMessage("GCS_ActivityEventViewPDSA_EntityId_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.DeviceUid, GetResourceMessage("GCS_ActivityEventViewPDSA_DeviceUid_Header", "Device Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_ActivityEventViewPDSA_DeviceUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.EventTypeUid, GetResourceMessage("GCS_ActivityEventViewPDSA_EventTypeUid_Header", "Event Type Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_ActivityEventViewPDSA_EventTypeUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.DeviceType, GetResourceMessage("GCS_ActivityEventViewPDSA_DeviceType_Header", "Device Type"), false, typeof(string), 65, GetResourceMessage("GCS_ActivityEventViewPDSA_DeviceType_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.LastName, GetResourceMessage("GCS_ActivityEventViewPDSA_LastName_Header", "Last Name"), false, typeof(string), 65, GetResourceMessage("GCS_ActivityEventViewPDSA_LastName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.FirstName, GetResourceMessage("GCS_ActivityEventViewPDSA_FirstName_Header", "First Name"), false, typeof(string), 65, GetResourceMessage("GCS_ActivityEventViewPDSA_FirstName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.IsTraced, GetResourceMessage("GCS_ActivityEventViewPDSA_IsTraced_Header", "Is Traced"), false, typeof(bool), -1, GetResourceMessage("GCS_ActivityEventViewPDSA_IsTraced_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.CredentialDescription, GetResourceMessage("GCS_ActivityEventViewPDSA_CredentialDescription_Header", "Credential Description"), false, typeof(string), 65, GetResourceMessage("GCS_ActivityEventViewPDSA_CredentialDescription_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.PersonUid, GetResourceMessage("GCS_ActivityEventViewPDSA_PersonUid_Header", "Person Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_ActivityEventViewPDSA_PersonUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.CredentialUid, GetResourceMessage("GCS_ActivityEventViewPDSA_CredentialUid_Header", "Credential Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_ActivityEventViewPDSA_CredentialUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.ClusterUid, GetResourceMessage("GCS_ActivityEventViewPDSA_ClusterUid_Header", "Cluster Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_ActivityEventViewPDSA_ClusterUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.ClusterNumber, GetResourceMessage("GCS_ActivityEventViewPDSA_ClusterNumber_Header", "Cluster Number"), false, typeof(int), 10, GetResourceMessage("GCS_ActivityEventViewPDSA_ClusterNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.ClusterName, GetResourceMessage("GCS_ActivityEventViewPDSA_ClusterName_Header", "Cluster Name"), false, typeof(string), 65, GetResourceMessage("GCS_ActivityEventViewPDSA_ClusterName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.ClusterGroupId, GetResourceMessage("GCS_ActivityEventViewPDSA_ClusterGroupId_Header", "Cluster Group Id"), false, typeof(int), 10, GetResourceMessage("GCS_ActivityEventViewPDSA_ClusterGroupId_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.PanelNumber, GetResourceMessage("GCS_ActivityEventViewPDSA_PanelNumber_Header", "Panel Number"), false, typeof(int), 10, GetResourceMessage("GCS_ActivityEventViewPDSA_PanelNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.InputOutputGroupName, GetResourceMessage("GCS_ActivityEventViewPDSA_InputOutputGroupName_Header", "Input Output Group Name"), false, typeof(string), 65, GetResourceMessage("GCS_ActivityEventViewPDSA_InputOutputGroupName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.InputOutputGroupNumber, GetResourceMessage("GCS_ActivityEventViewPDSA_InputOutputGroupNumber_Header", "Input Output Group Number"), false, typeof(int), 10, GetResourceMessage("GCS_ActivityEventViewPDSA_InputOutputGroupNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.CpuNumber, GetResourceMessage("GCS_ActivityEventViewPDSA_CpuNumber_Header", "Cpu Number"), false, typeof(short), 5, GetResourceMessage("GCS_ActivityEventViewPDSA_CpuNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.BoardNumber, GetResourceMessage("GCS_ActivityEventViewPDSA_BoardNumber_Header", "Board Number"), false, typeof(short), 5, GetResourceMessage("GCS_ActivityEventViewPDSA_BoardNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.SectionNumber, GetResourceMessage("GCS_ActivityEventViewPDSA_SectionNumber_Header", "Section Number"), false, typeof(short), 5, GetResourceMessage("GCS_ActivityEventViewPDSA_SectionNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.ModuleNumber, GetResourceMessage("GCS_ActivityEventViewPDSA_ModuleNumber_Header", "Module Number"), false, typeof(short), 5, GetResourceMessage("GCS_ActivityEventViewPDSA_ModuleNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.NodeNumber, GetResourceMessage("GCS_ActivityEventViewPDSA_NodeNumber_Header", "Node Number"), false, typeof(short), 5, GetResourceMessage("GCS_ActivityEventViewPDSA_NodeNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.ActivityEventUid, GetResourceMessage("GCS_ActivityEventViewPDSA_ActivityEventUid_Header", "Activity Event Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_ActivityEventViewPDSA_ActivityEventUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.AlarmPriority, GetResourceMessage("GCS_ActivityEventViewPDSA_AlarmPriority_Header", "Alarm Priority"), false, typeof(int), 10, GetResourceMessage("GCS_ActivityEventViewPDSA_AlarmPriority_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.ResponseRequired, GetResourceMessage("GCS_ActivityEventViewPDSA_ResponseRequired_Header", "Response Required"), false, typeof(bool), -1, GetResourceMessage("GCS_ActivityEventViewPDSA_ResponseRequired_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.AcknowledgedTime, GetResourceMessage("GCS_ActivityEventViewPDSA_AcknowledgedTime_Header", "Acknowledged Time"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_ActivityEventViewPDSA_AcknowledgedTime_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.AcknowledgeComment, GetResourceMessage("GCS_ActivityEventViewPDSA_AcknowledgeComment_Header", "Acknowledge Comment"), false, typeof(string), 1000, GetResourceMessage("GCS_ActivityEventViewPDSA_AcknowledgeComment_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.IsAcknowledgeable, GetResourceMessage("GCS_ActivityEventViewPDSA_IsAcknowledgeable_Header", "Is Acknowledgeable"), false, typeof(int), 10, GetResourceMessage("GCS_ActivityEventViewPDSA_IsAcknowledgeable_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.IsAcknowledged, GetResourceMessage("GCS_ActivityEventViewPDSA_IsAcknowledged_Header", "Is Acknowledged"), false, typeof(int), 10, GetResourceMessage("GCS_ActivityEventViewPDSA_IsAcknowledged_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.AcknowledgedByUser, GetResourceMessage("GCS_ActivityEventViewPDSA_AcknowledgedByUser_Header", "Acknowledged By User"), false, typeof(string), 100, GetResourceMessage("GCS_ActivityEventViewPDSA_AcknowledgedByUser_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.EntityName, GetResourceMessage("GCS_ActivityEventViewPDSA_EntityName_Header", "Entity Name"), false, typeof(string), 65, GetResourceMessage("GCS_ActivityEventViewPDSA_EntityName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.EntityType, GetResourceMessage("GCS_ActivityEventViewPDSA_EntityType_Header", "Entity Type"), false, typeof(string), 65, GetResourceMessage("GCS_ActivityEventViewPDSA_EntityType_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.AckCount, GetResourceMessage("GCS_ActivityEventViewPDSA_AckCount_Header", "Ack Count"), false, typeof(int), 10, GetResourceMessage("GCS_ActivityEventViewPDSA_AckCount_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.TotalRecordCount, GetResourceMessage("GCS_ActivityEventViewPDSA_TotalRecordCount_Header", "Total Record Count"), false, typeof(int), 10, GetResourceMessage("GCS_ActivityEventViewPDSA_TotalRecordCount_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.PageNumber, GetResourceMessage("GCS_ActivityEventViewPDSA_PageNumber_Header", "Page Number"), false, typeof(int), 10, GetResourceMessage("GCS_ActivityEventViewPDSA_PageNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(ActivityEventViewPDSAValidator.ColumnNames.PageSize, GetResourceMessage("GCS_ActivityEventViewPDSA_PageSize_Header", "Page Size"), false, typeof(int), 10, GetResourceMessage("GCS_ActivityEventViewPDSA_PageSize_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      
      return props;
    }
    #endregion

    #region Initialize Entity
    /// <summary>
    /// This method is called from the CreateNewEntity Method. All the properties for the Entity are set to default values here by the code generator.
    /// </summary>
    protected override void InitializeEntity()
    {
      Entity.ActivityDateTime = DateTimeOffset.Now;
      Entity.ActivityDateTimeUTC = DateTimeOffset.Now;
      Entity.EventTypeMessage = string.Empty;
      Entity.ForeColor = 0;
      Entity.ForeColorHex = string.Empty;
      Entity.DeviceName = string.Empty;
      Entity.SiteName = string.Empty;
      Entity.EntityId = Guid.Empty;
      Entity.DeviceUid = Guid.Empty;
      Entity.EventTypeUid = Guid.Empty;
      Entity.DeviceType = string.Empty;
      Entity.LastName = string.Empty;
      Entity.FirstName = string.Empty;
      Entity.IsTraced = false;
      Entity.CredentialDescription = string.Empty;
      Entity.PersonUid = Guid.Empty;
      Entity.CredentialUid = Guid.Empty;
      Entity.ClusterUid = Guid.Empty;
      Entity.ClusterNumber = 0;
      Entity.ClusterName = string.Empty;
      Entity.ClusterGroupId = 0;
      Entity.PanelNumber = 0;
      Entity.InputOutputGroupName = string.Empty;
      Entity.InputOutputGroupNumber = 0;
      Entity.CpuNumber = 0;
      Entity.BoardNumber = 0;
      Entity.SectionNumber = 0;
      Entity.ModuleNumber = 0;
      Entity.NodeNumber = 0;
      Entity.ActivityEventUid = Guid.Empty;
      Entity.AlarmPriority = 0;
      Entity.ResponseRequired = false;
      Entity.AcknowledgedTime = DateTimeOffset.Now;
      Entity.AcknowledgeComment = string.Empty;
      Entity.IsAcknowledgeable = 0;
      Entity.IsAcknowledged = 0;
      Entity.AcknowledgedByUser = string.Empty;
      Entity.EntityName = string.Empty;
      Entity.EntityType = string.Empty;
      Entity.AckCount = 0;
      Entity.TotalRecordCount = 0;
      Entity.PageNumber = 0;
      Entity.PageSize = 0;

      Entity.ResetAllIsDirtyProperties();
    }
    #endregion
    
    #region InitProperties Method
    /// <summary>
    /// Called by the constructor to create the PDSAProperties collection of all properties that will be validated.
    /// </summary>
    protected override void InitProperties()
    {
      // Set the Properties collection to the collection of Entity Properties
      Properties = CreateProperties();
    }
    #endregion

    #region EntityDataToProperties Method
    /// <summary>
    /// Moves the Entity class data into the Properties collection.
    /// </summary>
    protected override void EntityDataToProperties()
    {
      if (Properties == null)
        InitProperties();
      
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ActivityDateTime).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ActivityDateTime).Value = Entity.ActivityDateTime;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ActivityDateTimeUTC).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ActivityDateTimeUTC).Value = Entity.ActivityDateTimeUTC;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.EventTypeMessage).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.EventTypeMessage).Value = Entity.EventTypeMessage;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ForeColor).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ForeColor).Value = Entity.ForeColor;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ForeColorHex).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ForeColorHex).Value = Entity.ForeColorHex;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.DeviceName).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.DeviceName).Value = Entity.DeviceName;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.SiteName).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.SiteName).Value = Entity.SiteName;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.EntityId).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.EntityId).Value = Entity.EntityId;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.DeviceUid).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.DeviceUid).Value = Entity.DeviceUid;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.EventTypeUid).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.EventTypeUid).Value = Entity.EventTypeUid;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.DeviceType).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.DeviceType).Value = Entity.DeviceType;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.LastName).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.LastName).Value = Entity.LastName;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.FirstName).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.FirstName).Value = Entity.FirstName;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.IsTraced).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.IsTraced).Value = Entity.IsTraced;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.CredentialDescription).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.CredentialDescription).Value = Entity.CredentialDescription;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.PersonUid).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.PersonUid).Value = Entity.PersonUid;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.CredentialUid).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.CredentialUid).Value = Entity.CredentialUid;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ClusterUid).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ClusterUid).Value = Entity.ClusterUid;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ClusterNumber).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ClusterNumber).Value = Entity.ClusterNumber;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ClusterName).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ClusterName).Value = Entity.ClusterName;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ClusterGroupId).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ClusterGroupId).Value = Entity.ClusterGroupId;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.PanelNumber).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.PanelNumber).Value = Entity.PanelNumber;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.InputOutputGroupName).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.InputOutputGroupName).Value = Entity.InputOutputGroupName;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.InputOutputGroupNumber).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.InputOutputGroupNumber).Value = Entity.InputOutputGroupNumber;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.CpuNumber).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.CpuNumber).Value = Entity.CpuNumber;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.BoardNumber).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.BoardNumber).Value = Entity.BoardNumber;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.SectionNumber).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.SectionNumber).Value = Entity.SectionNumber;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ModuleNumber).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ModuleNumber).Value = Entity.ModuleNumber;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.NodeNumber).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.NodeNumber).Value = Entity.NodeNumber;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ActivityEventUid).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ActivityEventUid).Value = Entity.ActivityEventUid;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.AlarmPriority).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.AlarmPriority).Value = Entity.AlarmPriority;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ResponseRequired).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ResponseRequired).Value = Entity.ResponseRequired;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.AcknowledgedTime).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.AcknowledgedTime).Value = Entity.AcknowledgedTime;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.AcknowledgeComment).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.AcknowledgeComment).Value = Entity.AcknowledgeComment;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.IsAcknowledgeable).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.IsAcknowledgeable).Value = Entity.IsAcknowledgeable;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.IsAcknowledged).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.IsAcknowledged).Value = Entity.IsAcknowledged;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.AcknowledgedByUser).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.AcknowledgedByUser).Value = Entity.AcknowledgedByUser;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.EntityName).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.EntityName).Value = Entity.EntityName;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.EntityType).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.EntityType).Value = Entity.EntityType;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.AckCount).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.AckCount).Value = Entity.AckCount;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.TotalRecordCount).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.TotalRecordCount).Value = Entity.TotalRecordCount;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.PageNumber).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.PageNumber).Value = Entity.PageNumber;
      if(!Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.PageSize).SetAsNull)
        Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.PageSize).Value = Entity.PageSize;
    }

    /// <summary>
    /// Moves the Properties collection objects into the Entity properties
    /// </summary>
    protected override void PropertiesToEntityData()
    {
      if (Properties == null)
        InitProperties();

      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ActivityDateTime).IsNull == false)
        Entity.ActivityDateTime = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ActivityDateTime).GetAsDateTimeOffset();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ActivityDateTimeUTC).IsNull == false)
        Entity.ActivityDateTimeUTC = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ActivityDateTimeUTC).GetAsDateTimeOffset();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.EventTypeMessage).IsNull == false)
        Entity.EventTypeMessage = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.EventTypeMessage).GetAsString();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ForeColor).IsNull == false)
        Entity.ForeColor = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ForeColor).GetAsInteger();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ForeColorHex).IsNull == false)
        Entity.ForeColorHex = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ForeColorHex).GetAsString();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.DeviceName).IsNull == false)
        Entity.DeviceName = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.DeviceName).GetAsString();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.SiteName).IsNull == false)
        Entity.SiteName = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.SiteName).GetAsString();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.EntityId).IsNull == false)
        Entity.EntityId = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.EntityId).GetAsGuid();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.DeviceUid).IsNull == false)
        Entity.DeviceUid = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.DeviceUid).GetAsGuid();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.EventTypeUid).IsNull == false)
        Entity.EventTypeUid = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.EventTypeUid).GetAsGuid();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.DeviceType).IsNull == false)
        Entity.DeviceType = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.DeviceType).GetAsString();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.LastName).IsNull == false)
        Entity.LastName = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.LastName).GetAsString();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.FirstName).IsNull == false)
        Entity.FirstName = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.FirstName).GetAsString();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.IsTraced).IsNull == false)
        Entity.IsTraced = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.IsTraced).GetAsBool();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.CredentialDescription).IsNull == false)
        Entity.CredentialDescription = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.CredentialDescription).GetAsString();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.PersonUid).IsNull == false)
        Entity.PersonUid = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.PersonUid).GetAsGuid();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.CredentialUid).IsNull == false)
        Entity.CredentialUid = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.CredentialUid).GetAsGuid();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ClusterUid).IsNull == false)
        Entity.ClusterUid = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ClusterUid).GetAsGuid();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ClusterNumber).IsNull == false)
        Entity.ClusterNumber = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ClusterNumber).GetAsInteger();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ClusterName).IsNull == false)
        Entity.ClusterName = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ClusterName).GetAsString();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ClusterGroupId).IsNull == false)
        Entity.ClusterGroupId = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ClusterGroupId).GetAsInteger();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.PanelNumber).IsNull == false)
        Entity.PanelNumber = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.PanelNumber).GetAsInteger();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.InputOutputGroupName).IsNull == false)
        Entity.InputOutputGroupName = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.InputOutputGroupName).GetAsString();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.InputOutputGroupNumber).IsNull == false)
        Entity.InputOutputGroupNumber = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.InputOutputGroupNumber).GetAsInteger();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.CpuNumber).IsNull == false)
        Entity.CpuNumber = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.CpuNumber).GetAsShort();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.BoardNumber).IsNull == false)
        Entity.BoardNumber = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.BoardNumber).GetAsShort();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.SectionNumber).IsNull == false)
        Entity.SectionNumber = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.SectionNumber).GetAsShort();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ModuleNumber).IsNull == false)
        Entity.ModuleNumber = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ModuleNumber).GetAsShort();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.NodeNumber).IsNull == false)
        Entity.NodeNumber = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.NodeNumber).GetAsShort();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ActivityEventUid).IsNull == false)
        Entity.ActivityEventUid = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ActivityEventUid).GetAsGuid();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.AlarmPriority).IsNull == false)
        Entity.AlarmPriority = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.AlarmPriority).GetAsInteger();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ResponseRequired).IsNull == false)
        Entity.ResponseRequired = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.ResponseRequired).GetAsBool();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.AcknowledgedTime).IsNull == false)
        Entity.AcknowledgedTime = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.AcknowledgedTime).GetAsDateTimeOffset();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.AcknowledgeComment).IsNull == false)
        Entity.AcknowledgeComment = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.AcknowledgeComment).GetAsString();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.IsAcknowledgeable).IsNull == false)
        Entity.IsAcknowledgeable = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.IsAcknowledgeable).GetAsInteger();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.IsAcknowledged).IsNull == false)
        Entity.IsAcknowledged = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.IsAcknowledged).GetAsInteger();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.AcknowledgedByUser).IsNull == false)
        Entity.AcknowledgedByUser = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.AcknowledgedByUser).GetAsString();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.EntityName).IsNull == false)
        Entity.EntityName = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.EntityName).GetAsString();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.EntityType).IsNull == false)
        Entity.EntityType = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.EntityType).GetAsString();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.AckCount).IsNull == false)
        Entity.AckCount = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.AckCount).GetAsInteger();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.TotalRecordCount).IsNull == false)
        Entity.TotalRecordCount = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.TotalRecordCount).GetAsInteger();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.PageNumber).IsNull == false)
        Entity.PageNumber = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.PageNumber).GetAsInteger();
      if(Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.PageSize).IsNull == false)
        Entity.PageSize = Properties.GetByName(ActivityEventViewPDSAValidator.ColumnNames.PageSize).GetAsInteger();
    }
    #endregion
    
    #region ColumnNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the ActivityEventViewPDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ColumnNames
    {
    /// <summary>
    /// Returns 'ActivityDateTime'
    /// </summary>
    public static string ActivityDateTime = "ActivityDateTime";
    /// <summary>
    /// Returns 'ActivityDateTimeUTC'
    /// </summary>
    public static string ActivityDateTimeUTC = "ActivityDateTimeUTC";
    /// <summary>
    /// Returns 'EventTypeMessage'
    /// </summary>
    public static string EventTypeMessage = "EventTypeMessage";
    /// <summary>
    /// Returns 'ForeColor'
    /// </summary>
    public static string ForeColor = "ForeColor";
    /// <summary>
    /// Returns 'ForeColorHex'
    /// </summary>
    public static string ForeColorHex = "ForeColorHex";
    /// <summary>
    /// Returns 'DeviceName'
    /// </summary>
    public static string DeviceName = "DeviceName";
    /// <summary>
    /// Returns 'SiteName'
    /// </summary>
    public static string SiteName = "SiteName";
    /// <summary>
    /// Returns 'EntityId'
    /// </summary>
    public static string EntityId = "EntityId";
    /// <summary>
    /// Returns 'DeviceUid'
    /// </summary>
    public static string DeviceUid = "DeviceUid";
    /// <summary>
    /// Returns 'EventTypeUid'
    /// </summary>
    public static string EventTypeUid = "EventTypeUid";
    /// <summary>
    /// Returns 'DeviceType'
    /// </summary>
    public static string DeviceType = "DeviceType";
    /// <summary>
    /// Returns 'LastName'
    /// </summary>
    public static string LastName = "LastName";
    /// <summary>
    /// Returns 'FirstName'
    /// </summary>
    public static string FirstName = "FirstName";
    /// <summary>
    /// Returns 'IsTraced'
    /// </summary>
    public static string IsTraced = "IsTraced";
    /// <summary>
    /// Returns 'CredentialDescription'
    /// </summary>
    public static string CredentialDescription = "CredentialDescription";
    /// <summary>
    /// Returns 'PersonUid'
    /// </summary>
    public static string PersonUid = "PersonUid";
    /// <summary>
    /// Returns 'CredentialUid'
    /// </summary>
    public static string CredentialUid = "CredentialUid";
    /// <summary>
    /// Returns 'ClusterUid'
    /// </summary>
    public static string ClusterUid = "ClusterUid";
    /// <summary>
    /// Returns 'ClusterNumber'
    /// </summary>
    public static string ClusterNumber = "ClusterNumber";
    /// <summary>
    /// Returns 'ClusterName'
    /// </summary>
    public static string ClusterName = "ClusterName";
    /// <summary>
    /// Returns 'ClusterGroupId'
    /// </summary>
    public static string ClusterGroupId = "ClusterGroupId";
    /// <summary>
    /// Returns 'PanelNumber'
    /// </summary>
    public static string PanelNumber = "PanelNumber";
    /// <summary>
    /// Returns 'InputOutputGroupName'
    /// </summary>
    public static string InputOutputGroupName = "InputOutputGroupName";
    /// <summary>
    /// Returns 'InputOutputGroupNumber'
    /// </summary>
    public static string InputOutputGroupNumber = "InputOutputGroupNumber";
    /// <summary>
    /// Returns 'CpuNumber'
    /// </summary>
    public static string CpuNumber = "CpuNumber";
    /// <summary>
    /// Returns 'BoardNumber'
    /// </summary>
    public static string BoardNumber = "BoardNumber";
    /// <summary>
    /// Returns 'SectionNumber'
    /// </summary>
    public static string SectionNumber = "SectionNumber";
    /// <summary>
    /// Returns 'ModuleNumber'
    /// </summary>
    public static string ModuleNumber = "ModuleNumber";
    /// <summary>
    /// Returns 'NodeNumber'
    /// </summary>
    public static string NodeNumber = "NodeNumber";
    /// <summary>
    /// Returns 'ActivityEventUid'
    /// </summary>
    public static string ActivityEventUid = "ActivityEventUid";
    /// <summary>
    /// Returns 'AlarmPriority'
    /// </summary>
    public static string AlarmPriority = "AlarmPriority";
    /// <summary>
    /// Returns 'ResponseRequired'
    /// </summary>
    public static string ResponseRequired = "ResponseRequired";
    /// <summary>
    /// Returns 'AcknowledgedTime'
    /// </summary>
    public static string AcknowledgedTime = "AcknowledgedTime";
    /// <summary>
    /// Returns 'AcknowledgeComment'
    /// </summary>
    public static string AcknowledgeComment = "AcknowledgeComment";
    /// <summary>
    /// Returns 'IsAcknowledgeable'
    /// </summary>
    public static string IsAcknowledgeable = "IsAcknowledgeable";
    /// <summary>
    /// Returns 'IsAcknowledged'
    /// </summary>
    public static string IsAcknowledged = "IsAcknowledged";
    /// <summary>
    /// Returns 'AcknowledgedByUser'
    /// </summary>
    public static string AcknowledgedByUser = "AcknowledgedByUser";
    /// <summary>
    /// Returns 'EntityName'
    /// </summary>
    public static string EntityName = "EntityName";
    /// <summary>
    /// Returns 'EntityType'
    /// </summary>
    public static string EntityType = "EntityType";
    /// <summary>
    /// Returns 'AckCount'
    /// </summary>
    public static string AckCount = "AckCount";
    /// <summary>
    /// Returns 'TotalRecordCount'
    /// </summary>
    public static string TotalRecordCount = "TotalRecordCount";
    /// <summary>
    /// Returns 'PageNumber'
    /// </summary>
    public static string PageNumber = "PageNumber";
    /// <summary>
    /// Returns 'PageSize'
    /// </summary>
    public static string PageSize = "PageSize";
    }
    #endregion
  }
}
