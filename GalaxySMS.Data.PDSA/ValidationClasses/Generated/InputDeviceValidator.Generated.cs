using System;

using PDSA.Common;
using PDSA.Validation;

using GalaxySMS.EntityLayer;

namespace GalaxySMS.ValidationLayer
{
  /// <summary>
  /// Used to validate all properties of the InputDevicePDSA class.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public partial class InputDevicePDSAValidator : PDSAValidatorBase
  {
    #region Public Entity Property
    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    private InputDevicePDSA _Entity = null;

    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    public new InputDevicePDSA Entity
    {
      get { return _Entity; }
      set
      {
        _Entity = value;
        base.Entity = value;
      }
    }
    #endregion
    
    #region Clone Entity Class
    /// <summary>
    /// Clones the current InputDevicePDSA
    /// </summary>
    /// <returns>A cloned InputDevicePDSA object</returns>
    public InputDevicePDSA CloneEntity()
    {
      return CloneEntity(this.Entity);
    }
    
    /// <summary>
    /// Clones the passed in InputDevicePDSA
    /// </summary>
    /// <param name="entityToClone">The InputDevicePDSA entity to clone</param>
    /// <returns>A cloned InputDevicePDSA object</returns>
    public InputDevicePDSA CloneEntity(InputDevicePDSA entityToClone)
    {
      InputDevicePDSA newEntity = new InputDevicePDSA();

      newEntity.InputDeviceUid = entityToClone.InputDeviceUid;
      newEntity.EntityId = entityToClone.EntityId;
      newEntity.SiteUid = entityToClone.SiteUid;
      newEntity.BinaryResourceUid = entityToClone.BinaryResourceUid;
      newEntity.InputName = entityToClone.InputName;
      newEntity.Location = entityToClone.Location;
      newEntity.ServiceComment = entityToClone.ServiceComment;
      newEntity.CriticalityComment = entityToClone.CriticalityComment;
      newEntity.Comment = entityToClone.Comment;
      newEntity.EMailEventsEnabled = entityToClone.EMailEventsEnabled;
      newEntity.TransmitEventsEnabled = entityToClone.TransmitEventsEnabled;
      newEntity.FileOutputEnabled = entityToClone.FileOutputEnabled;
      newEntity.IsTemplate = entityToClone.IsTemplate;
      newEntity.InsertName = entityToClone.InsertName;
      newEntity.InsertDate = entityToClone.InsertDate;
      newEntity.UpdateName = entityToClone.UpdateName;
      newEntity.UpdateDate = entityToClone.UpdateDate;
      newEntity.ConcurrencyValue = entityToClone.ConcurrencyValue;
      newEntity.IsActive = entityToClone.IsActive;
      newEntity.RegionUid = entityToClone.RegionUid;
      newEntity.IsBoundToHardware = entityToClone.IsBoundToHardware;
      newEntity.RegionName = entityToClone.RegionName;
      newEntity.SiteName = entityToClone.SiteName;
      newEntity.ClusterGroupId = entityToClone.ClusterGroupId;
      newEntity.ClusterNumber = entityToClone.ClusterNumber;
      newEntity.PanelNumber = entityToClone.PanelNumber;
      newEntity.BoardNumber = entityToClone.BoardNumber;
      newEntity.SectionNumber = entityToClone.SectionNumber;
      newEntity.ModuleNumber = entityToClone.ModuleNumber;
      newEntity.NodeNumber = entityToClone.NodeNumber;
      newEntity.ClusterTypeUid = entityToClone.ClusterTypeUid;
      newEntity.TypeCode = entityToClone.TypeCode;
      newEntity.ClusterTypeCode = entityToClone.ClusterTypeCode;
      newEntity.GalaxyPanelModelUid = entityToClone.GalaxyPanelModelUid;
      newEntity.GalaxyPanelTypeCode = entityToClone.GalaxyPanelTypeCode;
      newEntity.InterfaceBoardTypeUid = entityToClone.InterfaceBoardTypeUid;
      newEntity.InterfaceBoardTypeCode = entityToClone.InterfaceBoardTypeCode;
      newEntity.InterfaceBoardModel = entityToClone.InterfaceBoardModel;
      newEntity.InterfaceBoardSectionModeUid = entityToClone.InterfaceBoardSectionModeUid;
      newEntity.InterfaceBoardSectionModeCode = entityToClone.InterfaceBoardSectionModeCode;
      newEntity.GalaxyHardwareModuleTypeUid = entityToClone.GalaxyHardwareModuleTypeUid;
      newEntity.ModuleTypeCode = entityToClone.ModuleTypeCode;
      newEntity.IsNodeActive = entityToClone.IsNodeActive;
      newEntity.ClusterUid = entityToClone.ClusterUid;
      newEntity.GalaxyPanelUid = entityToClone.GalaxyPanelUid;
      newEntity.PageNumber = entityToClone.PageNumber;
      newEntity.PageSize = entityToClone.PageSize;
      newEntity.TotalRowCount = entityToClone.TotalRowCount;
      newEntity.SortColumn = entityToClone.SortColumn;
      newEntity.DescendingOrder = entityToClone.DescendingOrder;

      return newEntity;
    }
    #endregion

    #region CreateProperties Method
    /// <summary>
    /// Creates the collection of PDSAProperty objects. These are used to control validation and null handling.
    /// </summary>
    /// <returns>A collection of PDSAProperty objects</returns>
    public override PDSAProperties CreateProperties()
    {
      PDSAProperties props = new PDSAProperties();
      
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.InputDeviceUid, GetResourceMessage("GCS_InputDevicePDSA_InputDeviceUid_Header", "Input Device Uid"), true, typeof(Guid), -1, GetResourceMessage("GCS_InputDevicePDSA_InputDeviceUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.EntityId, GetResourceMessage("GCS_InputDevicePDSA_EntityId_Header", "Entity Id"), true, typeof(Guid), -1, GetResourceMessage("GCS_InputDevicePDSA_EntityId_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.SiteUid, GetResourceMessage("GCS_InputDevicePDSA_SiteUid_Header", "Site Uid"), true, typeof(Guid), -1, GetResourceMessage("GCS_InputDevicePDSA_SiteUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.BinaryResourceUid, GetResourceMessage("GCS_InputDevicePDSA_BinaryResourceUid_Header", "Binary Resource Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_InputDevicePDSA_BinaryResourceUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.InputName, GetResourceMessage("GCS_InputDevicePDSA_InputName_Header", "Input Name"), true, typeof(string), 65, GetResourceMessage("GCS_InputDevicePDSA_InputName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.Location, GetResourceMessage("GCS_InputDevicePDSA_Location_Header", "Location"), false, typeof(string), 255, GetResourceMessage("GCS_InputDevicePDSA_Location_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.ServiceComment, GetResourceMessage("GCS_InputDevicePDSA_ServiceComment_Header", "Service Comment"), false, typeof(string), 1000, GetResourceMessage("GCS_InputDevicePDSA_ServiceComment_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.CriticalityComment, GetResourceMessage("GCS_InputDevicePDSA_CriticalityComment_Header", "Criticality Comment"), false, typeof(string), 1000, GetResourceMessage("GCS_InputDevicePDSA_CriticalityComment_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.Comment, GetResourceMessage("GCS_InputDevicePDSA_Comment_Header", "Comment"), false, typeof(string), 1000, GetResourceMessage("GCS_InputDevicePDSA_Comment_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.EMailEventsEnabled, GetResourceMessage("GCS_InputDevicePDSA_EMailEventsEnabled_Header", "E Mail Events Enabled"), true, typeof(bool), -1, GetResourceMessage("GCS_InputDevicePDSA_EMailEventsEnabled_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.TransmitEventsEnabled, GetResourceMessage("GCS_InputDevicePDSA_TransmitEventsEnabled_Header", "Transmit Events Enabled"), true, typeof(bool), -1, GetResourceMessage("GCS_InputDevicePDSA_TransmitEventsEnabled_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.FileOutputEnabled, GetResourceMessage("GCS_InputDevicePDSA_FileOutputEnabled_Header", "File Output Enabled"), true, typeof(bool), -1, GetResourceMessage("GCS_InputDevicePDSA_FileOutputEnabled_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.IsTemplate, GetResourceMessage("GCS_InputDevicePDSA_IsTemplate_Header", "Is Template"), true, typeof(bool), -1, GetResourceMessage("GCS_InputDevicePDSA_IsTemplate_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.InsertName, GetResourceMessage("GCS_InputDevicePDSA_InsertName_Header", "Insert Name"), true, typeof(string), 100, GetResourceMessage("GCS_InputDevicePDSA_InsertName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.InsertDate, GetResourceMessage("GCS_InputDevicePDSA_InsertDate_Header", "Insert Date"), true, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_InputDevicePDSA_InsertDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.UpdateName, GetResourceMessage("GCS_InputDevicePDSA_UpdateName_Header", "Update Name"), true, typeof(string), 100, GetResourceMessage("GCS_InputDevicePDSA_UpdateName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.UpdateDate, GetResourceMessage("GCS_InputDevicePDSA_UpdateDate_Header", "Update Date"), true, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_InputDevicePDSA_UpdateDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.ConcurrencyValue, GetResourceMessage("GCS_InputDevicePDSA_ConcurrencyValue_Header", "Concurrency Value"), true, typeof(short), 5, GetResourceMessage("GCS_InputDevicePDSA_ConcurrencyValue_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.IsActive, GetResourceMessage("GCS_InputDevicePDSA_IsActive_Header", "Is Active"), true, typeof(bool), -1, GetResourceMessage("GCS_InputDevicePDSA_IsActive_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.RegionUid, GetResourceMessage("GCS_InputDevicePDSA_RegionUid_Header", "Region Uid"), false, typeof(Guid), 2147483647, GetResourceMessage("GCS_InputDevicePDSA_RegionUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.IsBoundToHardware, GetResourceMessage("GCS_InputDevicePDSA_IsBoundToHardware_Header", "Is Bound To Hardware"), false, typeof(bool), -1, GetResourceMessage("GCS_InputDevicePDSA_IsBoundToHardware_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.RegionName, GetResourceMessage("GCS_InputDevicePDSA_RegionName_Header", "Region Name"), false, typeof(string), 2147483647, GetResourceMessage("GCS_InputDevicePDSA_RegionName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.SiteName, GetResourceMessage("GCS_InputDevicePDSA_SiteName_Header", "Site Name"), false, typeof(string), 2147483647, GetResourceMessage("GCS_InputDevicePDSA_SiteName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.ClusterGroupId, GetResourceMessage("GCS_InputDevicePDSA_ClusterGroupId_Header", "Cluster Group Id"), false, typeof(int), 2147483647, GetResourceMessage("GCS_InputDevicePDSA_ClusterGroupId_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("0"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.ClusterNumber, GetResourceMessage("GCS_InputDevicePDSA_ClusterNumber_Header", "Cluster Number"), false, typeof(int), 2147483647, GetResourceMessage("GCS_InputDevicePDSA_ClusterNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("0"), Convert.ToInt32("65565"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.PanelNumber, GetResourceMessage("GCS_InputDevicePDSA_PanelNumber_Header", "Panel Number"), false, typeof(int), 2147483647, GetResourceMessage("GCS_InputDevicePDSA_PanelNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("0"), Convert.ToInt32("65565"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.BoardNumber, GetResourceMessage("GCS_InputDevicePDSA_BoardNumber_Header", "Board Number"), false, typeof(short), 2147483647, GetResourceMessage("GCS_InputDevicePDSA_BoardNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.SectionNumber, GetResourceMessage("GCS_InputDevicePDSA_SectionNumber_Header", "Section Number"), false, typeof(short), 2147483647, GetResourceMessage("GCS_InputDevicePDSA_SectionNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.ModuleNumber, GetResourceMessage("GCS_InputDevicePDSA_ModuleNumber_Header", "Module Number"), false, typeof(short), 2147483647, GetResourceMessage("GCS_InputDevicePDSA_ModuleNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.NodeNumber, GetResourceMessage("GCS_InputDevicePDSA_NodeNumber_Header", "Node Number"), false, typeof(short), 2147483647, GetResourceMessage("GCS_InputDevicePDSA_NodeNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.ClusterTypeUid, GetResourceMessage("GCS_InputDevicePDSA_ClusterTypeUid_Header", "Cluster Type Uid"), false, typeof(Guid), 2147483647, GetResourceMessage("GCS_InputDevicePDSA_ClusterTypeUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.TypeCode, GetResourceMessage("GCS_InputDevicePDSA_TypeCode_Header", "Type Code"), false, typeof(int), 2147483647, GetResourceMessage("GCS_InputDevicePDSA_TypeCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.ClusterTypeCode, GetResourceMessage("GCS_InputDevicePDSA_ClusterTypeCode_Header", "Cluster Type Code"), false, typeof(string), 2147483647, GetResourceMessage("GCS_InputDevicePDSA_ClusterTypeCode_Req", PDSAValidationMessages.MustBeFilledIn), PDSAString.ConvertToStringTrim("-2147483648"), PDSAString.ConvertToStringTrim("2147483647"), 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.GalaxyPanelModelUid, GetResourceMessage("GCS_InputDevicePDSA_GalaxyPanelModelUid_Header", "Galaxy Panel Model Uid"), false, typeof(Guid), 2147483647, GetResourceMessage("GCS_InputDevicePDSA_GalaxyPanelModelUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.GalaxyPanelTypeCode, GetResourceMessage("GCS_InputDevicePDSA_GalaxyPanelTypeCode_Header", "Galaxy Panel Type Code"), false, typeof(string), 2147483647, GetResourceMessage("GCS_InputDevicePDSA_GalaxyPanelTypeCode_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.InterfaceBoardTypeUid, GetResourceMessage("GCS_InputDevicePDSA_InterfaceBoardTypeUid_Header", "Interface Board Type Uid"), false, typeof(Guid), 2147483647, GetResourceMessage("GCS_InputDevicePDSA_InterfaceBoardTypeUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.InterfaceBoardTypeCode, GetResourceMessage("GCS_InputDevicePDSA_InterfaceBoardTypeCode_Header", "Interface Board Type Code"), false, typeof(short), 2147483647, GetResourceMessage("GCS_InputDevicePDSA_InterfaceBoardTypeCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.InterfaceBoardModel, GetResourceMessage("GCS_InputDevicePDSA_InterfaceBoardModel_Header", "Interface Board Model"), false, typeof(string), 2147483647, GetResourceMessage("GCS_InputDevicePDSA_InterfaceBoardModel_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.InterfaceBoardSectionModeUid, GetResourceMessage("GCS_InputDevicePDSA_InterfaceBoardSectionModeUid_Header", "Interface Board Section Mode Uid"), false, typeof(Guid), 2147483647, GetResourceMessage("GCS_InputDevicePDSA_InterfaceBoardSectionModeUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.InterfaceBoardSectionModeCode, GetResourceMessage("GCS_InputDevicePDSA_InterfaceBoardSectionModeCode_Header", "Interface Board Section Mode Code"), false, typeof(short), 2147483647, GetResourceMessage("GCS_InputDevicePDSA_InterfaceBoardSectionModeCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.GalaxyHardwareModuleTypeUid, GetResourceMessage("GCS_InputDevicePDSA_GalaxyHardwareModuleTypeUid_Header", "Galaxy Hardware Module Type Uid"), false, typeof(Guid), 2147483647, GetResourceMessage("GCS_InputDevicePDSA_GalaxyHardwareModuleTypeUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.ModuleTypeCode, GetResourceMessage("GCS_InputDevicePDSA_ModuleTypeCode_Header", "Module Type Code"), false, typeof(short), 2147483647, GetResourceMessage("GCS_InputDevicePDSA_ModuleTypeCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.IsNodeActive, GetResourceMessage("GCS_InputDevicePDSA_IsNodeActive_Header", "Is Node Active"), false, typeof(bool), 2147483647, GetResourceMessage("GCS_InputDevicePDSA_IsNodeActive_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.ClusterUid, GetResourceMessage("GCS_InputDevicePDSA_ClusterUid_Header", "Cluster Uid"), false, typeof(Guid), 2147483647, GetResourceMessage("GCS_InputDevicePDSA_ClusterUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.GalaxyPanelUid, GetResourceMessage("GCS_InputDevicePDSA_GalaxyPanelUid_Header", "Galaxy Panel Uid"), false, typeof(Guid), 2147483647, GetResourceMessage("GCS_InputDevicePDSA_GalaxyPanelUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.PageNumber, GetResourceMessage("GCS_InputDevicePDSA_PageNumber_Header", "Page Number"), false, typeof(int), 2147483647, GetResourceMessage("GCS_InputDevicePDSA_PageNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("0"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.PageSize, GetResourceMessage("GCS_InputDevicePDSA_PageSize_Header", "Page Size"), false, typeof(int), 2147483647, GetResourceMessage("GCS_InputDevicePDSA_PageSize_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("0"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.TotalRowCount, GetResourceMessage("GCS_InputDevicePDSA_TotalRowCount_Header", "Total Row Count"), false, typeof(int), 2147483647, GetResourceMessage("GCS_InputDevicePDSA_TotalRowCount_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("0"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.SortColumn, GetResourceMessage("GCS_InputDevicePDSA_SortColumn_Header", "Sort Column"), false, typeof(string), 2147483647, GetResourceMessage("GCS_InputDevicePDSA_SortColumn_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDevicePDSAValidator.ColumnNames.DescendingOrder, GetResourceMessage("GCS_InputDevicePDSA_DescendingOrder_Header", "Descending Order"), false, typeof(bool), 2147483647, GetResourceMessage("GCS_InputDevicePDSA_DescendingOrder_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      
      return props;
    }
    #endregion

    #region Initialize Entity
    /// <summary>
    /// This method is called from the CreateNewEntity Method. All the properties for the Entity are set to default values here by the code generator.
    /// </summary>
    protected override void InitializeEntity()
    {
      Entity.InputDeviceUid = Guid.Empty;
      Entity.EntityId = Guid.Empty;
      Entity.SiteUid = Guid.Empty;
      Entity.BinaryResourceUid = Guid.Empty;
      Entity.InputName = string.Empty;
      Entity.Location = string.Empty;
      Entity.ServiceComment = string.Empty;
      Entity.CriticalityComment = string.Empty;
      Entity.Comment = string.Empty;
      Entity.EMailEventsEnabled = false;
      Entity.TransmitEventsEnabled = false;
      Entity.FileOutputEnabled = false;
      Entity.IsTemplate = false;
      Entity.InsertName = string.Empty;
      Entity.InsertDate = DateTimeOffset.Now;
      Entity.UpdateName = string.Empty;
      Entity.UpdateDate = DateTimeOffset.Now;
      Entity.ConcurrencyValue = 0;
      Entity.IsActive = false;
      Entity.RegionUid = Guid.Empty;
      Entity.IsBoundToHardware = false;
      Entity.RegionName = string.Empty;
      Entity.SiteName = string.Empty;
      Entity.ClusterGroupId = 0;
      Entity.ClusterNumber = 0;
      Entity.PanelNumber = 0;
      Entity.BoardNumber = 0;
      Entity.SectionNumber = 0;
      Entity.ModuleNumber = 0;
      Entity.NodeNumber = 0;
      Entity.ClusterTypeUid = Guid.Empty;
      Entity.TypeCode = 0;
      Entity.ClusterTypeCode = string.Empty;
      Entity.GalaxyPanelModelUid = Guid.Empty;
      Entity.GalaxyPanelTypeCode = string.Empty;
      Entity.InterfaceBoardTypeUid = Guid.Empty;
      Entity.InterfaceBoardTypeCode = 0;
      Entity.InterfaceBoardModel = string.Empty;
      Entity.InterfaceBoardSectionModeUid = Guid.Empty;
      Entity.InterfaceBoardSectionModeCode = 0;
      Entity.GalaxyHardwareModuleTypeUid = Guid.Empty;
      Entity.ModuleTypeCode = 0;
      Entity.IsNodeActive = false;
      Entity.ClusterUid = Guid.Empty;
      Entity.GalaxyPanelUid = Guid.Empty;
      Entity.PageNumber = 0;
      Entity.PageSize = 0;
      Entity.TotalRowCount = 0;
      Entity.SortColumn = string.Empty;
      Entity.DescendingOrder = false;

      Entity.ResetAllIsDirtyProperties();
    }
    #endregion
    
    #region InitProperties Method
    /// <summary>
    /// Called by the constructor to create the PDSAProperties collection of all properties that will be validated.
    /// </summary>
    protected override void InitProperties()
    {
      // Set the Properties collection to the collection of Entity Properties
      Properties = CreateProperties();
    }
    #endregion

    #region EntityDataToProperties Method
    /// <summary>
    /// Moves the Entity class data into the Properties collection.
    /// </summary>
    protected override void EntityDataToProperties()
    {
      if (Properties == null)
        InitProperties();
      
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.InputDeviceUid).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.InputDeviceUid).Value = Entity.InputDeviceUid;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.EntityId).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.EntityId).Value = Entity.EntityId;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.SiteUid).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.SiteUid).Value = Entity.SiteUid;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.BinaryResourceUid).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.BinaryResourceUid).Value = Entity.BinaryResourceUid;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.InputName).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.InputName).Value = Entity.InputName;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.Location).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.Location).Value = Entity.Location;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.ServiceComment).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.ServiceComment).Value = Entity.ServiceComment;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.CriticalityComment).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.CriticalityComment).Value = Entity.CriticalityComment;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.Comment).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.Comment).Value = Entity.Comment;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.EMailEventsEnabled).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.EMailEventsEnabled).Value = Entity.EMailEventsEnabled;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.TransmitEventsEnabled).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.TransmitEventsEnabled).Value = Entity.TransmitEventsEnabled;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.FileOutputEnabled).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.FileOutputEnabled).Value = Entity.FileOutputEnabled;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.IsTemplate).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.IsTemplate).Value = Entity.IsTemplate;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.InsertName).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.InsertName).Value = Entity.InsertName;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.InsertDate).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.InsertDate).Value = Entity.InsertDate;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.UpdateName).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.UpdateName).Value = Entity.UpdateName;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.UpdateDate).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.UpdateDate).Value = Entity.UpdateDate;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.ConcurrencyValue).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.ConcurrencyValue).Value = Entity.ConcurrencyValue;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.IsActive).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.IsActive).Value = Entity.IsActive;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.RegionUid).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.RegionUid).Value = Entity.RegionUid;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.IsBoundToHardware).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.IsBoundToHardware).Value = Entity.IsBoundToHardware;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.RegionName).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.RegionName).Value = Entity.RegionName;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.SiteName).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.SiteName).Value = Entity.SiteName;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.ClusterGroupId).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.ClusterGroupId).Value = Entity.ClusterGroupId;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.ClusterNumber).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.ClusterNumber).Value = Entity.ClusterNumber;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.PanelNumber).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.PanelNumber).Value = Entity.PanelNumber;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.BoardNumber).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.BoardNumber).Value = Entity.BoardNumber;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.SectionNumber).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.SectionNumber).Value = Entity.SectionNumber;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.ModuleNumber).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.ModuleNumber).Value = Entity.ModuleNumber;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.NodeNumber).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.NodeNumber).Value = Entity.NodeNumber;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.ClusterTypeUid).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.ClusterTypeUid).Value = Entity.ClusterTypeUid;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.TypeCode).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.TypeCode).Value = Entity.TypeCode;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.ClusterTypeCode).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.ClusterTypeCode).Value = Entity.ClusterTypeCode;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.GalaxyPanelModelUid).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.GalaxyPanelModelUid).Value = Entity.GalaxyPanelModelUid;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.GalaxyPanelTypeCode).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.GalaxyPanelTypeCode).Value = Entity.GalaxyPanelTypeCode;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.InterfaceBoardTypeUid).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.InterfaceBoardTypeUid).Value = Entity.InterfaceBoardTypeUid;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.InterfaceBoardTypeCode).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.InterfaceBoardTypeCode).Value = Entity.InterfaceBoardTypeCode;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.InterfaceBoardModel).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.InterfaceBoardModel).Value = Entity.InterfaceBoardModel;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.InterfaceBoardSectionModeUid).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.InterfaceBoardSectionModeUid).Value = Entity.InterfaceBoardSectionModeUid;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.InterfaceBoardSectionModeCode).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.InterfaceBoardSectionModeCode).Value = Entity.InterfaceBoardSectionModeCode;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.GalaxyHardwareModuleTypeUid).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.GalaxyHardwareModuleTypeUid).Value = Entity.GalaxyHardwareModuleTypeUid;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.ModuleTypeCode).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.ModuleTypeCode).Value = Entity.ModuleTypeCode;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.IsNodeActive).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.IsNodeActive).Value = Entity.IsNodeActive;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.ClusterUid).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.ClusterUid).Value = Entity.ClusterUid;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.GalaxyPanelUid).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.GalaxyPanelUid).Value = Entity.GalaxyPanelUid;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.PageNumber).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.PageNumber).Value = Entity.PageNumber;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.PageSize).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.PageSize).Value = Entity.PageSize;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.TotalRowCount).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.TotalRowCount).Value = Entity.TotalRowCount;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.SortColumn).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.SortColumn).Value = Entity.SortColumn;
      if(!Properties.GetByName(InputDevicePDSAValidator.ColumnNames.DescendingOrder).SetAsNull)
        Properties.GetByName(InputDevicePDSAValidator.ColumnNames.DescendingOrder).Value = Entity.DescendingOrder;
    }

    /// <summary>
    /// Moves the Properties collection objects into the Entity properties
    /// </summary>
    protected override void PropertiesToEntityData()
    {
      if (Properties == null)
        InitProperties();

      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.InputDeviceUid).IsNull == false)
        Entity.InputDeviceUid = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.InputDeviceUid).GetAsGuid();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.EntityId).IsNull == false)
        Entity.EntityId = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.EntityId).GetAsGuid();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.SiteUid).IsNull == false)
        Entity.SiteUid = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.SiteUid).GetAsGuid();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.BinaryResourceUid).IsNull == false)
        Entity.BinaryResourceUid = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.BinaryResourceUid).GetAsGuid();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.InputName).IsNull == false)
        Entity.InputName = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.InputName).GetAsString();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.Location).IsNull == false)
        Entity.Location = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.Location).GetAsString();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.ServiceComment).IsNull == false)
        Entity.ServiceComment = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.ServiceComment).GetAsString();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.CriticalityComment).IsNull == false)
        Entity.CriticalityComment = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.CriticalityComment).GetAsString();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.Comment).IsNull == false)
        Entity.Comment = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.Comment).GetAsString();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.EMailEventsEnabled).IsNull == false)
        Entity.EMailEventsEnabled = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.EMailEventsEnabled).GetAsBool();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.TransmitEventsEnabled).IsNull == false)
        Entity.TransmitEventsEnabled = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.TransmitEventsEnabled).GetAsBool();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.FileOutputEnabled).IsNull == false)
        Entity.FileOutputEnabled = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.FileOutputEnabled).GetAsBool();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.IsTemplate).IsNull == false)
        Entity.IsTemplate = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.IsTemplate).GetAsBool();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.InsertName).IsNull == false)
        Entity.InsertName = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.InsertName).GetAsString();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.InsertDate).IsNull == false)
        Entity.InsertDate = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.InsertDate).GetAsDateTimeOffset();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.UpdateName).IsNull == false)
        Entity.UpdateName = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.UpdateName).GetAsString();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.UpdateDate).IsNull == false)
        Entity.UpdateDate = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.UpdateDate).GetAsDateTimeOffset();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.ConcurrencyValue).IsNull == false)
        Entity.ConcurrencyValue = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.ConcurrencyValue).GetAsShort();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.IsActive).IsNull == false)
        Entity.IsActive = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.IsActive).GetAsBool();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.RegionUid).IsNull == false)
        Entity.RegionUid = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.RegionUid).GetAsGuid();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.IsBoundToHardware).IsNull == false)
        Entity.IsBoundToHardware = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.IsBoundToHardware).GetAsBool();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.RegionName).IsNull == false)
        Entity.RegionName = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.RegionName).GetAsString();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.SiteName).IsNull == false)
        Entity.SiteName = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.SiteName).GetAsString();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.ClusterGroupId).IsNull == false)
        Entity.ClusterGroupId = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.ClusterGroupId).GetAsInteger();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.ClusterNumber).IsNull == false)
        Entity.ClusterNumber = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.ClusterNumber).GetAsInteger();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.PanelNumber).IsNull == false)
        Entity.PanelNumber = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.PanelNumber).GetAsInteger();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.BoardNumber).IsNull == false)
        Entity.BoardNumber = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.BoardNumber).GetAsShort();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.SectionNumber).IsNull == false)
        Entity.SectionNumber = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.SectionNumber).GetAsShort();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.ModuleNumber).IsNull == false)
        Entity.ModuleNumber = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.ModuleNumber).GetAsShort();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.NodeNumber).IsNull == false)
        Entity.NodeNumber = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.NodeNumber).GetAsShort();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.ClusterTypeUid).IsNull == false)
        Entity.ClusterTypeUid = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.ClusterTypeUid).GetAsGuid();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.TypeCode).IsNull == false)
        Entity.TypeCode = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.TypeCode).GetAsInteger();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.ClusterTypeCode).IsNull == false)
        Entity.ClusterTypeCode = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.ClusterTypeCode).GetAsString();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.GalaxyPanelModelUid).IsNull == false)
        Entity.GalaxyPanelModelUid = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.GalaxyPanelModelUid).GetAsGuid();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.GalaxyPanelTypeCode).IsNull == false)
        Entity.GalaxyPanelTypeCode = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.GalaxyPanelTypeCode).GetAsString();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.InterfaceBoardTypeUid).IsNull == false)
        Entity.InterfaceBoardTypeUid = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.InterfaceBoardTypeUid).GetAsGuid();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.InterfaceBoardTypeCode).IsNull == false)
        Entity.InterfaceBoardTypeCode = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.InterfaceBoardTypeCode).GetAsShort();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.InterfaceBoardModel).IsNull == false)
        Entity.InterfaceBoardModel = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.InterfaceBoardModel).GetAsString();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.InterfaceBoardSectionModeUid).IsNull == false)
        Entity.InterfaceBoardSectionModeUid = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.InterfaceBoardSectionModeUid).GetAsGuid();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.InterfaceBoardSectionModeCode).IsNull == false)
        Entity.InterfaceBoardSectionModeCode = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.InterfaceBoardSectionModeCode).GetAsShort();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.GalaxyHardwareModuleTypeUid).IsNull == false)
        Entity.GalaxyHardwareModuleTypeUid = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.GalaxyHardwareModuleTypeUid).GetAsGuid();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.ModuleTypeCode).IsNull == false)
        Entity.ModuleTypeCode = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.ModuleTypeCode).GetAsShort();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.IsNodeActive).IsNull == false)
        Entity.IsNodeActive = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.IsNodeActive).GetAsBool();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.ClusterUid).IsNull == false)
        Entity.ClusterUid = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.ClusterUid).GetAsGuid();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.GalaxyPanelUid).IsNull == false)
        Entity.GalaxyPanelUid = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.GalaxyPanelUid).GetAsGuid();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.PageNumber).IsNull == false)
        Entity.PageNumber = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.PageNumber).GetAsInteger();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.PageSize).IsNull == false)
        Entity.PageSize = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.PageSize).GetAsInteger();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.TotalRowCount).IsNull == false)
        Entity.TotalRowCount = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.TotalRowCount).GetAsInteger();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.SortColumn).IsNull == false)
        Entity.SortColumn = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.SortColumn).GetAsString();
      if(Properties.GetByName(InputDevicePDSAValidator.ColumnNames.DescendingOrder).IsNull == false)
        Entity.DescendingOrder = Properties.GetByName(InputDevicePDSAValidator.ColumnNames.DescendingOrder).GetAsBool();
    }
    #endregion
    
    #region ColumnNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the InputDevicePDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ColumnNames
    {
    /// <summary>
    /// Returns 'InputDeviceUid'
    /// </summary>
    public static string InputDeviceUid = "InputDeviceUid";
    /// <summary>
    /// Returns 'EntityId'
    /// </summary>
    public static string EntityId = "EntityId";
    /// <summary>
    /// Returns 'SiteUid'
    /// </summary>
    public static string SiteUid = "SiteUid";
    /// <summary>
    /// Returns 'BinaryResourceUid'
    /// </summary>
    public static string BinaryResourceUid = "BinaryResourceUid";
    /// <summary>
    /// Returns 'InputName'
    /// </summary>
    public static string InputName = "InputName";
    /// <summary>
    /// Returns 'Location'
    /// </summary>
    public static string Location = "Location";
    /// <summary>
    /// Returns 'ServiceComment'
    /// </summary>
    public static string ServiceComment = "ServiceComment";
    /// <summary>
    /// Returns 'CriticalityComment'
    /// </summary>
    public static string CriticalityComment = "CriticalityComment";
    /// <summary>
    /// Returns 'Comment'
    /// </summary>
    public static string Comment = "Comment";
    /// <summary>
    /// Returns 'EMailEventsEnabled'
    /// </summary>
    public static string EMailEventsEnabled = "EMailEventsEnabled";
    /// <summary>
    /// Returns 'TransmitEventsEnabled'
    /// </summary>
    public static string TransmitEventsEnabled = "TransmitEventsEnabled";
    /// <summary>
    /// Returns 'FileOutputEnabled'
    /// </summary>
    public static string FileOutputEnabled = "FileOutputEnabled";
    /// <summary>
    /// Returns 'IsTemplate'
    /// </summary>
    public static string IsTemplate = "IsTemplate";
    /// <summary>
    /// Returns 'InsertName'
    /// </summary>
    public static string InsertName = "InsertName";
    /// <summary>
    /// Returns 'InsertDate'
    /// </summary>
    public static string InsertDate = "InsertDate";
    /// <summary>
    /// Returns 'UpdateName'
    /// </summary>
    public static string UpdateName = "UpdateName";
    /// <summary>
    /// Returns 'UpdateDate'
    /// </summary>
    public static string UpdateDate = "UpdateDate";
    /// <summary>
    /// Returns 'ConcurrencyValue'
    /// </summary>
    public static string ConcurrencyValue = "ConcurrencyValue";
    /// <summary>
    /// Returns 'IsActive'
    /// </summary>
    public static string IsActive = "IsActive";
    /// <summary>
    /// Returns 'RegionUid'
    /// </summary>
    public static string RegionUid = "RegionUid";
    /// <summary>
    /// Returns 'IsBoundToHardware'
    /// </summary>
    public static string IsBoundToHardware = "IsBoundToHardware";
    /// <summary>
    /// Returns 'RegionName'
    /// </summary>
    public static string RegionName = "RegionName";
    /// <summary>
    /// Returns 'SiteName'
    /// </summary>
    public static string SiteName = "SiteName";
    /// <summary>
    /// Returns 'ClusterGroupId'
    /// </summary>
    public static string ClusterGroupId = "ClusterGroupId";
    /// <summary>
    /// Returns 'ClusterNumber'
    /// </summary>
    public static string ClusterNumber = "ClusterNumber";
    /// <summary>
    /// Returns 'PanelNumber'
    /// </summary>
    public static string PanelNumber = "PanelNumber";
    /// <summary>
    /// Returns 'BoardNumber'
    /// </summary>
    public static string BoardNumber = "BoardNumber";
    /// <summary>
    /// Returns 'SectionNumber'
    /// </summary>
    public static string SectionNumber = "SectionNumber";
    /// <summary>
    /// Returns 'ModuleNumber'
    /// </summary>
    public static string ModuleNumber = "ModuleNumber";
    /// <summary>
    /// Returns 'NodeNumber'
    /// </summary>
    public static string NodeNumber = "NodeNumber";
    /// <summary>
    /// Returns 'ClusterTypeUid'
    /// </summary>
    public static string ClusterTypeUid = "ClusterTypeUid";
    /// <summary>
    /// Returns 'TypeCode'
    /// </summary>
    public static string TypeCode = "TypeCode";
    /// <summary>
    /// Returns 'ClusterTypeCode'
    /// </summary>
    public static string ClusterTypeCode = "ClusterTypeCode";
    /// <summary>
    /// Returns 'GalaxyPanelModelUid'
    /// </summary>
    public static string GalaxyPanelModelUid = "GalaxyPanelModelUid";
    /// <summary>
    /// Returns 'GalaxyPanelTypeCode'
    /// </summary>
    public static string GalaxyPanelTypeCode = "GalaxyPanelTypeCode";
    /// <summary>
    /// Returns 'InterfaceBoardTypeUid'
    /// </summary>
    public static string InterfaceBoardTypeUid = "InterfaceBoardTypeUid";
    /// <summary>
    /// Returns 'InterfaceBoardTypeCode'
    /// </summary>
    public static string InterfaceBoardTypeCode = "InterfaceBoardTypeCode";
    /// <summary>
    /// Returns 'InterfaceBoardModel'
    /// </summary>
    public static string InterfaceBoardModel = "InterfaceBoardModel";
    /// <summary>
    /// Returns 'InterfaceBoardSectionModeUid'
    /// </summary>
    public static string InterfaceBoardSectionModeUid = "InterfaceBoardSectionModeUid";
    /// <summary>
    /// Returns 'InterfaceBoardSectionModeCode'
    /// </summary>
    public static string InterfaceBoardSectionModeCode = "InterfaceBoardSectionModeCode";
    /// <summary>
    /// Returns 'GalaxyHardwareModuleTypeUid'
    /// </summary>
    public static string GalaxyHardwareModuleTypeUid = "GalaxyHardwareModuleTypeUid";
    /// <summary>
    /// Returns 'ModuleTypeCode'
    /// </summary>
    public static string ModuleTypeCode = "ModuleTypeCode";
    /// <summary>
    /// Returns 'IsNodeActive'
    /// </summary>
    public static string IsNodeActive = "IsNodeActive";
    /// <summary>
    /// Returns 'ClusterUid'
    /// </summary>
    public static string ClusterUid = "ClusterUid";
    /// <summary>
    /// Returns 'GalaxyPanelUid'
    /// </summary>
    public static string GalaxyPanelUid = "GalaxyPanelUid";
    /// <summary>
    /// Returns 'PageNumber'
    /// </summary>
    public static string PageNumber = "PageNumber";
    /// <summary>
    /// Returns 'PageSize'
    /// </summary>
    public static string PageSize = "PageSize";
    /// <summary>
    /// Returns 'TotalRowCount'
    /// </summary>
    public static string TotalRowCount = "TotalRowCount";
    /// <summary>
    /// Returns 'SortColumn'
    /// </summary>
    public static string SortColumn = "SortColumn";
    /// <summary>
    /// Returns 'DescendingOrder'
    /// </summary>
    public static string DescendingOrder = "DescendingOrder";
    }
    #endregion
  }
}
