using System;

using PDSA.Validation;

using GalaxySMS.EntityLayer;

namespace GalaxySMS.ValidationLayer
{
  /// <summary>
  /// Used to validate all properties of the UserEntityApplicationRoleViewPDSA class.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public partial class UserEntityApplicationRoleViewPDSAValidator : PDSAValidatorBase
  {
    #region Public Entity Property
    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    private UserEntityApplicationRoleViewPDSA _Entity = null;

    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    public new UserEntityApplicationRoleViewPDSA Entity
    {
      get { return _Entity; }
      set
      {
        _Entity = value;
        base.Entity = value;
      }
    }
    #endregion
    
    #region Clone Entity Class
    /// <summary>
    /// Clones the current UserEntityApplicationRoleViewPDSA
    /// </summary>
    /// <returns>A cloned UserEntityApplicationRoleViewPDSA object</returns>
    public UserEntityApplicationRoleViewPDSA CloneEntity()
    {
      return CloneEntity(this.Entity);
    }
    
    /// <summary>
    /// Clones the passed in UserEntityApplicationRoleViewPDSA
    /// </summary>
    /// <param name="entityToClone">The UserEntityApplicationRoleViewPDSA entity to clone</param>
    /// <returns>A cloned UserEntityApplicationRoleViewPDSA object</returns>
    public UserEntityApplicationRoleViewPDSA CloneEntity(UserEntityApplicationRoleViewPDSA entityToClone)
    {
      UserEntityApplicationRoleViewPDSA newEntity = new UserEntityApplicationRoleViewPDSA();

      newEntity.UserName = entityToClone.UserName;
      newEntity.EntityName = entityToClone.EntityName;
      newEntity.ApplicationName = entityToClone.ApplicationName;
      newEntity.RoleName = entityToClone.RoleName;
      newEntity.UserEntityApplicationRoleId = entityToClone.UserEntityApplicationRoleId;
      newEntity.EntityApplicationRoleId = entityToClone.EntityApplicationRoleId;
      newEntity.UserId = entityToClone.UserId;
      newEntity.ApplicationId = entityToClone.ApplicationId;
      newEntity.RoleId = entityToClone.RoleId;
      newEntity.EntityId = entityToClone.EntityId;

      return newEntity;
    }
    #endregion

    #region CreateProperties Method
    /// <summary>
    /// Creates the collection of PDSAProperty objects. These are used to control validation and null handling.
    /// </summary>
    /// <returns>A collection of PDSAProperty objects</returns>
    public override PDSAProperties CreateProperties()
    {
      PDSAProperties props = new PDSAProperties();
      
      props.Add(PDSAProperty.Create(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.UserName, GetResourceMessage("GCS_UserEntityApplicationRoleViewPDSA_UserName_Header", "User Name"), false, typeof(string), 100, GetResourceMessage("GCS_UserEntityApplicationRoleViewPDSA_UserName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.EntityName, GetResourceMessage("GCS_UserEntityApplicationRoleViewPDSA_EntityName_Header", "Entity Name"), false, typeof(string), 65, GetResourceMessage("GCS_UserEntityApplicationRoleViewPDSA_EntityName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.ApplicationName, GetResourceMessage("GCS_UserEntityApplicationRoleViewPDSA_ApplicationName_Header", "Application Name"), false, typeof(string), 65, GetResourceMessage("GCS_UserEntityApplicationRoleViewPDSA_ApplicationName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.RoleName, GetResourceMessage("GCS_UserEntityApplicationRoleViewPDSA_RoleName_Header", "Role Name"), false, typeof(string), 65, GetResourceMessage("GCS_UserEntityApplicationRoleViewPDSA_RoleName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.UserEntityApplicationRoleId, GetResourceMessage("GCS_UserEntityApplicationRoleViewPDSA_UserEntityApplicationRoleId_Header", "User Entity Application Role Id"), false, typeof(Guid), -1, GetResourceMessage("GCS_UserEntityApplicationRoleViewPDSA_UserEntityApplicationRoleId_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.EntityApplicationRoleId, GetResourceMessage("GCS_UserEntityApplicationRoleViewPDSA_EntityApplicationRoleId_Header", "Entity Application Role Id"), false, typeof(Guid), -1, GetResourceMessage("GCS_UserEntityApplicationRoleViewPDSA_EntityApplicationRoleId_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.UserId, GetResourceMessage("GCS_UserEntityApplicationRoleViewPDSA_UserId_Header", "User Id"), false, typeof(Guid), -1, GetResourceMessage("GCS_UserEntityApplicationRoleViewPDSA_UserId_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.ApplicationId, GetResourceMessage("GCS_UserEntityApplicationRoleViewPDSA_ApplicationId_Header", "Application Id"), false, typeof(Guid), -1, GetResourceMessage("GCS_UserEntityApplicationRoleViewPDSA_ApplicationId_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.RoleId, GetResourceMessage("GCS_UserEntityApplicationRoleViewPDSA_RoleId_Header", "Role Id"), false, typeof(Guid), -1, GetResourceMessage("GCS_UserEntityApplicationRoleViewPDSA_RoleId_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.EntityId, GetResourceMessage("GCS_UserEntityApplicationRoleViewPDSA_EntityId_Header", "Entity Id"), false, typeof(Guid), -1, GetResourceMessage("GCS_UserEntityApplicationRoleViewPDSA_EntityId_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      
      return props;
    }
    #endregion

    #region Initialize Entity
    /// <summary>
    /// This method is called from the CreateNewEntity Method. All the properties for the Entity are set to default values here by the code generator.
    /// </summary>
    protected override void InitializeEntity()
    {
      Entity.UserName = string.Empty;
      Entity.EntityName = string.Empty;
      Entity.ApplicationName = string.Empty;
      Entity.RoleName = string.Empty;
      Entity.UserEntityApplicationRoleId = Guid.Empty;
      Entity.EntityApplicationRoleId = Guid.Empty;
      Entity.UserId = Guid.Empty;
      Entity.ApplicationId = Guid.Empty;
      Entity.RoleId = Guid.Empty;
      Entity.EntityId = Guid.Empty;

      Entity.ResetAllIsDirtyProperties();
    }
    #endregion
    
    #region InitProperties Method
    /// <summary>
    /// Called by the constructor to create the PDSAProperties collection of all properties that will be validated.
    /// </summary>
    protected override void InitProperties()
    {
      // Set the Properties collection to the collection of Entity Properties
      Properties = CreateProperties();
    }
    #endregion

    #region EntityDataToProperties Method
    /// <summary>
    /// Moves the Entity class data into the Properties collection.
    /// </summary>
    protected override void EntityDataToProperties()
    {
      if (Properties == null)
        InitProperties();
      
      if(!Properties.GetByName(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.UserName).SetAsNull)
        Properties.GetByName(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.UserName).Value = Entity.UserName;
      if(!Properties.GetByName(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.EntityName).SetAsNull)
        Properties.GetByName(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.EntityName).Value = Entity.EntityName;
      if(!Properties.GetByName(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.ApplicationName).SetAsNull)
        Properties.GetByName(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.ApplicationName).Value = Entity.ApplicationName;
      if(!Properties.GetByName(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.RoleName).SetAsNull)
        Properties.GetByName(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.RoleName).Value = Entity.RoleName;
      if(!Properties.GetByName(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.UserEntityApplicationRoleId).SetAsNull)
        Properties.GetByName(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.UserEntityApplicationRoleId).Value = Entity.UserEntityApplicationRoleId;
      if(!Properties.GetByName(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.EntityApplicationRoleId).SetAsNull)
        Properties.GetByName(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.EntityApplicationRoleId).Value = Entity.EntityApplicationRoleId;
      if(!Properties.GetByName(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.UserId).SetAsNull)
        Properties.GetByName(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.UserId).Value = Entity.UserId;
      if(!Properties.GetByName(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.ApplicationId).SetAsNull)
        Properties.GetByName(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.ApplicationId).Value = Entity.ApplicationId;
      if(!Properties.GetByName(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.RoleId).SetAsNull)
        Properties.GetByName(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.RoleId).Value = Entity.RoleId;
      if(!Properties.GetByName(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.EntityId).SetAsNull)
        Properties.GetByName(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.EntityId).Value = Entity.EntityId;
    }

    /// <summary>
    /// Moves the Properties collection objects into the Entity properties
    /// </summary>
    protected override void PropertiesToEntityData()
    {
      if (Properties == null)
        InitProperties();

      if(Properties.GetByName(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.UserName).IsNull == false)
        Entity.UserName = Properties.GetByName(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.UserName).GetAsString();
      if(Properties.GetByName(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.EntityName).IsNull == false)
        Entity.EntityName = Properties.GetByName(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.EntityName).GetAsString();
      if(Properties.GetByName(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.ApplicationName).IsNull == false)
        Entity.ApplicationName = Properties.GetByName(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.ApplicationName).GetAsString();
      if(Properties.GetByName(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.RoleName).IsNull == false)
        Entity.RoleName = Properties.GetByName(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.RoleName).GetAsString();
      if(Properties.GetByName(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.UserEntityApplicationRoleId).IsNull == false)
        Entity.UserEntityApplicationRoleId = Properties.GetByName(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.UserEntityApplicationRoleId).GetAsGuid();
      if(Properties.GetByName(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.EntityApplicationRoleId).IsNull == false)
        Entity.EntityApplicationRoleId = Properties.GetByName(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.EntityApplicationRoleId).GetAsGuid();
      if(Properties.GetByName(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.UserId).IsNull == false)
        Entity.UserId = Properties.GetByName(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.UserId).GetAsGuid();
      if(Properties.GetByName(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.ApplicationId).IsNull == false)
        Entity.ApplicationId = Properties.GetByName(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.ApplicationId).GetAsGuid();
      if(Properties.GetByName(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.RoleId).IsNull == false)
        Entity.RoleId = Properties.GetByName(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.RoleId).GetAsGuid();
      if(Properties.GetByName(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.EntityId).IsNull == false)
        Entity.EntityId = Properties.GetByName(UserEntityApplicationRoleViewPDSAValidator.ColumnNames.EntityId).GetAsGuid();
    }
    #endregion
    
    #region ColumnNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the UserEntityApplicationRoleViewPDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ColumnNames
    {
    /// <summary>
    /// Returns 'UserName'
    /// </summary>
    public static string UserName = "UserName";
    /// <summary>
    /// Returns 'EntityName'
    /// </summary>
    public static string EntityName = "EntityName";
    /// <summary>
    /// Returns 'ApplicationName'
    /// </summary>
    public static string ApplicationName = "ApplicationName";
    /// <summary>
    /// Returns 'RoleName'
    /// </summary>
    public static string RoleName = "RoleName";
    /// <summary>
    /// Returns 'UserEntityApplicationRoleId'
    /// </summary>
    public static string UserEntityApplicationRoleId = "UserEntityApplicationRoleId";
    /// <summary>
    /// Returns 'EntityApplicationRoleId'
    /// </summary>
    public static string EntityApplicationRoleId = "EntityApplicationRoleId";
    /// <summary>
    /// Returns 'UserId'
    /// </summary>
    public static string UserId = "UserId";
    /// <summary>
    /// Returns 'ApplicationId'
    /// </summary>
    public static string ApplicationId = "ApplicationId";
    /// <summary>
    /// Returns 'RoleId'
    /// </summary>
    public static string RoleId = "RoleId";
    /// <summary>
    /// Returns 'EntityId'
    /// </summary>
    public static string EntityId = "EntityId";
    }
    #endregion
  }
}
