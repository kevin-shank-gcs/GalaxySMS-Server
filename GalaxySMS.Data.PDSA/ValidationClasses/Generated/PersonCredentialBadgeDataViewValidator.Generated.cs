using System;

using PDSA.Validation;

using GalaxySMS.EntityLayer;

namespace GalaxySMS.ValidationLayer
{
  /// <summary>
  /// Used to validate all properties of the PersonCredentialBadgeDataViewPDSA class.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public partial class PersonCredentialBadgeDataViewPDSAValidator : PDSAValidatorBase
  {
    #region Public Entity Property
    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    private PersonCredentialBadgeDataViewPDSA _Entity = null;

    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    public new PersonCredentialBadgeDataViewPDSA Entity
    {
      get { return _Entity; }
      set
      {
        _Entity = value;
        base.Entity = value;
      }
    }
    #endregion
    
    #region Clone Entity Class
    /// <summary>
    /// Clones the current PersonCredentialBadgeDataViewPDSA
    /// </summary>
    /// <returns>A cloned PersonCredentialBadgeDataViewPDSA object</returns>
    public PersonCredentialBadgeDataViewPDSA CloneEntity()
    {
      return CloneEntity(this.Entity);
    }
    
    /// <summary>
    /// Clones the passed in PersonCredentialBadgeDataViewPDSA
    /// </summary>
    /// <param name="entityToClone">The PersonCredentialBadgeDataViewPDSA entity to clone</param>
    /// <returns>A cloned PersonCredentialBadgeDataViewPDSA object</returns>
    public PersonCredentialBadgeDataViewPDSA CloneEntity(PersonCredentialBadgeDataViewPDSA entityToClone)
    {
      PersonCredentialBadgeDataViewPDSA newEntity = new PersonCredentialBadgeDataViewPDSA();

      newEntity.PersonUid = entityToClone.PersonUid;
      newEntity.PersonCredentialUid = entityToClone.PersonCredentialUid;
      newEntity.ActivationDateTime = entityToClone.ActivationDateTime;
      newEntity.Company = entityToClone.Company;
      newEntity.ConcurrencyValue = entityToClone.ConcurrencyValue;
      newEntity.CountryOfBirthUid = entityToClone.CountryOfBirthUid;
      newEntity.DateOfBirth = entityToClone.DateOfBirth;
      newEntity.DepartmentUid = entityToClone.DepartmentUid;
      newEntity.EmploymentDate = entityToClone.EmploymentDate;
      newEntity.EntityId = entityToClone.EntityId;
      newEntity.Ethnicity = entityToClone.Ethnicity;
      newEntity.ExpirationDateTime = entityToClone.ExpirationDateTime;
      newEntity.FirstName = entityToClone.FirstName;
      newEntity.FullName = entityToClone.FullName;
      newEntity.GenderUid = entityToClone.GenderUid;
      newEntity.HasPhysicalDisability = entityToClone.HasPhysicalDisability;
      newEntity.HasVertigo = entityToClone.HasVertigo;
      newEntity.HomeOfficeLocation = entityToClone.HomeOfficeLocation;
      newEntity.Initials = entityToClone.Initials;
      newEntity.InsertDate = entityToClone.InsertDate;
      newEntity.InsertName = entityToClone.InsertName;
      newEntity.JobTitle = entityToClone.JobTitle;
      newEntity.LastName = entityToClone.LastName;
      newEntity.LegalName = entityToClone.LegalName;
      newEntity.MiddleName = entityToClone.MiddleName;
      newEntity.NationalIdentificationNumber = entityToClone.NationalIdentificationNumber;
      newEntity.Nationality = entityToClone.Nationality;
      newEntity.NickName = entityToClone.NickName;
      newEntity.OriginId = entityToClone.OriginId;
      newEntity.PersonActiveStatusTypeUid = entityToClone.PersonActiveStatusTypeUid;
      newEntity.PersonId = entityToClone.PersonId;
      newEntity.PersonRecordTypeUid = entityToClone.PersonRecordTypeUid;
      newEntity.PreferredName = entityToClone.PreferredName;
      newEntity.PrimaryLanguage = entityToClone.PrimaryLanguage;
      newEntity.Race = entityToClone.Race;
      newEntity.RowOrigin = entityToClone.RowOrigin;
      newEntity.SecondaryLanguage = entityToClone.SecondaryLanguage;
      newEntity.SysGalEmployeeId = entityToClone.SysGalEmployeeId;
      newEntity.TerminationDate = entityToClone.TerminationDate;
      newEntity.TextData1 = entityToClone.TextData1;
      newEntity.TextData2 = entityToClone.TextData2;
      newEntity.TextData3 = entityToClone.TextData3;
      newEntity.TextData4 = entityToClone.TextData4;
      newEntity.TextData5 = entityToClone.TextData5;
      newEntity.TextData6 = entityToClone.TextData6;
      newEntity.TextData7 = entityToClone.TextData7;
      newEntity.TextData8 = entityToClone.TextData8;
      newEntity.TextData9 = entityToClone.TextData9;
      newEntity.TextData10 = entityToClone.TextData10;
      newEntity.TextData11 = entityToClone.TextData11;
      newEntity.TextData12 = entityToClone.TextData12;
      newEntity.TextData13 = entityToClone.TextData13;
      newEntity.TextData14 = entityToClone.TextData14;
      newEntity.TextData15 = entityToClone.TextData15;
      newEntity.TextData16 = entityToClone.TextData16;
      newEntity.TextData17 = entityToClone.TextData17;
      newEntity.TextData18 = entityToClone.TextData18;
      newEntity.TextData19 = entityToClone.TextData19;
      newEntity.TextData20 = entityToClone.TextData20;
      newEntity.TextData21 = entityToClone.TextData21;
      newEntity.TextData22 = entityToClone.TextData22;
      newEntity.TextData23 = entityToClone.TextData23;
      newEntity.TextData24 = entityToClone.TextData24;
      newEntity.TextData25 = entityToClone.TextData25;
      newEntity.TextData26 = entityToClone.TextData26;
      newEntity.TextData27 = entityToClone.TextData27;
      newEntity.TextData28 = entityToClone.TextData28;
      newEntity.TextData29 = entityToClone.TextData29;
      newEntity.TextData30 = entityToClone.TextData30;
      newEntity.TextData31 = entityToClone.TextData31;
      newEntity.TextData32 = entityToClone.TextData32;
      newEntity.TextData33 = entityToClone.TextData33;
      newEntity.TextData34 = entityToClone.TextData34;
      newEntity.TextData35 = entityToClone.TextData35;
      newEntity.TextData36 = entityToClone.TextData36;
      newEntity.TextData37 = entityToClone.TextData37;
      newEntity.TextData38 = entityToClone.TextData38;
      newEntity.TextData39 = entityToClone.TextData39;
      newEntity.TextData40 = entityToClone.TextData40;
      newEntity.TextData41 = entityToClone.TextData41;
      newEntity.TextData42 = entityToClone.TextData42;
      newEntity.TextData43 = entityToClone.TextData43;
      newEntity.TextData44 = entityToClone.TextData44;
      newEntity.TextData45 = entityToClone.TextData45;
      newEntity.TextData46 = entityToClone.TextData46;
      newEntity.TextData47 = entityToClone.TextData47;
      newEntity.TextData48 = entityToClone.TextData48;
      newEntity.TextData49 = entityToClone.TextData49;
      newEntity.TextData50 = entityToClone.TextData50;
      newEntity.Trace = entityToClone.Trace;
      newEntity.UpdateDate = entityToClone.UpdateDate;
      newEntity.UpdateName = entityToClone.UpdateName;
      newEntity.VeryImportantPerson = entityToClone.VeryImportantPerson;
      newEntity.PersonPhotoMainPhoto = entityToClone.PersonPhotoMainPhoto;
      newEntity.PersonPhotoAlternatePhoto = entityToClone.PersonPhotoAlternatePhoto;
      newEntity.AccessProfileUid = entityToClone.AccessProfileUid;
      newEntity.AccessProfileName = entityToClone.AccessProfileName;
      newEntity.CredentialActivationDate = entityToClone.CredentialActivationDate;
      newEntity.CredentialDescription = entityToClone.CredentialDescription;
      newEntity.CredentialExpirationDateTime = entityToClone.CredentialExpirationDateTime;
      newEntity.CredentialCardNumber = entityToClone.CredentialCardNumber;
      newEntity.Credential26BitStandardFacilityCode = entityToClone.Credential26BitStandardFacilityCode;
      newEntity.Credential26BitStandardIdCode = entityToClone.Credential26BitStandardIdCode;
      newEntity.CredentialCorporate1K35BitCompanyCode = entityToClone.CredentialCorporate1K35BitCompanyCode;
      newEntity.CredentialCorporate1K35BitIdCode = entityToClone.CredentialCorporate1K35BitIdCode;
      newEntity.CredentialCorporate1K48BitCompanyCode = entityToClone.CredentialCorporate1K48BitCompanyCode;
      newEntity.CredentialCorporate1K48BitIdCode = entityToClone.CredentialCorporate1K48BitIdCode;
      newEntity.CredentialCypress37BitFacilityCode = entityToClone.CredentialCypress37BitFacilityCode;
      newEntity.CredentialCypress37BitIdCode = entityToClone.CredentialCypress37BitIdCode;
      newEntity.CredentialH1030237BitIdCode = entityToClone.CredentialH1030237BitIdCode;
      newEntity.CredentialH1030437BitFacilityCode = entityToClone.CredentialH1030437BitFacilityCode;
      newEntity.CredentialH1030437BitIdCode = entityToClone.CredentialH1030437BitIdCode;
      newEntity.CredentialSoftwareHouse37BitFacilityCode = entityToClone.CredentialSoftwareHouse37BitFacilityCode;
      newEntity.CredentialSoftwareHouse37BitSiteCode = entityToClone.CredentialSoftwareHouse37BitSiteCode;
      newEntity.CredentialSoftwareHouse37BitIdCode = entityToClone.CredentialSoftwareHouse37BitIdCode;
      newEntity.CredentialXceedId40BitSiteCode = entityToClone.CredentialXceedId40BitSiteCode;
      newEntity.CredentialXceedId40BitIdCode = entityToClone.CredentialXceedId40BitIdCode;
      newEntity.CountryName = entityToClone.CountryName;
      newEntity.DepartmentName = entityToClone.DepartmentName;
      newEntity.EntityName = entityToClone.EntityName;
      newEntity.Gender = entityToClone.Gender;
      newEntity.PersonActiveStatusType = entityToClone.PersonActiveStatusType;
      newEntity.PersonRecordType = entityToClone.PersonRecordType;
      newEntity.Date1 = entityToClone.Date1;
      newEntity.Date2 = entityToClone.Date2;
      newEntity.SelectItem1 = entityToClone.SelectItem1;
      newEntity.SelectItem2 = entityToClone.SelectItem2;
      newEntity.SelectItem3 = entityToClone.SelectItem3;
      newEntity.SelectItem4 = entityToClone.SelectItem4;
      newEntity.SelectItem5 = entityToClone.SelectItem5;
      newEntity.SelectItem6 = entityToClone.SelectItem6;
      newEntity.SelectItem7 = entityToClone.SelectItem7;
      newEntity.SelectItem8 = entityToClone.SelectItem8;
      newEntity.SelectItem9 = entityToClone.SelectItem9;
      newEntity.SelectItem10 = entityToClone.SelectItem10;
      newEntity.CurrentDate = entityToClone.CurrentDate;
      newEntity.CurrentDateTime = entityToClone.CurrentDateTime;
      newEntity.BadgeTemplateName = entityToClone.BadgeTemplateName;
      newEntity.DossierTemplateName = entityToClone.DossierTemplateName;

      return newEntity;
    }
    #endregion

    #region CreateProperties Method
    /// <summary>
    /// Creates the collection of PDSAProperty objects. These are used to control validation and null handling.
    /// </summary>
    /// <returns>A collection of PDSAProperty objects</returns>
    public override PDSAProperties CreateProperties()
    {
      PDSAProperties props = new PDSAProperties();
      
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonUid, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_PersonUid_Header", "Person Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_PersonUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonCredentialUid, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_PersonCredentialUid_Header", "Person Credential Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_PersonCredentialUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.ActivationDateTime, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_ActivationDateTime_Header", "Activation Date Time"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_ActivationDateTime_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Company, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_Company_Header", "Company"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_Company_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.ConcurrencyValue, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_ConcurrencyValue_Header", "Concurrency Value"), true, typeof(short), 5, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_ConcurrencyValue_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CountryOfBirthUid, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CountryOfBirthUid_Header", "Country Of Birth Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CountryOfBirthUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.DateOfBirth, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_DateOfBirth_Header", "Date Of Birth"), false, typeof(DateTime), -1, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_DateOfBirth_Req", PDSAValidationMessages.MustBeFilledIn), DateTime.MinValue, DateTime.MaxValue, 0, null, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.DepartmentUid, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_DepartmentUid_Header", "Department Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_DepartmentUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.EmploymentDate, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_EmploymentDate_Header", "Employment Date"), false, typeof(DateTime), -1, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_EmploymentDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTime.MinValue, DateTime.MaxValue, 0, null, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.EntityId, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_EntityId_Header", "Entity Id"), false, typeof(Guid), -1, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_EntityId_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Ethnicity, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_Ethnicity_Header", "Ethnicity"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_Ethnicity_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.ExpirationDateTime, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_ExpirationDateTime_Header", "Expiration Date Time"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_ExpirationDateTime_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.FirstName, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_FirstName_Header", "First Name"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_FirstName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.FullName, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_FullName_Header", "Full Name"), false, typeof(string), 255, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_FullName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.GenderUid, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_GenderUid_Header", "Gender Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_GenderUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.HasPhysicalDisability, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_HasPhysicalDisability_Header", "Has Physical Disability"), false, typeof(bool), -1, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_HasPhysicalDisability_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.HasVertigo, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_HasVertigo_Header", "Has Vertigo"), false, typeof(bool), -1, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_HasVertigo_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.HomeOfficeLocation, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_HomeOfficeLocation_Header", "Home Office Location"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_HomeOfficeLocation_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Initials, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_Initials_Header", "Initials"), false, typeof(string), 20, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_Initials_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.InsertDate, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_InsertDate_Header", "Insert Date"), true, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_InsertDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.InsertName, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_InsertName_Header", "Insert Name"), true, typeof(string), 100, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_InsertName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.JobTitle, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_JobTitle_Header", "Job Title"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_JobTitle_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.LastName, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_LastName_Header", "Last Name"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_LastName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.LegalName, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_LegalName_Header", "Legal Name"), false, typeof(string), 255, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_LegalName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.MiddleName, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_MiddleName_Header", "Middle Name"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_MiddleName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.NationalIdentificationNumber, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_NationalIdentificationNumber_Header", "National Identification Number"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_NationalIdentificationNumber_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Nationality, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_Nationality_Header", "Nationality"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_Nationality_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.NickName, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_NickName_Header", "Nick Name"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_NickName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.OriginId, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_OriginId_Header", "Origin Id"), false, typeof(string), 256, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_OriginId_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonActiveStatusTypeUid, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_PersonActiveStatusTypeUid_Header", "Person Active Status Type Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_PersonActiveStatusTypeUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonId, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_PersonId_Header", "Person Id"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_PersonId_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonRecordTypeUid, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_PersonRecordTypeUid_Header", "Person Record Type Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_PersonRecordTypeUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PreferredName, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_PreferredName_Header", "Preferred Name"), false, typeof(string), 255, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_PreferredName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PrimaryLanguage, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_PrimaryLanguage_Header", "Primary Language"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_PrimaryLanguage_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Race, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_Race_Header", "Race"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_Race_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.RowOrigin, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_RowOrigin_Header", "Row Origin"), false, typeof(string), 100, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_RowOrigin_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SecondaryLanguage, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_SecondaryLanguage_Header", "Secondary Language"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_SecondaryLanguage_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SysGalEmployeeId, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_SysGalEmployeeId_Header", "Sys Gal Employee Id"), false, typeof(int), 10, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_SysGalEmployeeId_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TerminationDate, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TerminationDate_Header", "Termination Date"), false, typeof(DateTime), -1, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TerminationDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTime.MinValue, DateTime.MaxValue, 0, null, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData1, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData1_Header", "Text Data 1"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData1_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData2, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData2_Header", "Text Data 2"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData2_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData3, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData3_Header", "Text Data 3"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData3_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData4, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData4_Header", "Text Data 4"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData4_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData5, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData5_Header", "Text Data 5"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData5_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData6, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData6_Header", "Text Data 6"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData6_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData7, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData7_Header", "Text Data 7"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData7_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData8, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData8_Header", "Text Data 8"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData8_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData9, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData9_Header", "Text Data 9"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData9_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData10, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData10_Header", "Text Data 10"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData10_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData11, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData11_Header", "Text Data 11"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData11_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData12, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData12_Header", "Text Data 12"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData12_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData13, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData13_Header", "Text Data 13"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData13_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData14, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData14_Header", "Text Data 14"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData14_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData15, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData15_Header", "Text Data 15"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData15_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData16, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData16_Header", "Text Data 16"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData16_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData17, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData17_Header", "Text Data 17"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData17_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData18, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData18_Header", "Text Data 18"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData18_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData19, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData19_Header", "Text Data 19"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData19_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData20, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData20_Header", "Text Data 20"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData20_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData21, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData21_Header", "Text Data 21"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData21_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData22, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData22_Header", "Text Data 22"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData22_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData23, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData23_Header", "Text Data 23"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData23_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData24, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData24_Header", "Text Data 24"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData24_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData25, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData25_Header", "Text Data 25"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData25_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData26, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData26_Header", "Text Data 26"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData26_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData27, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData27_Header", "Text Data 27"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData27_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData28, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData28_Header", "Text Data 28"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData28_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData29, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData29_Header", "Text Data 29"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData29_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData30, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData30_Header", "Text Data 30"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData30_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData31, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData31_Header", "Text Data 31"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData31_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData32, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData32_Header", "Text Data 32"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData32_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData33, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData33_Header", "Text Data 33"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData33_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData34, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData34_Header", "Text Data 34"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData34_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData35, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData35_Header", "Text Data 35"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData35_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData36, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData36_Header", "Text Data 36"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData36_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData37, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData37_Header", "Text Data 37"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData37_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData38, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData38_Header", "Text Data 38"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData38_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData39, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData39_Header", "Text Data 39"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData39_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData40, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData40_Header", "Text Data 40"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData40_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData41, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData41_Header", "Text Data 41"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData41_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData42, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData42_Header", "Text Data 42"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData42_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData43, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData43_Header", "Text Data 43"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData43_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData44, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData44_Header", "Text Data 44"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData44_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData45, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData45_Header", "Text Data 45"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData45_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData46, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData46_Header", "Text Data 46"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData46_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData47, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData47_Header", "Text Data 47"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData47_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData48, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData48_Header", "Text Data 48"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData48_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData49, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData49_Header", "Text Data 49"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData49_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData50, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData50_Header", "Text Data 50"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_TextData50_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Trace, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_Trace_Header", "Trace"), false, typeof(bool), -1, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_Trace_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.UpdateDate, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_UpdateDate_Header", "Update Date"), true, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_UpdateDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.UpdateName, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_UpdateName_Header", "Update Name"), true, typeof(string), 100, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_UpdateName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.VeryImportantPerson, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_VeryImportantPerson_Header", "Very Important Person"), false, typeof(bool), -1, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_VeryImportantPerson_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonPhotoMainPhoto, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_PersonPhotoMainPhoto_Header", "Person Photo Main Photo"), false, typeof(byte[]), 2147483647, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_PersonPhotoMainPhoto_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, null, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonPhotoAlternatePhoto, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_PersonPhotoAlternatePhoto_Header", "Person Photo Alternate Photo"), false, typeof(byte[]), 2147483647, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_PersonPhotoAlternatePhoto_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, null, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.AccessProfileUid, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_AccessProfileUid_Header", "Access Profile Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_AccessProfileUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.AccessProfileName, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_AccessProfileName_Header", "Access Profile Name"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_AccessProfileName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialActivationDate, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CredentialActivationDate_Header", "Credential Activation Date"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CredentialActivationDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialDescription, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CredentialDescription_Header", "Credential Description"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CredentialDescription_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialExpirationDateTime, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CredentialExpirationDateTime_Header", "Credential Expiration Date Time"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CredentialExpirationDateTime_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialCardNumber, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CredentialCardNumber_Header", "Credential Card Number"), false, typeof(string), 100, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CredentialCardNumber_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Credential26BitStandardFacilityCode, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_Credential26BitStandardFacilityCode_Header", "Credential 26 Bit Standard Facility Code"), false, typeof(short), 5, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_Credential26BitStandardFacilityCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Credential26BitStandardIdCode, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_Credential26BitStandardIdCode_Header", "Credential 26 Bit Standard Id Code"), false, typeof(int), 10, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_Credential26BitStandardIdCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialCorporate1K35BitCompanyCode, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CredentialCorporate1K35BitCompanyCode_Header", "Credential Corporate 1K35 Bit Company Code"), false, typeof(int), 10, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CredentialCorporate1K35BitCompanyCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialCorporate1K35BitIdCode, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CredentialCorporate1K35BitIdCode_Header", "Credential Corporate 1K35 Bit Id Code"), false, typeof(int), 10, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CredentialCorporate1K35BitIdCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialCorporate1K48BitCompanyCode, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CredentialCorporate1K48BitCompanyCode_Header", "Credential Corporate 1K48 Bit Company Code"), false, typeof(int), 10, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CredentialCorporate1K48BitCompanyCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialCorporate1K48BitIdCode, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CredentialCorporate1K48BitIdCode_Header", "Credential Corporate 1K48 Bit Id Code"), false, typeof(int), 10, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CredentialCorporate1K48BitIdCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialCypress37BitFacilityCode, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CredentialCypress37BitFacilityCode_Header", "Credential Cypress 37 Bit Facility Code"), false, typeof(int), 10, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CredentialCypress37BitFacilityCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialCypress37BitIdCode, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CredentialCypress37BitIdCode_Header", "Credential Cypress 37 Bit Id Code"), false, typeof(int), 10, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CredentialCypress37BitIdCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialH1030237BitIdCode, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CredentialH1030237BitIdCode_Header", "Credential H1030237 Bit Id Code"), false, typeof(long), 19, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CredentialH1030237BitIdCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt64("-9223372036854775808"), Convert.ToInt64("9223372036854775807"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialH1030437BitFacilityCode, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CredentialH1030437BitFacilityCode_Header", "Credential H1030437 Bit Facility Code"), false, typeof(int), 10, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CredentialH1030437BitFacilityCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialH1030437BitIdCode, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CredentialH1030437BitIdCode_Header", "Credential H1030437 Bit Id Code"), false, typeof(int), 10, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CredentialH1030437BitIdCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialSoftwareHouse37BitFacilityCode, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CredentialSoftwareHouse37BitFacilityCode_Header", "Credential Software House 37 Bit Facility Code"), false, typeof(int), 10, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CredentialSoftwareHouse37BitFacilityCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialSoftwareHouse37BitSiteCode, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CredentialSoftwareHouse37BitSiteCode_Header", "Credential Software House 37 Bit Site Code"), false, typeof(short), 5, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CredentialSoftwareHouse37BitSiteCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialSoftwareHouse37BitIdCode, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CredentialSoftwareHouse37BitIdCode_Header", "Credential Software House 37 Bit Id Code"), false, typeof(int), 10, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CredentialSoftwareHouse37BitIdCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialXceedId40BitSiteCode, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CredentialXceedId40BitSiteCode_Header", "Credential Xceed Id 40 Bit Site Code"), false, typeof(int), 10, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CredentialXceedId40BitSiteCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialXceedId40BitIdCode, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CredentialXceedId40BitIdCode_Header", "Credential Xceed Id 40 Bit Id Code"), false, typeof(int), 10, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CredentialXceedId40BitIdCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CountryName, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CountryName_Header", "Country Name"), false, typeof(string), 100, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CountryName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.DepartmentName, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_DepartmentName_Header", "Department Name"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_DepartmentName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.EntityName, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_EntityName_Header", "Entity Name"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_EntityName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Gender, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_Gender_Header", "Gender"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_Gender_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonActiveStatusType, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_PersonActiveStatusType_Header", "Person Active Status Type"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_PersonActiveStatusType_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonRecordType, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_PersonRecordType_Header", "Person Record Type"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_PersonRecordType_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Date1, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_Date1_Header", "Date 1"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_Date1_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Date2, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_Date2_Header", "Date 2"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_Date2_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem1, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_SelectItem1_Header", "Select Item 1"), false, typeof(string), 1, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_SelectItem1_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem2, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_SelectItem2_Header", "Select Item 2"), false, typeof(string), 1, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_SelectItem2_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem3, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_SelectItem3_Header", "Select Item 3"), false, typeof(string), 1, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_SelectItem3_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem4, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_SelectItem4_Header", "Select Item 4"), false, typeof(string), 1, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_SelectItem4_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem5, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_SelectItem5_Header", "Select Item 5"), false, typeof(string), 1, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_SelectItem5_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem6, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_SelectItem6_Header", "Select Item 6"), false, typeof(string), 1, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_SelectItem6_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem7, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_SelectItem7_Header", "Select Item 7"), false, typeof(string), 1, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_SelectItem7_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem8, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_SelectItem8_Header", "Select Item 8"), false, typeof(string), 1, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_SelectItem8_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem9, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_SelectItem9_Header", "Select Item 9"), false, typeof(string), 1, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_SelectItem9_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem10, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_SelectItem10_Header", "Select Item 10"), false, typeof(string), 1, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_SelectItem10_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CurrentDate, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CurrentDate_Header", "Current Date"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CurrentDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CurrentDateTime, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CurrentDateTime_Header", "Current Date Time"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_CurrentDateTime_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.BadgeTemplateName, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_BadgeTemplateName_Header", "Badge Template Name"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_BadgeTemplateName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.DossierTemplateName, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_DossierTemplateName_Header", "Dossier Template Name"), false, typeof(string), 65, GetResourceMessage("GCS_PersonCredentialBadgeDataViewPDSA_DossierTemplateName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      
      return props;
    }
    #endregion

    #region Initialize Entity
    /// <summary>
    /// This method is called from the CreateNewEntity Method. All the properties for the Entity are set to default values here by the code generator.
    /// </summary>
    protected override void InitializeEntity()
    {
      Entity.PersonUid = Guid.Empty;
      Entity.PersonCredentialUid = Guid.Empty;
      Entity.ActivationDateTime = null;
      Entity.Company = string.Empty;
      Entity.ConcurrencyValue = 0;
      Entity.CountryOfBirthUid = Guid.Empty;
      Entity.DateOfBirth = null;
      Entity.DepartmentUid = Guid.Empty;
      Entity.EmploymentDate = null;
      Entity.EntityId = Guid.Empty;
      Entity.Ethnicity = string.Empty;
      Entity.ExpirationDateTime = null;
      Entity.FirstName = string.Empty;
      Entity.FullName = string.Empty;
      Entity.GenderUid = Guid.Empty;
      Entity.HasPhysicalDisability = false;
      Entity.HasVertigo = false;
      Entity.HomeOfficeLocation = string.Empty;
      Entity.Initials = string.Empty;
      Entity.InsertDate = DateTimeOffset.Now;
      Entity.InsertName = string.Empty;
      Entity.JobTitle = string.Empty;
      Entity.LastName = string.Empty;
      Entity.LegalName = string.Empty;
      Entity.MiddleName = string.Empty;
      Entity.NationalIdentificationNumber = string.Empty;
      Entity.Nationality = string.Empty;
      Entity.NickName = string.Empty;
      Entity.OriginId = string.Empty;
      Entity.PersonActiveStatusTypeUid = Guid.Empty;
      Entity.PersonId = string.Empty;
      Entity.PersonRecordTypeUid = Guid.Empty;
      Entity.PreferredName = string.Empty;
      Entity.PrimaryLanguage = string.Empty;
      Entity.Race = string.Empty;
      Entity.RowOrigin = string.Empty;
      Entity.SecondaryLanguage = string.Empty;
      Entity.SysGalEmployeeId = 0;
      Entity.TerminationDate = null;
      Entity.TextData1 = string.Empty;
      Entity.TextData2 = string.Empty;
      Entity.TextData3 = string.Empty;
      Entity.TextData4 = string.Empty;
      Entity.TextData5 = string.Empty;
      Entity.TextData6 = string.Empty;
      Entity.TextData7 = string.Empty;
      Entity.TextData8 = string.Empty;
      Entity.TextData9 = string.Empty;
      Entity.TextData10 = string.Empty;
      Entity.TextData11 = string.Empty;
      Entity.TextData12 = string.Empty;
      Entity.TextData13 = string.Empty;
      Entity.TextData14 = string.Empty;
      Entity.TextData15 = string.Empty;
      Entity.TextData16 = string.Empty;
      Entity.TextData17 = string.Empty;
      Entity.TextData18 = string.Empty;
      Entity.TextData19 = string.Empty;
      Entity.TextData20 = string.Empty;
      Entity.TextData21 = string.Empty;
      Entity.TextData22 = string.Empty;
      Entity.TextData23 = string.Empty;
      Entity.TextData24 = string.Empty;
      Entity.TextData25 = string.Empty;
      Entity.TextData26 = string.Empty;
      Entity.TextData27 = string.Empty;
      Entity.TextData28 = string.Empty;
      Entity.TextData29 = string.Empty;
      Entity.TextData30 = string.Empty;
      Entity.TextData31 = string.Empty;
      Entity.TextData32 = string.Empty;
      Entity.TextData33 = string.Empty;
      Entity.TextData34 = string.Empty;
      Entity.TextData35 = string.Empty;
      Entity.TextData36 = string.Empty;
      Entity.TextData37 = string.Empty;
      Entity.TextData38 = string.Empty;
      Entity.TextData39 = string.Empty;
      Entity.TextData40 = string.Empty;
      Entity.TextData41 = string.Empty;
      Entity.TextData42 = string.Empty;
      Entity.TextData43 = string.Empty;
      Entity.TextData44 = string.Empty;
      Entity.TextData45 = string.Empty;
      Entity.TextData46 = string.Empty;
      Entity.TextData47 = string.Empty;
      Entity.TextData48 = string.Empty;
      Entity.TextData49 = string.Empty;
      Entity.TextData50 = string.Empty;
      Entity.Trace = false;
      Entity.UpdateDate = DateTimeOffset.Now;
      Entity.UpdateName = string.Empty;
      Entity.VeryImportantPerson = false;
      Entity.PersonPhotoMainPhoto = null;
      Entity.PersonPhotoAlternatePhoto = null;
      Entity.AccessProfileUid = Guid.Empty;
      Entity.AccessProfileName = string.Empty;
      Entity.CredentialActivationDate = DateTimeOffset.Now;
      Entity.CredentialDescription = string.Empty;
      Entity.CredentialExpirationDateTime = null;
      Entity.CredentialCardNumber = string.Empty;
      Entity.Credential26BitStandardFacilityCode = 0;
      Entity.Credential26BitStandardIdCode = 0;
      Entity.CredentialCorporate1K35BitCompanyCode = 0;
      Entity.CredentialCorporate1K35BitIdCode = 0;
      Entity.CredentialCorporate1K48BitCompanyCode = 0;
      Entity.CredentialCorporate1K48BitIdCode = 0;
      Entity.CredentialCypress37BitFacilityCode = 0;
      Entity.CredentialCypress37BitIdCode = 0;
      Entity.CredentialH1030237BitIdCode = 0;
      Entity.CredentialH1030437BitFacilityCode = 0;
      Entity.CredentialH1030437BitIdCode = 0;
      Entity.CredentialSoftwareHouse37BitFacilityCode = 0;
      Entity.CredentialSoftwareHouse37BitSiteCode = 0;
      Entity.CredentialSoftwareHouse37BitIdCode = 0;
      Entity.CredentialXceedId40BitSiteCode = 0;
      Entity.CredentialXceedId40BitIdCode = 0;
      Entity.CountryName = string.Empty;
      Entity.DepartmentName = string.Empty;
      Entity.EntityName = string.Empty;
      Entity.Gender = string.Empty;
      Entity.PersonActiveStatusType = string.Empty;
      Entity.PersonRecordType = string.Empty;
      Entity.Date1 = DateTimeOffset.Now;
      Entity.Date2 = DateTimeOffset.Now;
      Entity.SelectItem1 = string.Empty;
      Entity.SelectItem2 = string.Empty;
      Entity.SelectItem3 = string.Empty;
      Entity.SelectItem4 = string.Empty;
      Entity.SelectItem5 = string.Empty;
      Entity.SelectItem6 = string.Empty;
      Entity.SelectItem7 = string.Empty;
      Entity.SelectItem8 = string.Empty;
      Entity.SelectItem9 = string.Empty;
      Entity.SelectItem10 = string.Empty;
      Entity.CurrentDate = DateTimeOffset.Now;
      Entity.CurrentDateTime = DateTimeOffset.Now;
      Entity.BadgeTemplateName = string.Empty;
      Entity.DossierTemplateName = string.Empty;

      Entity.ResetAllIsDirtyProperties();
    }
    #endregion
    
    #region InitProperties Method
    /// <summary>
    /// Called by the constructor to create the PDSAProperties collection of all properties that will be validated.
    /// </summary>
    protected override void InitProperties()
    {
      // Set the Properties collection to the collection of Entity Properties
      Properties = CreateProperties();
    }
    #endregion

    #region EntityDataToProperties Method
    /// <summary>
    /// Moves the Entity class data into the Properties collection.
    /// </summary>
    protected override void EntityDataToProperties()
    {
      if (Properties == null)
        InitProperties();
      
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonUid).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonUid).Value = Entity.PersonUid;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonCredentialUid).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonCredentialUid).Value = Entity.PersonCredentialUid;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.ActivationDateTime).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.ActivationDateTime).Value = Entity.ActivationDateTime;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Company).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Company).Value = Entity.Company;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.ConcurrencyValue).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.ConcurrencyValue).Value = Entity.ConcurrencyValue;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CountryOfBirthUid).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CountryOfBirthUid).Value = Entity.CountryOfBirthUid;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.DateOfBirth).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.DateOfBirth).Value = Entity.DateOfBirth;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.DepartmentUid).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.DepartmentUid).Value = Entity.DepartmentUid;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.EmploymentDate).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.EmploymentDate).Value = Entity.EmploymentDate;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.EntityId).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.EntityId).Value = Entity.EntityId;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Ethnicity).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Ethnicity).Value = Entity.Ethnicity;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.ExpirationDateTime).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.ExpirationDateTime).Value = Entity.ExpirationDateTime;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.FirstName).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.FirstName).Value = Entity.FirstName;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.FullName).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.FullName).Value = Entity.FullName;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.GenderUid).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.GenderUid).Value = Entity.GenderUid;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.HasPhysicalDisability).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.HasPhysicalDisability).Value = Entity.HasPhysicalDisability;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.HasVertigo).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.HasVertigo).Value = Entity.HasVertigo;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.HomeOfficeLocation).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.HomeOfficeLocation).Value = Entity.HomeOfficeLocation;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Initials).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Initials).Value = Entity.Initials;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.InsertDate).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.InsertDate).Value = Entity.InsertDate;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.InsertName).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.InsertName).Value = Entity.InsertName;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.JobTitle).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.JobTitle).Value = Entity.JobTitle;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.LastName).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.LastName).Value = Entity.LastName;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.LegalName).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.LegalName).Value = Entity.LegalName;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.MiddleName).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.MiddleName).Value = Entity.MiddleName;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.NationalIdentificationNumber).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.NationalIdentificationNumber).Value = Entity.NationalIdentificationNumber;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Nationality).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Nationality).Value = Entity.Nationality;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.NickName).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.NickName).Value = Entity.NickName;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.OriginId).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.OriginId).Value = Entity.OriginId;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonActiveStatusTypeUid).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonActiveStatusTypeUid).Value = Entity.PersonActiveStatusTypeUid;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonId).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonId).Value = Entity.PersonId;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonRecordTypeUid).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonRecordTypeUid).Value = Entity.PersonRecordTypeUid;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PreferredName).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PreferredName).Value = Entity.PreferredName;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PrimaryLanguage).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PrimaryLanguage).Value = Entity.PrimaryLanguage;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Race).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Race).Value = Entity.Race;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.RowOrigin).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.RowOrigin).Value = Entity.RowOrigin;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SecondaryLanguage).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SecondaryLanguage).Value = Entity.SecondaryLanguage;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SysGalEmployeeId).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SysGalEmployeeId).Value = Entity.SysGalEmployeeId;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TerminationDate).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TerminationDate).Value = Entity.TerminationDate;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData1).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData1).Value = Entity.TextData1;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData2).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData2).Value = Entity.TextData2;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData3).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData3).Value = Entity.TextData3;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData4).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData4).Value = Entity.TextData4;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData5).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData5).Value = Entity.TextData5;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData6).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData6).Value = Entity.TextData6;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData7).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData7).Value = Entity.TextData7;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData8).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData8).Value = Entity.TextData8;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData9).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData9).Value = Entity.TextData9;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData10).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData10).Value = Entity.TextData10;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData11).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData11).Value = Entity.TextData11;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData12).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData12).Value = Entity.TextData12;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData13).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData13).Value = Entity.TextData13;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData14).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData14).Value = Entity.TextData14;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData15).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData15).Value = Entity.TextData15;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData16).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData16).Value = Entity.TextData16;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData17).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData17).Value = Entity.TextData17;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData18).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData18).Value = Entity.TextData18;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData19).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData19).Value = Entity.TextData19;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData20).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData20).Value = Entity.TextData20;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData21).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData21).Value = Entity.TextData21;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData22).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData22).Value = Entity.TextData22;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData23).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData23).Value = Entity.TextData23;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData24).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData24).Value = Entity.TextData24;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData25).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData25).Value = Entity.TextData25;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData26).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData26).Value = Entity.TextData26;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData27).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData27).Value = Entity.TextData27;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData28).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData28).Value = Entity.TextData28;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData29).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData29).Value = Entity.TextData29;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData30).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData30).Value = Entity.TextData30;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData31).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData31).Value = Entity.TextData31;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData32).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData32).Value = Entity.TextData32;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData33).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData33).Value = Entity.TextData33;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData34).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData34).Value = Entity.TextData34;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData35).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData35).Value = Entity.TextData35;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData36).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData36).Value = Entity.TextData36;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData37).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData37).Value = Entity.TextData37;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData38).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData38).Value = Entity.TextData38;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData39).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData39).Value = Entity.TextData39;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData40).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData40).Value = Entity.TextData40;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData41).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData41).Value = Entity.TextData41;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData42).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData42).Value = Entity.TextData42;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData43).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData43).Value = Entity.TextData43;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData44).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData44).Value = Entity.TextData44;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData45).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData45).Value = Entity.TextData45;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData46).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData46).Value = Entity.TextData46;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData47).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData47).Value = Entity.TextData47;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData48).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData48).Value = Entity.TextData48;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData49).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData49).Value = Entity.TextData49;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData50).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData50).Value = Entity.TextData50;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Trace).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Trace).Value = Entity.Trace;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.UpdateDate).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.UpdateDate).Value = Entity.UpdateDate;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.UpdateName).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.UpdateName).Value = Entity.UpdateName;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.VeryImportantPerson).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.VeryImportantPerson).Value = Entity.VeryImportantPerson;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonPhotoMainPhoto).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonPhotoMainPhoto).Value = Entity.PersonPhotoMainPhoto;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonPhotoAlternatePhoto).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonPhotoAlternatePhoto).Value = Entity.PersonPhotoAlternatePhoto;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.AccessProfileUid).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.AccessProfileUid).Value = Entity.AccessProfileUid;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.AccessProfileName).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.AccessProfileName).Value = Entity.AccessProfileName;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialActivationDate).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialActivationDate).Value = Entity.CredentialActivationDate;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialDescription).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialDescription).Value = Entity.CredentialDescription;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialExpirationDateTime).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialExpirationDateTime).Value = Entity.CredentialExpirationDateTime;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialCardNumber).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialCardNumber).Value = Entity.CredentialCardNumber;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Credential26BitStandardFacilityCode).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Credential26BitStandardFacilityCode).Value = Entity.Credential26BitStandardFacilityCode;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Credential26BitStandardIdCode).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Credential26BitStandardIdCode).Value = Entity.Credential26BitStandardIdCode;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialCorporate1K35BitCompanyCode).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialCorporate1K35BitCompanyCode).Value = Entity.CredentialCorporate1K35BitCompanyCode;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialCorporate1K35BitIdCode).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialCorporate1K35BitIdCode).Value = Entity.CredentialCorporate1K35BitIdCode;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialCorporate1K48BitCompanyCode).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialCorporate1K48BitCompanyCode).Value = Entity.CredentialCorporate1K48BitCompanyCode;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialCorporate1K48BitIdCode).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialCorporate1K48BitIdCode).Value = Entity.CredentialCorporate1K48BitIdCode;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialCypress37BitFacilityCode).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialCypress37BitFacilityCode).Value = Entity.CredentialCypress37BitFacilityCode;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialCypress37BitIdCode).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialCypress37BitIdCode).Value = Entity.CredentialCypress37BitIdCode;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialH1030237BitIdCode).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialH1030237BitIdCode).Value = Entity.CredentialH1030237BitIdCode;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialH1030437BitFacilityCode).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialH1030437BitFacilityCode).Value = Entity.CredentialH1030437BitFacilityCode;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialH1030437BitIdCode).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialH1030437BitIdCode).Value = Entity.CredentialH1030437BitIdCode;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialSoftwareHouse37BitFacilityCode).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialSoftwareHouse37BitFacilityCode).Value = Entity.CredentialSoftwareHouse37BitFacilityCode;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialSoftwareHouse37BitSiteCode).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialSoftwareHouse37BitSiteCode).Value = Entity.CredentialSoftwareHouse37BitSiteCode;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialSoftwareHouse37BitIdCode).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialSoftwareHouse37BitIdCode).Value = Entity.CredentialSoftwareHouse37BitIdCode;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialXceedId40BitSiteCode).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialXceedId40BitSiteCode).Value = Entity.CredentialXceedId40BitSiteCode;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialXceedId40BitIdCode).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialXceedId40BitIdCode).Value = Entity.CredentialXceedId40BitIdCode;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CountryName).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CountryName).Value = Entity.CountryName;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.DepartmentName).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.DepartmentName).Value = Entity.DepartmentName;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.EntityName).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.EntityName).Value = Entity.EntityName;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Gender).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Gender).Value = Entity.Gender;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonActiveStatusType).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonActiveStatusType).Value = Entity.PersonActiveStatusType;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonRecordType).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonRecordType).Value = Entity.PersonRecordType;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Date1).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Date1).Value = Entity.Date1;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Date2).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Date2).Value = Entity.Date2;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem1).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem1).Value = Entity.SelectItem1;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem2).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem2).Value = Entity.SelectItem2;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem3).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem3).Value = Entity.SelectItem3;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem4).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem4).Value = Entity.SelectItem4;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem5).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem5).Value = Entity.SelectItem5;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem6).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem6).Value = Entity.SelectItem6;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem7).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem7).Value = Entity.SelectItem7;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem8).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem8).Value = Entity.SelectItem8;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem9).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem9).Value = Entity.SelectItem9;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem10).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem10).Value = Entity.SelectItem10;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CurrentDate).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CurrentDate).Value = Entity.CurrentDate;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CurrentDateTime).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CurrentDateTime).Value = Entity.CurrentDateTime;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.BadgeTemplateName).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.BadgeTemplateName).Value = Entity.BadgeTemplateName;
      if(!Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.DossierTemplateName).SetAsNull)
        Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.DossierTemplateName).Value = Entity.DossierTemplateName;
    }

    /// <summary>
    /// Moves the Properties collection objects into the Entity properties
    /// </summary>
    protected override void PropertiesToEntityData()
    {
      if (Properties == null)
        InitProperties();

      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonUid).IsNull == false)
        Entity.PersonUid = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonUid).GetAsGuid();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonCredentialUid).IsNull == false)
        Entity.PersonCredentialUid = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonCredentialUid).GetAsGuid();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.ActivationDateTime).IsNull == false)
        Entity.ActivationDateTime = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.ActivationDateTime).GetAsDateTimeOffset();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Company).IsNull == false)
        Entity.Company = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Company).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.ConcurrencyValue).IsNull == false)
        Entity.ConcurrencyValue = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.ConcurrencyValue).GetAsShort();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CountryOfBirthUid).IsNull == false)
        Entity.CountryOfBirthUid = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CountryOfBirthUid).GetAsGuid();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.DateOfBirth).IsNull == false)
        Entity.DateOfBirth = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.DateOfBirth).GetAsDate();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.DepartmentUid).IsNull == false)
        Entity.DepartmentUid = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.DepartmentUid).GetAsGuid();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.EmploymentDate).IsNull == false)
        Entity.EmploymentDate = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.EmploymentDate).GetAsDate();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.EntityId).IsNull == false)
        Entity.EntityId = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.EntityId).GetAsGuid();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Ethnicity).IsNull == false)
        Entity.Ethnicity = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Ethnicity).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.ExpirationDateTime).IsNull == false)
        Entity.ExpirationDateTime = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.ExpirationDateTime).GetAsDateTimeOffset();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.FirstName).IsNull == false)
        Entity.FirstName = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.FirstName).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.FullName).IsNull == false)
        Entity.FullName = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.FullName).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.GenderUid).IsNull == false)
        Entity.GenderUid = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.GenderUid).GetAsGuid();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.HasPhysicalDisability).IsNull == false)
        Entity.HasPhysicalDisability = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.HasPhysicalDisability).GetAsBool();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.HasVertigo).IsNull == false)
        Entity.HasVertigo = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.HasVertigo).GetAsBool();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.HomeOfficeLocation).IsNull == false)
        Entity.HomeOfficeLocation = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.HomeOfficeLocation).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Initials).IsNull == false)
        Entity.Initials = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Initials).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.InsertDate).IsNull == false)
        Entity.InsertDate = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.InsertDate).GetAsDateTimeOffset();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.InsertName).IsNull == false)
        Entity.InsertName = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.InsertName).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.JobTitle).IsNull == false)
        Entity.JobTitle = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.JobTitle).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.LastName).IsNull == false)
        Entity.LastName = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.LastName).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.LegalName).IsNull == false)
        Entity.LegalName = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.LegalName).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.MiddleName).IsNull == false)
        Entity.MiddleName = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.MiddleName).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.NationalIdentificationNumber).IsNull == false)
        Entity.NationalIdentificationNumber = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.NationalIdentificationNumber).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Nationality).IsNull == false)
        Entity.Nationality = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Nationality).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.NickName).IsNull == false)
        Entity.NickName = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.NickName).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.OriginId).IsNull == false)
        Entity.OriginId = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.OriginId).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonActiveStatusTypeUid).IsNull == false)
        Entity.PersonActiveStatusTypeUid = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonActiveStatusTypeUid).GetAsGuid();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonId).IsNull == false)
        Entity.PersonId = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonId).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonRecordTypeUid).IsNull == false)
        Entity.PersonRecordTypeUid = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonRecordTypeUid).GetAsGuid();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PreferredName).IsNull == false)
        Entity.PreferredName = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PreferredName).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PrimaryLanguage).IsNull == false)
        Entity.PrimaryLanguage = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PrimaryLanguage).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Race).IsNull == false)
        Entity.Race = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Race).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.RowOrigin).IsNull == false)
        Entity.RowOrigin = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.RowOrigin).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SecondaryLanguage).IsNull == false)
        Entity.SecondaryLanguage = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SecondaryLanguage).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SysGalEmployeeId).IsNull == false)
        Entity.SysGalEmployeeId = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SysGalEmployeeId).GetAsInteger();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TerminationDate).IsNull == false)
        Entity.TerminationDate = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TerminationDate).GetAsDate();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData1).IsNull == false)
        Entity.TextData1 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData1).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData2).IsNull == false)
        Entity.TextData2 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData2).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData3).IsNull == false)
        Entity.TextData3 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData3).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData4).IsNull == false)
        Entity.TextData4 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData4).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData5).IsNull == false)
        Entity.TextData5 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData5).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData6).IsNull == false)
        Entity.TextData6 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData6).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData7).IsNull == false)
        Entity.TextData7 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData7).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData8).IsNull == false)
        Entity.TextData8 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData8).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData9).IsNull == false)
        Entity.TextData9 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData9).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData10).IsNull == false)
        Entity.TextData10 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData10).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData11).IsNull == false)
        Entity.TextData11 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData11).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData12).IsNull == false)
        Entity.TextData12 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData12).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData13).IsNull == false)
        Entity.TextData13 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData13).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData14).IsNull == false)
        Entity.TextData14 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData14).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData15).IsNull == false)
        Entity.TextData15 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData15).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData16).IsNull == false)
        Entity.TextData16 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData16).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData17).IsNull == false)
        Entity.TextData17 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData17).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData18).IsNull == false)
        Entity.TextData18 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData18).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData19).IsNull == false)
        Entity.TextData19 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData19).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData20).IsNull == false)
        Entity.TextData20 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData20).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData21).IsNull == false)
        Entity.TextData21 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData21).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData22).IsNull == false)
        Entity.TextData22 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData22).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData23).IsNull == false)
        Entity.TextData23 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData23).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData24).IsNull == false)
        Entity.TextData24 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData24).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData25).IsNull == false)
        Entity.TextData25 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData25).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData26).IsNull == false)
        Entity.TextData26 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData26).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData27).IsNull == false)
        Entity.TextData27 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData27).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData28).IsNull == false)
        Entity.TextData28 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData28).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData29).IsNull == false)
        Entity.TextData29 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData29).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData30).IsNull == false)
        Entity.TextData30 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData30).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData31).IsNull == false)
        Entity.TextData31 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData31).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData32).IsNull == false)
        Entity.TextData32 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData32).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData33).IsNull == false)
        Entity.TextData33 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData33).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData34).IsNull == false)
        Entity.TextData34 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData34).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData35).IsNull == false)
        Entity.TextData35 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData35).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData36).IsNull == false)
        Entity.TextData36 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData36).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData37).IsNull == false)
        Entity.TextData37 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData37).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData38).IsNull == false)
        Entity.TextData38 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData38).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData39).IsNull == false)
        Entity.TextData39 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData39).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData40).IsNull == false)
        Entity.TextData40 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData40).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData41).IsNull == false)
        Entity.TextData41 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData41).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData42).IsNull == false)
        Entity.TextData42 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData42).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData43).IsNull == false)
        Entity.TextData43 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData43).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData44).IsNull == false)
        Entity.TextData44 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData44).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData45).IsNull == false)
        Entity.TextData45 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData45).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData46).IsNull == false)
        Entity.TextData46 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData46).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData47).IsNull == false)
        Entity.TextData47 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData47).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData48).IsNull == false)
        Entity.TextData48 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData48).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData49).IsNull == false)
        Entity.TextData49 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData49).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData50).IsNull == false)
        Entity.TextData50 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.TextData50).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Trace).IsNull == false)
        Entity.Trace = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Trace).GetAsBool();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.UpdateDate).IsNull == false)
        Entity.UpdateDate = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.UpdateDate).GetAsDateTimeOffset();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.UpdateName).IsNull == false)
        Entity.UpdateName = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.UpdateName).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.VeryImportantPerson).IsNull == false)
        Entity.VeryImportantPerson = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.VeryImportantPerson).GetAsBool();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonPhotoMainPhoto).IsNull == false)
        Entity.PersonPhotoMainPhoto = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonPhotoMainPhoto).GetAsByteArray();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonPhotoAlternatePhoto).IsNull == false)
        Entity.PersonPhotoAlternatePhoto = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonPhotoAlternatePhoto).GetAsByteArray();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.AccessProfileUid).IsNull == false)
        Entity.AccessProfileUid = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.AccessProfileUid).GetAsGuid();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.AccessProfileName).IsNull == false)
        Entity.AccessProfileName = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.AccessProfileName).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialActivationDate).IsNull == false)
        Entity.CredentialActivationDate = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialActivationDate).GetAsDateTimeOffset();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialDescription).IsNull == false)
        Entity.CredentialDescription = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialDescription).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialExpirationDateTime).IsNull == false)
        Entity.CredentialExpirationDateTime = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialExpirationDateTime).GetAsDateTimeOffset();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialCardNumber).IsNull == false)
        Entity.CredentialCardNumber = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialCardNumber).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Credential26BitStandardFacilityCode).IsNull == false)
        Entity.Credential26BitStandardFacilityCode = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Credential26BitStandardFacilityCode).GetAsShort();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Credential26BitStandardIdCode).IsNull == false)
        Entity.Credential26BitStandardIdCode = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Credential26BitStandardIdCode).GetAsInteger();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialCorporate1K35BitCompanyCode).IsNull == false)
        Entity.CredentialCorporate1K35BitCompanyCode = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialCorporate1K35BitCompanyCode).GetAsInteger();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialCorporate1K35BitIdCode).IsNull == false)
        Entity.CredentialCorporate1K35BitIdCode = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialCorporate1K35BitIdCode).GetAsInteger();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialCorporate1K48BitCompanyCode).IsNull == false)
        Entity.CredentialCorporate1K48BitCompanyCode = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialCorporate1K48BitCompanyCode).GetAsInteger();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialCorporate1K48BitIdCode).IsNull == false)
        Entity.CredentialCorporate1K48BitIdCode = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialCorporate1K48BitIdCode).GetAsInteger();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialCypress37BitFacilityCode).IsNull == false)
        Entity.CredentialCypress37BitFacilityCode = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialCypress37BitFacilityCode).GetAsInteger();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialCypress37BitIdCode).IsNull == false)
        Entity.CredentialCypress37BitIdCode = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialCypress37BitIdCode).GetAsInteger();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialH1030237BitIdCode).IsNull == false)
        Entity.CredentialH1030237BitIdCode = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialH1030237BitIdCode).GetAsLong();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialH1030437BitFacilityCode).IsNull == false)
        Entity.CredentialH1030437BitFacilityCode = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialH1030437BitFacilityCode).GetAsInteger();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialH1030437BitIdCode).IsNull == false)
        Entity.CredentialH1030437BitIdCode = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialH1030437BitIdCode).GetAsInteger();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialSoftwareHouse37BitFacilityCode).IsNull == false)
        Entity.CredentialSoftwareHouse37BitFacilityCode = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialSoftwareHouse37BitFacilityCode).GetAsInteger();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialSoftwareHouse37BitSiteCode).IsNull == false)
        Entity.CredentialSoftwareHouse37BitSiteCode = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialSoftwareHouse37BitSiteCode).GetAsShort();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialSoftwareHouse37BitIdCode).IsNull == false)
        Entity.CredentialSoftwareHouse37BitIdCode = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialSoftwareHouse37BitIdCode).GetAsInteger();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialXceedId40BitSiteCode).IsNull == false)
        Entity.CredentialXceedId40BitSiteCode = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialXceedId40BitSiteCode).GetAsInteger();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialXceedId40BitIdCode).IsNull == false)
        Entity.CredentialXceedId40BitIdCode = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CredentialXceedId40BitIdCode).GetAsInteger();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CountryName).IsNull == false)
        Entity.CountryName = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CountryName).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.DepartmentName).IsNull == false)
        Entity.DepartmentName = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.DepartmentName).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.EntityName).IsNull == false)
        Entity.EntityName = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.EntityName).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Gender).IsNull == false)
        Entity.Gender = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Gender).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonActiveStatusType).IsNull == false)
        Entity.PersonActiveStatusType = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonActiveStatusType).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonRecordType).IsNull == false)
        Entity.PersonRecordType = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.PersonRecordType).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Date1).IsNull == false)
        Entity.Date1 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Date1).GetAsDateTimeOffset();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Date2).IsNull == false)
        Entity.Date2 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.Date2).GetAsDateTimeOffset();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem1).IsNull == false)
        Entity.SelectItem1 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem1).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem2).IsNull == false)
        Entity.SelectItem2 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem2).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem3).IsNull == false)
        Entity.SelectItem3 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem3).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem4).IsNull == false)
        Entity.SelectItem4 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem4).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem5).IsNull == false)
        Entity.SelectItem5 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem5).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem6).IsNull == false)
        Entity.SelectItem6 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem6).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem7).IsNull == false)
        Entity.SelectItem7 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem7).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem8).IsNull == false)
        Entity.SelectItem8 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem8).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem9).IsNull == false)
        Entity.SelectItem9 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem9).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem10).IsNull == false)
        Entity.SelectItem10 = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.SelectItem10).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CurrentDate).IsNull == false)
        Entity.CurrentDate = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CurrentDate).GetAsDateTimeOffset();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CurrentDateTime).IsNull == false)
        Entity.CurrentDateTime = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.CurrentDateTime).GetAsDateTimeOffset();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.BadgeTemplateName).IsNull == false)
        Entity.BadgeTemplateName = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.BadgeTemplateName).GetAsString();
      if(Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.DossierTemplateName).IsNull == false)
        Entity.DossierTemplateName = Properties.GetByName(PersonCredentialBadgeDataViewPDSAValidator.ColumnNames.DossierTemplateName).GetAsString();
    }
    #endregion
    
    #region ColumnNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the PersonCredentialBadgeDataViewPDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ColumnNames
    {
    /// <summary>
    /// Returns 'PersonUid'
    /// </summary>
    public static string PersonUid = "PersonUid";
    /// <summary>
    /// Returns 'PersonCredentialUid'
    /// </summary>
    public static string PersonCredentialUid = "PersonCredentialUid";
    /// <summary>
    /// Returns 'ActivationDateTime'
    /// </summary>
    public static string ActivationDateTime = "ActivationDateTime";
    /// <summary>
    /// Returns 'Company'
    /// </summary>
    public static string Company = "Company";
    /// <summary>
    /// Returns 'ConcurrencyValue'
    /// </summary>
    public static string ConcurrencyValue = "ConcurrencyValue";
    /// <summary>
    /// Returns 'CountryOfBirthUid'
    /// </summary>
    public static string CountryOfBirthUid = "CountryOfBirthUid";
    /// <summary>
    /// Returns 'DateOfBirth'
    /// </summary>
    public static string DateOfBirth = "DateOfBirth";
    /// <summary>
    /// Returns 'DepartmentUid'
    /// </summary>
    public static string DepartmentUid = "DepartmentUid";
    /// <summary>
    /// Returns 'EmploymentDate'
    /// </summary>
    public static string EmploymentDate = "EmploymentDate";
    /// <summary>
    /// Returns 'EntityId'
    /// </summary>
    public static string EntityId = "EntityId";
    /// <summary>
    /// Returns 'Ethnicity'
    /// </summary>
    public static string Ethnicity = "Ethnicity";
    /// <summary>
    /// Returns 'ExpirationDateTime'
    /// </summary>
    public static string ExpirationDateTime = "ExpirationDateTime";
    /// <summary>
    /// Returns 'FirstName'
    /// </summary>
    public static string FirstName = "FirstName";
    /// <summary>
    /// Returns 'FullName'
    /// </summary>
    public static string FullName = "FullName";
    /// <summary>
    /// Returns 'GenderUid'
    /// </summary>
    public static string GenderUid = "GenderUid";
    /// <summary>
    /// Returns 'HasPhysicalDisability'
    /// </summary>
    public static string HasPhysicalDisability = "HasPhysicalDisability";
    /// <summary>
    /// Returns 'HasVertigo'
    /// </summary>
    public static string HasVertigo = "HasVertigo";
    /// <summary>
    /// Returns 'HomeOfficeLocation'
    /// </summary>
    public static string HomeOfficeLocation = "HomeOfficeLocation";
    /// <summary>
    /// Returns 'Initials'
    /// </summary>
    public static string Initials = "Initials";
    /// <summary>
    /// Returns 'InsertDate'
    /// </summary>
    public static string InsertDate = "InsertDate";
    /// <summary>
    /// Returns 'InsertName'
    /// </summary>
    public static string InsertName = "InsertName";
    /// <summary>
    /// Returns 'JobTitle'
    /// </summary>
    public static string JobTitle = "JobTitle";
    /// <summary>
    /// Returns 'LastName'
    /// </summary>
    public static string LastName = "LastName";
    /// <summary>
    /// Returns 'LegalName'
    /// </summary>
    public static string LegalName = "LegalName";
    /// <summary>
    /// Returns 'MiddleName'
    /// </summary>
    public static string MiddleName = "MiddleName";
    /// <summary>
    /// Returns 'NationalIdentificationNumber'
    /// </summary>
    public static string NationalIdentificationNumber = "NationalIdentificationNumber";
    /// <summary>
    /// Returns 'Nationality'
    /// </summary>
    public static string Nationality = "Nationality";
    /// <summary>
    /// Returns 'NickName'
    /// </summary>
    public static string NickName = "NickName";
    /// <summary>
    /// Returns 'OriginId'
    /// </summary>
    public static string OriginId = "OriginId";
    /// <summary>
    /// Returns 'PersonActiveStatusTypeUid'
    /// </summary>
    public static string PersonActiveStatusTypeUid = "PersonActiveStatusTypeUid";
    /// <summary>
    /// Returns 'PersonId'
    /// </summary>
    public static string PersonId = "PersonId";
    /// <summary>
    /// Returns 'PersonRecordTypeUid'
    /// </summary>
    public static string PersonRecordTypeUid = "PersonRecordTypeUid";
    /// <summary>
    /// Returns 'PreferredName'
    /// </summary>
    public static string PreferredName = "PreferredName";
    /// <summary>
    /// Returns 'PrimaryLanguage'
    /// </summary>
    public static string PrimaryLanguage = "PrimaryLanguage";
    /// <summary>
    /// Returns 'Race'
    /// </summary>
    public static string Race = "Race";
    /// <summary>
    /// Returns 'RowOrigin'
    /// </summary>
    public static string RowOrigin = "RowOrigin";
    /// <summary>
    /// Returns 'SecondaryLanguage'
    /// </summary>
    public static string SecondaryLanguage = "SecondaryLanguage";
    /// <summary>
    /// Returns 'SysGalEmployeeId'
    /// </summary>
    public static string SysGalEmployeeId = "SysGalEmployeeId";
    /// <summary>
    /// Returns 'TerminationDate'
    /// </summary>
    public static string TerminationDate = "TerminationDate";
    /// <summary>
    /// Returns 'TextData1'
    /// </summary>
    public static string TextData1 = "TextData1";
    /// <summary>
    /// Returns 'TextData2'
    /// </summary>
    public static string TextData2 = "TextData2";
    /// <summary>
    /// Returns 'TextData3'
    /// </summary>
    public static string TextData3 = "TextData3";
    /// <summary>
    /// Returns 'TextData4'
    /// </summary>
    public static string TextData4 = "TextData4";
    /// <summary>
    /// Returns 'TextData5'
    /// </summary>
    public static string TextData5 = "TextData5";
    /// <summary>
    /// Returns 'TextData6'
    /// </summary>
    public static string TextData6 = "TextData6";
    /// <summary>
    /// Returns 'TextData7'
    /// </summary>
    public static string TextData7 = "TextData7";
    /// <summary>
    /// Returns 'TextData8'
    /// </summary>
    public static string TextData8 = "TextData8";
    /// <summary>
    /// Returns 'TextData9'
    /// </summary>
    public static string TextData9 = "TextData9";
    /// <summary>
    /// Returns 'TextData10'
    /// </summary>
    public static string TextData10 = "TextData10";
    /// <summary>
    /// Returns 'TextData11'
    /// </summary>
    public static string TextData11 = "TextData11";
    /// <summary>
    /// Returns 'TextData12'
    /// </summary>
    public static string TextData12 = "TextData12";
    /// <summary>
    /// Returns 'TextData13'
    /// </summary>
    public static string TextData13 = "TextData13";
    /// <summary>
    /// Returns 'TextData14'
    /// </summary>
    public static string TextData14 = "TextData14";
    /// <summary>
    /// Returns 'TextData15'
    /// </summary>
    public static string TextData15 = "TextData15";
    /// <summary>
    /// Returns 'TextData16'
    /// </summary>
    public static string TextData16 = "TextData16";
    /// <summary>
    /// Returns 'TextData17'
    /// </summary>
    public static string TextData17 = "TextData17";
    /// <summary>
    /// Returns 'TextData18'
    /// </summary>
    public static string TextData18 = "TextData18";
    /// <summary>
    /// Returns 'TextData19'
    /// </summary>
    public static string TextData19 = "TextData19";
    /// <summary>
    /// Returns 'TextData20'
    /// </summary>
    public static string TextData20 = "TextData20";
    /// <summary>
    /// Returns 'TextData21'
    /// </summary>
    public static string TextData21 = "TextData21";
    /// <summary>
    /// Returns 'TextData22'
    /// </summary>
    public static string TextData22 = "TextData22";
    /// <summary>
    /// Returns 'TextData23'
    /// </summary>
    public static string TextData23 = "TextData23";
    /// <summary>
    /// Returns 'TextData24'
    /// </summary>
    public static string TextData24 = "TextData24";
    /// <summary>
    /// Returns 'TextData25'
    /// </summary>
    public static string TextData25 = "TextData25";
    /// <summary>
    /// Returns 'TextData26'
    /// </summary>
    public static string TextData26 = "TextData26";
    /// <summary>
    /// Returns 'TextData27'
    /// </summary>
    public static string TextData27 = "TextData27";
    /// <summary>
    /// Returns 'TextData28'
    /// </summary>
    public static string TextData28 = "TextData28";
    /// <summary>
    /// Returns 'TextData29'
    /// </summary>
    public static string TextData29 = "TextData29";
    /// <summary>
    /// Returns 'TextData30'
    /// </summary>
    public static string TextData30 = "TextData30";
    /// <summary>
    /// Returns 'TextData31'
    /// </summary>
    public static string TextData31 = "TextData31";
    /// <summary>
    /// Returns 'TextData32'
    /// </summary>
    public static string TextData32 = "TextData32";
    /// <summary>
    /// Returns 'TextData33'
    /// </summary>
    public static string TextData33 = "TextData33";
    /// <summary>
    /// Returns 'TextData34'
    /// </summary>
    public static string TextData34 = "TextData34";
    /// <summary>
    /// Returns 'TextData35'
    /// </summary>
    public static string TextData35 = "TextData35";
    /// <summary>
    /// Returns 'TextData36'
    /// </summary>
    public static string TextData36 = "TextData36";
    /// <summary>
    /// Returns 'TextData37'
    /// </summary>
    public static string TextData37 = "TextData37";
    /// <summary>
    /// Returns 'TextData38'
    /// </summary>
    public static string TextData38 = "TextData38";
    /// <summary>
    /// Returns 'TextData39'
    /// </summary>
    public static string TextData39 = "TextData39";
    /// <summary>
    /// Returns 'TextData40'
    /// </summary>
    public static string TextData40 = "TextData40";
    /// <summary>
    /// Returns 'TextData41'
    /// </summary>
    public static string TextData41 = "TextData41";
    /// <summary>
    /// Returns 'TextData42'
    /// </summary>
    public static string TextData42 = "TextData42";
    /// <summary>
    /// Returns 'TextData43'
    /// </summary>
    public static string TextData43 = "TextData43";
    /// <summary>
    /// Returns 'TextData44'
    /// </summary>
    public static string TextData44 = "TextData44";
    /// <summary>
    /// Returns 'TextData45'
    /// </summary>
    public static string TextData45 = "TextData45";
    /// <summary>
    /// Returns 'TextData46'
    /// </summary>
    public static string TextData46 = "TextData46";
    /// <summary>
    /// Returns 'TextData47'
    /// </summary>
    public static string TextData47 = "TextData47";
    /// <summary>
    /// Returns 'TextData48'
    /// </summary>
    public static string TextData48 = "TextData48";
    /// <summary>
    /// Returns 'TextData49'
    /// </summary>
    public static string TextData49 = "TextData49";
    /// <summary>
    /// Returns 'TextData50'
    /// </summary>
    public static string TextData50 = "TextData50";
    /// <summary>
    /// Returns 'Trace'
    /// </summary>
    public static string Trace = "Trace";
    /// <summary>
    /// Returns 'UpdateDate'
    /// </summary>
    public static string UpdateDate = "UpdateDate";
    /// <summary>
    /// Returns 'UpdateName'
    /// </summary>
    public static string UpdateName = "UpdateName";
    /// <summary>
    /// Returns 'VeryImportantPerson'
    /// </summary>
    public static string VeryImportantPerson = "VeryImportantPerson";
    /// <summary>
    /// Returns 'PersonPhotoMainPhoto'
    /// </summary>
    public static string PersonPhotoMainPhoto = "PersonPhotoMainPhoto";
    /// <summary>
    /// Returns 'PersonPhotoAlternatePhoto'
    /// </summary>
    public static string PersonPhotoAlternatePhoto = "PersonPhotoAlternatePhoto";
    /// <summary>
    /// Returns 'AccessProfileUid'
    /// </summary>
    public static string AccessProfileUid = "AccessProfileUid";
    /// <summary>
    /// Returns 'AccessProfileName'
    /// </summary>
    public static string AccessProfileName = "AccessProfileName";
    /// <summary>
    /// Returns 'CredentialActivationDate'
    /// </summary>
    public static string CredentialActivationDate = "CredentialActivationDate";
    /// <summary>
    /// Returns 'CredentialDescription'
    /// </summary>
    public static string CredentialDescription = "CredentialDescription";
    /// <summary>
    /// Returns 'CredentialExpirationDateTime'
    /// </summary>
    public static string CredentialExpirationDateTime = "CredentialExpirationDateTime";
    /// <summary>
    /// Returns 'CredentialCardNumber'
    /// </summary>
    public static string CredentialCardNumber = "CredentialCardNumber";
    /// <summary>
    /// Returns 'Credential26BitStandardFacilityCode'
    /// </summary>
    public static string Credential26BitStandardFacilityCode = "Credential26BitStandardFacilityCode";
    /// <summary>
    /// Returns 'Credential26BitStandardIdCode'
    /// </summary>
    public static string Credential26BitStandardIdCode = "Credential26BitStandardIdCode";
    /// <summary>
    /// Returns 'CredentialCorporate1K35BitCompanyCode'
    /// </summary>
    public static string CredentialCorporate1K35BitCompanyCode = "CredentialCorporate1K35BitCompanyCode";
    /// <summary>
    /// Returns 'CredentialCorporate1K35BitIdCode'
    /// </summary>
    public static string CredentialCorporate1K35BitIdCode = "CredentialCorporate1K35BitIdCode";
    /// <summary>
    /// Returns 'CredentialCorporate1K48BitCompanyCode'
    /// </summary>
    public static string CredentialCorporate1K48BitCompanyCode = "CredentialCorporate1K48BitCompanyCode";
    /// <summary>
    /// Returns 'CredentialCorporate1K48BitIdCode'
    /// </summary>
    public static string CredentialCorporate1K48BitIdCode = "CredentialCorporate1K48BitIdCode";
    /// <summary>
    /// Returns 'CredentialCypress37BitFacilityCode'
    /// </summary>
    public static string CredentialCypress37BitFacilityCode = "CredentialCypress37BitFacilityCode";
    /// <summary>
    /// Returns 'CredentialCypress37BitIdCode'
    /// </summary>
    public static string CredentialCypress37BitIdCode = "CredentialCypress37BitIdCode";
    /// <summary>
    /// Returns 'CredentialH1030237BitIdCode'
    /// </summary>
    public static string CredentialH1030237BitIdCode = "CredentialH1030237BitIdCode";
    /// <summary>
    /// Returns 'CredentialH1030437BitFacilityCode'
    /// </summary>
    public static string CredentialH1030437BitFacilityCode = "CredentialH1030437BitFacilityCode";
    /// <summary>
    /// Returns 'CredentialH1030437BitIdCode'
    /// </summary>
    public static string CredentialH1030437BitIdCode = "CredentialH1030437BitIdCode";
    /// <summary>
    /// Returns 'CredentialSoftwareHouse37BitFacilityCode'
    /// </summary>
    public static string CredentialSoftwareHouse37BitFacilityCode = "CredentialSoftwareHouse37BitFacilityCode";
    /// <summary>
    /// Returns 'CredentialSoftwareHouse37BitSiteCode'
    /// </summary>
    public static string CredentialSoftwareHouse37BitSiteCode = "CredentialSoftwareHouse37BitSiteCode";
    /// <summary>
    /// Returns 'CredentialSoftwareHouse37BitIdCode'
    /// </summary>
    public static string CredentialSoftwareHouse37BitIdCode = "CredentialSoftwareHouse37BitIdCode";
    /// <summary>
    /// Returns 'CredentialXceedId40BitSiteCode'
    /// </summary>
    public static string CredentialXceedId40BitSiteCode = "CredentialXceedId40BitSiteCode";
    /// <summary>
    /// Returns 'CredentialXceedId40BitIdCode'
    /// </summary>
    public static string CredentialXceedId40BitIdCode = "CredentialXceedId40BitIdCode";
    /// <summary>
    /// Returns 'CountryName'
    /// </summary>
    public static string CountryName = "CountryName";
    /// <summary>
    /// Returns 'DepartmentName'
    /// </summary>
    public static string DepartmentName = "DepartmentName";
    /// <summary>
    /// Returns 'EntityName'
    /// </summary>
    public static string EntityName = "EntityName";
    /// <summary>
    /// Returns 'Gender'
    /// </summary>
    public static string Gender = "Gender";
    /// <summary>
    /// Returns 'PersonActiveStatusType'
    /// </summary>
    public static string PersonActiveStatusType = "PersonActiveStatusType";
    /// <summary>
    /// Returns 'PersonRecordType'
    /// </summary>
    public static string PersonRecordType = "PersonRecordType";
    /// <summary>
    /// Returns 'Date1'
    /// </summary>
    public static string Date1 = "Date1";
    /// <summary>
    /// Returns 'Date2'
    /// </summary>
    public static string Date2 = "Date2";
    /// <summary>
    /// Returns 'SelectItem1'
    /// </summary>
    public static string SelectItem1 = "SelectItem1";
    /// <summary>
    /// Returns 'SelectItem2'
    /// </summary>
    public static string SelectItem2 = "SelectItem2";
    /// <summary>
    /// Returns 'SelectItem3'
    /// </summary>
    public static string SelectItem3 = "SelectItem3";
    /// <summary>
    /// Returns 'SelectItem4'
    /// </summary>
    public static string SelectItem4 = "SelectItem4";
    /// <summary>
    /// Returns 'SelectItem5'
    /// </summary>
    public static string SelectItem5 = "SelectItem5";
    /// <summary>
    /// Returns 'SelectItem6'
    /// </summary>
    public static string SelectItem6 = "SelectItem6";
    /// <summary>
    /// Returns 'SelectItem7'
    /// </summary>
    public static string SelectItem7 = "SelectItem7";
    /// <summary>
    /// Returns 'SelectItem8'
    /// </summary>
    public static string SelectItem8 = "SelectItem8";
    /// <summary>
    /// Returns 'SelectItem9'
    /// </summary>
    public static string SelectItem9 = "SelectItem9";
    /// <summary>
    /// Returns 'SelectItem10'
    /// </summary>
    public static string SelectItem10 = "SelectItem10";
    /// <summary>
    /// Returns 'CurrentDate'
    /// </summary>
    public static string CurrentDate = "CurrentDate";
    /// <summary>
    /// Returns 'CurrentDateTime'
    /// </summary>
    public static string CurrentDateTime = "CurrentDateTime";
    /// <summary>
    /// Returns 'BadgeTemplateName'
    /// </summary>
    public static string BadgeTemplateName = "BadgeTemplateName";
    /// <summary>
    /// Returns 'DossierTemplateName'
    /// </summary>
    public static string DossierTemplateName = "DossierTemplateName";
    }
    #endregion
  }
}
