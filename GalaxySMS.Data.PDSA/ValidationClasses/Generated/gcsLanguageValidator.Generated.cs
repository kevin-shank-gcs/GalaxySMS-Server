using System;

using PDSA.Common;
using PDSA.Validation;

using GalaxySMS.EntityLayer;

namespace GalaxySMS.ValidationLayer
{
  /// <summary>
  /// Used to validate all properties of the gcsLanguagePDSA class.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public partial class gcsLanguagePDSAValidator : PDSAValidatorBase
  {
    #region Public Entity Property
    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    private gcsLanguagePDSA _Entity = null;

    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    public new gcsLanguagePDSA Entity
    {
      get { return _Entity; }
      set
      {
        _Entity = value;
        base.Entity = value;
      }
    }
    #endregion
    
    #region Clone Entity Class
    /// <summary>
    /// Clones the current gcsLanguagePDSA
    /// </summary>
    /// <returns>A cloned gcsLanguagePDSA object</returns>
    public gcsLanguagePDSA CloneEntity()
    {
      return CloneEntity(this.Entity);
    }
    
    /// <summary>
    /// Clones the passed in gcsLanguagePDSA
    /// </summary>
    /// <param name="entityToClone">The gcsLanguagePDSA entity to clone</param>
    /// <returns>A cloned gcsLanguagePDSA object</returns>
    public gcsLanguagePDSA CloneEntity(gcsLanguagePDSA entityToClone)
    {
      gcsLanguagePDSA newEntity = new gcsLanguagePDSA();

      newEntity.LanguageId = entityToClone.LanguageId;
      newEntity.CultureName = entityToClone.CultureName;
      newEntity.LanguageName = entityToClone.LanguageName;
      newEntity.Description = entityToClone.Description;
      newEntity.Notes = entityToClone.Notes;
      newEntity.IsActive = entityToClone.IsActive;
      newEntity.IsDisplay = entityToClone.IsDisplay;
      newEntity.IsDefault = entityToClone.IsDefault;
      newEntity.FlagImage = entityToClone.FlagImage;
      newEntity.DisplayOrder = entityToClone.DisplayOrder;
      newEntity.InsertName = entityToClone.InsertName;
      newEntity.InsertDate = entityToClone.InsertDate;
      newEntity.UpdateName = entityToClone.UpdateName;
      newEntity.UpdateDate = entityToClone.UpdateDate;
      newEntity.ConcurrencyValue = entityToClone.ConcurrencyValue;

      return newEntity;
    }
    #endregion

    #region CreateProperties Method
    /// <summary>
    /// Creates the collection of PDSAProperty objects. These are used to control validation and null handling.
    /// </summary>
    /// <returns>A collection of PDSAProperty objects</returns>
    public override PDSAProperties CreateProperties()
    {
      PDSAProperties props = new PDSAProperties();
      
      props.Add(PDSAProperty.Create(gcsLanguagePDSAValidator.ColumnNames.LanguageId, GetResourceMessage("GCS_gcsLanguagePDSA_LanguageId_Header", "Language Id"), true, typeof(Guid), -1, GetResourceMessage("GCS_gcsLanguagePDSA_LanguageId_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.NewGuid(), @"", ""));
      props.Add(PDSAProperty.Create(gcsLanguagePDSAValidator.ColumnNames.CultureName, GetResourceMessage("GCS_gcsLanguagePDSA_CultureName_Header", "Culture Name"), true, typeof(string), 20, GetResourceMessage("GCS_gcsLanguagePDSA_CultureName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(gcsLanguagePDSAValidator.ColumnNames.LanguageName, GetResourceMessage("GCS_gcsLanguagePDSA_LanguageName_Header", "Language Name"), true, typeof(string), 65, GetResourceMessage("GCS_gcsLanguagePDSA_LanguageName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(gcsLanguagePDSAValidator.ColumnNames.Description, GetResourceMessage("GCS_gcsLanguagePDSA_Description_Header", "Description"), true, typeof(string), 255, GetResourceMessage("GCS_gcsLanguagePDSA_Description_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(gcsLanguagePDSAValidator.ColumnNames.Notes, GetResourceMessage("GCS_gcsLanguagePDSA_Notes_Header", "Notes"), true, typeof(string), 2000, GetResourceMessage("GCS_gcsLanguagePDSA_Notes_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(gcsLanguagePDSAValidator.ColumnNames.IsActive, GetResourceMessage("GCS_gcsLanguagePDSA_IsActive_Header", "Is Active"), true, typeof(bool?), -1, GetResourceMessage("GCS_gcsLanguagePDSA_IsActive_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(gcsLanguagePDSAValidator.ColumnNames.IsDisplay, GetResourceMessage("GCS_gcsLanguagePDSA_IsDisplay_Header", "Is Display"), true, typeof(bool?), -1, GetResourceMessage("GCS_gcsLanguagePDSA_IsDisplay_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(gcsLanguagePDSAValidator.ColumnNames.IsDefault, GetResourceMessage("GCS_gcsLanguagePDSA_IsDefault_Header", "Is Default"), true, typeof(bool?), -1, GetResourceMessage("GCS_gcsLanguagePDSA_IsDefault_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(gcsLanguagePDSAValidator.ColumnNames.FlagImage, GetResourceMessage("GCS_gcsLanguagePDSA_FlagImage_Header", "Flag Image"), false, typeof(byte[]), 2147483647, GetResourceMessage("GCS_gcsLanguagePDSA_FlagImage_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, null, @"", ""));
      props.Add(PDSAProperty.Create(gcsLanguagePDSAValidator.ColumnNames.DisplayOrder, GetResourceMessage("GCS_gcsLanguagePDSA_DisplayOrder_Header", "Display Order"), false, typeof(int), 10, GetResourceMessage("GCS_gcsLanguagePDSA_DisplayOrder_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(gcsLanguagePDSAValidator.ColumnNames.InsertName, GetResourceMessage("GCS_gcsLanguagePDSA_InsertName_Header", "Insert Name"), true, typeof(string), 100, GetResourceMessage("GCS_gcsLanguagePDSA_InsertName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(gcsLanguagePDSAValidator.ColumnNames.InsertDate, GetResourceMessage("GCS_gcsLanguagePDSA_InsertDate_Header", "Insert Date"), true, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_gcsLanguagePDSA_InsertDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(gcsLanguagePDSAValidator.ColumnNames.UpdateName, GetResourceMessage("GCS_gcsLanguagePDSA_UpdateName_Header", "Update Name"), true, typeof(string), 100, GetResourceMessage("GCS_gcsLanguagePDSA_UpdateName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(gcsLanguagePDSAValidator.ColumnNames.UpdateDate, GetResourceMessage("GCS_gcsLanguagePDSA_UpdateDate_Header", "Update Date"), true, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_gcsLanguagePDSA_UpdateDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(gcsLanguagePDSAValidator.ColumnNames.ConcurrencyValue, GetResourceMessage("GCS_gcsLanguagePDSA_ConcurrencyValue_Header", "Concurrency Value"), true, typeof(short), 5, GetResourceMessage("GCS_gcsLanguagePDSA_ConcurrencyValue_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      
      return props;
    }
    #endregion

    #region Initialize Entity
    /// <summary>
    /// This method is called from the CreateNewEntity Method. All the properties for the Entity are set to default values here by the code generator.
    /// </summary>
    protected override void InitializeEntity()
    {
      Entity.LanguageId = Guid.NewGuid();
      Entity.CultureName = string.Empty;
      Entity.LanguageName = string.Empty;
      Entity.Description = string.Empty;
      Entity.Notes = string.Empty;
      Entity.IsActive = false;
      Entity.IsDisplay = false;
      Entity.IsDefault = false;
      Entity.FlagImage = null;
      Entity.DisplayOrder = 0;
      Entity.InsertName = string.Empty;
      Entity.InsertDate = DateTimeOffset.Now;
      Entity.UpdateName = string.Empty;
      Entity.UpdateDate = DateTimeOffset.Now;
      Entity.ConcurrencyValue = 0;

      Entity.ResetAllIsDirtyProperties();
    }
    #endregion
    
    #region InitProperties Method
    /// <summary>
    /// Called by the constructor to create the PDSAProperties collection of all properties that will be validated.
    /// </summary>
    protected override void InitProperties()
    {
      // Set the Properties collection to the collection of Entity Properties
      Properties = CreateProperties();
    }
    #endregion

    #region EntityDataToProperties Method
    /// <summary>
    /// Moves the Entity class data into the Properties collection.
    /// </summary>
    protected override void EntityDataToProperties()
    {
      if (Properties == null)
        InitProperties();
      
      if(!Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.LanguageId).SetAsNull)
        Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.LanguageId).Value = Entity.LanguageId;
      if(!Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.CultureName).SetAsNull)
        Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.CultureName).Value = Entity.CultureName;
      if(!Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.LanguageName).SetAsNull)
        Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.LanguageName).Value = Entity.LanguageName;
      if(!Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.Description).SetAsNull)
        Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.Description).Value = Entity.Description;
      if(!Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.Notes).SetAsNull)
        Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.Notes).Value = Entity.Notes;
      if(!Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.IsActive).SetAsNull)
        Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.IsActive).Value = Entity.IsActive;
      if(!Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.IsDisplay).SetAsNull)
        Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.IsDisplay).Value = Entity.IsDisplay;
      if(!Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.IsDefault).SetAsNull)
        Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.IsDefault).Value = Entity.IsDefault;
      if(!Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.FlagImage).SetAsNull)
        Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.FlagImage).Value = Entity.FlagImage;
      if(!Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.DisplayOrder).SetAsNull)
        Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.DisplayOrder).Value = Entity.DisplayOrder;
      if(!Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.InsertName).SetAsNull)
        Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.InsertName).Value = Entity.InsertName;
      if(!Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.InsertDate).SetAsNull)
        Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.InsertDate).Value = Entity.InsertDate;
      if(!Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.UpdateName).SetAsNull)
        Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.UpdateName).Value = Entity.UpdateName;
      if(!Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.UpdateDate).SetAsNull)
        Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.UpdateDate).Value = Entity.UpdateDate;
      if(!Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.ConcurrencyValue).SetAsNull)
        Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.ConcurrencyValue).Value = Entity.ConcurrencyValue;
    }

    /// <summary>
    /// Moves the Properties collection objects into the Entity properties
    /// </summary>
    protected override void PropertiesToEntityData()
    {
      if (Properties == null)
        InitProperties();

      if(Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.LanguageId).IsNull == false)
        Entity.LanguageId = Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.LanguageId).GetAsGuid();
      if(Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.CultureName).IsNull == false)
        Entity.CultureName = Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.CultureName).GetAsString();
      if(Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.LanguageName).IsNull == false)
        Entity.LanguageName = Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.LanguageName).GetAsString();
      if(Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.Description).IsNull == false)
        Entity.Description = Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.Description).GetAsString();
      if(Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.Notes).IsNull == false)
        Entity.Notes = Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.Notes).GetAsString();
      if(Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.IsActive).IsNull == false)
        Entity.IsActive = Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.IsActive).GetValueAsBoolean();
      if(Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.IsDisplay).IsNull == false)
        Entity.IsDisplay = Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.IsDisplay).GetValueAsBoolean();
      if(Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.IsDefault).IsNull == false)
        Entity.IsDefault = Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.IsDefault).GetValueAsBoolean();
      if(Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.FlagImage).IsNull == false)
        Entity.FlagImage = Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.FlagImage).GetAsByteArray();
      if(Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.DisplayOrder).IsNull == false)
        Entity.DisplayOrder = Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.DisplayOrder).GetAsInteger();
      if(Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.InsertName).IsNull == false)
        Entity.InsertName = Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.InsertName).GetAsString();
      if(Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.InsertDate).IsNull == false)
        Entity.InsertDate = Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.InsertDate).GetAsDateTimeOffset();
      if(Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.UpdateName).IsNull == false)
        Entity.UpdateName = Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.UpdateName).GetAsString();
      if(Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.UpdateDate).IsNull == false)
        Entity.UpdateDate = Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.UpdateDate).GetAsDateTimeOffset();
      if(Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.ConcurrencyValue).IsNull == false)
        Entity.ConcurrencyValue = Properties.GetByName(gcsLanguagePDSAValidator.ColumnNames.ConcurrencyValue).GetAsShort();
    }
    #endregion
    
    #region ColumnNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the gcsLanguagePDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ColumnNames
    {
    /// <summary>
    /// Returns 'LanguageId'
    /// </summary>
    public static string LanguageId = "LanguageId";
    /// <summary>
    /// Returns 'CultureName'
    /// </summary>
    public static string CultureName = "CultureName";
    /// <summary>
    /// Returns 'LanguageName'
    /// </summary>
    public static string LanguageName = "LanguageName";
    /// <summary>
    /// Returns 'Description'
    /// </summary>
    public static string Description = "Description";
    /// <summary>
    /// Returns 'Notes'
    /// </summary>
    public static string Notes = "Notes";
    /// <summary>
    /// Returns 'IsActive'
    /// </summary>
    public static string IsActive = "IsActive";
    /// <summary>
    /// Returns 'IsDisplay'
    /// </summary>
    public static string IsDisplay = "IsDisplay";
    /// <summary>
    /// Returns 'IsDefault'
    /// </summary>
    public static string IsDefault = "IsDefault";
    /// <summary>
    /// Returns 'FlagImage'
    /// </summary>
    public static string FlagImage = "FlagImage";
    /// <summary>
    /// Returns 'DisplayOrder'
    /// </summary>
    public static string DisplayOrder = "DisplayOrder";
    /// <summary>
    /// Returns 'InsertName'
    /// </summary>
    public static string InsertName = "InsertName";
    /// <summary>
    /// Returns 'InsertDate'
    /// </summary>
    public static string InsertDate = "InsertDate";
    /// <summary>
    /// Returns 'UpdateName'
    /// </summary>
    public static string UpdateName = "UpdateName";
    /// <summary>
    /// Returns 'UpdateDate'
    /// </summary>
    public static string UpdateDate = "UpdateDate";
    /// <summary>
    /// Returns 'ConcurrencyValue'
    /// </summary>
    public static string ConcurrencyValue = "ConcurrencyValue";
    }
    #endregion
  }
}
