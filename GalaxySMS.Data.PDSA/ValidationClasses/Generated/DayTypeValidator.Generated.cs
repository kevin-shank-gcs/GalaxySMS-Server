using System;

using PDSA.Common;
using PDSA.Validation;

using GalaxySMS.EntityLayer;

namespace GalaxySMS.ValidationLayer
{
  /// <summary>
  /// Used to validate all properties of the DayTypePDSA class.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public partial class DayTypePDSAValidator : PDSAValidatorBase
  {
    #region Public Entity Property
    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    private DayTypePDSA _Entity = null;

    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    public new DayTypePDSA Entity
    {
      get { return _Entity; }
      set
      {
        _Entity = value;
        base.Entity = value;
      }
    }
    #endregion
    
    #region Clone Entity Class
    /// <summary>
    /// Clones the current DayTypePDSA
    /// </summary>
    /// <returns>A cloned DayTypePDSA object</returns>
    public DayTypePDSA CloneEntity()
    {
      return CloneEntity(this.Entity);
    }
    
    /// <summary>
    /// Clones the passed in DayTypePDSA
    /// </summary>
    /// <param name="entityToClone">The DayTypePDSA entity to clone</param>
    /// <returns>A cloned DayTypePDSA object</returns>
    public DayTypePDSA CloneEntity(DayTypePDSA entityToClone)
    {
      DayTypePDSA newEntity = new DayTypePDSA();

      newEntity.DayTypeUid = entityToClone.DayTypeUid;
      newEntity.EntityId = entityToClone.EntityId;
      newEntity.Name = entityToClone.Name;
      newEntity.Notes = entityToClone.Notes;
      newEntity.InsertName = entityToClone.InsertName;
      newEntity.InsertDate = entityToClone.InsertDate;
      newEntity.UpdateName = entityToClone.UpdateName;
      newEntity.UpdateDate = entityToClone.UpdateDate;
      newEntity.ConcurrencyValue = entityToClone.ConcurrencyValue;
      newEntity.HighlightColor = entityToClone.HighlightColor;
      newEntity.GalaxyClusterUid = entityToClone.GalaxyClusterUid;
      newEntity.DayTypeCode = entityToClone.DayTypeCode;
      newEntity.IsActive = entityToClone.IsActive;
      newEntity.PageNumber = entityToClone.PageNumber;
      newEntity.PageSize = entityToClone.PageSize;
      newEntity.TotalRowCount = entityToClone.TotalRowCount;
      newEntity.SortColumn = entityToClone.SortColumn;
      newEntity.DescendingOrder = entityToClone.DescendingOrder;

      return newEntity;
    }
    #endregion

    #region CreateProperties Method
    /// <summary>
    /// Creates the collection of PDSAProperty objects. These are used to control validation and null handling.
    /// </summary>
    /// <returns>A collection of PDSAProperty objects</returns>
    public override PDSAProperties CreateProperties()
    {
      PDSAProperties props = new PDSAProperties();
      
      props.Add(PDSAProperty.Create(DayTypePDSAValidator.ColumnNames.DayTypeUid, GetResourceMessage("GCS_DayTypePDSA_DayTypeUid_Header", "Day Type Uid"), true, typeof(Guid), -1, GetResourceMessage("GCS_DayTypePDSA_DayTypeUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(DayTypePDSAValidator.ColumnNames.EntityId, GetResourceMessage("GCS_DayTypePDSA_EntityId_Header", "Entity Id"), true, typeof(Guid), -1, GetResourceMessage("GCS_DayTypePDSA_EntityId_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(DayTypePDSAValidator.ColumnNames.Name, GetResourceMessage("GCS_DayTypePDSA_Name_Header", "Name"), true, typeof(string), 65, GetResourceMessage("GCS_DayTypePDSA_Name_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(DayTypePDSAValidator.ColumnNames.Notes, GetResourceMessage("GCS_DayTypePDSA_Notes_Header", "Notes"), false, typeof(string), 1000, GetResourceMessage("GCS_DayTypePDSA_Notes_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(DayTypePDSAValidator.ColumnNames.InsertName, GetResourceMessage("GCS_DayTypePDSA_InsertName_Header", "Insert Name"), true, typeof(string), 100, GetResourceMessage("GCS_DayTypePDSA_InsertName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(DayTypePDSAValidator.ColumnNames.InsertDate, GetResourceMessage("GCS_DayTypePDSA_InsertDate_Header", "Insert Date"), true, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_DayTypePDSA_InsertDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(DayTypePDSAValidator.ColumnNames.UpdateName, GetResourceMessage("GCS_DayTypePDSA_UpdateName_Header", "Update Name"), true, typeof(string), 100, GetResourceMessage("GCS_DayTypePDSA_UpdateName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(DayTypePDSAValidator.ColumnNames.UpdateDate, GetResourceMessage("GCS_DayTypePDSA_UpdateDate_Header", "Update Date"), true, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_DayTypePDSA_UpdateDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(DayTypePDSAValidator.ColumnNames.ConcurrencyValue, GetResourceMessage("GCS_DayTypePDSA_ConcurrencyValue_Header", "Concurrency Value"), true, typeof(short), 5, GetResourceMessage("GCS_DayTypePDSA_ConcurrencyValue_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(DayTypePDSAValidator.ColumnNames.HighlightColor, GetResourceMessage("GCS_DayTypePDSA_HighlightColor_Header", "Highlight Color"), false, typeof(int), 10, GetResourceMessage("GCS_DayTypePDSA_HighlightColor_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(DayTypePDSAValidator.ColumnNames.GalaxyClusterUid, GetResourceMessage("GCS_DayTypePDSA_GalaxyClusterUid_Header", "Galaxy Cluster Uid"), false, typeof(Guid), 2147483647, GetResourceMessage("GCS_DayTypePDSA_GalaxyClusterUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(DayTypePDSAValidator.ColumnNames.DayTypeCode, GetResourceMessage("GCS_DayTypePDSA_DayTypeCode_Header", "Day Type Code"), true, typeof(short), 5, GetResourceMessage("GCS_DayTypePDSA_DayTypeCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(DayTypePDSAValidator.ColumnNames.IsActive, GetResourceMessage("GCS_DayTypePDSA_IsActive_Header", "Is Active"), true, typeof(bool), -1, GetResourceMessage("GCS_DayTypePDSA_IsActive_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(DayTypePDSAValidator.ColumnNames.PageNumber, GetResourceMessage("GCS_DayTypePDSA_PageNumber_Header", "Page Number"), false, typeof(int), 2147483647, GetResourceMessage("GCS_DayTypePDSA_PageNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("0"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(DayTypePDSAValidator.ColumnNames.PageSize, GetResourceMessage("GCS_DayTypePDSA_PageSize_Header", "Page Size"), false, typeof(int), 2147483647, GetResourceMessage("GCS_DayTypePDSA_PageSize_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("0"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(DayTypePDSAValidator.ColumnNames.TotalRowCount, GetResourceMessage("GCS_DayTypePDSA_TotalRowCount_Header", "Total Row Count"), false, typeof(int), 2147483647, GetResourceMessage("GCS_DayTypePDSA_TotalRowCount_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("0"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(DayTypePDSAValidator.ColumnNames.SortColumn, GetResourceMessage("GCS_DayTypePDSA_SortColumn_Header", "Sort Column"), false, typeof(string), 2147483647, GetResourceMessage("GCS_DayTypePDSA_SortColumn_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(DayTypePDSAValidator.ColumnNames.DescendingOrder, GetResourceMessage("GCS_DayTypePDSA_DescendingOrder_Header", "Descending Order"), false, typeof(bool), 2147483647, GetResourceMessage("GCS_DayTypePDSA_DescendingOrder_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      
      return props;
    }
    #endregion

    #region Initialize Entity
    /// <summary>
    /// This method is called from the CreateNewEntity Method. All the properties for the Entity are set to default values here by the code generator.
    /// </summary>
    protected override void InitializeEntity()
    {
      Entity.DayTypeUid = Guid.Empty;
      Entity.EntityId = Guid.Empty;
      Entity.Name = string.Empty;
      Entity.Notes = string.Empty;
      Entity.InsertName = string.Empty;
      Entity.InsertDate = DateTimeOffset.Now;
      Entity.UpdateName = string.Empty;
      Entity.UpdateDate = DateTimeOffset.Now;
      Entity.ConcurrencyValue = 0;
      Entity.HighlightColor = 0;
      Entity.GalaxyClusterUid = Guid.Empty;
      Entity.DayTypeCode = 0;
      Entity.IsActive = false;
      Entity.PageNumber = 0;
      Entity.PageSize = 0;
      Entity.TotalRowCount = 0;
      Entity.SortColumn = string.Empty;
      Entity.DescendingOrder = false;

      Entity.ResetAllIsDirtyProperties();
    }
    #endregion
    
    #region InitProperties Method
    /// <summary>
    /// Called by the constructor to create the PDSAProperties collection of all properties that will be validated.
    /// </summary>
    protected override void InitProperties()
    {
      // Set the Properties collection to the collection of Entity Properties
      Properties = CreateProperties();
    }
    #endregion

    #region EntityDataToProperties Method
    /// <summary>
    /// Moves the Entity class data into the Properties collection.
    /// </summary>
    protected override void EntityDataToProperties()
    {
      if (Properties == null)
        InitProperties();
      
      if(!Properties.GetByName(DayTypePDSAValidator.ColumnNames.DayTypeUid).SetAsNull)
        Properties.GetByName(DayTypePDSAValidator.ColumnNames.DayTypeUid).Value = Entity.DayTypeUid;
      if(!Properties.GetByName(DayTypePDSAValidator.ColumnNames.EntityId).SetAsNull)
        Properties.GetByName(DayTypePDSAValidator.ColumnNames.EntityId).Value = Entity.EntityId;
      if(!Properties.GetByName(DayTypePDSAValidator.ColumnNames.Name).SetAsNull)
        Properties.GetByName(DayTypePDSAValidator.ColumnNames.Name).Value = Entity.Name;
      if(!Properties.GetByName(DayTypePDSAValidator.ColumnNames.Notes).SetAsNull)
        Properties.GetByName(DayTypePDSAValidator.ColumnNames.Notes).Value = Entity.Notes;
      if(!Properties.GetByName(DayTypePDSAValidator.ColumnNames.InsertName).SetAsNull)
        Properties.GetByName(DayTypePDSAValidator.ColumnNames.InsertName).Value = Entity.InsertName;
      if(!Properties.GetByName(DayTypePDSAValidator.ColumnNames.InsertDate).SetAsNull)
        Properties.GetByName(DayTypePDSAValidator.ColumnNames.InsertDate).Value = Entity.InsertDate;
      if(!Properties.GetByName(DayTypePDSAValidator.ColumnNames.UpdateName).SetAsNull)
        Properties.GetByName(DayTypePDSAValidator.ColumnNames.UpdateName).Value = Entity.UpdateName;
      if(!Properties.GetByName(DayTypePDSAValidator.ColumnNames.UpdateDate).SetAsNull)
        Properties.GetByName(DayTypePDSAValidator.ColumnNames.UpdateDate).Value = Entity.UpdateDate;
      if(!Properties.GetByName(DayTypePDSAValidator.ColumnNames.ConcurrencyValue).SetAsNull)
        Properties.GetByName(DayTypePDSAValidator.ColumnNames.ConcurrencyValue).Value = Entity.ConcurrencyValue;
      if(!Properties.GetByName(DayTypePDSAValidator.ColumnNames.HighlightColor).SetAsNull)
        Properties.GetByName(DayTypePDSAValidator.ColumnNames.HighlightColor).Value = Entity.HighlightColor;
      if(!Properties.GetByName(DayTypePDSAValidator.ColumnNames.GalaxyClusterUid).SetAsNull)
        Properties.GetByName(DayTypePDSAValidator.ColumnNames.GalaxyClusterUid).Value = Entity.GalaxyClusterUid;
      if(!Properties.GetByName(DayTypePDSAValidator.ColumnNames.DayTypeCode).SetAsNull)
        Properties.GetByName(DayTypePDSAValidator.ColumnNames.DayTypeCode).Value = Entity.DayTypeCode;
      if(!Properties.GetByName(DayTypePDSAValidator.ColumnNames.IsActive).SetAsNull)
        Properties.GetByName(DayTypePDSAValidator.ColumnNames.IsActive).Value = Entity.IsActive;
      if(!Properties.GetByName(DayTypePDSAValidator.ColumnNames.PageNumber).SetAsNull)
        Properties.GetByName(DayTypePDSAValidator.ColumnNames.PageNumber).Value = Entity.PageNumber;
      if(!Properties.GetByName(DayTypePDSAValidator.ColumnNames.PageSize).SetAsNull)
        Properties.GetByName(DayTypePDSAValidator.ColumnNames.PageSize).Value = Entity.PageSize;
      if(!Properties.GetByName(DayTypePDSAValidator.ColumnNames.TotalRowCount).SetAsNull)
        Properties.GetByName(DayTypePDSAValidator.ColumnNames.TotalRowCount).Value = Entity.TotalRowCount;
      if(!Properties.GetByName(DayTypePDSAValidator.ColumnNames.SortColumn).SetAsNull)
        Properties.GetByName(DayTypePDSAValidator.ColumnNames.SortColumn).Value = Entity.SortColumn;
      if(!Properties.GetByName(DayTypePDSAValidator.ColumnNames.DescendingOrder).SetAsNull)
        Properties.GetByName(DayTypePDSAValidator.ColumnNames.DescendingOrder).Value = Entity.DescendingOrder;
    }

    /// <summary>
    /// Moves the Properties collection objects into the Entity properties
    /// </summary>
    protected override void PropertiesToEntityData()
    {
      if (Properties == null)
        InitProperties();

      if(Properties.GetByName(DayTypePDSAValidator.ColumnNames.DayTypeUid).IsNull == false)
        Entity.DayTypeUid = Properties.GetByName(DayTypePDSAValidator.ColumnNames.DayTypeUid).GetAsGuid();
      if(Properties.GetByName(DayTypePDSAValidator.ColumnNames.EntityId).IsNull == false)
        Entity.EntityId = Properties.GetByName(DayTypePDSAValidator.ColumnNames.EntityId).GetAsGuid();
      if(Properties.GetByName(DayTypePDSAValidator.ColumnNames.Name).IsNull == false)
        Entity.Name = Properties.GetByName(DayTypePDSAValidator.ColumnNames.Name).GetAsString();
      if(Properties.GetByName(DayTypePDSAValidator.ColumnNames.Notes).IsNull == false)
        Entity.Notes = Properties.GetByName(DayTypePDSAValidator.ColumnNames.Notes).GetAsString();
      if(Properties.GetByName(DayTypePDSAValidator.ColumnNames.InsertName).IsNull == false)
        Entity.InsertName = Properties.GetByName(DayTypePDSAValidator.ColumnNames.InsertName).GetAsString();
      if(Properties.GetByName(DayTypePDSAValidator.ColumnNames.InsertDate).IsNull == false)
        Entity.InsertDate = Properties.GetByName(DayTypePDSAValidator.ColumnNames.InsertDate).GetAsDateTimeOffset();
      if(Properties.GetByName(DayTypePDSAValidator.ColumnNames.UpdateName).IsNull == false)
        Entity.UpdateName = Properties.GetByName(DayTypePDSAValidator.ColumnNames.UpdateName).GetAsString();
      if(Properties.GetByName(DayTypePDSAValidator.ColumnNames.UpdateDate).IsNull == false)
        Entity.UpdateDate = Properties.GetByName(DayTypePDSAValidator.ColumnNames.UpdateDate).GetAsDateTimeOffset();
      if(Properties.GetByName(DayTypePDSAValidator.ColumnNames.ConcurrencyValue).IsNull == false)
        Entity.ConcurrencyValue = Properties.GetByName(DayTypePDSAValidator.ColumnNames.ConcurrencyValue).GetAsShort();
      if(Properties.GetByName(DayTypePDSAValidator.ColumnNames.HighlightColor).IsNull == false)
        Entity.HighlightColor = Properties.GetByName(DayTypePDSAValidator.ColumnNames.HighlightColor).GetAsInteger();
      if(Properties.GetByName(DayTypePDSAValidator.ColumnNames.GalaxyClusterUid).IsNull == false)
        Entity.GalaxyClusterUid = Properties.GetByName(DayTypePDSAValidator.ColumnNames.GalaxyClusterUid).GetAsGuid();
      if(Properties.GetByName(DayTypePDSAValidator.ColumnNames.DayTypeCode).IsNull == false)
        Entity.DayTypeCode = Properties.GetByName(DayTypePDSAValidator.ColumnNames.DayTypeCode).GetAsShort();
      if(Properties.GetByName(DayTypePDSAValidator.ColumnNames.IsActive).IsNull == false)
        Entity.IsActive = Properties.GetByName(DayTypePDSAValidator.ColumnNames.IsActive).GetAsBool();
      if(Properties.GetByName(DayTypePDSAValidator.ColumnNames.PageNumber).IsNull == false)
        Entity.PageNumber = Properties.GetByName(DayTypePDSAValidator.ColumnNames.PageNumber).GetAsInteger();
      if(Properties.GetByName(DayTypePDSAValidator.ColumnNames.PageSize).IsNull == false)
        Entity.PageSize = Properties.GetByName(DayTypePDSAValidator.ColumnNames.PageSize).GetAsInteger();
      if(Properties.GetByName(DayTypePDSAValidator.ColumnNames.TotalRowCount).IsNull == false)
        Entity.TotalRowCount = Properties.GetByName(DayTypePDSAValidator.ColumnNames.TotalRowCount).GetAsInteger();
      if(Properties.GetByName(DayTypePDSAValidator.ColumnNames.SortColumn).IsNull == false)
        Entity.SortColumn = Properties.GetByName(DayTypePDSAValidator.ColumnNames.SortColumn).GetAsString();
      if(Properties.GetByName(DayTypePDSAValidator.ColumnNames.DescendingOrder).IsNull == false)
        Entity.DescendingOrder = Properties.GetByName(DayTypePDSAValidator.ColumnNames.DescendingOrder).GetAsBool();
    }
    #endregion
    
    #region ColumnNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the DayTypePDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ColumnNames
    {
    /// <summary>
    /// Returns 'DayTypeUid'
    /// </summary>
    public static string DayTypeUid = "DayTypeUid";
    /// <summary>
    /// Returns 'EntityId'
    /// </summary>
    public static string EntityId = "EntityId";
    /// <summary>
    /// Returns 'Name'
    /// </summary>
    public static string Name = "Name";
    /// <summary>
    /// Returns 'Notes'
    /// </summary>
    public static string Notes = "Notes";
    /// <summary>
    /// Returns 'InsertName'
    /// </summary>
    public static string InsertName = "InsertName";
    /// <summary>
    /// Returns 'InsertDate'
    /// </summary>
    public static string InsertDate = "InsertDate";
    /// <summary>
    /// Returns 'UpdateName'
    /// </summary>
    public static string UpdateName = "UpdateName";
    /// <summary>
    /// Returns 'UpdateDate'
    /// </summary>
    public static string UpdateDate = "UpdateDate";
    /// <summary>
    /// Returns 'ConcurrencyValue'
    /// </summary>
    public static string ConcurrencyValue = "ConcurrencyValue";
    /// <summary>
    /// Returns 'HighlightColor'
    /// </summary>
    public static string HighlightColor = "HighlightColor";
    /// <summary>
    /// Returns 'GalaxyClusterUid'
    /// </summary>
    public static string GalaxyClusterUid = "GalaxyClusterUid";
    /// <summary>
    /// Returns 'DayTypeCode'
    /// </summary>
    public static string DayTypeCode = "DayTypeCode";
    /// <summary>
    /// Returns 'IsActive'
    /// </summary>
    public static string IsActive = "IsActive";
    /// <summary>
    /// Returns 'PageNumber'
    /// </summary>
    public static string PageNumber = "PageNumber";
    /// <summary>
    /// Returns 'PageSize'
    /// </summary>
    public static string PageSize = "PageSize";
    /// <summary>
    /// Returns 'TotalRowCount'
    /// </summary>
    public static string TotalRowCount = "TotalRowCount";
    /// <summary>
    /// Returns 'SortColumn'
    /// </summary>
    public static string SortColumn = "SortColumn";
    /// <summary>
    /// Returns 'DescendingOrder'
    /// </summary>
    public static string DescendingOrder = "DescendingOrder";
    }
    #endregion
  }
}
