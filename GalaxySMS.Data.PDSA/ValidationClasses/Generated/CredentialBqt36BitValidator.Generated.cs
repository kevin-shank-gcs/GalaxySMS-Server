using System;

using PDSA.Common;
using PDSA.Validation;

using GalaxySMS.EntityLayer;

namespace GalaxySMS.ValidationLayer
{
  /// <summary>
  /// Used to validate all properties of the CredentialBqt36BitPDSA class.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public partial class CredentialBqt36BitPDSAValidator : PDSAValidatorBase
  {
    #region Public Entity Property
    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    private CredentialBqt36BitPDSA _Entity = null;

    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    public new CredentialBqt36BitPDSA Entity
    {
      get { return _Entity; }
      set
      {
        _Entity = value;
        base.Entity = value;
      }
    }
    #endregion
    
    #region Clone Entity Class
    /// <summary>
    /// Clones the current CredentialBqt36BitPDSA
    /// </summary>
    /// <returns>A cloned CredentialBqt36BitPDSA object</returns>
    public CredentialBqt36BitPDSA CloneEntity()
    {
      return CloneEntity(this.Entity);
    }
    
    /// <summary>
    /// Clones the passed in CredentialBqt36BitPDSA
    /// </summary>
    /// <param name="entityToClone">The CredentialBqt36BitPDSA entity to clone</param>
    /// <returns>A cloned CredentialBqt36BitPDSA object</returns>
    public CredentialBqt36BitPDSA CloneEntity(CredentialBqt36BitPDSA entityToClone)
    {
      CredentialBqt36BitPDSA newEntity = new CredentialBqt36BitPDSA();

      newEntity.CredentialUid = entityToClone.CredentialUid;
      newEntity.FacilityCode = entityToClone.FacilityCode;
      newEntity.IdCode = entityToClone.IdCode;
      newEntity.IssueCode = entityToClone.IssueCode;
      newEntity.InsertName = entityToClone.InsertName;
      newEntity.InsertDate = entityToClone.InsertDate;
      newEntity.UpdateName = entityToClone.UpdateName;
      newEntity.UpdateDate = entityToClone.UpdateDate;
      newEntity.ConcurrencyValue = entityToClone.ConcurrencyValue;

      return newEntity;
    }
    #endregion

    #region CreateProperties Method
    /// <summary>
    /// Creates the collection of PDSAProperty objects. These are used to control validation and null handling.
    /// </summary>
    /// <returns>A collection of PDSAProperty objects</returns>
    public override PDSAProperties CreateProperties()
    {
      PDSAProperties props = new PDSAProperties();
      
      props.Add(PDSAProperty.Create(CredentialBqt36BitPDSAValidator.ColumnNames.CredentialUid, GetResourceMessage("GCS_CredentialBqt36BitPDSA_CredentialUid_Header", "Credential Uid"), true, typeof(Guid), -1, GetResourceMessage("GCS_CredentialBqt36BitPDSA_CredentialUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(CredentialBqt36BitPDSAValidator.ColumnNames.FacilityCode, GetResourceMessage("GCS_CredentialBqt36BitPDSA_FacilityCode_Header", "Facility Code"), true, typeof(short), 5, GetResourceMessage("GCS_CredentialBqt36BitPDSA_FacilityCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(CredentialBqt36BitPDSAValidator.ColumnNames.IdCode, GetResourceMessage("GCS_CredentialBqt36BitPDSA_IdCode_Header", "Id Code"), true, typeof(int), 10, GetResourceMessage("GCS_CredentialBqt36BitPDSA_IdCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(CredentialBqt36BitPDSAValidator.ColumnNames.IssueCode, GetResourceMessage("GCS_CredentialBqt36BitPDSA_IssueCode_Header", "Issue Code"), true, typeof(short), 5, GetResourceMessage("GCS_CredentialBqt36BitPDSA_IssueCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(CredentialBqt36BitPDSAValidator.ColumnNames.InsertName, GetResourceMessage("GCS_CredentialBqt36BitPDSA_InsertName_Header", "Insert Name"), true, typeof(string), 100, GetResourceMessage("GCS_CredentialBqt36BitPDSA_InsertName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(CredentialBqt36BitPDSAValidator.ColumnNames.InsertDate, GetResourceMessage("GCS_CredentialBqt36BitPDSA_InsertDate_Header", "Insert Date"), true, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_CredentialBqt36BitPDSA_InsertDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(CredentialBqt36BitPDSAValidator.ColumnNames.UpdateName, GetResourceMessage("GCS_CredentialBqt36BitPDSA_UpdateName_Header", "Update Name"), true, typeof(string), 100, GetResourceMessage("GCS_CredentialBqt36BitPDSA_UpdateName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(CredentialBqt36BitPDSAValidator.ColumnNames.UpdateDate, GetResourceMessage("GCS_CredentialBqt36BitPDSA_UpdateDate_Header", "Update Date"), true, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_CredentialBqt36BitPDSA_UpdateDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(CredentialBqt36BitPDSAValidator.ColumnNames.ConcurrencyValue, GetResourceMessage("GCS_CredentialBqt36BitPDSA_ConcurrencyValue_Header", "Concurrency Value"), true, typeof(short), 5, GetResourceMessage("GCS_CredentialBqt36BitPDSA_ConcurrencyValue_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      
      return props;
    }
    #endregion

    #region Initialize Entity
    /// <summary>
    /// This method is called from the CreateNewEntity Method. All the properties for the Entity are set to default values here by the code generator.
    /// </summary>
    protected override void InitializeEntity()
    {
      Entity.CredentialUid = Guid.Empty;
      Entity.FacilityCode = 0;
      Entity.IdCode = 0;
      Entity.IssueCode = 0;
      Entity.InsertName = string.Empty;
      Entity.InsertDate = DateTimeOffset.Now;
      Entity.UpdateName = string.Empty;
      Entity.UpdateDate = DateTimeOffset.Now;
      Entity.ConcurrencyValue = 0;

      Entity.ResetAllIsDirtyProperties();
    }
    #endregion
    
    #region InitProperties Method
    /// <summary>
    /// Called by the constructor to create the PDSAProperties collection of all properties that will be validated.
    /// </summary>
    protected override void InitProperties()
    {
      // Set the Properties collection to the collection of Entity Properties
      Properties = CreateProperties();
    }
    #endregion

    #region EntityDataToProperties Method
    /// <summary>
    /// Moves the Entity class data into the Properties collection.
    /// </summary>
    protected override void EntityDataToProperties()
    {
      if (Properties == null)
        InitProperties();
      
      if(!Properties.GetByName(CredentialBqt36BitPDSAValidator.ColumnNames.CredentialUid).SetAsNull)
        Properties.GetByName(CredentialBqt36BitPDSAValidator.ColumnNames.CredentialUid).Value = Entity.CredentialUid;
      if(!Properties.GetByName(CredentialBqt36BitPDSAValidator.ColumnNames.FacilityCode).SetAsNull)
        Properties.GetByName(CredentialBqt36BitPDSAValidator.ColumnNames.FacilityCode).Value = Entity.FacilityCode;
      if(!Properties.GetByName(CredentialBqt36BitPDSAValidator.ColumnNames.IdCode).SetAsNull)
        Properties.GetByName(CredentialBqt36BitPDSAValidator.ColumnNames.IdCode).Value = Entity.IdCode;
      if(!Properties.GetByName(CredentialBqt36BitPDSAValidator.ColumnNames.IssueCode).SetAsNull)
        Properties.GetByName(CredentialBqt36BitPDSAValidator.ColumnNames.IssueCode).Value = Entity.IssueCode;
      if(!Properties.GetByName(CredentialBqt36BitPDSAValidator.ColumnNames.InsertName).SetAsNull)
        Properties.GetByName(CredentialBqt36BitPDSAValidator.ColumnNames.InsertName).Value = Entity.InsertName;
      if(!Properties.GetByName(CredentialBqt36BitPDSAValidator.ColumnNames.InsertDate).SetAsNull)
        Properties.GetByName(CredentialBqt36BitPDSAValidator.ColumnNames.InsertDate).Value = Entity.InsertDate;
      if(!Properties.GetByName(CredentialBqt36BitPDSAValidator.ColumnNames.UpdateName).SetAsNull)
        Properties.GetByName(CredentialBqt36BitPDSAValidator.ColumnNames.UpdateName).Value = Entity.UpdateName;
      if(!Properties.GetByName(CredentialBqt36BitPDSAValidator.ColumnNames.UpdateDate).SetAsNull)
        Properties.GetByName(CredentialBqt36BitPDSAValidator.ColumnNames.UpdateDate).Value = Entity.UpdateDate;
      if(!Properties.GetByName(CredentialBqt36BitPDSAValidator.ColumnNames.ConcurrencyValue).SetAsNull)
        Properties.GetByName(CredentialBqt36BitPDSAValidator.ColumnNames.ConcurrencyValue).Value = Entity.ConcurrencyValue;
    }

    /// <summary>
    /// Moves the Properties collection objects into the Entity properties
    /// </summary>
    protected override void PropertiesToEntityData()
    {
      if (Properties == null)
        InitProperties();

      if(Properties.GetByName(CredentialBqt36BitPDSAValidator.ColumnNames.CredentialUid).IsNull == false)
        Entity.CredentialUid = Properties.GetByName(CredentialBqt36BitPDSAValidator.ColumnNames.CredentialUid).GetAsGuid();
      if(Properties.GetByName(CredentialBqt36BitPDSAValidator.ColumnNames.FacilityCode).IsNull == false)
        Entity.FacilityCode = Properties.GetByName(CredentialBqt36BitPDSAValidator.ColumnNames.FacilityCode).GetAsShort();
      if(Properties.GetByName(CredentialBqt36BitPDSAValidator.ColumnNames.IdCode).IsNull == false)
        Entity.IdCode = Properties.GetByName(CredentialBqt36BitPDSAValidator.ColumnNames.IdCode).GetAsInteger();
      if(Properties.GetByName(CredentialBqt36BitPDSAValidator.ColumnNames.IssueCode).IsNull == false)
        Entity.IssueCode = Properties.GetByName(CredentialBqt36BitPDSAValidator.ColumnNames.IssueCode).GetAsShort();
      if(Properties.GetByName(CredentialBqt36BitPDSAValidator.ColumnNames.InsertName).IsNull == false)
        Entity.InsertName = Properties.GetByName(CredentialBqt36BitPDSAValidator.ColumnNames.InsertName).GetAsString();
      if(Properties.GetByName(CredentialBqt36BitPDSAValidator.ColumnNames.InsertDate).IsNull == false)
        Entity.InsertDate = Properties.GetByName(CredentialBqt36BitPDSAValidator.ColumnNames.InsertDate).GetAsDateTimeOffset();
      if(Properties.GetByName(CredentialBqt36BitPDSAValidator.ColumnNames.UpdateName).IsNull == false)
        Entity.UpdateName = Properties.GetByName(CredentialBqt36BitPDSAValidator.ColumnNames.UpdateName).GetAsString();
      if(Properties.GetByName(CredentialBqt36BitPDSAValidator.ColumnNames.UpdateDate).IsNull == false)
        Entity.UpdateDate = Properties.GetByName(CredentialBqt36BitPDSAValidator.ColumnNames.UpdateDate).GetAsDateTimeOffset();
      if(Properties.GetByName(CredentialBqt36BitPDSAValidator.ColumnNames.ConcurrencyValue).IsNull == false)
        Entity.ConcurrencyValue = Properties.GetByName(CredentialBqt36BitPDSAValidator.ColumnNames.ConcurrencyValue).GetAsShort();
    }
    #endregion
    
    #region ColumnNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the CredentialBqt36BitPDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ColumnNames
    {
    /// <summary>
    /// Returns 'CredentialUid'
    /// </summary>
    public static string CredentialUid = "CredentialUid";
    /// <summary>
    /// Returns 'FacilityCode'
    /// </summary>
    public static string FacilityCode = "FacilityCode";
    /// <summary>
    /// Returns 'IdCode'
    /// </summary>
    public static string IdCode = "IdCode";
    /// <summary>
    /// Returns 'IssueCode'
    /// </summary>
    public static string IssueCode = "IssueCode";
    /// <summary>
    /// Returns 'InsertName'
    /// </summary>
    public static string InsertName = "InsertName";
    /// <summary>
    /// Returns 'InsertDate'
    /// </summary>
    public static string InsertDate = "InsertDate";
    /// <summary>
    /// Returns 'UpdateName'
    /// </summary>
    public static string UpdateName = "UpdateName";
    /// <summary>
    /// Returns 'UpdateDate'
    /// </summary>
    public static string UpdateDate = "UpdateDate";
    /// <summary>
    /// Returns 'ConcurrencyValue'
    /// </summary>
    public static string ConcurrencyValue = "ConcurrencyValue";
    }
    #endregion
  }
}
