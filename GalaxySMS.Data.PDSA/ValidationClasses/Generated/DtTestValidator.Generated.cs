using System;

using PDSA.Common;
using PDSA.Validation;

using GalaxySMS.EntityLayer;

namespace GalaxySMS.ValidationLayer
{
  /// <summary>
  /// Used to validate all properties of the DtTestPDSA class.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public partial class DtTestPDSAValidator : PDSAValidatorBase
  {
    #region Public Entity Property
    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    private DtTestPDSA _Entity = null;

    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    public new DtTestPDSA Entity
    {
      get { return _Entity; }
      set
      {
        _Entity = value;
        base.Entity = value;
      }
    }
    #endregion
    
    #region Clone Entity Class
    /// <summary>
    /// Clones the current DtTestPDSA
    /// </summary>
    /// <returns>A cloned DtTestPDSA object</returns>
    public DtTestPDSA CloneEntity()
    {
      return CloneEntity(this.Entity);
    }
    
    /// <summary>
    /// Clones the passed in DtTestPDSA
    /// </summary>
    /// <param name="entityToClone">The DtTestPDSA entity to clone</param>
    /// <returns>A cloned DtTestPDSA object</returns>
    public DtTestPDSA CloneEntity(DtTestPDSA entityToClone)
    {
      DtTestPDSA newEntity = new DtTestPDSA();

      newEntity.Id = entityToClone.Id;
      newEntity.Dt = entityToClone.Dt;
      newEntity.Dto = entityToClone.Dto;
      newEntity.DtUtc = entityToClone.DtUtc;
      newEntity.DtoUtc = entityToClone.DtoUtc;
      newEntity.CalculatedUtc = entityToClone.CalculatedUtc;

      return newEntity;
    }
    #endregion

    #region CreateProperties Method
    /// <summary>
    /// Creates the collection of PDSAProperty objects. These are used to control validation and null handling.
    /// </summary>
    /// <returns>A collection of PDSAProperty objects</returns>
    public override PDSAProperties CreateProperties()
    {
      PDSAProperties props = new PDSAProperties();
      
      props.Add(PDSAProperty.Create(DtTestPDSAValidator.ColumnNames.Id, GetResourceMessage("dbo_DtTestPDSA_Id_Header", "Id"), false, typeof(int), 10, GetResourceMessage("dbo_DtTestPDSA_Id_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(DtTestPDSAValidator.ColumnNames.Dt, GetResourceMessage("dbo_DtTestPDSA_Dt_Header", "Dt"), false, typeof(DateTimeOffset), -1, GetResourceMessage("dbo_DtTestPDSA_Dt_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(DtTestPDSAValidator.ColumnNames.Dto, GetResourceMessage("dbo_DtTestPDSA_Dto_Header", "Dto"), false, typeof(DateTimeOffset), -1, GetResourceMessage("dbo_DtTestPDSA_Dto_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(DtTestPDSAValidator.ColumnNames.DtUtc, GetResourceMessage("dbo_DtTestPDSA_DtUtc_Header", "Dt Utc"), false, typeof(DateTimeOffset), -1, GetResourceMessage("dbo_DtTestPDSA_DtUtc_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(DtTestPDSAValidator.ColumnNames.DtoUtc, GetResourceMessage("dbo_DtTestPDSA_DtoUtc_Header", "Dto Utc"), false, typeof(DateTimeOffset), -1, GetResourceMessage("dbo_DtTestPDSA_DtoUtc_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(DtTestPDSAValidator.ColumnNames.CalculatedUtc, GetResourceMessage("dbo_DtTestPDSA_CalculatedUtc_Header", "Calculated Utc"), false, typeof(DateTimeOffset), -1, GetResourceMessage("dbo_DtTestPDSA_CalculatedUtc_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, DateTimeOffset.Now, @"", ""));
      
      return props;
    }
    #endregion

    #region Initialize Entity
    /// <summary>
    /// This method is called from the CreateNewEntity Method. All the properties for the Entity are set to default values here by the code generator.
    /// </summary>
    protected override void InitializeEntity()
    {
      Entity.Id = 0;
      Entity.Dt = DateTimeOffset.Now;
      Entity.Dto = DateTimeOffset.Now;
      Entity.DtUtc = DateTimeOffset.Now;
      Entity.DtoUtc = DateTimeOffset.Now;
      Entity.CalculatedUtc = DateTimeOffset.Now;

      Entity.ResetAllIsDirtyProperties();
    }
    #endregion
    
    #region InitProperties Method
    /// <summary>
    /// Called by the constructor to create the PDSAProperties collection of all properties that will be validated.
    /// </summary>
    protected override void InitProperties()
    {
      // Set the Properties collection to the collection of Entity Properties
      Properties = CreateProperties();
    }
    #endregion

    #region EntityDataToProperties Method
    /// <summary>
    /// Moves the Entity class data into the Properties collection.
    /// </summary>
    protected override void EntityDataToProperties()
    {
      if (Properties == null)
        InitProperties();
      
      if(!Properties.GetByName(DtTestPDSAValidator.ColumnNames.Id).SetAsNull)
        Properties.GetByName(DtTestPDSAValidator.ColumnNames.Id).Value = Entity.Id;
      if(!Properties.GetByName(DtTestPDSAValidator.ColumnNames.Dt).SetAsNull)
        Properties.GetByName(DtTestPDSAValidator.ColumnNames.Dt).Value = Entity.Dt;
      if(!Properties.GetByName(DtTestPDSAValidator.ColumnNames.Dto).SetAsNull)
        Properties.GetByName(DtTestPDSAValidator.ColumnNames.Dto).Value = Entity.Dto;
      if(!Properties.GetByName(DtTestPDSAValidator.ColumnNames.DtUtc).SetAsNull)
        Properties.GetByName(DtTestPDSAValidator.ColumnNames.DtUtc).Value = Entity.DtUtc;
      if(!Properties.GetByName(DtTestPDSAValidator.ColumnNames.DtoUtc).SetAsNull)
        Properties.GetByName(DtTestPDSAValidator.ColumnNames.DtoUtc).Value = Entity.DtoUtc;
      if(!Properties.GetByName(DtTestPDSAValidator.ColumnNames.CalculatedUtc).SetAsNull)
        Properties.GetByName(DtTestPDSAValidator.ColumnNames.CalculatedUtc).Value = Entity.CalculatedUtc;
    }

    /// <summary>
    /// Moves the Properties collection objects into the Entity properties
    /// </summary>
    protected override void PropertiesToEntityData()
    {
      if (Properties == null)
        InitProperties();

      if(Properties.GetByName(DtTestPDSAValidator.ColumnNames.Id).IsNull == false)
        Entity.Id = Properties.GetByName(DtTestPDSAValidator.ColumnNames.Id).GetAsInteger();
      if(Properties.GetByName(DtTestPDSAValidator.ColumnNames.Dt).IsNull == false)
        Entity.Dt = Properties.GetByName(DtTestPDSAValidator.ColumnNames.Dt).GetAsDateTimeOffset();
      if(Properties.GetByName(DtTestPDSAValidator.ColumnNames.Dto).IsNull == false)
        Entity.Dto = Properties.GetByName(DtTestPDSAValidator.ColumnNames.Dto).GetAsDateTimeOffset();
      if(Properties.GetByName(DtTestPDSAValidator.ColumnNames.DtUtc).IsNull == false)
        Entity.DtUtc = Properties.GetByName(DtTestPDSAValidator.ColumnNames.DtUtc).GetAsDateTimeOffset();
      if(Properties.GetByName(DtTestPDSAValidator.ColumnNames.DtoUtc).IsNull == false)
        Entity.DtoUtc = Properties.GetByName(DtTestPDSAValidator.ColumnNames.DtoUtc).GetAsDateTimeOffset();
      if(Properties.GetByName(DtTestPDSAValidator.ColumnNames.CalculatedUtc).IsNull == false)
        Entity.CalculatedUtc = Properties.GetByName(DtTestPDSAValidator.ColumnNames.CalculatedUtc).GetAsDateTimeOffset();
    }
    #endregion
    
    #region ColumnNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the DtTestPDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ColumnNames
    {
    /// <summary>
    /// Returns 'Id'
    /// </summary>
    public static string Id = "Id";
    /// <summary>
    /// Returns 'Dt'
    /// </summary>
    public static string Dt = "Dt";
    /// <summary>
    /// Returns 'Dto'
    /// </summary>
    public static string Dto = "Dto";
    /// <summary>
    /// Returns 'DtUtc'
    /// </summary>
    public static string DtUtc = "DtUtc";
    /// <summary>
    /// Returns 'DtoUtc'
    /// </summary>
    public static string DtoUtc = "DtoUtc";
    /// <summary>
    /// Returns 'CalculatedUtc'
    /// </summary>
    public static string CalculatedUtc = "CalculatedUtc";
    }
    #endregion
  }
}
