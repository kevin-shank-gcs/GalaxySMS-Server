using System;

using PDSA.Common;
using PDSA.Validation;

using GalaxySMS.EntityLayer;

namespace GalaxySMS.ValidationLayer
{
  /// <summary>
  /// Used to validate all properties of the InputDeviceActivityAlarmEventPDSA class.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public partial class InputDeviceActivityAlarmEventPDSAValidator : PDSAValidatorBase
  {
    #region Public Entity Property
    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    private InputDeviceActivityAlarmEventPDSA _Entity = null;

    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    public new InputDeviceActivityAlarmEventPDSA Entity
    {
      get { return _Entity; }
      set
      {
        _Entity = value;
        base.Entity = value;
      }
    }
    #endregion
    
    #region Clone Entity Class
    /// <summary>
    /// Clones the current InputDeviceActivityAlarmEventPDSA
    /// </summary>
    /// <returns>A cloned InputDeviceActivityAlarmEventPDSA object</returns>
    public InputDeviceActivityAlarmEventPDSA CloneEntity()
    {
      return CloneEntity(this.Entity);
    }
    
    /// <summary>
    /// Clones the passed in InputDeviceActivityAlarmEventPDSA
    /// </summary>
    /// <param name="entityToClone">The InputDeviceActivityAlarmEventPDSA entity to clone</param>
    /// <returns>A cloned InputDeviceActivityAlarmEventPDSA object</returns>
    public InputDeviceActivityAlarmEventPDSA CloneEntity(InputDeviceActivityAlarmEventPDSA entityToClone)
    {
      InputDeviceActivityAlarmEventPDSA newEntity = new InputDeviceActivityAlarmEventPDSA();

      newEntity.InputDeviceActivityEventUid = entityToClone.InputDeviceActivityEventUid;
      newEntity.NoteUid = entityToClone.NoteUid;
      newEntity.BinaryResourceUid = entityToClone.BinaryResourceUid;
      newEntity.AlarmPriority = entityToClone.AlarmPriority;
      newEntity.InputDeviceUid = entityToClone.InputDeviceUid;

      return newEntity;
    }
    #endregion

    #region CreateProperties Method
    /// <summary>
    /// Creates the collection of PDSAProperty objects. These are used to control validation and null handling.
    /// </summary>
    /// <returns>A collection of PDSAProperty objects</returns>
    public override PDSAProperties CreateProperties()
    {
      PDSAProperties props = new PDSAProperties();
      
      props.Add(PDSAProperty.Create(InputDeviceActivityAlarmEventPDSAValidator.ColumnNames.InputDeviceActivityEventUid, GetResourceMessage("GCS_InputDeviceActivityAlarmEventPDSA_InputDeviceActivityEventUid_Header", "Input Device Activity Event Uid"), true, typeof(Guid), -1, GetResourceMessage("GCS_InputDeviceActivityAlarmEventPDSA_InputDeviceActivityEventUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDeviceActivityAlarmEventPDSAValidator.ColumnNames.NoteUid, GetResourceMessage("GCS_InputDeviceActivityAlarmEventPDSA_NoteUid_Header", "Note Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_InputDeviceActivityAlarmEventPDSA_NoteUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDeviceActivityAlarmEventPDSAValidator.ColumnNames.BinaryResourceUid, GetResourceMessage("GCS_InputDeviceActivityAlarmEventPDSA_BinaryResourceUid_Header", "Binary Resource Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_InputDeviceActivityAlarmEventPDSA_BinaryResourceUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(InputDeviceActivityAlarmEventPDSAValidator.ColumnNames.AlarmPriority, GetResourceMessage("GCS_InputDeviceActivityAlarmEventPDSA_AlarmPriority_Header", "Alarm Priority"), true, typeof(int), 10, GetResourceMessage("GCS_InputDeviceActivityAlarmEventPDSA_AlarmPriority_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(InputDeviceActivityAlarmEventPDSAValidator.ColumnNames.InputDeviceUid, GetResourceMessage("GCS_InputDeviceActivityAlarmEventPDSA_InputDeviceUid_Header", "Input Device Uid"), false, typeof(Guid), 2147483647, GetResourceMessage("GCS_InputDeviceActivityAlarmEventPDSA_InputDeviceUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      
      return props;
    }
    #endregion

    #region Initialize Entity
    /// <summary>
    /// This method is called from the CreateNewEntity Method. All the properties for the Entity are set to default values here by the code generator.
    /// </summary>
    protected override void InitializeEntity()
    {
      Entity.InputDeviceActivityEventUid = Guid.Empty;
      Entity.NoteUid = Guid.Empty;
      Entity.BinaryResourceUid = Guid.Empty;
      Entity.AlarmPriority = 0;
      Entity.InputDeviceUid = Guid.Empty;

      Entity.ResetAllIsDirtyProperties();
    }
    #endregion
    
    #region InitProperties Method
    /// <summary>
    /// Called by the constructor to create the PDSAProperties collection of all properties that will be validated.
    /// </summary>
    protected override void InitProperties()
    {
      // Set the Properties collection to the collection of Entity Properties
      Properties = CreateProperties();
    }
    #endregion

    #region EntityDataToProperties Method
    /// <summary>
    /// Moves the Entity class data into the Properties collection.
    /// </summary>
    protected override void EntityDataToProperties()
    {
      if (Properties == null)
        InitProperties();
      
      if(!Properties.GetByName(InputDeviceActivityAlarmEventPDSAValidator.ColumnNames.InputDeviceActivityEventUid).SetAsNull)
        Properties.GetByName(InputDeviceActivityAlarmEventPDSAValidator.ColumnNames.InputDeviceActivityEventUid).Value = Entity.InputDeviceActivityEventUid;
      if(!Properties.GetByName(InputDeviceActivityAlarmEventPDSAValidator.ColumnNames.NoteUid).SetAsNull)
        Properties.GetByName(InputDeviceActivityAlarmEventPDSAValidator.ColumnNames.NoteUid).Value = Entity.NoteUid;
      if(!Properties.GetByName(InputDeviceActivityAlarmEventPDSAValidator.ColumnNames.BinaryResourceUid).SetAsNull)
        Properties.GetByName(InputDeviceActivityAlarmEventPDSAValidator.ColumnNames.BinaryResourceUid).Value = Entity.BinaryResourceUid;
      if(!Properties.GetByName(InputDeviceActivityAlarmEventPDSAValidator.ColumnNames.AlarmPriority).SetAsNull)
        Properties.GetByName(InputDeviceActivityAlarmEventPDSAValidator.ColumnNames.AlarmPriority).Value = Entity.AlarmPriority;
      if(!Properties.GetByName(InputDeviceActivityAlarmEventPDSAValidator.ColumnNames.InputDeviceUid).SetAsNull)
        Properties.GetByName(InputDeviceActivityAlarmEventPDSAValidator.ColumnNames.InputDeviceUid).Value = Entity.InputDeviceUid;
    }

    /// <summary>
    /// Moves the Properties collection objects into the Entity properties
    /// </summary>
    protected override void PropertiesToEntityData()
    {
      if (Properties == null)
        InitProperties();

      if(Properties.GetByName(InputDeviceActivityAlarmEventPDSAValidator.ColumnNames.InputDeviceActivityEventUid).IsNull == false)
        Entity.InputDeviceActivityEventUid = Properties.GetByName(InputDeviceActivityAlarmEventPDSAValidator.ColumnNames.InputDeviceActivityEventUid).GetAsGuid();
      if(Properties.GetByName(InputDeviceActivityAlarmEventPDSAValidator.ColumnNames.NoteUid).IsNull == false)
        Entity.NoteUid = Properties.GetByName(InputDeviceActivityAlarmEventPDSAValidator.ColumnNames.NoteUid).GetAsGuid();
      if(Properties.GetByName(InputDeviceActivityAlarmEventPDSAValidator.ColumnNames.BinaryResourceUid).IsNull == false)
        Entity.BinaryResourceUid = Properties.GetByName(InputDeviceActivityAlarmEventPDSAValidator.ColumnNames.BinaryResourceUid).GetAsGuid();
      if(Properties.GetByName(InputDeviceActivityAlarmEventPDSAValidator.ColumnNames.AlarmPriority).IsNull == false)
        Entity.AlarmPriority = Properties.GetByName(InputDeviceActivityAlarmEventPDSAValidator.ColumnNames.AlarmPriority).GetAsInteger();
      if(Properties.GetByName(InputDeviceActivityAlarmEventPDSAValidator.ColumnNames.InputDeviceUid).IsNull == false)
        Entity.InputDeviceUid = Properties.GetByName(InputDeviceActivityAlarmEventPDSAValidator.ColumnNames.InputDeviceUid).GetAsGuid();
    }
    #endregion
    
    #region ColumnNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the InputDeviceActivityAlarmEventPDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ColumnNames
    {
    /// <summary>
    /// Returns 'InputDeviceActivityEventUid'
    /// </summary>
    public static string InputDeviceActivityEventUid = "InputDeviceActivityEventUid";
    /// <summary>
    /// Returns 'NoteUid'
    /// </summary>
    public static string NoteUid = "NoteUid";
    /// <summary>
    /// Returns 'BinaryResourceUid'
    /// </summary>
    public static string BinaryResourceUid = "BinaryResourceUid";
    /// <summary>
    /// Returns 'AlarmPriority'
    /// </summary>
    public static string AlarmPriority = "AlarmPriority";
    /// <summary>
    /// Returns 'InputDeviceUid'
    /// </summary>
    public static string InputDeviceUid = "InputDeviceUid";
    }
    #endregion
  }
}
