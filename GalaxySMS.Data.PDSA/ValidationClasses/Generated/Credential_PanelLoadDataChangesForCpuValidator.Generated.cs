using System;

using PDSA.Validation;

using GalaxySMS.EntityLayer;

namespace GalaxySMS.ValidationLayer
{
  /// <summary>
  /// Used to validate all properties of the Credential_PanelLoadDataChangesForCpuPDSA class.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public partial class Credential_PanelLoadDataChangesForCpuPDSAValidator : PDSAValidatorBase
  {
    #region Public Entity Property
    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    private Credential_PanelLoadDataChangesForCpuPDSA _Entity = null;

    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    public new Credential_PanelLoadDataChangesForCpuPDSA Entity
    {
      get { return _Entity; }
      set
      {
        _Entity = value;
        base.Entity = value;
      }
    }
    #endregion
    
    #region Clone Entity Class
    /// <summary>
    /// Clones the current Credential_PanelLoadDataChangesForCpuPDSA
    /// </summary>
    /// <returns>A cloned Credential_PanelLoadDataChangesForCpuPDSA object</returns>
    public Credential_PanelLoadDataChangesForCpuPDSA CloneEntity()
    {
      return CloneEntity(this.Entity);
    }
    
    /// <summary>
    /// Clones the passed in Credential_PanelLoadDataChangesForCpuPDSA
    /// </summary>
    /// <param name="entityToClone">The Credential_PanelLoadDataChangesForCpuPDSA entity to clone</param>
    /// <returns>A cloned Credential_PanelLoadDataChangesForCpuPDSA object</returns>
    public Credential_PanelLoadDataChangesForCpuPDSA CloneEntity(Credential_PanelLoadDataChangesForCpuPDSA entityToClone)
    {
      Credential_PanelLoadDataChangesForCpuPDSA newEntity = new Credential_PanelLoadDataChangesForCpuPDSA();

      newEntity.CredentialToLoadToCpuUid = entityToClone.CredentialToLoadToCpuUid;
      newEntity.PersonUid = entityToClone.PersonUid;
      newEntity.LastCredentialChangeDate = entityToClone.LastCredentialChangeDate;
      newEntity.FirstName = entityToClone.FirstName;
      newEntity.LastCredentialLoadedDate = entityToClone.LastCredentialLoadedDate;
      newEntity.LastName = entityToClone.LastName;
      newEntity.PersonId = entityToClone.PersonId;
      newEntity.PersonActivationDateTime = entityToClone.PersonActivationDateTime;
      newEntity.PersonExpirationDateTime = entityToClone.PersonExpirationDateTime;
      newEntity.PersonTerminationDate = entityToClone.PersonTerminationDate;
      newEntity.VeryImportantPerson = entityToClone.VeryImportantPerson;
      newEntity.HasPhysicalDisability = entityToClone.HasPhysicalDisability;
      newEntity.HasVertigo = entityToClone.HasVertigo;
      newEntity.PersonInactiveState = entityToClone.PersonInactiveState;
      newEntity.PersonEmploymentDate = entityToClone.PersonEmploymentDate;
      newEntity.PINExempt = entityToClone.PINExempt;
      newEntity.PassbackExempt = entityToClone.PassbackExempt;
      newEntity.CanToggleLockState = entityToClone.CanToggleLockState;
      newEntity.PersonAccessControlPropertiesIsActive = entityToClone.PersonAccessControlPropertiesIsActive;
      newEntity.PIN = entityToClone.PIN;
      newEntity.PersonAccessControlPropertiesAccessProfileUid = entityToClone.PersonAccessControlPropertiesAccessProfileUid;
      newEntity.PersonCredentialUid = entityToClone.PersonCredentialUid;
      newEntity.CredentialUid = entityToClone.CredentialUid;
      newEntity.CredentialActivationDateTime = entityToClone.CredentialActivationDateTime;
      newEntity.CredentialExpirationDateTime = entityToClone.CredentialExpirationDateTime;
      newEntity.CredentialUsageCount = entityToClone.CredentialUsageCount;
      newEntity.DuressEnabled = entityToClone.DuressEnabled;
      newEntity.ReverseBits = entityToClone.ReverseBits;
      newEntity.TraceEnabled = entityToClone.TraceEnabled;
      newEntity.PersonCredentialIsActive = entityToClone.PersonCredentialIsActive;
      newEntity.CredentialRoleCode = entityToClone.CredentialRoleCode;
      newEntity.CredentialActivationModeCode = entityToClone.CredentialActivationModeCode;
      newEntity.CredentialExpirationModeCode = entityToClone.CredentialExpirationModeCode;
      newEntity.NoServerReplyBehaviorCode = entityToClone.NoServerReplyBehaviorCode;
      newEntity.DeferToServerBehaviorCode = entityToClone.DeferToServerBehaviorCode;
      newEntity.LastPanelImpactingChangeDate = entityToClone.LastPanelImpactingChangeDate;
      newEntity.CredentialBits = entityToClone.CredentialBits;
      newEntity.CredentialFormatDisplay = entityToClone.CredentialFormatDisplay;
      newEntity.CredentialFormatCode = entityToClone.CredentialFormatCode;
      newEntity.BitCount = entityToClone.BitCount;
      newEntity.CardBinaryData = entityToClone.CardBinaryData;
      newEntity.CardNumber = entityToClone.CardNumber;
      newEntity.CardNumberIsHex = entityToClone.CardNumberIsHex;
      newEntity.FacCompSiteCode = entityToClone.FacCompSiteCode;
      newEntity.IdCode = entityToClone.IdCode;
      newEntity.IssueCode = entityToClone.IssueCode;
      newEntity.LcdStartingDate = entityToClone.LcdStartingDate;
      newEntity.LcdEndingDate = entityToClone.LcdEndingDate;
      newEntity.LcdMessage = entityToClone.LcdMessage;
      newEntity.LcdMessageDisplayModeCode = entityToClone.LcdMessageDisplayModeCode;
      newEntity.ClusterUid = entityToClone.ClusterUid;
      newEntity.ClusterName = entityToClone.ClusterName;
      newEntity.ClusterNumber = entityToClone.ClusterNumber;
      newEntity.ClusterTypeCode = entityToClone.ClusterTypeCode;
      newEntity.ClusterIsActive = entityToClone.ClusterIsActive;
      newEntity.ClusterGroupId = entityToClone.ClusterGroupId;
      newEntity.CredentialDataLength = entityToClone.CredentialDataLength;
      newEntity.PanelNumber = entityToClone.PanelNumber;
      newEntity.CpuNumber = entityToClone.CpuNumber;
      newEntity.AccessGroup1 = entityToClone.AccessGroup1;
      newEntity.TimeZoneId = entityToClone.TimeZoneId;
      newEntity.AccessGroup2 = entityToClone.AccessGroup2;
      newEntity.CurrentTimeForCluster = entityToClone.CurrentTimeForCluster;
      newEntity.AccessGroup3 = entityToClone.AccessGroup3;
      newEntity.AccessGroup4 = entityToClone.AccessGroup4;
      newEntity.PersonalAccessGroupNumber = entityToClone.PersonalAccessGroupNumber;
      newEntity.InputOutputGroup1 = entityToClone.InputOutputGroup1;
      newEntity.InputOutputGroup2 = entityToClone.InputOutputGroup2;
      newEntity.InputOutputGroup3 = entityToClone.InputOutputGroup3;
      newEntity.InputOutputGroup4 = entityToClone.InputOutputGroup4;
      newEntity.OtisSplitGroupOperation = entityToClone.OtisSplitGroupOperation;
      newEntity.OtisCimOverride = entityToClone.OtisCimOverride;
      newEntity.CpuUid = entityToClone.CpuUid;
      newEntity.ServerAddress = entityToClone.ServerAddress;
      newEntity.IsConnected = entityToClone.IsConnected;

      return newEntity;
    }
    #endregion

    #region CreateProperties Method
    /// <summary>
    /// Creates the collection of PDSAProperty objects. These are used to control validation and null handling.
    /// </summary>
    /// <returns>A collection of PDSAProperty objects</returns>
    public override PDSAProperties CreateProperties()
    {
      PDSAProperties props = new PDSAProperties();
      
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialToLoadToCpuUid, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_CredentialToLoadToCpuUid_Header", "Credential To Load To Cpu Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_CredentialToLoadToCpuUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonUid, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_PersonUid_Header", "Person Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_PersonUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastCredentialChangeDate, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_LastCredentialChangeDate_Header", "Last Credential Change Date"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_LastCredentialChangeDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.FirstName, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_FirstName_Header", "First Name"), false, typeof(string), 65, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_FirstName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastCredentialLoadedDate, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_LastCredentialLoadedDate_Header", "Last Credential Loaded Date"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_LastCredentialLoadedDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastName, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_LastName_Header", "Last Name"), false, typeof(string), 65, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_LastName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonId, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_PersonId_Header", "Person Id"), false, typeof(string), 65, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_PersonId_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonActivationDateTime, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_PersonActivationDateTime_Header", "Person Activation Date Time"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_PersonActivationDateTime_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonExpirationDateTime, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_PersonExpirationDateTime_Header", "Person Expiration Date Time"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_PersonExpirationDateTime_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonTerminationDate, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_PersonTerminationDate_Header", "Person Termination Date"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_PersonTerminationDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.VeryImportantPerson, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_VeryImportantPerson_Header", "Very Important Person"), false, typeof(bool), -1, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_VeryImportantPerson_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.HasPhysicalDisability, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_HasPhysicalDisability_Header", "Has Physical Disability"), false, typeof(bool), -1, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_HasPhysicalDisability_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.HasVertigo, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_HasVertigo_Header", "Has Vertigo"), false, typeof(bool), -1, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_HasVertigo_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonInactiveState, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_PersonInactiveState_Header", "Person Inactive State"), false, typeof(bool), -1, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_PersonInactiveState_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonEmploymentDate, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_PersonEmploymentDate_Header", "Person Employment Date"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_PersonEmploymentDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PINExempt, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_PINExempt_Header", "PIN Exempt"), false, typeof(bool), -1, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_PINExempt_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackExempt, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_PassbackExempt_Header", "Passback Exempt"), false, typeof(bool), -1, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_PassbackExempt_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CanToggleLockState, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_CanToggleLockState_Header", "Can Toggle Lock State"), false, typeof(bool), -1, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_CanToggleLockState_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonAccessControlPropertiesIsActive, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_PersonAccessControlPropertiesIsActive_Header", "Person Access Control Properties Is Active"), false, typeof(bool), -1, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_PersonAccessControlPropertiesIsActive_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PIN, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_PIN_Header", "PIN"), false, typeof(int), 10, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_PIN_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonAccessControlPropertiesAccessProfileUid, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_PersonAccessControlPropertiesAccessProfileUid_Header", "Person Access Control Properties Access Profile Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_PersonAccessControlPropertiesAccessProfileUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonCredentialUid, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_PersonCredentialUid_Header", "Person Credential Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_PersonCredentialUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialUid, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_CredentialUid_Header", "Credential Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_CredentialUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialActivationDateTime, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_CredentialActivationDateTime_Header", "Credential Activation Date Time"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_CredentialActivationDateTime_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialExpirationDateTime, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_CredentialExpirationDateTime_Header", "Credential Expiration Date Time"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_CredentialExpirationDateTime_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialUsageCount, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_CredentialUsageCount_Header", "Credential Usage Count"), false, typeof(short), 5, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_CredentialUsageCount_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DuressEnabled, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_DuressEnabled_Header", "Duress Enabled"), false, typeof(bool), -1, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_DuressEnabled_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ReverseBits, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_ReverseBits_Header", "Reverse Bits"), false, typeof(bool), -1, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_ReverseBits_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.TraceEnabled, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_TraceEnabled_Header", "Trace Enabled"), false, typeof(bool), -1, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_TraceEnabled_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonCredentialIsActive, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_PersonCredentialIsActive_Header", "Person Credential Is Active"), false, typeof(bool), -1, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_PersonCredentialIsActive_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialRoleCode, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_CredentialRoleCode_Header", "Credential Role Code"), false, typeof(short), 5, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_CredentialRoleCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialActivationModeCode, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_CredentialActivationModeCode_Header", "Credential Activation Mode Code"), false, typeof(short), 5, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_CredentialActivationModeCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialExpirationModeCode, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_CredentialExpirationModeCode_Header", "Credential Expiration Mode Code"), false, typeof(short), 5, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_CredentialExpirationModeCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.NoServerReplyBehaviorCode, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_NoServerReplyBehaviorCode_Header", "No Server Reply Behavior Code"), false, typeof(short), 5, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_NoServerReplyBehaviorCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DeferToServerBehaviorCode, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_DeferToServerBehaviorCode_Header", "Defer To Server Behavior Code"), false, typeof(short), 5, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_DeferToServerBehaviorCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastPanelImpactingChangeDate, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_LastPanelImpactingChangeDate_Header", "Last Panel Impacting Change Date"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_LastPanelImpactingChangeDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialBits, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_CredentialBits_Header", "Credential Bits"), false, typeof(byte[]), 32, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_CredentialBits_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, null, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialFormatDisplay, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_CredentialFormatDisplay_Header", "Credential Format Display"), false, typeof(string), 65, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_CredentialFormatDisplay_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialFormatCode, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_CredentialFormatCode_Header", "Credential Format Code"), false, typeof(short), 5, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_CredentialFormatCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.BitCount, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_BitCount_Header", "Bit Count"), false, typeof(short), 5, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_BitCount_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardBinaryData, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_CardBinaryData_Header", "Card Binary Data"), false, typeof(byte[]), 32, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_CardBinaryData_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, null, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardNumber, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_CardNumber_Header", "Card Number"), false, typeof(string), 100, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_CardNumber_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardNumberIsHex, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_CardNumberIsHex_Header", "Card Number Is Hex"), false, typeof(bool), -1, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_CardNumberIsHex_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.FacCompSiteCode, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_FacCompSiteCode_Header", "Fac Comp Site Code"), false, typeof(long), 19, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_FacCompSiteCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt64("-9223372036854775808"), Convert.ToInt64("9223372036854775807"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IdCode, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_IdCode_Header", "Id Code"), false, typeof(long), 19, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_IdCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt64("-9223372036854775808"), Convert.ToInt64("9223372036854775807"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IssueCode, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_IssueCode_Header", "Issue Code"), false, typeof(long), 19, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_IssueCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt64("-9223372036854775808"), Convert.ToInt64("9223372036854775807"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdStartingDate, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_LcdStartingDate_Header", "Lcd Starting Date"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_LcdStartingDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdEndingDate, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_LcdEndingDate_Header", "Lcd Ending Date"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_LcdEndingDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdMessage, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_LcdMessage_Header", "Lcd Message"), false, typeof(string), 255, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_LcdMessage_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdMessageDisplayModeCode, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_LcdMessageDisplayModeCode_Header", "Lcd Message Display Mode Code"), false, typeof(short), 5, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_LcdMessageDisplayModeCode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterUid, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_ClusterUid_Header", "Cluster Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_ClusterUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterName, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_ClusterName_Header", "Cluster Name"), false, typeof(string), 65, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_ClusterName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterNumber, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_ClusterNumber_Header", "Cluster Number"), false, typeof(int), 10, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_ClusterNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterTypeCode, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_ClusterTypeCode_Header", "Cluster Type Code"), false, typeof(string), 16, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_ClusterTypeCode_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterIsActive, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_ClusterIsActive_Header", "Cluster Is Active"), false, typeof(bool), -1, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_ClusterIsActive_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterGroupId, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_ClusterGroupId_Header", "Cluster Group Id"), false, typeof(int), 10, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_ClusterGroupId_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialDataLength, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_CredentialDataLength_Header", "Credential Data Length"), false, typeof(short), 5, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_CredentialDataLength_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PanelNumber, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_PanelNumber_Header", "Panel Number"), false, typeof(int), 10, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_PanelNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuNumber, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_CpuNumber_Header", "Cpu Number"), false, typeof(short), 5, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_CpuNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup1, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_AccessGroup1_Header", "Access Group 1"), false, typeof(int), 10, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_AccessGroup1_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.TimeZoneId, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_TimeZoneId_Header", "Time Zone Id"), false, typeof(string), 65, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_TimeZoneId_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup2, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_AccessGroup2_Header", "Access Group 2"), false, typeof(int), 10, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_AccessGroup2_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CurrentTimeForCluster, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_CurrentTimeForCluster_Header", "Current Time For Cluster"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_CurrentTimeForCluster_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup3, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_AccessGroup3_Header", "Access Group 3"), false, typeof(int), 10, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_AccessGroup3_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup4, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_AccessGroup4_Header", "Access Group 4"), false, typeof(int), 10, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_AccessGroup4_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonalAccessGroupNumber, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_PersonalAccessGroupNumber_Header", "Personal Access Group Number"), false, typeof(int), 10, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_PersonalAccessGroupNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup1, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_InputOutputGroup1_Header", "Input Output Group 1"), false, typeof(int), 10, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_InputOutputGroup1_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup2, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_InputOutputGroup2_Header", "Input Output Group 2"), false, typeof(int), 10, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_InputOutputGroup2_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup3, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_InputOutputGroup3_Header", "Input Output Group 3"), false, typeof(int), 10, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_InputOutputGroup3_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup4, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_InputOutputGroup4_Header", "Input Output Group 4"), false, typeof(int), 10, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_InputOutputGroup4_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.OtisSplitGroupOperation, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_OtisSplitGroupOperation_Header", "Otis Split Group Operation"), false, typeof(bool), -1, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_OtisSplitGroupOperation_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.OtisCimOverride, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_OtisCimOverride_Header", "Otis Cim Override"), false, typeof(bool), -1, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_OtisCimOverride_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuUid, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_CpuUid_Header", "Cpu Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_CpuUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ServerAddress, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_ServerAddress_Header", "Server Address"), false, typeof(string), 255, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_ServerAddress_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IsConnected, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_IsConnected_Header", "Is Connected"), false, typeof(bool), -1, GetResourceMessage("GCS_Credential_PanelLoadDataChangesForCpuPDSA_IsConnected_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      
      return props;
    }
    #endregion

    #region Initialize Entity
    /// <summary>
    /// This method is called from the CreateNewEntity Method. All the properties for the Entity are set to default values here by the code generator.
    /// </summary>
    protected override void InitializeEntity()
    {
      Entity.CredentialToLoadToCpuUid = Guid.Empty;
      Entity.PersonUid = Guid.Empty;
      Entity.LastCredentialChangeDate = DateTimeOffset.MinValue;
      Entity.FirstName = string.Empty;
      Entity.LastCredentialLoadedDate = DateTimeOffset.MinValue;
      Entity.LastName = string.Empty;
      Entity.PersonId = string.Empty;
      Entity.PersonActivationDateTime = null;
      Entity.PersonExpirationDateTime = null;
      Entity.PersonTerminationDate = null;
      Entity.VeryImportantPerson = false;
      Entity.HasPhysicalDisability = false;
      Entity.HasVertigo = false;
      Entity.PersonInactiveState = false;
      Entity.PersonEmploymentDate = null;
      Entity.PINExempt = false;
      Entity.PassbackExempt = false;
      Entity.CanToggleLockState = false;
      Entity.PersonAccessControlPropertiesIsActive = false;
      Entity.PIN = 0;
      Entity.PersonAccessControlPropertiesAccessProfileUid = Guid.Empty;
      Entity.PersonCredentialUid = Guid.Empty;
      Entity.CredentialUid = Guid.Empty;
      Entity.CredentialActivationDateTime = null;
      Entity.CredentialExpirationDateTime = null;
      Entity.CredentialUsageCount = 0;
      Entity.DuressEnabled = false;
      Entity.ReverseBits = false;
      Entity.TraceEnabled = false;
      Entity.PersonCredentialIsActive = false;
      Entity.CredentialRoleCode = 0;
      Entity.CredentialActivationModeCode = 0;
      Entity.CredentialExpirationModeCode = 0;
      Entity.NoServerReplyBehaviorCode = 0;
      Entity.DeferToServerBehaviorCode = 0;
      Entity.LastPanelImpactingChangeDate = DateTimeOffset.MinValue;
      Entity.CredentialBits = null;
      Entity.CredentialFormatDisplay = string.Empty;
      Entity.CredentialFormatCode = 0;
      Entity.BitCount = 0;
      Entity.CardBinaryData = null;
      Entity.CardNumber = string.Empty;
      Entity.CardNumberIsHex = false;
      Entity.FacCompSiteCode = 0;
      Entity.IdCode = 0;
      Entity.IssueCode = 0;
      Entity.LcdStartingDate = DateTimeOffset.Now;
      Entity.LcdEndingDate = DateTimeOffset.Now;
      Entity.LcdMessage = string.Empty;
      Entity.LcdMessageDisplayModeCode = 0;
      Entity.ClusterUid = Guid.Empty;
      Entity.ClusterName = string.Empty;
      Entity.ClusterNumber = 0;
      Entity.ClusterTypeCode = string.Empty;
      Entity.ClusterIsActive = false;
      Entity.ClusterGroupId = 0;
      Entity.CredentialDataLength = 0;
      Entity.PanelNumber = 0;
      Entity.CpuNumber = 0;
      Entity.AccessGroup1 = 0;
      Entity.TimeZoneId = string.Empty;
      Entity.AccessGroup2 = 0;
      Entity.CurrentTimeForCluster = DateTimeOffset.Now;
      Entity.AccessGroup3 = 0;
      Entity.AccessGroup4 = 0;
      Entity.PersonalAccessGroupNumber = 0;
      Entity.InputOutputGroup1 = 0;
      Entity.InputOutputGroup2 = 0;
      Entity.InputOutputGroup3 = 0;
      Entity.InputOutputGroup4 = 0;
      Entity.OtisSplitGroupOperation = false;
      Entity.OtisCimOverride = false;
      Entity.CpuUid = Guid.Empty;
      Entity.ServerAddress = string.Empty;
      Entity.IsConnected = false;

      Entity.ResetAllIsDirtyProperties();
    }
    #endregion
    
    #region InitProperties Method
    /// <summary>
    /// Called by the constructor to create the PDSAProperties collection of all properties that will be validated.
    /// </summary>
    protected override void InitProperties()
    {
      // Set the Properties collection to the collection of Entity Properties
      Properties = CreateProperties();
    }
    #endregion

    #region EntityDataToProperties Method
    /// <summary>
    /// Moves the Entity class data into the Properties collection.
    /// </summary>
    protected override void EntityDataToProperties()
    {
      if (Properties == null)
        InitProperties();
      
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialToLoadToCpuUid).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialToLoadToCpuUid).Value = Entity.CredentialToLoadToCpuUid;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonUid).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonUid).Value = Entity.PersonUid;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastCredentialChangeDate).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastCredentialChangeDate).Value = Entity.LastCredentialChangeDate;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.FirstName).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.FirstName).Value = Entity.FirstName;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastCredentialLoadedDate).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastCredentialLoadedDate).Value = Entity.LastCredentialLoadedDate;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastName).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastName).Value = Entity.LastName;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonId).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonId).Value = Entity.PersonId;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonActivationDateTime).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonActivationDateTime).Value = Entity.PersonActivationDateTime;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonExpirationDateTime).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonExpirationDateTime).Value = Entity.PersonExpirationDateTime;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonTerminationDate).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonTerminationDate).Value = Entity.PersonTerminationDate;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.VeryImportantPerson).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.VeryImportantPerson).Value = Entity.VeryImportantPerson;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.HasPhysicalDisability).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.HasPhysicalDisability).Value = Entity.HasPhysicalDisability;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.HasVertigo).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.HasVertigo).Value = Entity.HasVertigo;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonInactiveState).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonInactiveState).Value = Entity.PersonInactiveState;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonEmploymentDate).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonEmploymentDate).Value = Entity.PersonEmploymentDate;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PINExempt).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PINExempt).Value = Entity.PINExempt;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackExempt).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackExempt).Value = Entity.PassbackExempt;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CanToggleLockState).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CanToggleLockState).Value = Entity.CanToggleLockState;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonAccessControlPropertiesIsActive).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonAccessControlPropertiesIsActive).Value = Entity.PersonAccessControlPropertiesIsActive;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PIN).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PIN).Value = Entity.PIN;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonAccessControlPropertiesAccessProfileUid).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonAccessControlPropertiesAccessProfileUid).Value = Entity.PersonAccessControlPropertiesAccessProfileUid;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonCredentialUid).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonCredentialUid).Value = Entity.PersonCredentialUid;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialUid).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialUid).Value = Entity.CredentialUid;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialActivationDateTime).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialActivationDateTime).Value = Entity.CredentialActivationDateTime;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialExpirationDateTime).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialExpirationDateTime).Value = Entity.CredentialExpirationDateTime;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialUsageCount).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialUsageCount).Value = Entity.CredentialUsageCount;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DuressEnabled).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DuressEnabled).Value = Entity.DuressEnabled;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ReverseBits).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ReverseBits).Value = Entity.ReverseBits;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.TraceEnabled).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.TraceEnabled).Value = Entity.TraceEnabled;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonCredentialIsActive).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonCredentialIsActive).Value = Entity.PersonCredentialIsActive;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialRoleCode).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialRoleCode).Value = Entity.CredentialRoleCode;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialActivationModeCode).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialActivationModeCode).Value = Entity.CredentialActivationModeCode;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialExpirationModeCode).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialExpirationModeCode).Value = Entity.CredentialExpirationModeCode;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.NoServerReplyBehaviorCode).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.NoServerReplyBehaviorCode).Value = Entity.NoServerReplyBehaviorCode;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DeferToServerBehaviorCode).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DeferToServerBehaviorCode).Value = Entity.DeferToServerBehaviorCode;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastPanelImpactingChangeDate).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastPanelImpactingChangeDate).Value = Entity.LastPanelImpactingChangeDate;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialBits).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialBits).Value = Entity.CredentialBits;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialFormatDisplay).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialFormatDisplay).Value = Entity.CredentialFormatDisplay;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialFormatCode).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialFormatCode).Value = Entity.CredentialFormatCode;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.BitCount).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.BitCount).Value = Entity.BitCount;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardBinaryData).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardBinaryData).Value = Entity.CardBinaryData;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardNumber).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardNumber).Value = Entity.CardNumber;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardNumberIsHex).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardNumberIsHex).Value = Entity.CardNumberIsHex;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.FacCompSiteCode).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.FacCompSiteCode).Value = Entity.FacCompSiteCode;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IdCode).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IdCode).Value = Entity.IdCode;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IssueCode).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IssueCode).Value = Entity.IssueCode;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdStartingDate).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdStartingDate).Value = Entity.LcdStartingDate;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdEndingDate).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdEndingDate).Value = Entity.LcdEndingDate;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdMessage).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdMessage).Value = Entity.LcdMessage;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdMessageDisplayModeCode).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdMessageDisplayModeCode).Value = Entity.LcdMessageDisplayModeCode;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterUid).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterUid).Value = Entity.ClusterUid;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterName).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterName).Value = Entity.ClusterName;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterNumber).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterNumber).Value = Entity.ClusterNumber;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterTypeCode).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterTypeCode).Value = Entity.ClusterTypeCode;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterIsActive).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterIsActive).Value = Entity.ClusterIsActive;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterGroupId).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterGroupId).Value = Entity.ClusterGroupId;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialDataLength).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialDataLength).Value = Entity.CredentialDataLength;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PanelNumber).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PanelNumber).Value = Entity.PanelNumber;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuNumber).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuNumber).Value = Entity.CpuNumber;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup1).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup1).Value = Entity.AccessGroup1;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.TimeZoneId).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.TimeZoneId).Value = Entity.TimeZoneId;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup2).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup2).Value = Entity.AccessGroup2;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CurrentTimeForCluster).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CurrentTimeForCluster).Value = Entity.CurrentTimeForCluster;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup3).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup3).Value = Entity.AccessGroup3;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup4).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup4).Value = Entity.AccessGroup4;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonalAccessGroupNumber).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonalAccessGroupNumber).Value = Entity.PersonalAccessGroupNumber;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup1).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup1).Value = Entity.InputOutputGroup1;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup2).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup2).Value = Entity.InputOutputGroup2;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup3).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup3).Value = Entity.InputOutputGroup3;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup4).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup4).Value = Entity.InputOutputGroup4;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.OtisSplitGroupOperation).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.OtisSplitGroupOperation).Value = Entity.OtisSplitGroupOperation;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.OtisCimOverride).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.OtisCimOverride).Value = Entity.OtisCimOverride;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuUid).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuUid).Value = Entity.CpuUid;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ServerAddress).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ServerAddress).Value = Entity.ServerAddress;
      if(!Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IsConnected).SetAsNull)
        Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IsConnected).Value = Entity.IsConnected;
    }

    /// <summary>
    /// Moves the Properties collection objects into the Entity properties
    /// </summary>
    protected override void PropertiesToEntityData()
    {
      if (Properties == null)
        InitProperties();

      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialToLoadToCpuUid).IsNull == false)
        Entity.CredentialToLoadToCpuUid = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialToLoadToCpuUid).GetAsGuid();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonUid).IsNull == false)
        Entity.PersonUid = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonUid).GetAsGuid();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastCredentialChangeDate).IsNull == false)
        Entity.LastCredentialChangeDate = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastCredentialChangeDate).GetAsDateTimeOffset();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.FirstName).IsNull == false)
        Entity.FirstName = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.FirstName).GetAsString();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastCredentialLoadedDate).IsNull == false)
        Entity.LastCredentialLoadedDate = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastCredentialLoadedDate).GetAsDateTimeOffset();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastName).IsNull == false)
        Entity.LastName = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastName).GetAsString();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonId).IsNull == false)
        Entity.PersonId = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonId).GetAsString();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonActivationDateTime).IsNull == false)
        Entity.PersonActivationDateTime = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonActivationDateTime).GetAsDateTimeOffset();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonExpirationDateTime).IsNull == false)
        Entity.PersonExpirationDateTime = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonExpirationDateTime).GetAsDateTimeOffset();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonTerminationDate).IsNull == false)
        Entity.PersonTerminationDate = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonTerminationDate).GetAsDate();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.VeryImportantPerson).IsNull == false)
        Entity.VeryImportantPerson = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.VeryImportantPerson).GetAsBool();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.HasPhysicalDisability).IsNull == false)
        Entity.HasPhysicalDisability = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.HasPhysicalDisability).GetAsBool();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.HasVertigo).IsNull == false)
        Entity.HasVertigo = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.HasVertigo).GetAsBool();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonInactiveState).IsNull == false)
        Entity.PersonInactiveState = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonInactiveState).GetAsBool();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonEmploymentDate).IsNull == false)
        Entity.PersonEmploymentDate = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonEmploymentDate).GetAsDate();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PINExempt).IsNull == false)
        Entity.PINExempt = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PINExempt).GetAsBool();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackExempt).IsNull == false)
        Entity.PassbackExempt = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PassbackExempt).GetAsBool();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CanToggleLockState).IsNull == false)
        Entity.CanToggleLockState = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CanToggleLockState).GetAsBool();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonAccessControlPropertiesIsActive).IsNull == false)
        Entity.PersonAccessControlPropertiesIsActive = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonAccessControlPropertiesIsActive).GetAsBool();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PIN).IsNull == false)
        Entity.PIN = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PIN).GetAsInteger();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonAccessControlPropertiesAccessProfileUid).IsNull == false)
        Entity.PersonAccessControlPropertiesAccessProfileUid = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonAccessControlPropertiesAccessProfileUid).GetAsGuid();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonCredentialUid).IsNull == false)
        Entity.PersonCredentialUid = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonCredentialUid).GetAsGuid();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialUid).IsNull == false)
        Entity.CredentialUid = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialUid).GetAsGuid();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialActivationDateTime).IsNull == false)
        Entity.CredentialActivationDateTime = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialActivationDateTime).GetAsDateTimeOffset();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialExpirationDateTime).IsNull == false)
        Entity.CredentialExpirationDateTime = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialExpirationDateTime).GetAsDateTimeOffset();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialUsageCount).IsNull == false)
        Entity.CredentialUsageCount = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialUsageCount).GetAsShort();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DuressEnabled).IsNull == false)
        Entity.DuressEnabled = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DuressEnabled).GetAsBool();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ReverseBits).IsNull == false)
        Entity.ReverseBits = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ReverseBits).GetAsBool();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.TraceEnabled).IsNull == false)
        Entity.TraceEnabled = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.TraceEnabled).GetAsBool();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonCredentialIsActive).IsNull == false)
        Entity.PersonCredentialIsActive = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonCredentialIsActive).GetAsBool();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialRoleCode).IsNull == false)
        Entity.CredentialRoleCode = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialRoleCode).GetAsShort();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialActivationModeCode).IsNull == false)
        Entity.CredentialActivationModeCode = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialActivationModeCode).GetAsShort();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialExpirationModeCode).IsNull == false)
        Entity.CredentialExpirationModeCode = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialExpirationModeCode).GetAsShort();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.NoServerReplyBehaviorCode).IsNull == false)
        Entity.NoServerReplyBehaviorCode = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.NoServerReplyBehaviorCode).GetAsShort();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DeferToServerBehaviorCode).IsNull == false)
        Entity.DeferToServerBehaviorCode = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.DeferToServerBehaviorCode).GetAsShort();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastPanelImpactingChangeDate).IsNull == false)
        Entity.LastPanelImpactingChangeDate = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LastPanelImpactingChangeDate).GetAsDateTimeOffset();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialBits).IsNull == false)
        Entity.CredentialBits = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialBits).GetAsByteArray();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialFormatDisplay).IsNull == false)
        Entity.CredentialFormatDisplay = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialFormatDisplay).GetAsString();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialFormatCode).IsNull == false)
        Entity.CredentialFormatCode = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialFormatCode).GetAsShort();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.BitCount).IsNull == false)
        Entity.BitCount = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.BitCount).GetAsShort();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardBinaryData).IsNull == false)
        Entity.CardBinaryData = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardBinaryData).GetAsByteArray();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardNumber).IsNull == false)
        Entity.CardNumber = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardNumber).GetAsString();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardNumberIsHex).IsNull == false)
        Entity.CardNumberIsHex = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CardNumberIsHex).GetAsBool();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.FacCompSiteCode).IsNull == false)
        Entity.FacCompSiteCode = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.FacCompSiteCode).GetAsLong();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IdCode).IsNull == false)
        Entity.IdCode = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IdCode).GetAsLong();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IssueCode).IsNull == false)
        Entity.IssueCode = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IssueCode).GetAsLong();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdStartingDate).IsNull == false)
        Entity.LcdStartingDate = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdStartingDate).GetAsDateTimeOffset();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdEndingDate).IsNull == false)
        Entity.LcdEndingDate = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdEndingDate).GetAsDateTimeOffset();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdMessage).IsNull == false)
        Entity.LcdMessage = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdMessage).GetAsString();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdMessageDisplayModeCode).IsNull == false)
        Entity.LcdMessageDisplayModeCode = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.LcdMessageDisplayModeCode).GetAsShort();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterUid).IsNull == false)
        Entity.ClusterUid = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterUid).GetAsGuid();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterName).IsNull == false)
        Entity.ClusterName = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterName).GetAsString();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterNumber).IsNull == false)
        Entity.ClusterNumber = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterNumber).GetAsInteger();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterTypeCode).IsNull == false)
        Entity.ClusterTypeCode = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterTypeCode).GetAsString();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterIsActive).IsNull == false)
        Entity.ClusterIsActive = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterIsActive).GetAsBool();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterGroupId).IsNull == false)
        Entity.ClusterGroupId = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ClusterGroupId).GetAsInteger();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialDataLength).IsNull == false)
        Entity.CredentialDataLength = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CredentialDataLength).GetAsShort();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PanelNumber).IsNull == false)
        Entity.PanelNumber = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PanelNumber).GetAsInteger();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuNumber).IsNull == false)
        Entity.CpuNumber = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuNumber).GetAsShort();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup1).IsNull == false)
        Entity.AccessGroup1 = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup1).GetAsInteger();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.TimeZoneId).IsNull == false)
        Entity.TimeZoneId = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.TimeZoneId).GetAsString();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup2).IsNull == false)
        Entity.AccessGroup2 = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup2).GetAsInteger();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CurrentTimeForCluster).IsNull == false)
        Entity.CurrentTimeForCluster = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CurrentTimeForCluster).GetAsDateTimeOffset();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup3).IsNull == false)
        Entity.AccessGroup3 = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup3).GetAsInteger();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup4).IsNull == false)
        Entity.AccessGroup4 = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.AccessGroup4).GetAsInteger();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonalAccessGroupNumber).IsNull == false)
        Entity.PersonalAccessGroupNumber = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.PersonalAccessGroupNumber).GetAsInteger();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup1).IsNull == false)
        Entity.InputOutputGroup1 = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup1).GetAsInteger();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup2).IsNull == false)
        Entity.InputOutputGroup2 = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup2).GetAsInteger();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup3).IsNull == false)
        Entity.InputOutputGroup3 = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup3).GetAsInteger();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup4).IsNull == false)
        Entity.InputOutputGroup4 = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.InputOutputGroup4).GetAsInteger();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.OtisSplitGroupOperation).IsNull == false)
        Entity.OtisSplitGroupOperation = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.OtisSplitGroupOperation).GetAsBool();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.OtisCimOverride).IsNull == false)
        Entity.OtisCimOverride = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.OtisCimOverride).GetAsBool();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuUid).IsNull == false)
        Entity.CpuUid = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.CpuUid).GetAsGuid();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ServerAddress).IsNull == false)
        Entity.ServerAddress = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.ServerAddress).GetAsString();
      if(Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IsConnected).IsNull == false)
        Entity.IsConnected = Properties.GetByName(Credential_PanelLoadDataChangesForCpuPDSAValidator.ColumnNames.IsConnected).GetAsBool();
    }
    #endregion
    
    #region ColumnNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the Credential_PanelLoadDataChangesForCpuPDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ColumnNames
    {
    /// <summary>
    /// Returns 'CredentialToLoadToCpuUid'
    /// </summary>
    public static string CredentialToLoadToCpuUid = "CredentialToLoadToCpuUid";
    /// <summary>
    /// Returns 'PersonUid'
    /// </summary>
    public static string PersonUid = "PersonUid";
    /// <summary>
    /// Returns 'LastCredentialChangeDate'
    /// </summary>
    public static string LastCredentialChangeDate = "LastCredentialChangeDate";
    /// <summary>
    /// Returns 'FirstName'
    /// </summary>
    public static string FirstName = "FirstName";
    /// <summary>
    /// Returns 'LastCredentialLoadedDate'
    /// </summary>
    public static string LastCredentialLoadedDate = "LastCredentialLoadedDate";
    /// <summary>
    /// Returns 'LastName'
    /// </summary>
    public static string LastName = "LastName";
    /// <summary>
    /// Returns 'PersonId'
    /// </summary>
    public static string PersonId = "PersonId";
    /// <summary>
    /// Returns 'PersonActivationDateTime'
    /// </summary>
    public static string PersonActivationDateTime = "PersonActivationDateTime";
    /// <summary>
    /// Returns 'PersonExpirationDateTime'
    /// </summary>
    public static string PersonExpirationDateTime = "PersonExpirationDateTime";
    /// <summary>
    /// Returns 'PersonTerminationDate'
    /// </summary>
    public static string PersonTerminationDate = "PersonTerminationDate";
    /// <summary>
    /// Returns 'VeryImportantPerson'
    /// </summary>
    public static string VeryImportantPerson = "VeryImportantPerson";
    /// <summary>
    /// Returns 'HasPhysicalDisability'
    /// </summary>
    public static string HasPhysicalDisability = "HasPhysicalDisability";
    /// <summary>
    /// Returns 'HasVertigo'
    /// </summary>
    public static string HasVertigo = "HasVertigo";
    /// <summary>
    /// Returns 'PersonInactiveState'
    /// </summary>
    public static string PersonInactiveState = "PersonInactiveState";
    /// <summary>
    /// Returns 'PersonEmploymentDate'
    /// </summary>
    public static string PersonEmploymentDate = "PersonEmploymentDate";
    /// <summary>
    /// Returns 'PINExempt'
    /// </summary>
    public static string PINExempt = "PINExempt";
    /// <summary>
    /// Returns 'PassbackExempt'
    /// </summary>
    public static string PassbackExempt = "PassbackExempt";
    /// <summary>
    /// Returns 'CanToggleLockState'
    /// </summary>
    public static string CanToggleLockState = "CanToggleLockState";
    /// <summary>
    /// Returns 'PersonAccessControlPropertiesIsActive'
    /// </summary>
    public static string PersonAccessControlPropertiesIsActive = "PersonAccessControlPropertiesIsActive";
    /// <summary>
    /// Returns 'PIN'
    /// </summary>
    public static string PIN = "PIN";
    /// <summary>
    /// Returns 'PersonAccessControlPropertiesAccessProfileUid'
    /// </summary>
    public static string PersonAccessControlPropertiesAccessProfileUid = "PersonAccessControlPropertiesAccessProfileUid";
    /// <summary>
    /// Returns 'PersonCredentialUid'
    /// </summary>
    public static string PersonCredentialUid = "PersonCredentialUid";
    /// <summary>
    /// Returns 'CredentialUid'
    /// </summary>
    public static string CredentialUid = "CredentialUid";
    /// <summary>
    /// Returns 'CredentialActivationDateTime'
    /// </summary>
    public static string CredentialActivationDateTime = "CredentialActivationDateTime";
    /// <summary>
    /// Returns 'CredentialExpirationDateTime'
    /// </summary>
    public static string CredentialExpirationDateTime = "CredentialExpirationDateTime";
    /// <summary>
    /// Returns 'CredentialUsageCount'
    /// </summary>
    public static string CredentialUsageCount = "CredentialUsageCount";
    /// <summary>
    /// Returns 'DuressEnabled'
    /// </summary>
    public static string DuressEnabled = "DuressEnabled";
    /// <summary>
    /// Returns 'ReverseBits'
    /// </summary>
    public static string ReverseBits = "ReverseBits";
    /// <summary>
    /// Returns 'TraceEnabled'
    /// </summary>
    public static string TraceEnabled = "TraceEnabled";
    /// <summary>
    /// Returns 'PersonCredentialIsActive'
    /// </summary>
    public static string PersonCredentialIsActive = "PersonCredentialIsActive";
    /// <summary>
    /// Returns 'CredentialRoleCode'
    /// </summary>
    public static string CredentialRoleCode = "CredentialRoleCode";
    /// <summary>
    /// Returns 'CredentialActivationModeCode'
    /// </summary>
    public static string CredentialActivationModeCode = "CredentialActivationModeCode";
    /// <summary>
    /// Returns 'CredentialExpirationModeCode'
    /// </summary>
    public static string CredentialExpirationModeCode = "CredentialExpirationModeCode";
    /// <summary>
    /// Returns 'NoServerReplyBehaviorCode'
    /// </summary>
    public static string NoServerReplyBehaviorCode = "NoServerReplyBehaviorCode";
    /// <summary>
    /// Returns 'DeferToServerBehaviorCode'
    /// </summary>
    public static string DeferToServerBehaviorCode = "DeferToServerBehaviorCode";
    /// <summary>
    /// Returns 'LastPanelImpactingChangeDate'
    /// </summary>
    public static string LastPanelImpactingChangeDate = "LastPanelImpactingChangeDate";
    /// <summary>
    /// Returns 'CredentialBits'
    /// </summary>
    public static string CredentialBits = "CredentialBits";
    /// <summary>
    /// Returns 'CredentialFormatDisplay'
    /// </summary>
    public static string CredentialFormatDisplay = "CredentialFormatDisplay";
    /// <summary>
    /// Returns 'CredentialFormatCode'
    /// </summary>
    public static string CredentialFormatCode = "CredentialFormatCode";
    /// <summary>
    /// Returns 'BitCount'
    /// </summary>
    public static string BitCount = "BitCount";
    /// <summary>
    /// Returns 'CardBinaryData'
    /// </summary>
    public static string CardBinaryData = "CardBinaryData";
    /// <summary>
    /// Returns 'CardNumber'
    /// </summary>
    public static string CardNumber = "CardNumber";
    /// <summary>
    /// Returns 'CardNumberIsHex'
    /// </summary>
    public static string CardNumberIsHex = "CardNumberIsHex";
    /// <summary>
    /// Returns 'FacCompSiteCode'
    /// </summary>
    public static string FacCompSiteCode = "FacCompSiteCode";
    /// <summary>
    /// Returns 'IdCode'
    /// </summary>
    public static string IdCode = "IdCode";
    /// <summary>
    /// Returns 'IssueCode'
    /// </summary>
    public static string IssueCode = "IssueCode";
    /// <summary>
    /// Returns 'LcdStartingDate'
    /// </summary>
    public static string LcdStartingDate = "LcdStartingDate";
    /// <summary>
    /// Returns 'LcdEndingDate'
    /// </summary>
    public static string LcdEndingDate = "LcdEndingDate";
    /// <summary>
    /// Returns 'LcdMessage'
    /// </summary>
    public static string LcdMessage = "LcdMessage";
    /// <summary>
    /// Returns 'LcdMessageDisplayModeCode'
    /// </summary>
    public static string LcdMessageDisplayModeCode = "LcdMessageDisplayModeCode";
    /// <summary>
    /// Returns 'ClusterUid'
    /// </summary>
    public static string ClusterUid = "ClusterUid";
    /// <summary>
    /// Returns 'ClusterName'
    /// </summary>
    public static string ClusterName = "ClusterName";
    /// <summary>
    /// Returns 'ClusterNumber'
    /// </summary>
    public static string ClusterNumber = "ClusterNumber";
    /// <summary>
    /// Returns 'ClusterTypeCode'
    /// </summary>
    public static string ClusterTypeCode = "ClusterTypeCode";
    /// <summary>
    /// Returns 'ClusterIsActive'
    /// </summary>
    public static string ClusterIsActive = "ClusterIsActive";
    /// <summary>
    /// Returns 'ClusterGroupId'
    /// </summary>
    public static string ClusterGroupId = "ClusterGroupId";
    /// <summary>
    /// Returns 'CredentialDataLength'
    /// </summary>
    public static string CredentialDataLength = "CredentialDataLength";
    /// <summary>
    /// Returns 'PanelNumber'
    /// </summary>
    public static string PanelNumber = "PanelNumber";
    /// <summary>
    /// Returns 'CpuNumber'
    /// </summary>
    public static string CpuNumber = "CpuNumber";
    /// <summary>
    /// Returns 'AccessGroup1'
    /// </summary>
    public static string AccessGroup1 = "AccessGroup1";
    /// <summary>
    /// Returns 'TimeZoneId'
    /// </summary>
    public static string TimeZoneId = "TimeZoneId";
    /// <summary>
    /// Returns 'AccessGroup2'
    /// </summary>
    public static string AccessGroup2 = "AccessGroup2";
    /// <summary>
    /// Returns 'CurrentTimeForCluster'
    /// </summary>
    public static string CurrentTimeForCluster = "CurrentTimeForCluster";
    /// <summary>
    /// Returns 'AccessGroup3'
    /// </summary>
    public static string AccessGroup3 = "AccessGroup3";
    /// <summary>
    /// Returns 'AccessGroup4'
    /// </summary>
    public static string AccessGroup4 = "AccessGroup4";
    /// <summary>
    /// Returns 'PersonalAccessGroupNumber'
    /// </summary>
    public static string PersonalAccessGroupNumber = "PersonalAccessGroupNumber";
    /// <summary>
    /// Returns 'InputOutputGroup1'
    /// </summary>
    public static string InputOutputGroup1 = "InputOutputGroup1";
    /// <summary>
    /// Returns 'InputOutputGroup2'
    /// </summary>
    public static string InputOutputGroup2 = "InputOutputGroup2";
    /// <summary>
    /// Returns 'InputOutputGroup3'
    /// </summary>
    public static string InputOutputGroup3 = "InputOutputGroup3";
    /// <summary>
    /// Returns 'InputOutputGroup4'
    /// </summary>
    public static string InputOutputGroup4 = "InputOutputGroup4";
    /// <summary>
    /// Returns 'OtisSplitGroupOperation'
    /// </summary>
    public static string OtisSplitGroupOperation = "OtisSplitGroupOperation";
    /// <summary>
    /// Returns 'OtisCimOverride'
    /// </summary>
    public static string OtisCimOverride = "OtisCimOverride";
    /// <summary>
    /// Returns 'CpuUid'
    /// </summary>
    public static string CpuUid = "CpuUid";
    /// <summary>
    /// Returns 'ServerAddress'
    /// </summary>
    public static string ServerAddress = "ServerAddress";
    /// <summary>
    /// Returns 'IsConnected'
    /// </summary>
    public static string IsConnected = "IsConnected";
    }
    #endregion
  }
}
