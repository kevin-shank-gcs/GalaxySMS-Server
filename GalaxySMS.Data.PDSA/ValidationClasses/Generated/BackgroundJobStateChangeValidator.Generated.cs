using System;

using PDSA.Common;
using PDSA.Validation;

using GalaxySMS.EntityLayer;

namespace GalaxySMS.ValidationLayer
{
  /// <summary>
  /// Used to validate all properties of the BackgroundJobStateChangePDSA class.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public partial class BackgroundJobStateChangePDSAValidator : PDSAValidatorBase
  {
    #region Public Entity Property
    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    private BackgroundJobStateChangePDSA _Entity = null;

    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    public new BackgroundJobStateChangePDSA Entity
    {
      get { return _Entity; }
      set
      {
        _Entity = value;
        base.Entity = value;
      }
    }
    #endregion
    
    #region Clone Entity Class
    /// <summary>
    /// Clones the current BackgroundJobStateChangePDSA
    /// </summary>
    /// <returns>A cloned BackgroundJobStateChangePDSA object</returns>
    public BackgroundJobStateChangePDSA CloneEntity()
    {
      return CloneEntity(this.Entity);
    }
    
    /// <summary>
    /// Clones the passed in BackgroundJobStateChangePDSA
    /// </summary>
    /// <param name="entityToClone">The BackgroundJobStateChangePDSA entity to clone</param>
    /// <returns>A cloned BackgroundJobStateChangePDSA object</returns>
    public BackgroundJobStateChangePDSA CloneEntity(BackgroundJobStateChangePDSA entityToClone)
    {
      BackgroundJobStateChangePDSA newEntity = new BackgroundJobStateChangePDSA();

      newEntity.BackgroundJobStateChangeUid = entityToClone.BackgroundJobStateChangeUid;
      newEntity.BackgroundJobUid = entityToClone.BackgroundJobUid;
      newEntity.ChangeDateTime = entityToClone.ChangeDateTime;
      newEntity.State = entityToClone.State;
      newEntity.Info = entityToClone.Info;

      return newEntity;
    }
    #endregion

    #region CreateProperties Method
    /// <summary>
    /// Creates the collection of PDSAProperty objects. These are used to control validation and null handling.
    /// </summary>
    /// <returns>A collection of PDSAProperty objects</returns>
    public override PDSAProperties CreateProperties()
    {
      PDSAProperties props = new PDSAProperties();
      
      props.Add(PDSAProperty.Create(BackgroundJobStateChangePDSAValidator.ColumnNames.BackgroundJobStateChangeUid, GetResourceMessage("GCS_BackgroundJobStateChangePDSA_BackgroundJobStateChangeUid_Header", "Background Job State Change Uid"), true, typeof(Guid), -1, GetResourceMessage("GCS_BackgroundJobStateChangePDSA_BackgroundJobStateChangeUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(BackgroundJobStateChangePDSAValidator.ColumnNames.BackgroundJobUid, GetResourceMessage("GCS_BackgroundJobStateChangePDSA_BackgroundJobUid_Header", "Background Job Uid"), true, typeof(Guid), -1, GetResourceMessage("GCS_BackgroundJobStateChangePDSA_BackgroundJobUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(BackgroundJobStateChangePDSAValidator.ColumnNames.ChangeDateTime, GetResourceMessage("GCS_BackgroundJobStateChangePDSA_ChangeDateTime_Header", "Change Date Time"), true, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_BackgroundJobStateChangePDSA_ChangeDateTime_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(BackgroundJobStateChangePDSAValidator.ColumnNames.State, GetResourceMessage("GCS_BackgroundJobStateChangePDSA_State_Header", "State"), true, typeof(string), 100, GetResourceMessage("GCS_BackgroundJobStateChangePDSA_State_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(BackgroundJobStateChangePDSAValidator.ColumnNames.Info, GetResourceMessage("GCS_BackgroundJobStateChangePDSA_Info_Header", "Info"), false, typeof(string), 1073741823, GetResourceMessage("GCS_BackgroundJobStateChangePDSA_Info_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      
      return props;
    }
    #endregion

    #region Initialize Entity
    /// <summary>
    /// This method is called from the CreateNewEntity Method. All the properties for the Entity are set to default values here by the code generator.
    /// </summary>
    protected override void InitializeEntity()
    {
      Entity.BackgroundJobStateChangeUid = Guid.Empty;
      Entity.BackgroundJobUid = Guid.Empty;
      Entity.ChangeDateTime = DateTimeOffset.Now;
      Entity.State = string.Empty;
      Entity.Info = string.Empty;

      Entity.ResetAllIsDirtyProperties();
    }
    #endregion
    
    #region InitProperties Method
    /// <summary>
    /// Called by the constructor to create the PDSAProperties collection of all properties that will be validated.
    /// </summary>
    protected override void InitProperties()
    {
      // Set the Properties collection to the collection of Entity Properties
      Properties = CreateProperties();
    }
    #endregion

    #region EntityDataToProperties Method
    /// <summary>
    /// Moves the Entity class data into the Properties collection.
    /// </summary>
    protected override void EntityDataToProperties()
    {
      if (Properties == null)
        InitProperties();
      
      if(!Properties.GetByName(BackgroundJobStateChangePDSAValidator.ColumnNames.BackgroundJobStateChangeUid).SetAsNull)
        Properties.GetByName(BackgroundJobStateChangePDSAValidator.ColumnNames.BackgroundJobStateChangeUid).Value = Entity.BackgroundJobStateChangeUid;
      if(!Properties.GetByName(BackgroundJobStateChangePDSAValidator.ColumnNames.BackgroundJobUid).SetAsNull)
        Properties.GetByName(BackgroundJobStateChangePDSAValidator.ColumnNames.BackgroundJobUid).Value = Entity.BackgroundJobUid;
      if(!Properties.GetByName(BackgroundJobStateChangePDSAValidator.ColumnNames.ChangeDateTime).SetAsNull)
        Properties.GetByName(BackgroundJobStateChangePDSAValidator.ColumnNames.ChangeDateTime).Value = Entity.ChangeDateTime;
      if(!Properties.GetByName(BackgroundJobStateChangePDSAValidator.ColumnNames.State).SetAsNull)
        Properties.GetByName(BackgroundJobStateChangePDSAValidator.ColumnNames.State).Value = Entity.State;
      if(!Properties.GetByName(BackgroundJobStateChangePDSAValidator.ColumnNames.Info).SetAsNull)
        Properties.GetByName(BackgroundJobStateChangePDSAValidator.ColumnNames.Info).Value = Entity.Info;
    }

    /// <summary>
    /// Moves the Properties collection objects into the Entity properties
    /// </summary>
    protected override void PropertiesToEntityData()
    {
      if (Properties == null)
        InitProperties();

      if(Properties.GetByName(BackgroundJobStateChangePDSAValidator.ColumnNames.BackgroundJobStateChangeUid).IsNull == false)
        Entity.BackgroundJobStateChangeUid = Properties.GetByName(BackgroundJobStateChangePDSAValidator.ColumnNames.BackgroundJobStateChangeUid).GetAsGuid();
      if(Properties.GetByName(BackgroundJobStateChangePDSAValidator.ColumnNames.BackgroundJobUid).IsNull == false)
        Entity.BackgroundJobUid = Properties.GetByName(BackgroundJobStateChangePDSAValidator.ColumnNames.BackgroundJobUid).GetAsGuid();
      if(Properties.GetByName(BackgroundJobStateChangePDSAValidator.ColumnNames.ChangeDateTime).IsNull == false)
        Entity.ChangeDateTime = Properties.GetByName(BackgroundJobStateChangePDSAValidator.ColumnNames.ChangeDateTime).GetAsDateTimeOffset();
      if(Properties.GetByName(BackgroundJobStateChangePDSAValidator.ColumnNames.State).IsNull == false)
        Entity.State = Properties.GetByName(BackgroundJobStateChangePDSAValidator.ColumnNames.State).GetAsString();
      if(Properties.GetByName(BackgroundJobStateChangePDSAValidator.ColumnNames.Info).IsNull == false)
        Entity.Info = Properties.GetByName(BackgroundJobStateChangePDSAValidator.ColumnNames.Info).GetAsString();
    }
    #endregion
    
    #region ColumnNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the BackgroundJobStateChangePDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ColumnNames
    {
    /// <summary>
    /// Returns 'BackgroundJobStateChangeUid'
    /// </summary>
    public static string BackgroundJobStateChangeUid = "BackgroundJobStateChangeUid";
    /// <summary>
    /// Returns 'BackgroundJobUid'
    /// </summary>
    public static string BackgroundJobUid = "BackgroundJobUid";
    /// <summary>
    /// Returns 'ChangeDateTime'
    /// </summary>
    public static string ChangeDateTime = "ChangeDateTime";
    /// <summary>
    /// Returns 'State'
    /// </summary>
    public static string State = "State";
    /// <summary>
    /// Returns 'Info'
    /// </summary>
    public static string Info = "Info";
    }
    #endregion
  }
}
