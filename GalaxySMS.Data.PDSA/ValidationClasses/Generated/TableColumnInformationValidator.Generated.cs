using System;

using PDSA.Validation;

using GalaxySMS.EntityLayer;

namespace GalaxySMS.ValidationLayer
{
  /// <summary>
  /// Used to validate all properties of the TableColumnInformationPDSA class.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public partial class TableColumnInformationPDSAValidator : PDSAValidatorBase
  {
    #region Public Entity Property
    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    private TableColumnInformationPDSA _Entity = null;

    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    public new TableColumnInformationPDSA Entity
    {
      get { return _Entity; }
      set
      {
        _Entity = value;
        base.Entity = value;
      }
    }
    #endregion
    
    #region Clone Entity Class
    /// <summary>
    /// Clones the current TableColumnInformationPDSA
    /// </summary>
    /// <returns>A cloned TableColumnInformationPDSA object</returns>
    public TableColumnInformationPDSA CloneEntity()
    {
      return CloneEntity(this.Entity);
    }
    
    /// <summary>
    /// Clones the passed in TableColumnInformationPDSA
    /// </summary>
    /// <param name="entityToClone">The TableColumnInformationPDSA entity to clone</param>
    /// <returns>A cloned TableColumnInformationPDSA object</returns>
    public TableColumnInformationPDSA CloneEntity(TableColumnInformationPDSA entityToClone)
    {
      TableColumnInformationPDSA newEntity = new TableColumnInformationPDSA();

      newEntity.DatabaseName = entityToClone.DatabaseName;
      newEntity.TableSchema = entityToClone.TableSchema;
      newEntity.TableName = entityToClone.TableName;
      newEntity.ColumnName = entityToClone.ColumnName;
      newEntity.IsNullable = entityToClone.IsNullable;
      newEntity.ColumnOrdinalPosition = entityToClone.ColumnOrdinalPosition;
      newEntity.DefaultValue = entityToClone.DefaultValue;
      newEntity.DataType = entityToClone.DataType;
      newEntity.CharacterMaximumLength = entityToClone.CharacterMaximumLength;
      newEntity.NumericPrecision = entityToClone.NumericPrecision;
      newEntity.NumericPrecisionRadix = entityToClone.NumericPrecisionRadix;
      newEntity.NumericScale = entityToClone.NumericScale;
      newEntity.DateTimePrecision = entityToClone.DateTimePrecision;
      newEntity.IsComputed = entityToClone.IsComputed;

      return newEntity;
    }
    #endregion

    #region CreateProperties Method
    /// <summary>
    /// Creates the collection of PDSAProperty objects. These are used to control validation and null handling.
    /// </summary>
    /// <returns>A collection of PDSAProperty objects</returns>
    public override PDSAProperties CreateProperties()
    {
      PDSAProperties props = new PDSAProperties();
      
      props.Add(PDSAProperty.Create(TableColumnInformationPDSAValidator.ColumnNames.DatabaseName, GetResourceMessage("GCS_TableColumnInformationPDSA_DatabaseName_Header", "Database Name"), false, typeof(string), 128, GetResourceMessage("GCS_TableColumnInformationPDSA_DatabaseName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(TableColumnInformationPDSAValidator.ColumnNames.TableSchema, GetResourceMessage("GCS_TableColumnInformationPDSA_TableSchema_Header", "Table Schema"), false, typeof(string), 128, GetResourceMessage("GCS_TableColumnInformationPDSA_TableSchema_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(TableColumnInformationPDSAValidator.ColumnNames.TableName, GetResourceMessage("GCS_TableColumnInformationPDSA_TableName_Header", "Table Name"), false, typeof(string), 128, GetResourceMessage("GCS_TableColumnInformationPDSA_TableName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(TableColumnInformationPDSAValidator.ColumnNames.ColumnName, GetResourceMessage("GCS_TableColumnInformationPDSA_ColumnName_Header", "Column Name"), false, typeof(string), 128, GetResourceMessage("GCS_TableColumnInformationPDSA_ColumnName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(TableColumnInformationPDSAValidator.ColumnNames.IsNullable, GetResourceMessage("GCS_TableColumnInformationPDSA_IsNullable_Header", "Is Nullable"), false, typeof(string), 3, GetResourceMessage("GCS_TableColumnInformationPDSA_IsNullable_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(TableColumnInformationPDSAValidator.ColumnNames.ColumnOrdinalPosition, GetResourceMessage("GCS_TableColumnInformationPDSA_ColumnOrdinalPosition_Header", "Column Ordinal Position"), false, typeof(int), 10, GetResourceMessage("GCS_TableColumnInformationPDSA_ColumnOrdinalPosition_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(TableColumnInformationPDSAValidator.ColumnNames.DefaultValue, GetResourceMessage("GCS_TableColumnInformationPDSA_DefaultValue_Header", "Default Value"), false, typeof(string), 4000, GetResourceMessage("GCS_TableColumnInformationPDSA_DefaultValue_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(TableColumnInformationPDSAValidator.ColumnNames.DataType, GetResourceMessage("GCS_TableColumnInformationPDSA_DataType_Header", "Data Type"), false, typeof(string), 128, GetResourceMessage("GCS_TableColumnInformationPDSA_DataType_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(TableColumnInformationPDSAValidator.ColumnNames.CharacterMaximumLength, GetResourceMessage("GCS_TableColumnInformationPDSA_CharacterMaximumLength_Header", "Character Maximum Length"), false, typeof(int), 10, GetResourceMessage("GCS_TableColumnInformationPDSA_CharacterMaximumLength_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(TableColumnInformationPDSAValidator.ColumnNames.NumericPrecision, GetResourceMessage("GCS_TableColumnInformationPDSA_NumericPrecision_Header", "Numeric Precision"), false, typeof(short), 3, GetResourceMessage("GCS_TableColumnInformationPDSA_NumericPrecision_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(TableColumnInformationPDSAValidator.ColumnNames.NumericPrecisionRadix, GetResourceMessage("GCS_TableColumnInformationPDSA_NumericPrecisionRadix_Header", "Numeric Precision Radix"), false, typeof(short), 5, GetResourceMessage("GCS_TableColumnInformationPDSA_NumericPrecisionRadix_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(TableColumnInformationPDSAValidator.ColumnNames.NumericScale, GetResourceMessage("GCS_TableColumnInformationPDSA_NumericScale_Header", "Numeric Scale"), false, typeof(int), 10, GetResourceMessage("GCS_TableColumnInformationPDSA_NumericScale_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(TableColumnInformationPDSAValidator.ColumnNames.DateTimePrecision, GetResourceMessage("GCS_TableColumnInformationPDSA_DateTimePrecision_Header", "Date Time Precision"), false, typeof(short), 5, GetResourceMessage("GCS_TableColumnInformationPDSA_DateTimePrecision_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(TableColumnInformationPDSAValidator.ColumnNames.IsComputed, GetResourceMessage("GCS_TableColumnInformationPDSA_IsComputed_Header", "Is Computed"), false, typeof(int), 10, GetResourceMessage("GCS_TableColumnInformationPDSA_IsComputed_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      
      return props;
    }
    #endregion

    #region Initialize Entity
    /// <summary>
    /// This method is called from the CreateNewEntity Method. All the properties for the Entity are set to default values here by the code generator.
    /// </summary>
    protected override void InitializeEntity()
    {
      Entity.DatabaseName = string.Empty;
      Entity.TableSchema = string.Empty;
      Entity.TableName = string.Empty;
      Entity.ColumnName = string.Empty;
      Entity.IsNullable = string.Empty;
      Entity.ColumnOrdinalPosition = 0;
      Entity.DefaultValue = string.Empty;
      Entity.DataType = string.Empty;
      Entity.CharacterMaximumLength = 0;
      Entity.NumericPrecision = 0;
      Entity.NumericPrecisionRadix = 0;
      Entity.NumericScale = 0;
      Entity.DateTimePrecision = 0;
      Entity.IsComputed = 0;

      Entity.ResetAllIsDirtyProperties();
    }
    #endregion
    
    #region InitProperties Method
    /// <summary>
    /// Called by the constructor to create the PDSAProperties collection of all properties that will be validated.
    /// </summary>
    protected override void InitProperties()
    {
      // Set the Properties collection to the collection of Entity Properties
      Properties = CreateProperties();
    }
    #endregion

    #region EntityDataToProperties Method
    /// <summary>
    /// Moves the Entity class data into the Properties collection.
    /// </summary>
    protected override void EntityDataToProperties()
    {
      if (Properties == null)
        InitProperties();
      
      if(!Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.DatabaseName).SetAsNull)
        Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.DatabaseName).Value = Entity.DatabaseName;
      if(!Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.TableSchema).SetAsNull)
        Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.TableSchema).Value = Entity.TableSchema;
      if(!Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.TableName).SetAsNull)
        Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.TableName).Value = Entity.TableName;
      if(!Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.ColumnName).SetAsNull)
        Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.ColumnName).Value = Entity.ColumnName;
      if(!Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.IsNullable).SetAsNull)
        Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.IsNullable).Value = Entity.IsNullable;
      if(!Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.ColumnOrdinalPosition).SetAsNull)
        Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.ColumnOrdinalPosition).Value = Entity.ColumnOrdinalPosition;
      if(!Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.DefaultValue).SetAsNull)
        Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.DefaultValue).Value = Entity.DefaultValue;
      if(!Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.DataType).SetAsNull)
        Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.DataType).Value = Entity.DataType;
      if(!Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.CharacterMaximumLength).SetAsNull)
        Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.CharacterMaximumLength).Value = Entity.CharacterMaximumLength;
      if(!Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.NumericPrecision).SetAsNull)
        Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.NumericPrecision).Value = Entity.NumericPrecision;
      if(!Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.NumericPrecisionRadix).SetAsNull)
        Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.NumericPrecisionRadix).Value = Entity.NumericPrecisionRadix;
      if(!Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.NumericScale).SetAsNull)
        Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.NumericScale).Value = Entity.NumericScale;
      if(!Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.DateTimePrecision).SetAsNull)
        Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.DateTimePrecision).Value = Entity.DateTimePrecision;
      if(!Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.IsComputed).SetAsNull)
        Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.IsComputed).Value = Entity.IsComputed;
    }

    /// <summary>
    /// Moves the Properties collection objects into the Entity properties
    /// </summary>
    protected override void PropertiesToEntityData()
    {
      if (Properties == null)
        InitProperties();

      if(Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.DatabaseName).IsNull == false)
        Entity.DatabaseName = Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.DatabaseName).GetAsString();
      if(Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.TableSchema).IsNull == false)
        Entity.TableSchema = Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.TableSchema).GetAsString();
      if(Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.TableName).IsNull == false)
        Entity.TableName = Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.TableName).GetAsString();
      if(Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.ColumnName).IsNull == false)
        Entity.ColumnName = Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.ColumnName).GetAsString();
      if(Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.IsNullable).IsNull == false)
        Entity.IsNullable = Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.IsNullable).GetAsString();
      if(Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.ColumnOrdinalPosition).IsNull == false)
        Entity.ColumnOrdinalPosition = Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.ColumnOrdinalPosition).GetAsInteger();
      if(Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.DefaultValue).IsNull == false)
        Entity.DefaultValue = Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.DefaultValue).GetAsString();
      if(Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.DataType).IsNull == false)
        Entity.DataType = Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.DataType).GetAsString();
      if(Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.CharacterMaximumLength).IsNull == false)
        Entity.CharacterMaximumLength = Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.CharacterMaximumLength).GetAsInteger();
      if(Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.NumericPrecision).IsNull == false)
        Entity.NumericPrecision = Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.NumericPrecision).GetAsShort();
      if(Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.NumericPrecisionRadix).IsNull == false)
        Entity.NumericPrecisionRadix = Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.NumericPrecisionRadix).GetAsShort();
      if(Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.NumericScale).IsNull == false)
        Entity.NumericScale = Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.NumericScale).GetAsInteger();
      if(Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.DateTimePrecision).IsNull == false)
        Entity.DateTimePrecision = Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.DateTimePrecision).GetAsShort();
      if(Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.IsComputed).IsNull == false)
        Entity.IsComputed = Properties.GetByName(TableColumnInformationPDSAValidator.ColumnNames.IsComputed).GetAsInteger();
    }
    #endregion
    
    #region ColumnNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the TableColumnInformationPDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ColumnNames
    {
    /// <summary>
    /// Returns 'DatabaseName'
    /// </summary>
    public static string DatabaseName = "DatabaseName";
    /// <summary>
    /// Returns 'TableSchema'
    /// </summary>
    public static string TableSchema = "TableSchema";
    /// <summary>
    /// Returns 'TableName'
    /// </summary>
    public static string TableName = "TableName";
    /// <summary>
    /// Returns 'ColumnName'
    /// </summary>
    public static string ColumnName = "ColumnName";
    /// <summary>
    /// Returns 'IsNullable'
    /// </summary>
    public static string IsNullable = "IsNullable";
    /// <summary>
    /// Returns 'ColumnOrdinalPosition'
    /// </summary>
    public static string ColumnOrdinalPosition = "ColumnOrdinalPosition";
    /// <summary>
    /// Returns 'DefaultValue'
    /// </summary>
    public static string DefaultValue = "DefaultValue";
    /// <summary>
    /// Returns 'DataType'
    /// </summary>
    public static string DataType = "DataType";
    /// <summary>
    /// Returns 'CharacterMaximumLength'
    /// </summary>
    public static string CharacterMaximumLength = "CharacterMaximumLength";
    /// <summary>
    /// Returns 'NumericPrecision'
    /// </summary>
    public static string NumericPrecision = "NumericPrecision";
    /// <summary>
    /// Returns 'NumericPrecisionRadix'
    /// </summary>
    public static string NumericPrecisionRadix = "NumericPrecisionRadix";
    /// <summary>
    /// Returns 'NumericScale'
    /// </summary>
    public static string NumericScale = "NumericScale";
    /// <summary>
    /// Returns 'DateTimePrecision'
    /// </summary>
    public static string DateTimePrecision = "DateTimePrecision";
    /// <summary>
    /// Returns 'IsComputed'
    /// </summary>
    public static string IsComputed = "IsComputed";
    }
    #endregion
  }
}
