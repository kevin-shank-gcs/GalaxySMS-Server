using System;

using PDSA.Common;
using PDSA.Validation;

using GalaxySMS.EntityLayer;

namespace GalaxySMS.ValidationLayer
{
  /// <summary>
  /// Used to validate all properties of the AccessGroupAccessPortalLoadToCpuPDSA class.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public partial class AccessGroupAccessPortalLoadToCpuPDSAValidator : PDSAValidatorBase
  {
    #region Public Entity Property
    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    private AccessGroupAccessPortalLoadToCpuPDSA _Entity = null;

    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    public new AccessGroupAccessPortalLoadToCpuPDSA Entity
    {
      get { return _Entity; }
      set
      {
        _Entity = value;
        base.Entity = value;
      }
    }
    #endregion
    
    #region Clone Entity Class
    /// <summary>
    /// Clones the current AccessGroupAccessPortalLoadToCpuPDSA
    /// </summary>
    /// <returns>A cloned AccessGroupAccessPortalLoadToCpuPDSA object</returns>
    public AccessGroupAccessPortalLoadToCpuPDSA CloneEntity()
    {
      return CloneEntity(this.Entity);
    }
    
    /// <summary>
    /// Clones the passed in AccessGroupAccessPortalLoadToCpuPDSA
    /// </summary>
    /// <param name="entityToClone">The AccessGroupAccessPortalLoadToCpuPDSA entity to clone</param>
    /// <returns>A cloned AccessGroupAccessPortalLoadToCpuPDSA object</returns>
    public AccessGroupAccessPortalLoadToCpuPDSA CloneEntity(AccessGroupAccessPortalLoadToCpuPDSA entityToClone)
    {
      AccessGroupAccessPortalLoadToCpuPDSA newEntity = new AccessGroupAccessPortalLoadToCpuPDSA();

      newEntity.AccessGroupAccessPortalLoadToCpuUid = entityToClone.AccessGroupAccessPortalLoadToCpuUid;
      newEntity.AccessGroupAccessPortalUid = entityToClone.AccessGroupAccessPortalUid;
      newEntity.CpuUid = entityToClone.CpuUid;
      newEntity.LastLoadedDate = entityToClone.LastLoadedDate;
      newEntity.LastForceLoadDate = entityToClone.LastForceLoadDate;

      return newEntity;
    }
    #endregion

    #region CreateProperties Method
    /// <summary>
    /// Creates the collection of PDSAProperty objects. These are used to control validation and null handling.
    /// </summary>
    /// <returns>A collection of PDSAProperty objects</returns>
    public override PDSAProperties CreateProperties()
    {
      PDSAProperties props = new PDSAProperties();
      
      props.Add(PDSAProperty.Create(AccessGroupAccessPortalLoadToCpuPDSAValidator.ColumnNames.AccessGroupAccessPortalLoadToCpuUid, GetResourceMessage("GCS_AccessGroupAccessPortalLoadToCpuPDSA_AccessGroupAccessPortalLoadToCpuUid_Header", "Access Group Access Portal Load To Cpu Uid"), true, typeof(Guid), -1, GetResourceMessage("GCS_AccessGroupAccessPortalLoadToCpuPDSA_AccessGroupAccessPortalLoadToCpuUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroupAccessPortalLoadToCpuPDSAValidator.ColumnNames.AccessGroupAccessPortalUid, GetResourceMessage("GCS_AccessGroupAccessPortalLoadToCpuPDSA_AccessGroupAccessPortalUid_Header", "Access Group Access Portal Uid"), true, typeof(Guid), -1, GetResourceMessage("GCS_AccessGroupAccessPortalLoadToCpuPDSA_AccessGroupAccessPortalUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroupAccessPortalLoadToCpuPDSAValidator.ColumnNames.CpuUid, GetResourceMessage("GCS_AccessGroupAccessPortalLoadToCpuPDSA_CpuUid_Header", "Cpu Uid"), true, typeof(Guid), -1, GetResourceMessage("GCS_AccessGroupAccessPortalLoadToCpuPDSA_CpuUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroupAccessPortalLoadToCpuPDSAValidator.ColumnNames.LastLoadedDate, GetResourceMessage("GCS_AccessGroupAccessPortalLoadToCpuPDSA_LastLoadedDate_Header", "Last Loaded Date"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_AccessGroupAccessPortalLoadToCpuPDSA_LastLoadedDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroupAccessPortalLoadToCpuPDSAValidator.ColumnNames.LastForceLoadDate, GetResourceMessage("GCS_AccessGroupAccessPortalLoadToCpuPDSA_LastForceLoadDate_Header", "Last Force Load Date"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_AccessGroupAccessPortalLoadToCpuPDSA_LastForceLoadDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      
      return props;
    }
    #endregion

    #region Initialize Entity
    /// <summary>
    /// This method is called from the CreateNewEntity Method. All the properties for the Entity are set to default values here by the code generator.
    /// </summary>
    protected override void InitializeEntity()
    {
      Entity.AccessGroupAccessPortalLoadToCpuUid = Guid.Empty;
      Entity.AccessGroupAccessPortalUid = Guid.Empty;
      Entity.CpuUid = Guid.Empty;
      Entity.LastLoadedDate = DateTimeOffset.Now;
      Entity.LastForceLoadDate = DateTimeOffset.Now;

      Entity.ResetAllIsDirtyProperties();
    }
    #endregion
    
    #region InitProperties Method
    /// <summary>
    /// Called by the constructor to create the PDSAProperties collection of all properties that will be validated.
    /// </summary>
    protected override void InitProperties()
    {
      // Set the Properties collection to the collection of Entity Properties
      Properties = CreateProperties();
    }
    #endregion

    #region EntityDataToProperties Method
    /// <summary>
    /// Moves the Entity class data into the Properties collection.
    /// </summary>
    protected override void EntityDataToProperties()
    {
      if (Properties == null)
        InitProperties();
      
      if(!Properties.GetByName(AccessGroupAccessPortalLoadToCpuPDSAValidator.ColumnNames.AccessGroupAccessPortalLoadToCpuUid).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortalLoadToCpuPDSAValidator.ColumnNames.AccessGroupAccessPortalLoadToCpuUid).Value = Entity.AccessGroupAccessPortalLoadToCpuUid;
      if(!Properties.GetByName(AccessGroupAccessPortalLoadToCpuPDSAValidator.ColumnNames.AccessGroupAccessPortalUid).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortalLoadToCpuPDSAValidator.ColumnNames.AccessGroupAccessPortalUid).Value = Entity.AccessGroupAccessPortalUid;
      if(!Properties.GetByName(AccessGroupAccessPortalLoadToCpuPDSAValidator.ColumnNames.CpuUid).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortalLoadToCpuPDSAValidator.ColumnNames.CpuUid).Value = Entity.CpuUid;
      if(!Properties.GetByName(AccessGroupAccessPortalLoadToCpuPDSAValidator.ColumnNames.LastLoadedDate).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortalLoadToCpuPDSAValidator.ColumnNames.LastLoadedDate).Value = Entity.LastLoadedDate;
      if(!Properties.GetByName(AccessGroupAccessPortalLoadToCpuPDSAValidator.ColumnNames.LastForceLoadDate).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortalLoadToCpuPDSAValidator.ColumnNames.LastForceLoadDate).Value = Entity.LastForceLoadDate;
    }

    /// <summary>
    /// Moves the Properties collection objects into the Entity properties
    /// </summary>
    protected override void PropertiesToEntityData()
    {
      if (Properties == null)
        InitProperties();

      if(Properties.GetByName(AccessGroupAccessPortalLoadToCpuPDSAValidator.ColumnNames.AccessGroupAccessPortalLoadToCpuUid).IsNull == false)
        Entity.AccessGroupAccessPortalLoadToCpuUid = Properties.GetByName(AccessGroupAccessPortalLoadToCpuPDSAValidator.ColumnNames.AccessGroupAccessPortalLoadToCpuUid).GetAsGuid();
      if(Properties.GetByName(AccessGroupAccessPortalLoadToCpuPDSAValidator.ColumnNames.AccessGroupAccessPortalUid).IsNull == false)
        Entity.AccessGroupAccessPortalUid = Properties.GetByName(AccessGroupAccessPortalLoadToCpuPDSAValidator.ColumnNames.AccessGroupAccessPortalUid).GetAsGuid();
      if(Properties.GetByName(AccessGroupAccessPortalLoadToCpuPDSAValidator.ColumnNames.CpuUid).IsNull == false)
        Entity.CpuUid = Properties.GetByName(AccessGroupAccessPortalLoadToCpuPDSAValidator.ColumnNames.CpuUid).GetAsGuid();
      if(Properties.GetByName(AccessGroupAccessPortalLoadToCpuPDSAValidator.ColumnNames.LastLoadedDate).IsNull == false)
        Entity.LastLoadedDate = Properties.GetByName(AccessGroupAccessPortalLoadToCpuPDSAValidator.ColumnNames.LastLoadedDate).GetAsDateTimeOffset();
      if(Properties.GetByName(AccessGroupAccessPortalLoadToCpuPDSAValidator.ColumnNames.LastForceLoadDate).IsNull == false)
        Entity.LastForceLoadDate = Properties.GetByName(AccessGroupAccessPortalLoadToCpuPDSAValidator.ColumnNames.LastForceLoadDate).GetAsDateTimeOffset();
    }
    #endregion
    
    #region ColumnNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the AccessGroupAccessPortalLoadToCpuPDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ColumnNames
    {
    /// <summary>
    /// Returns 'AccessGroupAccessPortalLoadToCpuUid'
    /// </summary>
    public static string AccessGroupAccessPortalLoadToCpuUid = "AccessGroupAccessPortalLoadToCpuUid";
    /// <summary>
    /// Returns 'AccessGroupAccessPortalUid'
    /// </summary>
    public static string AccessGroupAccessPortalUid = "AccessGroupAccessPortalUid";
    /// <summary>
    /// Returns 'CpuUid'
    /// </summary>
    public static string CpuUid = "CpuUid";
    /// <summary>
    /// Returns 'LastLoadedDate'
    /// </summary>
    public static string LastLoadedDate = "LastLoadedDate";
    /// <summary>
    /// Returns 'LastForceLoadDate'
    /// </summary>
    public static string LastForceLoadDate = "LastForceLoadDate";
    }
    #endregion
  }
}
