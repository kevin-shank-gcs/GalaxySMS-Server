using System;

using PDSA.Common;
using PDSA.Validation;

using GalaxySMS.EntityLayer;

namespace GalaxySMS.ValidationLayer
{
  /// <summary>
  /// Used to validate all properties of the AccessGroupAccessPortalPDSA class.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public partial class AccessGroupAccessPortalPDSAValidator : PDSAValidatorBase
  {
    #region Public Entity Property
    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    private AccessGroupAccessPortalPDSA _Entity = null;

    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    public new AccessGroupAccessPortalPDSA Entity
    {
      get { return _Entity; }
      set
      {
        _Entity = value;
        base.Entity = value;
      }
    }
    #endregion
    
    #region Clone Entity Class
    /// <summary>
    /// Clones the current AccessGroupAccessPortalPDSA
    /// </summary>
    /// <returns>A cloned AccessGroupAccessPortalPDSA object</returns>
    public AccessGroupAccessPortalPDSA CloneEntity()
    {
      return CloneEntity(this.Entity);
    }
    
    /// <summary>
    /// Clones the passed in AccessGroupAccessPortalPDSA
    /// </summary>
    /// <param name="entityToClone">The AccessGroupAccessPortalPDSA entity to clone</param>
    /// <returns>A cloned AccessGroupAccessPortalPDSA object</returns>
    public AccessGroupAccessPortalPDSA CloneEntity(AccessGroupAccessPortalPDSA entityToClone)
    {
      AccessGroupAccessPortalPDSA newEntity = new AccessGroupAccessPortalPDSA();

      newEntity.AccessGroupAccessPortalUid = entityToClone.AccessGroupAccessPortalUid;
      newEntity.AccessGroupUid = entityToClone.AccessGroupUid;
      newEntity.AccessPortalUid = entityToClone.AccessPortalUid;
      newEntity.TimeScheduleUid = entityToClone.TimeScheduleUid;
      newEntity.InsertName = entityToClone.InsertName;
      newEntity.InsertDate = entityToClone.InsertDate;
      newEntity.UpdateName = entityToClone.UpdateName;
      newEntity.UpdateDate = entityToClone.UpdateDate;
      newEntity.ConcurrencyValue = entityToClone.ConcurrencyValue;
      newEntity.AccessGroupName = entityToClone.AccessGroupName;
      newEntity.TimeScheduleName = entityToClone.TimeScheduleName;
      newEntity.AccessPortalName = entityToClone.AccessPortalName;
      newEntity.AccessGroupNumber = entityToClone.AccessGroupNumber;

      return newEntity;
    }
    #endregion

    #region CreateProperties Method
    /// <summary>
    /// Creates the collection of PDSAProperty objects. These are used to control validation and null handling.
    /// </summary>
    /// <returns>A collection of PDSAProperty objects</returns>
    public override PDSAProperties CreateProperties()
    {
      PDSAProperties props = new PDSAProperties();
      
      props.Add(PDSAProperty.Create(AccessGroupAccessPortalPDSAValidator.ColumnNames.AccessGroupAccessPortalUid, GetResourceMessage("GCS_AccessGroupAccessPortalPDSA_AccessGroupAccessPortalUid_Header", "Access Group Access Portal Uid"), true, typeof(Guid), -1, GetResourceMessage("GCS_AccessGroupAccessPortalPDSA_AccessGroupAccessPortalUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroupAccessPortalPDSAValidator.ColumnNames.AccessGroupUid, GetResourceMessage("GCS_AccessGroupAccessPortalPDSA_AccessGroupUid_Header", "Access Group Uid"), true, typeof(Guid), -1, GetResourceMessage("GCS_AccessGroupAccessPortalPDSA_AccessGroupUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroupAccessPortalPDSAValidator.ColumnNames.AccessPortalUid, GetResourceMessage("GCS_AccessGroupAccessPortalPDSA_AccessPortalUid_Header", "Access Portal Uid"), true, typeof(Guid), -1, GetResourceMessage("GCS_AccessGroupAccessPortalPDSA_AccessPortalUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroupAccessPortalPDSAValidator.ColumnNames.TimeScheduleUid, GetResourceMessage("GCS_AccessGroupAccessPortalPDSA_TimeScheduleUid_Header", "Time Schedule Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_AccessGroupAccessPortalPDSA_TimeScheduleUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroupAccessPortalPDSAValidator.ColumnNames.InsertName, GetResourceMessage("GCS_AccessGroupAccessPortalPDSA_InsertName_Header", "Insert Name"), true, typeof(string), 100, GetResourceMessage("GCS_AccessGroupAccessPortalPDSA_InsertName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroupAccessPortalPDSAValidator.ColumnNames.InsertDate, GetResourceMessage("GCS_AccessGroupAccessPortalPDSA_InsertDate_Header", "Insert Date"), true, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_AccessGroupAccessPortalPDSA_InsertDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroupAccessPortalPDSAValidator.ColumnNames.UpdateName, GetResourceMessage("GCS_AccessGroupAccessPortalPDSA_UpdateName_Header", "Update Name"), true, typeof(string), 100, GetResourceMessage("GCS_AccessGroupAccessPortalPDSA_UpdateName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroupAccessPortalPDSAValidator.ColumnNames.UpdateDate, GetResourceMessage("GCS_AccessGroupAccessPortalPDSA_UpdateDate_Header", "Update Date"), true, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_AccessGroupAccessPortalPDSA_UpdateDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroupAccessPortalPDSAValidator.ColumnNames.ConcurrencyValue, GetResourceMessage("GCS_AccessGroupAccessPortalPDSA_ConcurrencyValue_Header", "Concurrency Value"), true, typeof(short), 5, GetResourceMessage("GCS_AccessGroupAccessPortalPDSA_ConcurrencyValue_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroupAccessPortalPDSAValidator.ColumnNames.AccessGroupName, GetResourceMessage("GCS_AccessGroupAccessPortalPDSA_AccessGroupName_Header", "Access Group Name"), false, typeof(string), 2147483647, GetResourceMessage("GCS_AccessGroupAccessPortalPDSA_AccessGroupName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroupAccessPortalPDSAValidator.ColumnNames.TimeScheduleName, GetResourceMessage("GCS_AccessGroupAccessPortalPDSA_TimeScheduleName_Header", "Time Schedule Name"), false, typeof(string), 2147483647, GetResourceMessage("GCS_AccessGroupAccessPortalPDSA_TimeScheduleName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroupAccessPortalPDSAValidator.ColumnNames.AccessPortalName, GetResourceMessage("GCS_AccessGroupAccessPortalPDSA_AccessPortalName_Header", "Access Portal Name"), false, typeof(string), 2147483647, GetResourceMessage("GCS_AccessGroupAccessPortalPDSA_AccessPortalName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AccessGroupAccessPortalPDSAValidator.ColumnNames.AccessGroupNumber, GetResourceMessage("GCS_AccessGroupAccessPortalPDSA_AccessGroupNumber_Header", "Access Group Number"), false, typeof(int), 2147483647, GetResourceMessage("GCS_AccessGroupAccessPortalPDSA_AccessGroupNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      
      return props;
    }
    #endregion

    #region Initialize Entity
    /// <summary>
    /// This method is called from the CreateNewEntity Method. All the properties for the Entity are set to default values here by the code generator.
    /// </summary>
    protected override void InitializeEntity()
    {
      Entity.AccessGroupAccessPortalUid = Guid.Empty;
      Entity.AccessGroupUid = Guid.Empty;
      Entity.AccessPortalUid = Guid.Empty;
      Entity.TimeScheduleUid = Guid.Empty;
      Entity.InsertName = string.Empty;
      Entity.InsertDate = DateTimeOffset.Now;
      Entity.UpdateName = string.Empty;
      Entity.UpdateDate = DateTimeOffset.Now;
      Entity.ConcurrencyValue = 0;
      Entity.AccessGroupName = string.Empty;
      Entity.TimeScheduleName = string.Empty;
      Entity.AccessPortalName = string.Empty;
      Entity.AccessGroupNumber = 0;

      Entity.ResetAllIsDirtyProperties();
    }
    #endregion
    
    #region InitProperties Method
    /// <summary>
    /// Called by the constructor to create the PDSAProperties collection of all properties that will be validated.
    /// </summary>
    protected override void InitProperties()
    {
      // Set the Properties collection to the collection of Entity Properties
      Properties = CreateProperties();
    }
    #endregion

    #region EntityDataToProperties Method
    /// <summary>
    /// Moves the Entity class data into the Properties collection.
    /// </summary>
    protected override void EntityDataToProperties()
    {
      if (Properties == null)
        InitProperties();
      
      if(!Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.AccessGroupAccessPortalUid).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.AccessGroupAccessPortalUid).Value = Entity.AccessGroupAccessPortalUid;
      if(!Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.AccessGroupUid).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.AccessGroupUid).Value = Entity.AccessGroupUid;
      if(!Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.AccessPortalUid).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.AccessPortalUid).Value = Entity.AccessPortalUid;
      if(!Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.TimeScheduleUid).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.TimeScheduleUid).Value = Entity.TimeScheduleUid;
      if(!Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.InsertName).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.InsertName).Value = Entity.InsertName;
      if(!Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.InsertDate).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.InsertDate).Value = Entity.InsertDate;
      if(!Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.UpdateName).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.UpdateName).Value = Entity.UpdateName;
      if(!Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.UpdateDate).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.UpdateDate).Value = Entity.UpdateDate;
      if(!Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.ConcurrencyValue).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.ConcurrencyValue).Value = Entity.ConcurrencyValue;
      if(!Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.AccessGroupName).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.AccessGroupName).Value = Entity.AccessGroupName;
      if(!Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.TimeScheduleName).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.TimeScheduleName).Value = Entity.TimeScheduleName;
      if(!Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.AccessPortalName).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.AccessPortalName).Value = Entity.AccessPortalName;
      if(!Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.AccessGroupNumber).SetAsNull)
        Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.AccessGroupNumber).Value = Entity.AccessGroupNumber;
    }

    /// <summary>
    /// Moves the Properties collection objects into the Entity properties
    /// </summary>
    protected override void PropertiesToEntityData()
    {
      if (Properties == null)
        InitProperties();

      if(Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.AccessGroupAccessPortalUid).IsNull == false)
        Entity.AccessGroupAccessPortalUid = Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.AccessGroupAccessPortalUid).GetAsGuid();
      if(Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.AccessGroupUid).IsNull == false)
        Entity.AccessGroupUid = Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.AccessGroupUid).GetAsGuid();
      if(Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.AccessPortalUid).IsNull == false)
        Entity.AccessPortalUid = Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.AccessPortalUid).GetAsGuid();
      if(Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.TimeScheduleUid).IsNull == false)
        Entity.TimeScheduleUid = Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.TimeScheduleUid).GetAsGuid();
      if(Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.InsertName).IsNull == false)
        Entity.InsertName = Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.InsertName).GetAsString();
      if(Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.InsertDate).IsNull == false)
        Entity.InsertDate = Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.InsertDate).GetAsDateTimeOffset();
      if(Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.UpdateName).IsNull == false)
        Entity.UpdateName = Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.UpdateName).GetAsString();
      if(Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.UpdateDate).IsNull == false)
        Entity.UpdateDate = Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.UpdateDate).GetAsDateTimeOffset();
      if(Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.ConcurrencyValue).IsNull == false)
        Entity.ConcurrencyValue = Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.ConcurrencyValue).GetAsShort();
      if(Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.AccessGroupName).IsNull == false)
        Entity.AccessGroupName = Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.AccessGroupName).GetAsString();
      if(Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.TimeScheduleName).IsNull == false)
        Entity.TimeScheduleName = Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.TimeScheduleName).GetAsString();
      if(Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.AccessPortalName).IsNull == false)
        Entity.AccessPortalName = Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.AccessPortalName).GetAsString();
      if(Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.AccessGroupNumber).IsNull == false)
        Entity.AccessGroupNumber = Properties.GetByName(AccessGroupAccessPortalPDSAValidator.ColumnNames.AccessGroupNumber).GetAsInteger();
    }
    #endregion
    
    #region ColumnNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the AccessGroupAccessPortalPDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ColumnNames
    {
    /// <summary>
    /// Returns 'AccessGroupAccessPortalUid'
    /// </summary>
    public static string AccessGroupAccessPortalUid = "AccessGroupAccessPortalUid";
    /// <summary>
    /// Returns 'AccessGroupUid'
    /// </summary>
    public static string AccessGroupUid = "AccessGroupUid";
    /// <summary>
    /// Returns 'AccessPortalUid'
    /// </summary>
    public static string AccessPortalUid = "AccessPortalUid";
    /// <summary>
    /// Returns 'TimeScheduleUid'
    /// </summary>
    public static string TimeScheduleUid = "TimeScheduleUid";
    /// <summary>
    /// Returns 'InsertName'
    /// </summary>
    public static string InsertName = "InsertName";
    /// <summary>
    /// Returns 'InsertDate'
    /// </summary>
    public static string InsertDate = "InsertDate";
    /// <summary>
    /// Returns 'UpdateName'
    /// </summary>
    public static string UpdateName = "UpdateName";
    /// <summary>
    /// Returns 'UpdateDate'
    /// </summary>
    public static string UpdateDate = "UpdateDate";
    /// <summary>
    /// Returns 'ConcurrencyValue'
    /// </summary>
    public static string ConcurrencyValue = "ConcurrencyValue";
    /// <summary>
    /// Returns 'AccessGroupName'
    /// </summary>
    public static string AccessGroupName = "AccessGroupName";
    /// <summary>
    /// Returns 'TimeScheduleName'
    /// </summary>
    public static string TimeScheduleName = "TimeScheduleName";
    /// <summary>
    /// Returns 'AccessPortalName'
    /// </summary>
    public static string AccessPortalName = "AccessPortalName";
    /// <summary>
    /// Returns 'AccessGroupNumber'
    /// </summary>
    public static string AccessGroupNumber = "AccessGroupNumber";
    }
    #endregion
  }
}
