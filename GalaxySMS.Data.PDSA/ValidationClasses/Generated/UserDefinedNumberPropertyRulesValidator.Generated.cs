using System;

using PDSA.Common;
using PDSA.Validation;

using GalaxySMS.EntityLayer;

namespace GalaxySMS.ValidationLayer
{
  /// <summary>
  /// Used to validate all properties of the UserDefinedNumberPropertyRulesPDSA class.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public partial class UserDefinedNumberPropertyRulesPDSAValidator : PDSAValidatorBase
  {
    #region Public Entity Property
    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    private UserDefinedNumberPropertyRulesPDSA _Entity = null;

    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    public new UserDefinedNumberPropertyRulesPDSA Entity
    {
      get { return _Entity; }
      set
      {
        _Entity = value;
        base.Entity = value;
      }
    }
    #endregion
    
    #region Clone Entity Class
    /// <summary>
    /// Clones the current UserDefinedNumberPropertyRulesPDSA
    /// </summary>
    /// <returns>A cloned UserDefinedNumberPropertyRulesPDSA object</returns>
    public UserDefinedNumberPropertyRulesPDSA CloneEntity()
    {
      return CloneEntity(this.Entity);
    }
    
    /// <summary>
    /// Clones the passed in UserDefinedNumberPropertyRulesPDSA
    /// </summary>
    /// <param name="entityToClone">The UserDefinedNumberPropertyRulesPDSA entity to clone</param>
    /// <returns>A cloned UserDefinedNumberPropertyRulesPDSA object</returns>
    public UserDefinedNumberPropertyRulesPDSA CloneEntity(UserDefinedNumberPropertyRulesPDSA entityToClone)
    {
      UserDefinedNumberPropertyRulesPDSA newEntity = new UserDefinedNumberPropertyRulesPDSA();

      newEntity.UserDefinedPropertyUid = entityToClone.UserDefinedPropertyUid;
      newEntity.IsRequired = entityToClone.IsRequired;
      newEntity.MinimumValue = entityToClone.MinimumValue;
      newEntity.MaximumValue = entityToClone.MaximumValue;
      newEntity.ValidationRegEx = entityToClone.ValidationRegEx;
      newEntity.DefaultValue = entityToClone.DefaultValue;
      newEntity.EmptyContent = entityToClone.EmptyContent;
      newEntity.ValidationErrorMessage = entityToClone.ValidationErrorMessage;
      newEntity.InsertName = entityToClone.InsertName;
      newEntity.InsertDate = entityToClone.InsertDate;
      newEntity.UpdateName = entityToClone.UpdateName;
      newEntity.UpdateDate = entityToClone.UpdateDate;
      newEntity.ConcurrencyValue = entityToClone.ConcurrencyValue;

      return newEntity;
    }
    #endregion

    #region CreateProperties Method
    /// <summary>
    /// Creates the collection of PDSAProperty objects. These are used to control validation and null handling.
    /// </summary>
    /// <returns>A collection of PDSAProperty objects</returns>
    public override PDSAProperties CreateProperties()
    {
      PDSAProperties props = new PDSAProperties();
      
      props.Add(PDSAProperty.Create(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.UserDefinedPropertyUid, GetResourceMessage("GCS_UserDefinedNumberPropertyRulesPDSA_UserDefinedPropertyUid_Header", "User Defined Property Uid"), true, typeof(Guid), -1, GetResourceMessage("GCS_UserDefinedNumberPropertyRulesPDSA_UserDefinedPropertyUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.IsRequired, GetResourceMessage("GCS_UserDefinedNumberPropertyRulesPDSA_IsRequired_Header", "Is Required"), true, typeof(bool), -1, GetResourceMessage("GCS_UserDefinedNumberPropertyRulesPDSA_IsRequired_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.MinimumValue, GetResourceMessage("GCS_UserDefinedNumberPropertyRulesPDSA_MinimumValue_Header", "Minimum Value"), true, typeof(long), 19, GetResourceMessage("GCS_UserDefinedNumberPropertyRulesPDSA_MinimumValue_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt64("-9223372036854775808"), Convert.ToInt64("9223372036854775807"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.MaximumValue, GetResourceMessage("GCS_UserDefinedNumberPropertyRulesPDSA_MaximumValue_Header", "Maximum Value"), true, typeof(long), 19, GetResourceMessage("GCS_UserDefinedNumberPropertyRulesPDSA_MaximumValue_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt64("-9223372036854775808"), Convert.ToInt64("9223372036854775807"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.ValidationRegEx, GetResourceMessage("GCS_UserDefinedNumberPropertyRulesPDSA_ValidationRegEx_Header", "Validation Reg Ex"), false, typeof(string), 255, GetResourceMessage("GCS_UserDefinedNumberPropertyRulesPDSA_ValidationRegEx_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.DefaultValue, GetResourceMessage("GCS_UserDefinedNumberPropertyRulesPDSA_DefaultValue_Header", "Default Value"), true, typeof(int), 10, GetResourceMessage("GCS_UserDefinedNumberPropertyRulesPDSA_DefaultValue_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.EmptyContent, GetResourceMessage("GCS_UserDefinedNumberPropertyRulesPDSA_EmptyContent_Header", "Empty Content"), false, typeof(string), 255, GetResourceMessage("GCS_UserDefinedNumberPropertyRulesPDSA_EmptyContent_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.ValidationErrorMessage, GetResourceMessage("GCS_UserDefinedNumberPropertyRulesPDSA_ValidationErrorMessage_Header", "Validation Error Message"), false, typeof(string), 1000, GetResourceMessage("GCS_UserDefinedNumberPropertyRulesPDSA_ValidationErrorMessage_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.InsertName, GetResourceMessage("GCS_UserDefinedNumberPropertyRulesPDSA_InsertName_Header", "Insert Name"), true, typeof(string), 100, GetResourceMessage("GCS_UserDefinedNumberPropertyRulesPDSA_InsertName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.InsertDate, GetResourceMessage("GCS_UserDefinedNumberPropertyRulesPDSA_InsertDate_Header", "Insert Date"), true, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_UserDefinedNumberPropertyRulesPDSA_InsertDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.UpdateName, GetResourceMessage("GCS_UserDefinedNumberPropertyRulesPDSA_UpdateName_Header", "Update Name"), true, typeof(string), 100, GetResourceMessage("GCS_UserDefinedNumberPropertyRulesPDSA_UpdateName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.UpdateDate, GetResourceMessage("GCS_UserDefinedNumberPropertyRulesPDSA_UpdateDate_Header", "Update Date"), true, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_UserDefinedNumberPropertyRulesPDSA_UpdateDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.ConcurrencyValue, GetResourceMessage("GCS_UserDefinedNumberPropertyRulesPDSA_ConcurrencyValue_Header", "Concurrency Value"), true, typeof(short), 5, GetResourceMessage("GCS_UserDefinedNumberPropertyRulesPDSA_ConcurrencyValue_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      
      return props;
    }
    #endregion

    #region Initialize Entity
    /// <summary>
    /// This method is called from the CreateNewEntity Method. All the properties for the Entity are set to default values here by the code generator.
    /// </summary>
    protected override void InitializeEntity()
    {
      Entity.UserDefinedPropertyUid = Guid.Empty;
      Entity.IsRequired = false;
      Entity.MinimumValue = 0;
      Entity.MaximumValue = 0;
      Entity.ValidationRegEx = string.Empty;
      Entity.DefaultValue = 0;
      Entity.EmptyContent = string.Empty;
      Entity.ValidationErrorMessage = string.Empty;
      Entity.InsertName = string.Empty;
      Entity.InsertDate = DateTimeOffset.Now;
      Entity.UpdateName = string.Empty;
      Entity.UpdateDate = DateTimeOffset.Now;
      Entity.ConcurrencyValue = 0;

      Entity.ResetAllIsDirtyProperties();
    }
    #endregion
    
    #region InitProperties Method
    /// <summary>
    /// Called by the constructor to create the PDSAProperties collection of all properties that will be validated.
    /// </summary>
    protected override void InitProperties()
    {
      // Set the Properties collection to the collection of Entity Properties
      Properties = CreateProperties();
    }
    #endregion

    #region EntityDataToProperties Method
    /// <summary>
    /// Moves the Entity class data into the Properties collection.
    /// </summary>
    protected override void EntityDataToProperties()
    {
      if (Properties == null)
        InitProperties();
      
      if(!Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.UserDefinedPropertyUid).SetAsNull)
        Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.UserDefinedPropertyUid).Value = Entity.UserDefinedPropertyUid;
      if(!Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.IsRequired).SetAsNull)
        Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.IsRequired).Value = Entity.IsRequired;
      if(!Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.MinimumValue).SetAsNull)
        Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.MinimumValue).Value = Entity.MinimumValue;
      if(!Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.MaximumValue).SetAsNull)
        Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.MaximumValue).Value = Entity.MaximumValue;
      if(!Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.ValidationRegEx).SetAsNull)
        Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.ValidationRegEx).Value = Entity.ValidationRegEx;
      if(!Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.DefaultValue).SetAsNull)
        Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.DefaultValue).Value = Entity.DefaultValue;
      if(!Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.EmptyContent).SetAsNull)
        Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.EmptyContent).Value = Entity.EmptyContent;
      if(!Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.ValidationErrorMessage).SetAsNull)
        Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.ValidationErrorMessage).Value = Entity.ValidationErrorMessage;
      if(!Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.InsertName).SetAsNull)
        Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.InsertName).Value = Entity.InsertName;
      if(!Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.InsertDate).SetAsNull)
        Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.InsertDate).Value = Entity.InsertDate;
      if(!Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.UpdateName).SetAsNull)
        Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.UpdateName).Value = Entity.UpdateName;
      if(!Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.UpdateDate).SetAsNull)
        Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.UpdateDate).Value = Entity.UpdateDate;
      if(!Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.ConcurrencyValue).SetAsNull)
        Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.ConcurrencyValue).Value = Entity.ConcurrencyValue;
    }

    /// <summary>
    /// Moves the Properties collection objects into the Entity properties
    /// </summary>
    protected override void PropertiesToEntityData()
    {
      if (Properties == null)
        InitProperties();

      if(Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.UserDefinedPropertyUid).IsNull == false)
        Entity.UserDefinedPropertyUid = Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.UserDefinedPropertyUid).GetAsGuid();
      if(Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.IsRequired).IsNull == false)
        Entity.IsRequired = Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.IsRequired).GetAsBool();
      if(Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.MinimumValue).IsNull == false)
        Entity.MinimumValue = Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.MinimumValue).GetAsLong();
      if(Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.MaximumValue).IsNull == false)
        Entity.MaximumValue = Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.MaximumValue).GetAsLong();
      if(Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.ValidationRegEx).IsNull == false)
        Entity.ValidationRegEx = Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.ValidationRegEx).GetAsString();
      if(Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.DefaultValue).IsNull == false)
        Entity.DefaultValue = Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.DefaultValue).GetAsInteger();
      if(Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.EmptyContent).IsNull == false)
        Entity.EmptyContent = Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.EmptyContent).GetAsString();
      if(Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.ValidationErrorMessage).IsNull == false)
        Entity.ValidationErrorMessage = Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.ValidationErrorMessage).GetAsString();
      if(Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.InsertName).IsNull == false)
        Entity.InsertName = Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.InsertName).GetAsString();
      if(Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.InsertDate).IsNull == false)
        Entity.InsertDate = Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.InsertDate).GetAsDateTimeOffset();
      if(Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.UpdateName).IsNull == false)
        Entity.UpdateName = Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.UpdateName).GetAsString();
      if(Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.UpdateDate).IsNull == false)
        Entity.UpdateDate = Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.UpdateDate).GetAsDateTimeOffset();
      if(Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.ConcurrencyValue).IsNull == false)
        Entity.ConcurrencyValue = Properties.GetByName(UserDefinedNumberPropertyRulesPDSAValidator.ColumnNames.ConcurrencyValue).GetAsShort();
    }
    #endregion
    
    #region ColumnNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the UserDefinedNumberPropertyRulesPDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ColumnNames
    {
    /// <summary>
    /// Returns 'UserDefinedPropertyUid'
    /// </summary>
    public static string UserDefinedPropertyUid = "UserDefinedPropertyUid";
    /// <summary>
    /// Returns 'IsRequired'
    /// </summary>
    public static string IsRequired = "IsRequired";
    /// <summary>
    /// Returns 'MinimumValue'
    /// </summary>
    public static string MinimumValue = "MinimumValue";
    /// <summary>
    /// Returns 'MaximumValue'
    /// </summary>
    public static string MaximumValue = "MaximumValue";
    /// <summary>
    /// Returns 'ValidationRegEx'
    /// </summary>
    public static string ValidationRegEx = "ValidationRegEx";
    /// <summary>
    /// Returns 'DefaultValue'
    /// </summary>
    public static string DefaultValue = "DefaultValue";
    /// <summary>
    /// Returns 'EmptyContent'
    /// </summary>
    public static string EmptyContent = "EmptyContent";
    /// <summary>
    /// Returns 'ValidationErrorMessage'
    /// </summary>
    public static string ValidationErrorMessage = "ValidationErrorMessage";
    /// <summary>
    /// Returns 'InsertName'
    /// </summary>
    public static string InsertName = "InsertName";
    /// <summary>
    /// Returns 'InsertDate'
    /// </summary>
    public static string InsertDate = "InsertDate";
    /// <summary>
    /// Returns 'UpdateName'
    /// </summary>
    public static string UpdateName = "UpdateName";
    /// <summary>
    /// Returns 'UpdateDate'
    /// </summary>
    public static string UpdateDate = "UpdateDate";
    /// <summary>
    /// Returns 'ConcurrencyValue'
    /// </summary>
    public static string ConcurrencyValue = "ConcurrencyValue";
    }
    #endregion
  }
}
