using System;

using PDSA.Validation;

using GalaxySMS.EntityLayer;

namespace GalaxySMS.ValidationLayer
{
  /// <summary>
  /// Used to validate all properties of the AcknowledgedAlarmsWithResponsesPDSA class.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public partial class AcknowledgedAlarmsWithResponsesPDSAValidator : PDSAValidatorBase
  {
    #region Public Entity Property
    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    private AcknowledgedAlarmsWithResponsesPDSA _Entity = null;

    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    public new AcknowledgedAlarmsWithResponsesPDSA Entity
    {
      get { return _Entity; }
      set
      {
        _Entity = value;
        base.Entity = value;
      }
    }
    #endregion
    
    #region Clone Entity Class
    /// <summary>
    /// Clones the current AcknowledgedAlarmsWithResponsesPDSA
    /// </summary>
    /// <returns>A cloned AcknowledgedAlarmsWithResponsesPDSA object</returns>
    public AcknowledgedAlarmsWithResponsesPDSA CloneEntity()
    {
      return CloneEntity(this.Entity);
    }
    
    /// <summary>
    /// Clones the passed in AcknowledgedAlarmsWithResponsesPDSA
    /// </summary>
    /// <param name="entityToClone">The AcknowledgedAlarmsWithResponsesPDSA entity to clone</param>
    /// <returns>A cloned AcknowledgedAlarmsWithResponsesPDSA object</returns>
    public AcknowledgedAlarmsWithResponsesPDSA CloneEntity(AcknowledgedAlarmsWithResponsesPDSA entityToClone)
    {
      AcknowledgedAlarmsWithResponsesPDSA newEntity = new AcknowledgedAlarmsWithResponsesPDSA();

      newEntity.ActivityEventUid = entityToClone.ActivityEventUid;
      newEntity.ClusterGroupId = entityToClone.ClusterGroupId;
      newEntity.ClusterNumber = entityToClone.ClusterNumber;
      newEntity.PanelNumber = entityToClone.PanelNumber;
      newEntity.CpuId = entityToClone.CpuId;
      newEntity.BoardNumber = entityToClone.BoardNumber;
      newEntity.SectionNumber = entityToClone.SectionNumber;
      newEntity.ModuleNumber = entityToClone.ModuleNumber;
      newEntity.NodeNumber = entityToClone.NodeNumber;
      newEntity.CpuModel = entityToClone.CpuModel;
      newEntity.DateTime_x = entityToClone.DateTime_x;
      newEntity.BufferIndex = entityToClone.BufferIndex;
      newEntity.PanelActivityType = entityToClone.PanelActivityType;
      newEntity.InputOutputGroupNumber = entityToClone.InputOutputGroupNumber;
      newEntity.MultiFactorMode = entityToClone.MultiFactorMode;
      newEntity.DeviceDescription = entityToClone.DeviceDescription;
      newEntity.EventDescription = entityToClone.EventDescription;
      newEntity.DeviceEntityId = entityToClone.DeviceEntityId;
      newEntity.DeviceUid = entityToClone.DeviceUid;
      newEntity.CpuUid = entityToClone.CpuUid;
      newEntity.ClusterName = entityToClone.ClusterName;
      newEntity.IsAlarmEvent = entityToClone.IsAlarmEvent;
      newEntity.AlarmPriority = entityToClone.AlarmPriority;
      newEntity.Instructions = entityToClone.Instructions;
      newEntity.ResponseRequired = entityToClone.ResponseRequired;
      newEntity.InstructionsNoteUid = entityToClone.InstructionsNoteUid;
      newEntity.AudioBinaryResourceUid = entityToClone.AudioBinaryResourceUid;
      newEntity.RawData = entityToClone.RawData;
      newEntity.Color = entityToClone.Color;
      newEntity.PersonUid = entityToClone.PersonUid;
      newEntity.CredentialUid = entityToClone.CredentialUid;
      newEntity.ColorHex = entityToClone.ColorHex;
      newEntity.PersonDescription = entityToClone.PersonDescription;
      newEntity.CredentialDescription = entityToClone.CredentialDescription;
      newEntity.Trace = entityToClone.Trace;
      newEntity.AccessPortalAlarmEventAcknowledgmentUid = entityToClone.AccessPortalAlarmEventAcknowledgmentUid;
      newEntity.Response = entityToClone.Response;
      newEntity.AckedByUserId = entityToClone.AckedByUserId;
      newEntity.AckedByUserDisplayName = entityToClone.AckedByUserDisplayName;
      newEntity.AckedDateTime = entityToClone.AckedDateTime;
      newEntity.AckedUpdatedDateTime = entityToClone.AckedUpdatedDateTime;

      return newEntity;
    }
    #endregion

    #region CreateProperties Method
    /// <summary>
    /// Creates the collection of PDSAProperty objects. These are used to control validation and null handling.
    /// </summary>
    /// <returns>A collection of PDSAProperty objects</returns>
    public override PDSAProperties CreateProperties()
    {
      PDSAProperties props = new PDSAProperties();
      
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.ActivityEventUid, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_ActivityEventUid_Header", "Activity Event Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_ActivityEventUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.ClusterGroupId, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_ClusterGroupId_Header", "Cluster Group Id"), false, typeof(int), 10, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_ClusterGroupId_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.ClusterNumber, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_ClusterNumber_Header", "Cluster Number"), false, typeof(int), 10, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_ClusterNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("0"), Convert.ToInt32("65565"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.PanelNumber, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_PanelNumber_Header", "Panel Number"), false, typeof(int), 10, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_PanelNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("0"), Convert.ToInt32("65565"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.CpuId, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_CpuId_Header", "Cpu Id"), false, typeof(short), 5, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_CpuId_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.BoardNumber, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_BoardNumber_Header", "Board Number"), false, typeof(int), 10, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_BoardNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.SectionNumber, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_SectionNumber_Header", "Section Number"), false, typeof(int), 10, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_SectionNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.ModuleNumber, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_ModuleNumber_Header", "Module Number"), false, typeof(int), 10, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_ModuleNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.NodeNumber, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_NodeNumber_Header", "Node Number"), false, typeof(int), 10, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_NodeNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.CpuModel, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_CpuModel_Header", "Cpu Model"), false, typeof(int), 10, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_CpuModel_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.DateTime_x, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_DateTime_x_Header", "Date Time"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_DateTime_x_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.BufferIndex, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_BufferIndex_Header", "Buffer Index"), false, typeof(int), 10, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_BufferIndex_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.PanelActivityType, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_PanelActivityType_Header", "Panel Activity Type"), false, typeof(string), 50, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_PanelActivityType_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.InputOutputGroupNumber, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_InputOutputGroupNumber_Header", "Input Output Group Number"), false, typeof(int), 10, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_InputOutputGroupNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.MultiFactorMode, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_MultiFactorMode_Header", "Multi Factor Mode"), false, typeof(int), 10, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_MultiFactorMode_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.DeviceDescription, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_DeviceDescription_Header", "Device Description"), false, typeof(string), 65, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_DeviceDescription_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.EventDescription, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_EventDescription_Header", "Event Description"), false, typeof(string), 65, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_EventDescription_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.DeviceEntityId, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_DeviceEntityId_Header", "Device Entity Id"), false, typeof(Guid), -1, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_DeviceEntityId_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.DeviceUid, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_DeviceUid_Header", "Device Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_DeviceUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.CpuUid, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_CpuUid_Header", "Cpu Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_CpuUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.ClusterName, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_ClusterName_Header", "Cluster Name"), false, typeof(string), 65, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_ClusterName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.IsAlarmEvent, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_IsAlarmEvent_Header", "Is Alarm Event"), false, typeof(int), 10, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_IsAlarmEvent_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.AlarmPriority, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_AlarmPriority_Header", "Alarm Priority"), false, typeof(int), 10, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_AlarmPriority_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.Instructions, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_Instructions_Header", "Instructions"), false, typeof(string), 1073741823, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_Instructions_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.ResponseRequired, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_ResponseRequired_Header", "Response Required"), false, typeof(bool), -1, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_ResponseRequired_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.InstructionsNoteUid, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_InstructionsNoteUid_Header", "Instructions Note Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_InstructionsNoteUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.AudioBinaryResourceUid, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_AudioBinaryResourceUid_Header", "Audio Binary Resource Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_AudioBinaryResourceUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.RawData, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_RawData_Header", "Raw Data"), false, typeof(int), 10, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_RawData_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.Color, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_Color_Header", "Color"), false, typeof(int), 10, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_Color_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("-2147483648"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.PersonUid, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_PersonUid_Header", "Person Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_PersonUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.CredentialUid, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_CredentialUid_Header", "Credential Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_CredentialUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.ColorHex, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_ColorHex_Header", "Color Hex"), false, typeof(string), 20, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_ColorHex_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.PersonDescription, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_PersonDescription_Header", "Person Description"), false, typeof(string), 131, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_PersonDescription_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.CredentialDescription, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_CredentialDescription_Header", "Credential Description"), false, typeof(string), 65, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_CredentialDescription_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.Trace, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_Trace_Header", "Trace"), false, typeof(bool), 10, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_Trace_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.AccessPortalAlarmEventAcknowledgmentUid, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_AccessPortalAlarmEventAcknowledgmentUid_Header", "Access Portal Alarm Event Acknowledgment Uid"), false, typeof(Guid), -1, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_AccessPortalAlarmEventAcknowledgmentUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.Response, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_Response_Header", "Response"), false, typeof(string), 1000, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_Response_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.AckedByUserId, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_AckedByUserId_Header", "Acked By User Id"), false, typeof(Guid), -1, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_AckedByUserId_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.AckedByUserDisplayName, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_AckedByUserDisplayName_Header", "Acked By User Display Name"), false, typeof(string), 100, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_AckedByUserDisplayName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.AckedDateTime, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_AckedDateTime_Header", "Acked Date Time"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_AckedDateTime_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.AckedUpdatedDateTime, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_AckedUpdatedDateTime_Header", "Acked Updated Date Time"), false, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_AcknowledgedAlarmsWithResponsesPDSA_AckedUpdatedDateTime_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      
      return props;
    }
    #endregion

    #region Initialize Entity
    /// <summary>
    /// This method is called from the CreateNewEntity Method. All the properties for the Entity are set to default values here by the code generator.
    /// </summary>
    protected override void InitializeEntity()
    {
      Entity.ActivityEventUid = Guid.Empty;
      Entity.ClusterGroupId = 0;
      Entity.ClusterNumber = 0;
      Entity.PanelNumber = 0;
      Entity.CpuId = 0;
      Entity.BoardNumber = 0;
      Entity.SectionNumber = 0;
      Entity.ModuleNumber = 0;
      Entity.NodeNumber = 0;
      Entity.CpuModel = 0;
      Entity.DateTime_x = DateTimeOffset.Now;
      Entity.BufferIndex = 0;
      Entity.PanelActivityType = string.Empty;
      Entity.InputOutputGroupNumber = 0;
      Entity.MultiFactorMode = 0;
      Entity.DeviceDescription = string.Empty;
      Entity.EventDescription = string.Empty;
      Entity.DeviceEntityId = Guid.Empty;
      Entity.DeviceUid = Guid.Empty;
      Entity.CpuUid = Guid.Empty;
      Entity.ClusterName = string.Empty;
      Entity.IsAlarmEvent = 0;
      Entity.AlarmPriority = 0;
      Entity.Instructions = string.Empty;
      Entity.ResponseRequired = false;
      Entity.InstructionsNoteUid = Guid.Empty;
      Entity.AudioBinaryResourceUid = Guid.Empty;
      Entity.RawData = 0;
      Entity.Color = 0;
      Entity.PersonUid = Guid.Empty;
      Entity.CredentialUid = Guid.Empty;
      Entity.ColorHex = string.Empty;
      Entity.PersonDescription = string.Empty;
      Entity.CredentialDescription = string.Empty;
      Entity.Trace = false;
      Entity.AccessPortalAlarmEventAcknowledgmentUid = Guid.Empty;
      Entity.Response = string.Empty;
      Entity.AckedByUserId = Guid.Empty;
      Entity.AckedByUserDisplayName = string.Empty;
      Entity.AckedDateTime = DateTimeOffset.Now;
      Entity.AckedUpdatedDateTime = DateTimeOffset.Now;

      Entity.ResetAllIsDirtyProperties();
    }
    #endregion
    
    #region InitProperties Method
    /// <summary>
    /// Called by the constructor to create the PDSAProperties collection of all properties that will be validated.
    /// </summary>
    protected override void InitProperties()
    {
      // Set the Properties collection to the collection of Entity Properties
      Properties = CreateProperties();
    }
    #endregion

    #region EntityDataToProperties Method
    /// <summary>
    /// Moves the Entity class data into the Properties collection.
    /// </summary>
    protected override void EntityDataToProperties()
    {
      if (Properties == null)
        InitProperties();
      
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.ActivityEventUid).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.ActivityEventUid).Value = Entity.ActivityEventUid;
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.ClusterGroupId).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.ClusterGroupId).Value = Entity.ClusterGroupId;
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.ClusterNumber).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.ClusterNumber).Value = Entity.ClusterNumber;
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.PanelNumber).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.PanelNumber).Value = Entity.PanelNumber;
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.CpuId).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.CpuId).Value = Entity.CpuId;
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.BoardNumber).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.BoardNumber).Value = Entity.BoardNumber;
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.SectionNumber).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.SectionNumber).Value = Entity.SectionNumber;
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.ModuleNumber).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.ModuleNumber).Value = Entity.ModuleNumber;
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.NodeNumber).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.NodeNumber).Value = Entity.NodeNumber;
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.CpuModel).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.CpuModel).Value = Entity.CpuModel;
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.DateTime_x).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.DateTime_x).Value = Entity.DateTime_x;
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.BufferIndex).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.BufferIndex).Value = Entity.BufferIndex;
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.PanelActivityType).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.PanelActivityType).Value = Entity.PanelActivityType;
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.InputOutputGroupNumber).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.InputOutputGroupNumber).Value = Entity.InputOutputGroupNumber;
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.MultiFactorMode).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.MultiFactorMode).Value = Entity.MultiFactorMode;
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.DeviceDescription).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.DeviceDescription).Value = Entity.DeviceDescription;
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.EventDescription).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.EventDescription).Value = Entity.EventDescription;
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.DeviceEntityId).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.DeviceEntityId).Value = Entity.DeviceEntityId;
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.DeviceUid).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.DeviceUid).Value = Entity.DeviceUid;
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.CpuUid).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.CpuUid).Value = Entity.CpuUid;
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.ClusterName).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.ClusterName).Value = Entity.ClusterName;
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.IsAlarmEvent).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.IsAlarmEvent).Value = Entity.IsAlarmEvent;
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.AlarmPriority).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.AlarmPriority).Value = Entity.AlarmPriority;
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.Instructions).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.Instructions).Value = Entity.Instructions;
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.ResponseRequired).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.ResponseRequired).Value = Entity.ResponseRequired;
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.InstructionsNoteUid).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.InstructionsNoteUid).Value = Entity.InstructionsNoteUid;
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.AudioBinaryResourceUid).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.AudioBinaryResourceUid).Value = Entity.AudioBinaryResourceUid;
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.RawData).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.RawData).Value = Entity.RawData;
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.Color).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.Color).Value = Entity.Color;
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.PersonUid).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.PersonUid).Value = Entity.PersonUid;
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.CredentialUid).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.CredentialUid).Value = Entity.CredentialUid;
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.ColorHex).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.ColorHex).Value = Entity.ColorHex;
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.PersonDescription).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.PersonDescription).Value = Entity.PersonDescription;
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.CredentialDescription).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.CredentialDescription).Value = Entity.CredentialDescription;
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.Trace).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.Trace).Value = Entity.Trace;
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.AccessPortalAlarmEventAcknowledgmentUid).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.AccessPortalAlarmEventAcknowledgmentUid).Value = Entity.AccessPortalAlarmEventAcknowledgmentUid;
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.Response).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.Response).Value = Entity.Response;
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.AckedByUserId).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.AckedByUserId).Value = Entity.AckedByUserId;
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.AckedByUserDisplayName).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.AckedByUserDisplayName).Value = Entity.AckedByUserDisplayName;
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.AckedDateTime).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.AckedDateTime).Value = Entity.AckedDateTime;
      if(!Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.AckedUpdatedDateTime).SetAsNull)
        Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.AckedUpdatedDateTime).Value = Entity.AckedUpdatedDateTime;
    }

    /// <summary>
    /// Moves the Properties collection objects into the Entity properties
    /// </summary>
    protected override void PropertiesToEntityData()
    {
      if (Properties == null)
        InitProperties();

      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.ActivityEventUid).IsNull == false)
        Entity.ActivityEventUid = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.ActivityEventUid).GetAsGuid();
      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.ClusterGroupId).IsNull == false)
        Entity.ClusterGroupId = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.ClusterGroupId).GetAsInteger();
      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.ClusterNumber).IsNull == false)
        Entity.ClusterNumber = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.ClusterNumber).GetAsInteger();
      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.PanelNumber).IsNull == false)
        Entity.PanelNumber = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.PanelNumber).GetAsInteger();
      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.CpuId).IsNull == false)
        Entity.CpuId = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.CpuId).GetAsShort();
      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.BoardNumber).IsNull == false)
        Entity.BoardNumber = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.BoardNumber).GetAsInteger();
      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.SectionNumber).IsNull == false)
        Entity.SectionNumber = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.SectionNumber).GetAsInteger();
      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.ModuleNumber).IsNull == false)
        Entity.ModuleNumber = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.ModuleNumber).GetAsInteger();
      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.NodeNumber).IsNull == false)
        Entity.NodeNumber = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.NodeNumber).GetAsInteger();
      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.CpuModel).IsNull == false)
        Entity.CpuModel = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.CpuModel).GetAsInteger();
      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.DateTime_x).IsNull == false)
        Entity.DateTime_x = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.DateTime_x).GetAsDateTimeOffset();
      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.BufferIndex).IsNull == false)
        Entity.BufferIndex = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.BufferIndex).GetAsInteger();
      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.PanelActivityType).IsNull == false)
        Entity.PanelActivityType = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.PanelActivityType).GetAsString();
      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.InputOutputGroupNumber).IsNull == false)
        Entity.InputOutputGroupNumber = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.InputOutputGroupNumber).GetAsInteger();
      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.MultiFactorMode).IsNull == false)
        Entity.MultiFactorMode = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.MultiFactorMode).GetAsInteger();
      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.DeviceDescription).IsNull == false)
        Entity.DeviceDescription = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.DeviceDescription).GetAsString();
      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.EventDescription).IsNull == false)
        Entity.EventDescription = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.EventDescription).GetAsString();
      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.DeviceEntityId).IsNull == false)
        Entity.DeviceEntityId = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.DeviceEntityId).GetAsGuid();
      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.DeviceUid).IsNull == false)
        Entity.DeviceUid = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.DeviceUid).GetAsGuid();
      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.CpuUid).IsNull == false)
        Entity.CpuUid = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.CpuUid).GetAsGuid();
      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.ClusterName).IsNull == false)
        Entity.ClusterName = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.ClusterName).GetAsString();
      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.IsAlarmEvent).IsNull == false)
        Entity.IsAlarmEvent = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.IsAlarmEvent).GetAsInteger();
      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.AlarmPriority).IsNull == false)
        Entity.AlarmPriority = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.AlarmPriority).GetAsInteger();
      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.Instructions).IsNull == false)
        Entity.Instructions = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.Instructions).GetAsString();
      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.ResponseRequired).IsNull == false)
        Entity.ResponseRequired = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.ResponseRequired).GetAsBool();
      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.InstructionsNoteUid).IsNull == false)
        Entity.InstructionsNoteUid = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.InstructionsNoteUid).GetAsGuid();
      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.AudioBinaryResourceUid).IsNull == false)
        Entity.AudioBinaryResourceUid = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.AudioBinaryResourceUid).GetAsGuid();
      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.RawData).IsNull == false)
        Entity.RawData = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.RawData).GetAsInteger();
      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.Color).IsNull == false)
        Entity.Color = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.Color).GetAsInteger();
      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.PersonUid).IsNull == false)
        Entity.PersonUid = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.PersonUid).GetAsGuid();
      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.CredentialUid).IsNull == false)
        Entity.CredentialUid = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.CredentialUid).GetAsGuid();
      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.ColorHex).IsNull == false)
        Entity.ColorHex = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.ColorHex).GetAsString();
      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.PersonDescription).IsNull == false)
        Entity.PersonDescription = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.PersonDescription).GetAsString();
      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.CredentialDescription).IsNull == false)
        Entity.CredentialDescription = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.CredentialDescription).GetAsString();
      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.Trace).IsNull == false)
        Entity.Trace = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.Trace).GetAsBool();
      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.AccessPortalAlarmEventAcknowledgmentUid).IsNull == false)
        Entity.AccessPortalAlarmEventAcknowledgmentUid = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.AccessPortalAlarmEventAcknowledgmentUid).GetAsGuid();
      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.Response).IsNull == false)
        Entity.Response = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.Response).GetAsString();
      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.AckedByUserId).IsNull == false)
        Entity.AckedByUserId = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.AckedByUserId).GetAsGuid();
      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.AckedByUserDisplayName).IsNull == false)
        Entity.AckedByUserDisplayName = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.AckedByUserDisplayName).GetAsString();
      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.AckedDateTime).IsNull == false)
        Entity.AckedDateTime = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.AckedDateTime).GetAsDateTimeOffset();
      if(Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.AckedUpdatedDateTime).IsNull == false)
        Entity.AckedUpdatedDateTime = Properties.GetByName(AcknowledgedAlarmsWithResponsesPDSAValidator.ColumnNames.AckedUpdatedDateTime).GetAsDateTimeOffset();
    }
    #endregion
    
    #region ColumnNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the AcknowledgedAlarmsWithResponsesPDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ColumnNames
    {
    /// <summary>
    /// Returns 'ActivityEventUid'
    /// </summary>
    public static string ActivityEventUid = "ActivityEventUid";
    /// <summary>
    /// Returns 'ClusterGroupId'
    /// </summary>
    public static string ClusterGroupId = "ClusterGroupId";
    /// <summary>
    /// Returns 'ClusterNumber'
    /// </summary>
    public static string ClusterNumber = "ClusterNumber";
    /// <summary>
    /// Returns 'PanelNumber'
    /// </summary>
    public static string PanelNumber = "PanelNumber";
    /// <summary>
    /// Returns 'CpuId'
    /// </summary>
    public static string CpuId = "CpuId";
    /// <summary>
    /// Returns 'BoardNumber'
    /// </summary>
    public static string BoardNumber = "BoardNumber";
    /// <summary>
    /// Returns 'SectionNumber'
    /// </summary>
    public static string SectionNumber = "SectionNumber";
    /// <summary>
    /// Returns 'ModuleNumber'
    /// </summary>
    public static string ModuleNumber = "ModuleNumber";
    /// <summary>
    /// Returns 'NodeNumber'
    /// </summary>
    public static string NodeNumber = "NodeNumber";
    /// <summary>
    /// Returns 'CpuModel'
    /// </summary>
    public static string CpuModel = "CpuModel";
    /// <summary>
    /// Returns 'DateTimeOffset'
    /// </summary>
    public static string DateTime_x = "DateTimeOffset";
    /// <summary>
    /// Returns 'BufferIndex'
    /// </summary>
    public static string BufferIndex = "BufferIndex";
    /// <summary>
    /// Returns 'PanelActivityType'
    /// </summary>
    public static string PanelActivityType = "PanelActivityType";
    /// <summary>
    /// Returns 'InputOutputGroupNumber'
    /// </summary>
    public static string InputOutputGroupNumber = "InputOutputGroupNumber";
    /// <summary>
    /// Returns 'MultiFactorMode'
    /// </summary>
    public static string MultiFactorMode = "MultiFactorMode";
    /// <summary>
    /// Returns 'DeviceDescription'
    /// </summary>
    public static string DeviceDescription = "DeviceDescription";
    /// <summary>
    /// Returns 'EventDescription'
    /// </summary>
    public static string EventDescription = "EventDescription";
    /// <summary>
    /// Returns 'DeviceEntityId'
    /// </summary>
    public static string DeviceEntityId = "DeviceEntityId";
    /// <summary>
    /// Returns 'DeviceUid'
    /// </summary>
    public static string DeviceUid = "DeviceUid";
    /// <summary>
    /// Returns 'CpuUid'
    /// </summary>
    public static string CpuUid = "CpuUid";
    /// <summary>
    /// Returns 'ClusterName'
    /// </summary>
    public static string ClusterName = "ClusterName";
    /// <summary>
    /// Returns 'IsAlarmEvent'
    /// </summary>
    public static string IsAlarmEvent = "IsAlarmEvent";
    /// <summary>
    /// Returns 'AlarmPriority'
    /// </summary>
    public static string AlarmPriority = "AlarmPriority";
    /// <summary>
    /// Returns 'Instructions'
    /// </summary>
    public static string Instructions = "Instructions";
    /// <summary>
    /// Returns 'ResponseRequired'
    /// </summary>
    public static string ResponseRequired = "ResponseRequired";
    /// <summary>
    /// Returns 'InstructionsNoteUid'
    /// </summary>
    public static string InstructionsNoteUid = "InstructionsNoteUid";
    /// <summary>
    /// Returns 'AudioBinaryResourceUid'
    /// </summary>
    public static string AudioBinaryResourceUid = "AudioBinaryResourceUid";
    /// <summary>
    /// Returns 'RawData'
    /// </summary>
    public static string RawData = "RawData";
    /// <summary>
    /// Returns 'Color'
    /// </summary>
    public static string Color = "Color";
    /// <summary>
    /// Returns 'PersonUid'
    /// </summary>
    public static string PersonUid = "PersonUid";
    /// <summary>
    /// Returns 'CredentialUid'
    /// </summary>
    public static string CredentialUid = "CredentialUid";
    /// <summary>
    /// Returns 'ColorHex'
    /// </summary>
    public static string ColorHex = "ColorHex";
    /// <summary>
    /// Returns 'PersonDescription'
    /// </summary>
    public static string PersonDescription = "PersonDescription";
    /// <summary>
    /// Returns 'CredentialDescription'
    /// </summary>
    public static string CredentialDescription = "CredentialDescription";
    /// <summary>
    /// Returns 'Trace'
    /// </summary>
    public static string Trace = "Trace";
    /// <summary>
    /// Returns 'AccessPortalAlarmEventAcknowledgmentUid'
    /// </summary>
    public static string AccessPortalAlarmEventAcknowledgmentUid = "AccessPortalAlarmEventAcknowledgmentUid";
    /// <summary>
    /// Returns 'Response'
    /// </summary>
    public static string Response = "Response";
    /// <summary>
    /// Returns 'AckedByUserId'
    /// </summary>
    public static string AckedByUserId = "AckedByUserId";
    /// <summary>
    /// Returns 'AckedByUserDisplayName'
    /// </summary>
    public static string AckedByUserDisplayName = "AckedByUserDisplayName";
    /// <summary>
    /// Returns 'AckedDateTime'
    /// </summary>
    public static string AckedDateTime = "AckedDateTime";
    /// <summary>
    /// Returns 'AckedUpdatedDateTime'
    /// </summary>
    public static string AckedUpdatedDateTime = "AckedUpdatedDateTime";
    }
    #endregion
  }
}
