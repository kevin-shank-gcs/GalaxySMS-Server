using System;

using PDSA.Common;
using PDSA.Validation;

using GalaxySMS.EntityLayer;

namespace GalaxySMS.ValidationLayer
{
  /// <summary>
  /// Used to validate all properties of the DateTypePDSA class.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You should NOT modify this class as it is intended to be re-generated.
  /// </summary>
  public partial class DateTypePDSAValidator : PDSAValidatorBase
  {
    #region Public Entity Property
    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    private DateTypePDSA _Entity = null;

    /// <summary>
    /// Get/Set the Entity class with the properties to validate
    /// </summary>
    public new DateTypePDSA Entity
    {
      get { return _Entity; }
      set
      {
        _Entity = value;
        base.Entity = value;
      }
    }
    #endregion
    
    #region Clone Entity Class
    /// <summary>
    /// Clones the current DateTypePDSA
    /// </summary>
    /// <returns>A cloned DateTypePDSA object</returns>
    public DateTypePDSA CloneEntity()
    {
      return CloneEntity(this.Entity);
    }
    
    /// <summary>
    /// Clones the passed in DateTypePDSA
    /// </summary>
    /// <param name="entityToClone">The DateTypePDSA entity to clone</param>
    /// <returns>A cloned DateTypePDSA object</returns>
    public DateTypePDSA CloneEntity(DateTypePDSA entityToClone)
    {
      DateTypePDSA newEntity = new DateTypePDSA();

      newEntity.DateTypeUid = entityToClone.DateTypeUid;
      newEntity.EntityId = entityToClone.EntityId;
      newEntity.DayTypeUid = entityToClone.DayTypeUid;
      newEntity.Date = entityToClone.Date;
      newEntity.InsertName = entityToClone.InsertName;
      newEntity.InsertDate = entityToClone.InsertDate;
      newEntity.UpdateName = entityToClone.UpdateName;
      newEntity.UpdateDate = entityToClone.UpdateDate;
      newEntity.ConcurrencyValue = entityToClone.ConcurrencyValue;
      newEntity.Title = entityToClone.Title;
      newEntity.StartDate = entityToClone.StartDate;
      newEntity.EndDate = entityToClone.EndDate;
      newEntity.PageSize = entityToClone.PageSize;
      newEntity.PageNumber = entityToClone.PageNumber;
      newEntity.TotalRowCount = entityToClone.TotalRowCount;
      newEntity.SortColumn = entityToClone.SortColumn;
      newEntity.DescendingOrder = entityToClone.DescendingOrder;

      return newEntity;
    }
    #endregion

    #region CreateProperties Method
    /// <summary>
    /// Creates the collection of PDSAProperty objects. These are used to control validation and null handling.
    /// </summary>
    /// <returns>A collection of PDSAProperty objects</returns>
    public override PDSAProperties CreateProperties()
    {
      PDSAProperties props = new PDSAProperties();
      
      props.Add(PDSAProperty.Create(DateTypePDSAValidator.ColumnNames.DateTypeUid, GetResourceMessage("GCS_DateTypePDSA_DateTypeUid_Header", "Date Type Uid"), true, typeof(Guid), -1, GetResourceMessage("GCS_DateTypePDSA_DateTypeUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(DateTypePDSAValidator.ColumnNames.EntityId, GetResourceMessage("GCS_DateTypePDSA_EntityId_Header", "Entity Id"), true, typeof(Guid), -1, GetResourceMessage("GCS_DateTypePDSA_EntityId_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(DateTypePDSAValidator.ColumnNames.DayTypeUid, GetResourceMessage("GCS_DateTypePDSA_DayTypeUid_Header", "Day Type Uid"), true, typeof(Guid), -1, GetResourceMessage("GCS_DateTypePDSA_DayTypeUid_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, Guid.Empty, @"", ""));
      props.Add(PDSAProperty.Create(DateTypePDSAValidator.ColumnNames.Date, GetResourceMessage("GCS_DateTypePDSA_Date_Header", "Date"), true, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_DateTypePDSA_Date_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(DateTypePDSAValidator.ColumnNames.InsertName, GetResourceMessage("GCS_DateTypePDSA_InsertName_Header", "Insert Name"), true, typeof(string), 100, GetResourceMessage("GCS_DateTypePDSA_InsertName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(DateTypePDSAValidator.ColumnNames.InsertDate, GetResourceMessage("GCS_DateTypePDSA_InsertDate_Header", "Insert Date"), true, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_DateTypePDSA_InsertDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(DateTypePDSAValidator.ColumnNames.UpdateName, GetResourceMessage("GCS_DateTypePDSA_UpdateName_Header", "Update Name"), true, typeof(string), 100, GetResourceMessage("GCS_DateTypePDSA_UpdateName_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(DateTypePDSAValidator.ColumnNames.UpdateDate, GetResourceMessage("GCS_DateTypePDSA_UpdateDate_Header", "Update Date"), true, typeof(DateTimeOffset), -1, GetResourceMessage("GCS_DateTypePDSA_UpdateDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(DateTypePDSAValidator.ColumnNames.ConcurrencyValue, GetResourceMessage("GCS_DateTypePDSA_ConcurrencyValue_Header", "Concurrency Value"), true, typeof(short), 5, GetResourceMessage("GCS_DateTypePDSA_ConcurrencyValue_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt16("-32768"), Convert.ToInt16("32767"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(DateTypePDSAValidator.ColumnNames.Title, GetResourceMessage("GCS_DateTypePDSA_Title_Header", "Title"), false, typeof(string), 65, GetResourceMessage("GCS_DateTypePDSA_Title_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(DateTypePDSAValidator.ColumnNames.StartDate, GetResourceMessage("GCS_DateTypePDSA_StartDate_Header", "Start Date"), false, typeof(DateTimeOffset), 2147483647, GetResourceMessage("GCS_DateTypePDSA_StartDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(DateTypePDSAValidator.ColumnNames.EndDate, GetResourceMessage("GCS_DateTypePDSA_EndDate_Header", "End Date"), false, typeof(DateTimeOffset), 2147483647, GetResourceMessage("GCS_DateTypePDSA_EndDate_Req", PDSAValidationMessages.MustBeFilledIn), DateTimeOffset.MinValue, DateTimeOffset.MaxValue, 0, DateTimeOffset.Now, @"", ""));
      props.Add(PDSAProperty.Create(DateTypePDSAValidator.ColumnNames.PageSize, GetResourceMessage("GCS_DateTypePDSA_PageSize_Header", "Page Size"), false, typeof(int), 2147483647, GetResourceMessage("GCS_DateTypePDSA_PageSize_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("0"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(DateTypePDSAValidator.ColumnNames.PageNumber, GetResourceMessage("GCS_DateTypePDSA_PageNumber_Header", "Page Number"), false, typeof(int), 2147483647, GetResourceMessage("GCS_DateTypePDSA_PageNumber_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("0"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(DateTypePDSAValidator.ColumnNames.TotalRowCount, GetResourceMessage("GCS_DateTypePDSA_TotalRowCount_Header", "Total Row Count"), false, typeof(int), 2147483647, GetResourceMessage("GCS_DateTypePDSA_TotalRowCount_Req", PDSAValidationMessages.MustBeFilledIn), Convert.ToInt32("0"), Convert.ToInt32("2147483647"), 0, 0, @"", ""));
      props.Add(PDSAProperty.Create(DateTypePDSAValidator.ColumnNames.SortColumn, GetResourceMessage("GCS_DateTypePDSA_SortColumn_Header", "Sort Column"), false, typeof(string), 2147483647, GetResourceMessage("GCS_DateTypePDSA_SortColumn_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, string.Empty, @"", ""));
      props.Add(PDSAProperty.Create(DateTypePDSAValidator.ColumnNames.DescendingOrder, GetResourceMessage("GCS_DateTypePDSA_DescendingOrder_Header", "Descending Order"), false, typeof(bool), 2147483647, GetResourceMessage("GCS_DateTypePDSA_DescendingOrder_Req", PDSAValidationMessages.MustBeFilledIn), null, null, 0, false, @"", ""));
      
      return props;
    }
    #endregion

    #region Initialize Entity
    /// <summary>
    /// This method is called from the CreateNewEntity Method. All the properties for the Entity are set to default values here by the code generator.
    /// </summary>
    protected override void InitializeEntity()
    {
      Entity.DateTypeUid = Guid.Empty;
      Entity.EntityId = Guid.Empty;
      Entity.DayTypeUid = Guid.Empty;
      Entity.Date = DateTime.Now;
      Entity.InsertName = string.Empty;
      Entity.InsertDate = DateTimeOffset.Now;
      Entity.UpdateName = string.Empty;
      Entity.UpdateDate = DateTimeOffset.Now;
      Entity.ConcurrencyValue = 0;
      Entity.Title = string.Empty;
      Entity.StartDate = DateTime.Now;
      Entity.EndDate = DateTime.Now;
      Entity.PageSize = 0;
      Entity.PageNumber = 0;
      Entity.TotalRowCount = 0;
      Entity.SortColumn = string.Empty;
      Entity.DescendingOrder = false;

      Entity.ResetAllIsDirtyProperties();
    }
    #endregion
    
    #region InitProperties Method
    /// <summary>
    /// Called by the constructor to create the PDSAProperties collection of all properties that will be validated.
    /// </summary>
    protected override void InitProperties()
    {
      // Set the Properties collection to the collection of Entity Properties
      Properties = CreateProperties();
    }
    #endregion

    #region EntityDataToProperties Method
    /// <summary>
    /// Moves the Entity class data into the Properties collection.
    /// </summary>
    protected override void EntityDataToProperties()
    {
      if (Properties == null)
        InitProperties();
      
      if(!Properties.GetByName(DateTypePDSAValidator.ColumnNames.DateTypeUid).SetAsNull)
        Properties.GetByName(DateTypePDSAValidator.ColumnNames.DateTypeUid).Value = Entity.DateTypeUid;
      if(!Properties.GetByName(DateTypePDSAValidator.ColumnNames.EntityId).SetAsNull)
        Properties.GetByName(DateTypePDSAValidator.ColumnNames.EntityId).Value = Entity.EntityId;
      if(!Properties.GetByName(DateTypePDSAValidator.ColumnNames.DayTypeUid).SetAsNull)
        Properties.GetByName(DateTypePDSAValidator.ColumnNames.DayTypeUid).Value = Entity.DayTypeUid;
      if(!Properties.GetByName(DateTypePDSAValidator.ColumnNames.Date).SetAsNull)
        Properties.GetByName(DateTypePDSAValidator.ColumnNames.Date).Value = Entity.Date;
      if(!Properties.GetByName(DateTypePDSAValidator.ColumnNames.InsertName).SetAsNull)
        Properties.GetByName(DateTypePDSAValidator.ColumnNames.InsertName).Value = Entity.InsertName;
      if(!Properties.GetByName(DateTypePDSAValidator.ColumnNames.InsertDate).SetAsNull)
        Properties.GetByName(DateTypePDSAValidator.ColumnNames.InsertDate).Value = Entity.InsertDate;
      if(!Properties.GetByName(DateTypePDSAValidator.ColumnNames.UpdateName).SetAsNull)
        Properties.GetByName(DateTypePDSAValidator.ColumnNames.UpdateName).Value = Entity.UpdateName;
      if(!Properties.GetByName(DateTypePDSAValidator.ColumnNames.UpdateDate).SetAsNull)
        Properties.GetByName(DateTypePDSAValidator.ColumnNames.UpdateDate).Value = Entity.UpdateDate;
      if(!Properties.GetByName(DateTypePDSAValidator.ColumnNames.ConcurrencyValue).SetAsNull)
        Properties.GetByName(DateTypePDSAValidator.ColumnNames.ConcurrencyValue).Value = Entity.ConcurrencyValue;
      if(!Properties.GetByName(DateTypePDSAValidator.ColumnNames.Title).SetAsNull)
        Properties.GetByName(DateTypePDSAValidator.ColumnNames.Title).Value = Entity.Title;
      if(!Properties.GetByName(DateTypePDSAValidator.ColumnNames.StartDate).SetAsNull)
        Properties.GetByName(DateTypePDSAValidator.ColumnNames.StartDate).Value = Entity.StartDate;
      if(!Properties.GetByName(DateTypePDSAValidator.ColumnNames.EndDate).SetAsNull)
        Properties.GetByName(DateTypePDSAValidator.ColumnNames.EndDate).Value = Entity.EndDate;
      if(!Properties.GetByName(DateTypePDSAValidator.ColumnNames.PageSize).SetAsNull)
        Properties.GetByName(DateTypePDSAValidator.ColumnNames.PageSize).Value = Entity.PageSize;
      if(!Properties.GetByName(DateTypePDSAValidator.ColumnNames.PageNumber).SetAsNull)
        Properties.GetByName(DateTypePDSAValidator.ColumnNames.PageNumber).Value = Entity.PageNumber;
      if(!Properties.GetByName(DateTypePDSAValidator.ColumnNames.TotalRowCount).SetAsNull)
        Properties.GetByName(DateTypePDSAValidator.ColumnNames.TotalRowCount).Value = Entity.TotalRowCount;
      if(!Properties.GetByName(DateTypePDSAValidator.ColumnNames.SortColumn).SetAsNull)
        Properties.GetByName(DateTypePDSAValidator.ColumnNames.SortColumn).Value = Entity.SortColumn;
      if(!Properties.GetByName(DateTypePDSAValidator.ColumnNames.DescendingOrder).SetAsNull)
        Properties.GetByName(DateTypePDSAValidator.ColumnNames.DescendingOrder).Value = Entity.DescendingOrder;
    }

    /// <summary>
    /// Moves the Properties collection objects into the Entity properties
    /// </summary>
    protected override void PropertiesToEntityData()
    {
      if (Properties == null)
        InitProperties();

      if(Properties.GetByName(DateTypePDSAValidator.ColumnNames.DateTypeUid).IsNull == false)
        Entity.DateTypeUid = Properties.GetByName(DateTypePDSAValidator.ColumnNames.DateTypeUid).GetAsGuid();
      if(Properties.GetByName(DateTypePDSAValidator.ColumnNames.EntityId).IsNull == false)
        Entity.EntityId = Properties.GetByName(DateTypePDSAValidator.ColumnNames.EntityId).GetAsGuid();
      if(Properties.GetByName(DateTypePDSAValidator.ColumnNames.DayTypeUid).IsNull == false)
        Entity.DayTypeUid = Properties.GetByName(DateTypePDSAValidator.ColumnNames.DayTypeUid).GetAsGuid();
      if(Properties.GetByName(DateTypePDSAValidator.ColumnNames.Date).IsNull == false)
        Entity.Date = Properties.GetByName(DateTypePDSAValidator.ColumnNames.Date).GetAsDate();
      if(Properties.GetByName(DateTypePDSAValidator.ColumnNames.InsertName).IsNull == false)
        Entity.InsertName = Properties.GetByName(DateTypePDSAValidator.ColumnNames.InsertName).GetAsString();
      if(Properties.GetByName(DateTypePDSAValidator.ColumnNames.InsertDate).IsNull == false)
        Entity.InsertDate = Properties.GetByName(DateTypePDSAValidator.ColumnNames.InsertDate).GetAsDateTimeOffset();
      if(Properties.GetByName(DateTypePDSAValidator.ColumnNames.UpdateName).IsNull == false)
        Entity.UpdateName = Properties.GetByName(DateTypePDSAValidator.ColumnNames.UpdateName).GetAsString();
      if(Properties.GetByName(DateTypePDSAValidator.ColumnNames.UpdateDate).IsNull == false)
        Entity.UpdateDate = Properties.GetByName(DateTypePDSAValidator.ColumnNames.UpdateDate).GetAsDateTimeOffset();
      if(Properties.GetByName(DateTypePDSAValidator.ColumnNames.ConcurrencyValue).IsNull == false)
        Entity.ConcurrencyValue = Properties.GetByName(DateTypePDSAValidator.ColumnNames.ConcurrencyValue).GetAsShort();
      if(Properties.GetByName(DateTypePDSAValidator.ColumnNames.Title).IsNull == false)
        Entity.Title = Properties.GetByName(DateTypePDSAValidator.ColumnNames.Title).GetAsString();
      if(Properties.GetByName(DateTypePDSAValidator.ColumnNames.StartDate).IsNull == false)
        Entity.StartDate = Properties.GetByName(DateTypePDSAValidator.ColumnNames.StartDate).GetAsDate();
      if(Properties.GetByName(DateTypePDSAValidator.ColumnNames.EndDate).IsNull == false)
        Entity.EndDate = Properties.GetByName(DateTypePDSAValidator.ColumnNames.EndDate).GetAsDate();
      if(Properties.GetByName(DateTypePDSAValidator.ColumnNames.PageSize).IsNull == false)
        Entity.PageSize = Properties.GetByName(DateTypePDSAValidator.ColumnNames.PageSize).GetAsInteger();
      if(Properties.GetByName(DateTypePDSAValidator.ColumnNames.PageNumber).IsNull == false)
        Entity.PageNumber = Properties.GetByName(DateTypePDSAValidator.ColumnNames.PageNumber).GetAsInteger();
      if(Properties.GetByName(DateTypePDSAValidator.ColumnNames.TotalRowCount).IsNull == false)
        Entity.TotalRowCount = Properties.GetByName(DateTypePDSAValidator.ColumnNames.TotalRowCount).GetAsInteger();
      if(Properties.GetByName(DateTypePDSAValidator.ColumnNames.SortColumn).IsNull == false)
        Entity.SortColumn = Properties.GetByName(DateTypePDSAValidator.ColumnNames.SortColumn).GetAsString();
      if(Properties.GetByName(DateTypePDSAValidator.ColumnNames.DescendingOrder).IsNull == false)
        Entity.DescendingOrder = Properties.GetByName(DateTypePDSAValidator.ColumnNames.DescendingOrder).GetAsBool();
    }
    #endregion
    
    #region ColumnNames Class
    /// <summary>
    /// Contains static string properties that represent the name of each property in the DateTypePDSA class.
    /// This class is generated by the Haystack Code Generator for .NET.
    /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
    /// </summary>
    public class ColumnNames
    {
    /// <summary>
    /// Returns 'DateTypeUid'
    /// </summary>
    public static string DateTypeUid = "DateTypeUid";
    /// <summary>
    /// Returns 'EntityId'
    /// </summary>
    public static string EntityId = "EntityId";
    /// <summary>
    /// Returns 'DayTypeUid'
    /// </summary>
    public static string DayTypeUid = "DayTypeUid";
    /// <summary>
    /// Returns 'Date'
    /// </summary>
    public static string Date = "Date";
    /// <summary>
    /// Returns 'InsertName'
    /// </summary>
    public static string InsertName = "InsertName";
    /// <summary>
    /// Returns 'InsertDate'
    /// </summary>
    public static string InsertDate = "InsertDate";
    /// <summary>
    /// Returns 'UpdateName'
    /// </summary>
    public static string UpdateName = "UpdateName";
    /// <summary>
    /// Returns 'UpdateDate'
    /// </summary>
    public static string UpdateDate = "UpdateDate";
    /// <summary>
    /// Returns 'ConcurrencyValue'
    /// </summary>
    public static string ConcurrencyValue = "ConcurrencyValue";
    /// <summary>
    /// Returns 'Title'
    /// </summary>
    public static string Title = "Title";
    /// <summary>
    /// Returns 'StartDate'
    /// </summary>
    public static string StartDate = "StartDate";
    /// <summary>
    /// Returns 'EndDate'
    /// </summary>
    public static string EndDate = "EndDate";
    /// <summary>
    /// Returns 'PageSize'
    /// </summary>
    public static string PageSize = "PageSize";
    /// <summary>
    /// Returns 'PageNumber'
    /// </summary>
    public static string PageNumber = "PageNumber";
    /// <summary>
    /// Returns 'TotalRowCount'
    /// </summary>
    public static string TotalRowCount = "TotalRowCount";
    /// <summary>
    /// Returns 'SortColumn'
    /// </summary>
    public static string SortColumn = "SortColumn";
    /// <summary>
    /// Returns 'DescendingOrder'
    /// </summary>
    public static string DescendingOrder = "DescendingOrder";
    }
    #endregion
  }
}
