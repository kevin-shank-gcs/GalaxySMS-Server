using System;
using System.Collections.Generic;
using System.Linq;
using GalaxySMS.Business.Entities;
using GalaxySMS.Common.Enums;
using PDSA.Validation;

namespace GalaxySMS.EntityLayer
{
    /// <summary>
    /// This class is an extension of the AcknowledgedAlarmBasicData_ByActivityEventUidPDSA Entity class
    /// This class is generated by the Haystack Code Generator for .NET.
    /// You may add additional properties to this class. 
    /// </summary>
    //[Serializable]
    public partial class AcknowledgedAlarmBasicData_ByActivityEventUidPDSA : PDSAEntityBase
    {
        #region Constructor
        /// <summary>
        /// Constructor for the AcknowledgedAlarmBasicData_ByActivityEventUidPDSA class
        /// </summary>
        public AcknowledgedAlarmBasicData_ByActivityEventUidPDSA() : base()
        {
            ClassName = "AcknowledgedAlarmBasicData_ByActivityEventUidPDSA";
        }
        #endregion
    }

    /// <summary>
    /// This class is used when you wish to create a collection of AcknowledgedAlarmBasicData_ByActivityEventUidPDSA classes.
    /// You may add additional methods to this class.
    /// </summary>
    public class AcknowledgedAlarmBasicData_ByActivityEventUidPDSACollection : List<AcknowledgedAlarmBasicData_ByActivityEventUidPDSA>
    {

        /// <summary>
        /// Get all AcknowledgedAlarmBasicData_ByActivityEventUidPDSA objects where IsDirty=True
        /// </summary>
        /// <returns>A List of AcknowledgedAlarmBasicData_ByActivityEventUidPDSA Objects</returns>
        public List<AcknowledgedAlarmBasicData_ByActivityEventUidPDSA> GetChanged()
        {
            return (from item in this
                    where item.IsDirty == true
                    select item).ToList<AcknowledgedAlarmBasicData_ByActivityEventUidPDSA>();
        }

        /// <summary>
        /// Get all AcknowledgedAlarmBasicData_ByActivityEventUidPDSA objects where IsSelected=True
        /// </summary>
        /// <returns>A List of AcknowledgedAlarmBasicData_ByActivityEventUidPDSA Objects where IsSelected=True</returns>
        public List<AcknowledgedAlarmBasicData_ByActivityEventUidPDSA> GetSelected()
        {
            return (from item in this
                    where item.IsSelected == true
                    select item).ToList<AcknowledgedAlarmBasicData_ByActivityEventUidPDSA>();
        }


        public ICollection<AcknowledgedAlarmBasicData> ToAcknowledgedAlarmBasicDataCollection()
        {
            var results = new HashSet<AcknowledgedAlarmBasicData>();
            foreach (var item in this)
            {
                var o = new AcknowledgedAlarmBasicData
                {
                    ActivityEventUid = item.ActivityEventUid,
                    DeviceEntityId = item.DeviceEntityId,
                    DeviceUid = item.DeviceUid,
                    Response = item.Response,
                    AckedByUserId = item.AckedByUserId,
                    AckedByUserDisplayName = item.AckedByUserDisplayName,
                    AckedDateTime = item.AckedDateTime,
                    AckedUpdatedDateTime = item.AckedUpdatedDateTime
                };
                results.Add(o);
                if (item.AccessPortalAlarmEventAcknowledgmentUid != Guid.Empty)
                {
                    o.AlarmEventAcknowledgmentUid = item.AccessPortalAlarmEventAcknowledgmentUid;
                    o.ActivityEventCategory = PanelActivityEventCategory.Door;
                }
                else if (item.GalaxyPanelAlarmEventAcknowledgmentUid != Guid.Empty)
                {
                    o.AlarmEventAcknowledgmentUid = item.GalaxyPanelAlarmEventAcknowledgmentUid; 
                    o.ActivityEventCategory = PanelActivityEventCategory.Panel;
                }
                else if (item.InputDeviceAlarmEventAcknowledgmentUid != Guid.Empty)
                {
                    o.AlarmEventAcknowledgmentUid = item.InputDeviceAlarmEventAcknowledgmentUid;
                    o.ActivityEventCategory = PanelActivityEventCategory.Input;
                }
            }
            return results;
        }
    }

}
