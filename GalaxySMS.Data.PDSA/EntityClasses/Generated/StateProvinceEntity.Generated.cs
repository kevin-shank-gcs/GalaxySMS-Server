using System;
using System.ComponentModel;
using System.Runtime.Serialization;


using PDSA.Validation;

namespace GalaxySMS.EntityLayer
{
  /// <summary>
  /// This class contains properties for each data value that makes up a StateProvincePDSA.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
  /// </summary>
  
  public partial class StateProvincePDSA : PDSAEntityBase
  {
    #region Private Variables
    private Guid _StateProvinceUid = Guid.NewGuid();
    private Guid _CountryUid = Guid.NewGuid();
    private string _StateProvinceCode = string.Empty;
    private string _StateProvinceName = string.Empty;
    private string _InsertName = string.Empty;
    private DateTimeOffset _InsertDate = DateTimeOffset.Now;
    private string _UpdateName = string.Empty;
    private DateTimeOffset _UpdateDate = DateTimeOffset.Now;
    private short _ConcurrencyValue = 0;
    private string _CountryName = string.Empty;
    private string _CountryIso = string.Empty;
    private string _Iso3 = string.Empty;
    private Guid _StateProvinceUidOld = Guid.NewGuid();
    #endregion
    
    #region Public Properties
    /// <summary>
    /// Get/Set the State Province Uid value
    /// </summary>
    
    [DataMember]
    
    public Guid StateProvinceUid 
    { 
      get { return _StateProvinceUid; }
      set 
      { 
        if(HasValueChanged(_StateProvinceUid, value, "StateProvinceUid"))
        {
          _StateProvinceUid = value; 
          RaisePropertyChanged("StateProvinceUid");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Country Uid value
    /// </summary>
    
    [DataMember]
    
    public Guid CountryUid 
    { 
      get { return _CountryUid; }
      set 
      { 
        if(HasValueChanged(_CountryUid, value, "CountryUid"))
        {
          _CountryUid = value; 
          RaisePropertyChanged("CountryUid");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the State Province Code value
    /// </summary>
    
    [DataMember]
    
    public string StateProvinceCode 
    { 
      get { return _StateProvinceCode; }
      set 
      { 
        if(HasValueChanged(_StateProvinceCode, value, "StateProvinceCode"))
        {
          _StateProvinceCode = value; 
          RaisePropertyChanged("StateProvinceCode");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the State Province Name value
    /// </summary>
    
    [DataMember]
    
    public string StateProvinceName 
    { 
      get { return _StateProvinceName; }
      set 
      { 
        if(HasValueChanged(_StateProvinceName, value, "StateProvinceName"))
        {
          _StateProvinceName = value; 
          RaisePropertyChanged("StateProvinceName");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Insert Name value
    /// </summary>
    
    [DataMember]
    
    public string InsertName 
    { 
      get { return _InsertName; }
      set 
      { 
        if(HasValueChanged(_InsertName, value, "InsertName"))
        {
          _InsertName = value; 
          RaisePropertyChanged("InsertName");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Insert Date value
    /// </summary>
    
    [DataMember]
    
    public DateTimeOffset InsertDate 
    { 
      get { return _InsertDate; }
      set 
      { 
        if(HasValueChanged(_InsertDate, value, "InsertDate"))
        {
          _InsertDate = value; 
          RaisePropertyChanged("InsertDate");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Update Name value
    /// </summary>
    
    [DataMember]
    
    public string UpdateName 
    { 
      get { return _UpdateName; }
      set 
      { 
        if(HasValueChanged(_UpdateName, value, "UpdateName"))
        {
          _UpdateName = value; 
          RaisePropertyChanged("UpdateName");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Update Date value
    /// </summary>
    
    [DataMember]
    
    public DateTimeOffset UpdateDate 
    { 
      get { return _UpdateDate; }
      set 
      { 
        if(HasValueChanged(_UpdateDate, value, "UpdateDate"))
        {
          _UpdateDate = value; 
          RaisePropertyChanged("UpdateDate");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Concurrency Value value
    /// </summary>
    
    [DataMember]
    
    public short ConcurrencyValue 
    { 
      get { return _ConcurrencyValue; }
      set 
      { 
        if(HasValueChanged(_ConcurrencyValue, value, "ConcurrencyValue"))
        {
          _ConcurrencyValue = value; 
          RaisePropertyChanged("ConcurrencyValue");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Country Name value
    /// </summary>
    
    [DataMember]
    
    public string CountryName 
    { 
      get { return _CountryName; }
      set 
      { 
        if(HasValueChanged(_CountryName, value, "CountryName"))
        {
          _CountryName = value; 
          RaisePropertyChanged("CountryName");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Country Iso value
    /// </summary>
    
    [DataMember]
    
    public string CountryIso 
    { 
      get { return _CountryIso; }
      set 
      { 
        if(HasValueChanged(_CountryIso, value, "CountryIso"))
        {
          _CountryIso = value; 
          RaisePropertyChanged("CountryIso");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Iso 3 value
    /// </summary>
    
    [DataMember]
    
    public string Iso3 
    { 
      get { return _Iso3; }
      set 
      { 
        if(HasValueChanged(_Iso3, value, "Iso3"))
        {
          _Iso3 = value; 
          RaisePropertyChanged("Iso3");
        }
      } 
    }
        

        /// <summary>
    /// Get/Set the State Province UidOld value
    /// </summary>
    
    public Guid StateProvinceUidOld
    { 
      get { return _StateProvinceUidOld; }
      set 
      { 
        if(HasValueChanged(_StateProvinceUidOld, value, "StateProvinceUid"))
        {
          _StateProvinceUidOld = value; 
          RaisePropertyChanged("StateProvinceUidOld");
        }
      } 
    }
    #endregion
  }
}
