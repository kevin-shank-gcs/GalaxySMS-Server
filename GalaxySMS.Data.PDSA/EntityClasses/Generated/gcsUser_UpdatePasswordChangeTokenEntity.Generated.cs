using System;
using System.ComponentModel;
using System.Runtime.Serialization;

using PDSA.Validation;

namespace GalaxySMS.EntityLayer
{
  /// <summary>
  /// This class contains properties for each data value returned, or parameter to be input/output from the gcsUser_UpdatePasswordChangeTokenPDSA stored procedure.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
  /// </summary>
  
  public partial class gcsUser_UpdatePasswordChangeTokenPDSA : PDSAEntityBase
  {
    #region Private Variables
    private Guid _UserId = Guid.Empty;
    private string _PasswordResetToken = string.Empty;
    private DateTimeOffset _PasswordResetTokenExpiration = DateTime.Now;
    private string _TempPassword = string.Empty;
    private string _UserName = string.Empty;
    private DateTimeOffset _UpdateDate = DateTime.Now;
    private int _RETURNVALUE = 0;
    #endregion
    
    #region Public Properties
    /// <summary>
    /// Get/Set the User Id value
    /// </summary>
    
    [DataMember]
    
    public Guid UserId 
    { 
      get { return _UserId; }
      set 
      { 
        if(HasValueChanged(_UserId, value, "@UserId"))
        {
          _UserId = value; 
          RaisePropertyChanged("UserId");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Password Reset Token value
    /// </summary>
    
    [DataMember]
    
    public string PasswordResetToken 
    { 
      get { return _PasswordResetToken; }
      set 
      { 
        if(HasValueChanged(_PasswordResetToken, value, "@PasswordResetToken"))
        {
          _PasswordResetToken = value; 
          RaisePropertyChanged("PasswordResetToken");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Password Reset Token Expiration value
    /// </summary>
    
    [DataMember]
    
    public DateTimeOffset PasswordResetTokenExpiration 
    { 
      get { return _PasswordResetTokenExpiration; }
      set 
      { 
        if(HasValueChanged(_PasswordResetTokenExpiration, value, "@PasswordResetTokenExpiration"))
        {
          _PasswordResetTokenExpiration = value; 
          RaisePropertyChanged("PasswordResetTokenExpiration");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Temp Password value
    /// </summary>
    
    [DataMember]
    
    public string TempPassword 
    { 
      get { return _TempPassword; }
      set 
      { 
        if(HasValueChanged(_TempPassword, value, "@TempPassword"))
        {
          _TempPassword = value; 
          RaisePropertyChanged("TempPassword");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the User Name value
    /// </summary>
    
    [DataMember]
    
    public string UserName 
    { 
      get { return _UserName; }
      set 
      { 
        if(HasValueChanged(_UserName, value, "@UserName"))
        {
          _UserName = value; 
          RaisePropertyChanged("UserName");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Update Date value
    /// </summary>
    
    [DataMember]
    
    public DateTimeOffset UpdateDate 
    { 
      get { return _UpdateDate; }
      set 
      { 
        if(HasValueChanged(_UpdateDate, value, "@UpdateDate"))
        {
          _UpdateDate = value; 
          RaisePropertyChanged("UpdateDate");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the return value value
    /// </summary>
    
    [DataMember]
    
    public int RETURNVALUE 
    { 
      get { return _RETURNVALUE; }
      set 
      { 
        if(HasValueChanged(_RETURNVALUE, value, "@RETURN_VALUE"))
        {
          _RETURNVALUE = value; 
          RaisePropertyChanged("RETURNVALUE");
        }
      } 
    }
        

    #endregion
  }
}
