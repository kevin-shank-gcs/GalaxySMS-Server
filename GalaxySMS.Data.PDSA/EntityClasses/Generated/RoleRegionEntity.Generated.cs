using System;
using System.ComponentModel;
using System.Runtime.Serialization;


using PDSA.Validation;

namespace GalaxySMS.EntityLayer
{
  /// <summary>
  /// This class contains properties for each data value that makes up a RoleRegionPDSA.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
  /// </summary>
  
  public partial class RoleRegionPDSA : PDSAEntityBase
  {
    #region Private Variables
    private Guid _RoleRegionUid = Guid.Empty;
    private Guid _RoleId = Guid.Empty;
    private Guid _RegionUid = Guid.Empty;
    private bool _IncludeAllSites = false;
    private string _InsertName = string.Empty;
    private DateTimeOffset _InsertDate = DateTimeOffset.Now;
    private string _UpdateName = string.Empty;
    private DateTimeOffset _UpdateDate = DateTimeOffset.Now;
    private short _ConcurrencyValue = 0;
    private string _RegionName = string.Empty;
    private Guid _RoleRegionUidOld = Guid.Empty;
    #endregion
    
    #region Public Properties
    /// <summary>
    /// Get/Set the Role Region Uid value
    /// </summary>
    
    [DataMember]
    
    public Guid RoleRegionUid 
    { 
      get { return _RoleRegionUid; }
      set 
      { 
        if(HasValueChanged(_RoleRegionUid, value, "RoleRegionUid"))
        {
          _RoleRegionUid = value; 
          RaisePropertyChanged("RoleRegionUid");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Role Id value
    /// </summary>
    
    [DataMember]
    
    public Guid RoleId 
    { 
      get { return _RoleId; }
      set 
      { 
        if(HasValueChanged(_RoleId, value, "RoleId"))
        {
          _RoleId = value; 
          RaisePropertyChanged("RoleId");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Region Uid value
    /// </summary>
    
    [DataMember]
    
    public Guid RegionUid 
    { 
      get { return _RegionUid; }
      set 
      { 
        if(HasValueChanged(_RegionUid, value, "RegionUid"))
        {
          _RegionUid = value; 
          RaisePropertyChanged("RegionUid");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Include All Sites value
    /// </summary>
    
    [DataMember]
    
    public bool IncludeAllSites 
    { 
      get { return _IncludeAllSites; }
      set 
      { 
        if(HasValueChanged(_IncludeAllSites, value, "IncludeAllSites"))
        {
          _IncludeAllSites = value; 
          RaisePropertyChanged("IncludeAllSites");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Insert Name value
    /// </summary>
    
    [DataMember]
    
    public string InsertName 
    { 
      get { return _InsertName; }
      set 
      { 
        if(HasValueChanged(_InsertName, value, "InsertName"))
        {
          _InsertName = value; 
          RaisePropertyChanged("InsertName");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Insert Date value
    /// </summary>
    
    [DataMember]
    
    public DateTimeOffset InsertDate 
    { 
      get { return _InsertDate; }
      set 
      { 
        if(HasValueChanged(_InsertDate, value, "InsertDate"))
        {
          _InsertDate = value; 
          RaisePropertyChanged("InsertDate");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Update Name value
    /// </summary>
    
    [DataMember]
    
    public string UpdateName 
    { 
      get { return _UpdateName; }
      set 
      { 
        if(HasValueChanged(_UpdateName, value, "UpdateName"))
        {
          _UpdateName = value; 
          RaisePropertyChanged("UpdateName");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Update Date value
    /// </summary>
    
    [DataMember]
    
    public DateTimeOffset UpdateDate 
    { 
      get { return _UpdateDate; }
      set 
      { 
        if(HasValueChanged(_UpdateDate, value, "UpdateDate"))
        {
          _UpdateDate = value; 
          RaisePropertyChanged("UpdateDate");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Concurrency Value value
    /// </summary>
    
    [DataMember]
    
    public short ConcurrencyValue 
    { 
      get { return _ConcurrencyValue; }
      set 
      { 
        if(HasValueChanged(_ConcurrencyValue, value, "ConcurrencyValue"))
        {
          _ConcurrencyValue = value; 
          RaisePropertyChanged("ConcurrencyValue");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Region Name value
    /// </summary>
    
    [DataMember]
    
    public string RegionName 
    { 
      get { return _RegionName; }
      set 
      { 
        if(HasValueChanged(_RegionName, value, "RegionName"))
        {
          _RegionName = value; 
          RaisePropertyChanged("RegionName");
        }
      } 
    }
        

        /// <summary>
    /// Get/Set the Role Region UidOld value
    /// </summary>
    
    public Guid RoleRegionUidOld
    { 
      get { return _RoleRegionUidOld; }
      set 
      { 
        if(HasValueChanged(_RoleRegionUidOld, value, "RoleRegionUid"))
        {
          _RoleRegionUidOld = value; 
          RaisePropertyChanged("RoleRegionUidOld");
        }
      } 
    }
    #endregion
  }
}
