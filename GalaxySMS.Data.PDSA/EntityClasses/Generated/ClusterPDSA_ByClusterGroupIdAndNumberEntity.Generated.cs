using System;
using System.ComponentModel;
using System.Runtime.Serialization;

using PDSA.Validation;

namespace GalaxySMS.EntityLayer
{
  /// <summary>
  /// This class contains properties for each data value returned, or parameter to be input/output from the ClusterPDSA_ByClusterGroupIdAndNumberPDSA stored procedure.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
  /// </summary>
  
  public partial class ClusterPDSA_ByClusterGroupIdAndNumberPDSA : PDSAEntityBase
  {
    #region Private Variables
    private Guid _ClusterUid = Guid.Empty;
    private Guid _ClusterTypeUid = Guid.Empty;
    private int _ClusterNumber = 0;
    private string _ClusterName = string.Empty;
    private string _InsertName = string.Empty;
    private DateTimeOffset _InsertDate = DateTimeOffset.Now;
    private string _UpdateName = string.Empty;
    private DateTimeOffset _UpdateDate = DateTimeOffset.Now;
    private short _ConcurrencyValue = 0;
    private Guid _EntityId = Guid.Empty;
    private Guid _SiteUid = Guid.Empty;
    private Guid _CredentialDataLengthUid = Guid.Empty;
    private Guid _TimeScheduleTypeUid = Guid.Empty;
    private Guid _BinaryResourceUid = Guid.Empty;
    private bool _IsActive = false;
    private short _AbaStartDigit = 0;
    private short _AbaStopDigit = 0;
    private bool _AbaFoldOption = false;
    private bool _AbaClipOption = false;
    private short _WiegandStartBit = 0;
    private short _WiegandStopBit = 0;
    private short _CardaxStartBit = 0;
    private short _CardaxStopBit = 0;
    private short _LockoutAfterInvalidAttempts = 0;
    private int _LockoutDurationSeconds = 0;
    private int _AccessRuleOverrideTimeout = 0;
    private int _UnlimitedCredentialTimeout = 0;
    private string _TimeZoneId = string.Empty;
    private Guid _CrisisActivateInputOutputGroupUid = Guid.Empty;
    private Guid _CrisisResetInputOutputGroupUid = Guid.Empty;
    private Guid _AccessPortalLockedLedBehaviorModeUid = Guid.Empty;
    private Guid _AccessPortalUnlockedLedBehaviorModeUid = Guid.Empty;
    private Guid _AccessPortalTypeUid = Guid.Empty;
    private Guid _TemplateAccessPortalUid = Guid.Empty;
    private DateTimeOffset _CurrentTimeForCluster = DateTimeOffset.Now;
    private int _ClusterGroupId = 0;
    private int _TotalRowCount = 0;
    private int _RETURNVALUE = 0;
    #endregion
    
    #region Public Properties
    /// <summary>
    /// Get/Set the Cluster Uid value
    /// </summary>
    
    [DataMember]
    
    public Guid ClusterUid 
    { 
      get { return _ClusterUid; }
      set 
      { 
        if(HasValueChanged(_ClusterUid, value, "ClusterUid"))
        {
          _ClusterUid = value; 
          RaisePropertyChanged("ClusterUid");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Cluster Type Uid value
    /// </summary>
    
    [DataMember]
    
    public Guid ClusterTypeUid 
    { 
      get { return _ClusterTypeUid; }
      set 
      { 
        if(HasValueChanged(_ClusterTypeUid, value, "ClusterTypeUid"))
        {
          _ClusterTypeUid = value; 
          RaisePropertyChanged("ClusterTypeUid");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Cluster Number value
    /// </summary>
    
    [DataMember]
    
    public int ClusterNumber 
    { 
      get { return _ClusterNumber; }
      set 
      { 
        if(HasValueChanged(_ClusterNumber, value, "ClusterNumber"))
        {
          _ClusterNumber = value; 
          RaisePropertyChanged("ClusterNumber");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Cluster Name value
    /// </summary>
    
    [DataMember]
    
    public string ClusterName 
    { 
      get { return _ClusterName; }
      set 
      { 
        if(HasValueChanged(_ClusterName, value, "ClusterName"))
        {
          _ClusterName = value; 
          RaisePropertyChanged("ClusterName");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Insert Name value
    /// </summary>
    
    [DataMember]
    
    public string InsertName 
    { 
      get { return _InsertName; }
      set 
      { 
        if(HasValueChanged(_InsertName, value, "InsertName"))
        {
          _InsertName = value; 
          RaisePropertyChanged("InsertName");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Insert Date value
    /// </summary>
    
    [DataMember]
    
    public DateTimeOffset InsertDate 
    { 
      get { return _InsertDate; }
      set 
      { 
        if(HasValueChanged(_InsertDate, value, "InsertDate"))
        {
          _InsertDate = value; 
          RaisePropertyChanged("InsertDate");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Update Name value
    /// </summary>
    
    [DataMember]
    
    public string UpdateName 
    { 
      get { return _UpdateName; }
      set 
      { 
        if(HasValueChanged(_UpdateName, value, "UpdateName"))
        {
          _UpdateName = value; 
          RaisePropertyChanged("UpdateName");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Update Date value
    /// </summary>
    
    [DataMember]
    
    public DateTimeOffset UpdateDate 
    { 
      get { return _UpdateDate; }
      set 
      { 
        if(HasValueChanged(_UpdateDate, value, "UpdateDate"))
        {
          _UpdateDate = value; 
          RaisePropertyChanged("UpdateDate");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Concurrency Value value
    /// </summary>
    
    [DataMember]
    
    public short ConcurrencyValue 
    { 
      get { return _ConcurrencyValue; }
      set 
      { 
        if(HasValueChanged(_ConcurrencyValue, value, "ConcurrencyValue"))
        {
          _ConcurrencyValue = value; 
          RaisePropertyChanged("ConcurrencyValue");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Entity Id value
    /// </summary>
    
    [DataMember]
    
    public Guid EntityId 
    { 
      get { return _EntityId; }
      set 
      { 
        if(HasValueChanged(_EntityId, value, "EntityId"))
        {
          _EntityId = value; 
          RaisePropertyChanged("EntityId");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Site Uid value
    /// </summary>
    
    [DataMember]
    
    public Guid SiteUid 
    { 
      get { return _SiteUid; }
      set 
      { 
        if(HasValueChanged(_SiteUid, value, "SiteUid"))
        {
          _SiteUid = value; 
          RaisePropertyChanged("SiteUid");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Credential Data Length Uid value
    /// </summary>
    
    [DataMember]
    
    public Guid CredentialDataLengthUid 
    { 
      get { return _CredentialDataLengthUid; }
      set 
      { 
        if(HasValueChanged(_CredentialDataLengthUid, value, "CredentialDataLengthUid"))
        {
          _CredentialDataLengthUid = value; 
          RaisePropertyChanged("CredentialDataLengthUid");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Time Schedule Type Uid value
    /// </summary>
    
    [DataMember]
    
    public Guid TimeScheduleTypeUid 
    { 
      get { return _TimeScheduleTypeUid; }
      set 
      { 
        if(HasValueChanged(_TimeScheduleTypeUid, value, "TimeScheduleTypeUid"))
        {
          _TimeScheduleTypeUid = value; 
          RaisePropertyChanged("TimeScheduleTypeUid");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Binary Resource Uid value
    /// </summary>
    
    [DataMember]
    
    public Guid BinaryResourceUid 
    { 
      get { return _BinaryResourceUid; }
      set 
      { 
        if(HasValueChanged(_BinaryResourceUid, value, "BinaryResourceUid"))
        {
          _BinaryResourceUid = value; 
          RaisePropertyChanged("BinaryResourceUid");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Is Active value
    /// </summary>
    
    [DataMember]
    
    public bool IsActive 
    { 
      get { return _IsActive; }
      set 
      { 
        if(HasValueChanged(_IsActive, value, "IsActive"))
        {
          _IsActive = value; 
          RaisePropertyChanged("IsActive");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Aba Start Digit value
    /// </summary>
    
    [DataMember]
    
    public short AbaStartDigit 
    { 
      get { return _AbaStartDigit; }
      set 
      { 
        if(HasValueChanged(_AbaStartDigit, value, "AbaStartDigit"))
        {
          _AbaStartDigit = value; 
          RaisePropertyChanged("AbaStartDigit");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Aba Stop Digit value
    /// </summary>
    
    [DataMember]
    
    public short AbaStopDigit 
    { 
      get { return _AbaStopDigit; }
      set 
      { 
        if(HasValueChanged(_AbaStopDigit, value, "AbaStopDigit"))
        {
          _AbaStopDigit = value; 
          RaisePropertyChanged("AbaStopDigit");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Aba Fold Option value
    /// </summary>
    
    [DataMember]
    
    public bool AbaFoldOption 
    { 
      get { return _AbaFoldOption; }
      set 
      { 
        if(HasValueChanged(_AbaFoldOption, value, "AbaFoldOption"))
        {
          _AbaFoldOption = value; 
          RaisePropertyChanged("AbaFoldOption");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Aba Clip Option value
    /// </summary>
    
    [DataMember]
    
    public bool AbaClipOption 
    { 
      get { return _AbaClipOption; }
      set 
      { 
        if(HasValueChanged(_AbaClipOption, value, "AbaClipOption"))
        {
          _AbaClipOption = value; 
          RaisePropertyChanged("AbaClipOption");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Wiegand Start Bit value
    /// </summary>
    
    [DataMember]
    
    public short WiegandStartBit 
    { 
      get { return _WiegandStartBit; }
      set 
      { 
        if(HasValueChanged(_WiegandStartBit, value, "WiegandStartBit"))
        {
          _WiegandStartBit = value; 
          RaisePropertyChanged("WiegandStartBit");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Wiegand Stop Bit value
    /// </summary>
    
    [DataMember]
    
    public short WiegandStopBit 
    { 
      get { return _WiegandStopBit; }
      set 
      { 
        if(HasValueChanged(_WiegandStopBit, value, "WiegandStopBit"))
        {
          _WiegandStopBit = value; 
          RaisePropertyChanged("WiegandStopBit");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Cardax Start Bit value
    /// </summary>
    
    [DataMember]
    
    public short CardaxStartBit 
    { 
      get { return _CardaxStartBit; }
      set 
      { 
        if(HasValueChanged(_CardaxStartBit, value, "CardaxStartBit"))
        {
          _CardaxStartBit = value; 
          RaisePropertyChanged("CardaxStartBit");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Cardax Stop Bit value
    /// </summary>
    
    [DataMember]
    
    public short CardaxStopBit 
    { 
      get { return _CardaxStopBit; }
      set 
      { 
        if(HasValueChanged(_CardaxStopBit, value, "CardaxStopBit"))
        {
          _CardaxStopBit = value; 
          RaisePropertyChanged("CardaxStopBit");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Lockout After Invalid Attempts value
    /// </summary>
    
    [DataMember]
    
    public short LockoutAfterInvalidAttempts 
    { 
      get { return _LockoutAfterInvalidAttempts; }
      set 
      { 
        if(HasValueChanged(_LockoutAfterInvalidAttempts, value, "LockoutAfterInvalidAttempts"))
        {
          _LockoutAfterInvalidAttempts = value; 
          RaisePropertyChanged("LockoutAfterInvalidAttempts");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Lockout Duration Seconds value
    /// </summary>
    
    [DataMember]
    
    public int LockoutDurationSeconds 
    { 
      get { return _LockoutDurationSeconds; }
      set 
      { 
        if(HasValueChanged(_LockoutDurationSeconds, value, "LockoutDurationSeconds"))
        {
          _LockoutDurationSeconds = value; 
          RaisePropertyChanged("LockoutDurationSeconds");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Access Rule Override Timeout value
    /// </summary>
    
    [DataMember]
    
    public int AccessRuleOverrideTimeout 
    { 
      get { return _AccessRuleOverrideTimeout; }
      set 
      { 
        if(HasValueChanged(_AccessRuleOverrideTimeout, value, "AccessRuleOverrideTimeout"))
        {
          _AccessRuleOverrideTimeout = value; 
          RaisePropertyChanged("AccessRuleOverrideTimeout");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Unlimited Credential Timeout value
    /// </summary>
    
    [DataMember]
    
    public int UnlimitedCredentialTimeout 
    { 
      get { return _UnlimitedCredentialTimeout; }
      set 
      { 
        if(HasValueChanged(_UnlimitedCredentialTimeout, value, "UnlimitedCredentialTimeout"))
        {
          _UnlimitedCredentialTimeout = value; 
          RaisePropertyChanged("UnlimitedCredentialTimeout");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Time Zone Id value
    /// </summary>
    
    [DataMember]
    
    public string TimeZoneId 
    { 
      get { return _TimeZoneId; }
      set 
      { 
        if(HasValueChanged(_TimeZoneId, value, "TimeZoneId"))
        {
          _TimeZoneId = value; 
          RaisePropertyChanged("TimeZoneId");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Crisis Activate Input Output Group Uid value
    /// </summary>
    
    [DataMember]
    
    public Guid CrisisActivateInputOutputGroupUid 
    { 
      get { return _CrisisActivateInputOutputGroupUid; }
      set 
      { 
        if(HasValueChanged(_CrisisActivateInputOutputGroupUid, value, "CrisisActivateInputOutputGroupUid"))
        {
          _CrisisActivateInputOutputGroupUid = value; 
          RaisePropertyChanged("CrisisActivateInputOutputGroupUid");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Crisis Reset Input Output Group Uid value
    /// </summary>
    
    [DataMember]
    
    public Guid CrisisResetInputOutputGroupUid 
    { 
      get { return _CrisisResetInputOutputGroupUid; }
      set 
      { 
        if(HasValueChanged(_CrisisResetInputOutputGroupUid, value, "CrisisResetInputOutputGroupUid"))
        {
          _CrisisResetInputOutputGroupUid = value; 
          RaisePropertyChanged("CrisisResetInputOutputGroupUid");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Access Portal Locked Led Behavior Mode Uid value
    /// </summary>
    
    [DataMember]
    
    public Guid AccessPortalLockedLedBehaviorModeUid 
    { 
      get { return _AccessPortalLockedLedBehaviorModeUid; }
      set 
      { 
        if(HasValueChanged(_AccessPortalLockedLedBehaviorModeUid, value, "AccessPortalLockedLedBehaviorModeUid"))
        {
          _AccessPortalLockedLedBehaviorModeUid = value; 
          RaisePropertyChanged("AccessPortalLockedLedBehaviorModeUid");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Access Portal Unlocked Led Behavior Mode Uid value
    /// </summary>
    
    [DataMember]
    
    public Guid AccessPortalUnlockedLedBehaviorModeUid 
    { 
      get { return _AccessPortalUnlockedLedBehaviorModeUid; }
      set 
      { 
        if(HasValueChanged(_AccessPortalUnlockedLedBehaviorModeUid, value, "AccessPortalUnlockedLedBehaviorModeUid"))
        {
          _AccessPortalUnlockedLedBehaviorModeUid = value; 
          RaisePropertyChanged("AccessPortalUnlockedLedBehaviorModeUid");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Access Portal Type Uid value
    /// </summary>
    
    [DataMember]
    
    public Guid AccessPortalTypeUid 
    { 
      get { return _AccessPortalTypeUid; }
      set 
      { 
        if(HasValueChanged(_AccessPortalTypeUid, value, "AccessPortalTypeUid"))
        {
          _AccessPortalTypeUid = value; 
          RaisePropertyChanged("AccessPortalTypeUid");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Template Access Portal Uid value
    /// </summary>
    
    [DataMember]
    
    public Guid TemplateAccessPortalUid 
    { 
      get { return _TemplateAccessPortalUid; }
      set 
      { 
        if(HasValueChanged(_TemplateAccessPortalUid, value, "TemplateAccessPortalUid"))
        {
          _TemplateAccessPortalUid = value; 
          RaisePropertyChanged("TemplateAccessPortalUid");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Current Time For Cluster value
    /// </summary>
    
    [DataMember]
    
    public DateTimeOffset CurrentTimeForCluster 
    { 
      get { return _CurrentTimeForCluster; }
      set 
      { 
        if(HasValueChanged(_CurrentTimeForCluster, value, "CurrentTimeForCluster"))
        {
          _CurrentTimeForCluster = value; 
          RaisePropertyChanged("CurrentTimeForCluster");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Cluster Group Id value
    /// </summary>
    
    [DataMember]
    
    public int ClusterGroupId 
    { 
      get { return _ClusterGroupId; }
      set 
      { 
        if(HasValueChanged(_ClusterGroupId, value, "ClusterGroupId"))
        {
          _ClusterGroupId = value; 
          RaisePropertyChanged("ClusterGroupId");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Total Row Count value
    /// </summary>
    
    [DataMember]
    
    public int TotalRowCount 
    { 
      get { return _TotalRowCount; }
      set 
      { 
        if(HasValueChanged(_TotalRowCount, value, "TotalRowCount"))
        {
          _TotalRowCount = value; 
          RaisePropertyChanged("TotalRowCount");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the return value value
    /// </summary>
    
    [DataMember]
    
    public int RETURNVALUE 
    { 
      get { return _RETURNVALUE; }
      set 
      { 
        if(HasValueChanged(_RETURNVALUE, value, "@RETURN_VALUE"))
        {
          _RETURNVALUE = value; 
          RaisePropertyChanged("RETURNVALUE");
        }
      } 
    }
        

    #endregion
  }
}
