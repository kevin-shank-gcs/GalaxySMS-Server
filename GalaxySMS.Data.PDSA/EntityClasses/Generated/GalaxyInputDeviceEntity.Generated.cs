using System;
using System.ComponentModel;
using System.Runtime.Serialization;


using PDSA.Validation;

namespace GalaxySMS.EntityLayer
{
  /// <summary>
  /// This class contains properties for each data value that makes up a GalaxyInputDevicePDSA.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
  /// </summary>
  
  public partial class GalaxyInputDevicePDSA : PDSAEntityBase
  {
    #region Private Variables
    private Guid _InputDeviceUid = Guid.Empty;
    private Guid _InputDeviceSupervisionTypeUid = Guid.Empty;
    private Guid _GalaxyInputModeUid = Guid.Empty;
    private int _DelayDuration = 0;
    private Guid _GalaxyInputDelayTypeUid = Guid.Empty;
    private bool _DisableDisarmedOnOffLogEvents = false;
    private bool _IsNormalOpen = false;
    private short _NormalChangeThreshold = 0;
    private short _TroubleOpenThreshold = 0;
    private bool _AlternateVoltagesEnabled = false;
    private short _AlternateTroubleShortThreshold = 0;
    private short _AlternateNormalChangeThreshold = 0;
    private short _AlternateTroubleOpenThreshold = 0;
    private short _TroubleShortThreshold = 0;
    private string _InsertName = string.Empty;
    private DateTimeOffset _InsertDate = DateTimeOffset.Now;
    private string _UpdateName = string.Empty;
    private DateTimeOffset _UpdateDate = DateTimeOffset.Now;
    private short _ConcurrencyValue = 0;
    private Guid _InputDeviceUidOld = Guid.Empty;
    #endregion
    
    #region Public Properties
    /// <summary>
    /// Get/Set the Input Device Uid value
    /// </summary>
    
    [DataMember]
    
    public Guid InputDeviceUid 
    { 
      get { return _InputDeviceUid; }
      set 
      { 
        if(HasValueChanged(_InputDeviceUid, value, "InputDeviceUid"))
        {
          _InputDeviceUid = value; 
          RaisePropertyChanged("InputDeviceUid");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Input Device Supervision Type Uid value
    /// </summary>
    
    [DataMember]
    
    public Guid InputDeviceSupervisionTypeUid 
    { 
      get { return _InputDeviceSupervisionTypeUid; }
      set 
      { 
        if(HasValueChanged(_InputDeviceSupervisionTypeUid, value, "InputDeviceSupervisionTypeUid"))
        {
          _InputDeviceSupervisionTypeUid = value; 
          RaisePropertyChanged("InputDeviceSupervisionTypeUid");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Galaxy Input Mode Uid value
    /// </summary>
    
    [DataMember]
    
    public Guid GalaxyInputModeUid 
    { 
      get { return _GalaxyInputModeUid; }
      set 
      { 
        if(HasValueChanged(_GalaxyInputModeUid, value, "GalaxyInputModeUid"))
        {
          _GalaxyInputModeUid = value; 
          RaisePropertyChanged("GalaxyInputModeUid");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Delay Duration value
    /// </summary>
    
    [DataMember]
    
    public int DelayDuration 
    { 
      get { return _DelayDuration; }
      set 
      { 
        if(HasValueChanged(_DelayDuration, value, "DelayDuration"))
        {
          _DelayDuration = value; 
          RaisePropertyChanged("DelayDuration");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Galaxy Input Delay Type Uid value
    /// </summary>
    
    [DataMember]
    
    public Guid GalaxyInputDelayTypeUid 
    { 
      get { return _GalaxyInputDelayTypeUid; }
      set 
      { 
        if(HasValueChanged(_GalaxyInputDelayTypeUid, value, "GalaxyInputDelayTypeUid"))
        {
          _GalaxyInputDelayTypeUid = value; 
          RaisePropertyChanged("GalaxyInputDelayTypeUid");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Disable Disarmed On Off Log Events value
    /// </summary>
    
    [DataMember]
    
    public bool DisableDisarmedOnOffLogEvents 
    { 
      get { return _DisableDisarmedOnOffLogEvents; }
      set 
      { 
        if(HasValueChanged(_DisableDisarmedOnOffLogEvents, value, "DisableDisarmedOnOffLogEvents"))
        {
          _DisableDisarmedOnOffLogEvents = value; 
          RaisePropertyChanged("DisableDisarmedOnOffLogEvents");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Is Normal Open value
    /// </summary>
    
    [DataMember]
    
    public bool IsNormalOpen 
    { 
      get { return _IsNormalOpen; }
      set 
      { 
        if(HasValueChanged(_IsNormalOpen, value, "IsNormalOpen"))
        {
          _IsNormalOpen = value; 
          RaisePropertyChanged("IsNormalOpen");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Normal Change Threshold value
    /// </summary>
    
    [DataMember]
    
    public short NormalChangeThreshold 
    { 
      get { return _NormalChangeThreshold; }
      set 
      { 
        if(HasValueChanged(_NormalChangeThreshold, value, "NormalChangeThreshold"))
        {
          _NormalChangeThreshold = value; 
          RaisePropertyChanged("NormalChangeThreshold");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Trouble Open Threshold value
    /// </summary>
    
    [DataMember]
    
    public short TroubleOpenThreshold 
    { 
      get { return _TroubleOpenThreshold; }
      set 
      { 
        if(HasValueChanged(_TroubleOpenThreshold, value, "TroubleOpenThreshold"))
        {
          _TroubleOpenThreshold = value; 
          RaisePropertyChanged("TroubleOpenThreshold");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Alternate Voltages Enabled value
    /// </summary>
    
    [DataMember]
    
    public bool AlternateVoltagesEnabled 
    { 
      get { return _AlternateVoltagesEnabled; }
      set 
      { 
        if(HasValueChanged(_AlternateVoltagesEnabled, value, "AlternateVoltagesEnabled"))
        {
          _AlternateVoltagesEnabled = value; 
          RaisePropertyChanged("AlternateVoltagesEnabled");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Alternate Trouble Short Threshold value
    /// </summary>
    
    [DataMember]
    
    public short AlternateTroubleShortThreshold 
    { 
      get { return _AlternateTroubleShortThreshold; }
      set 
      { 
        if(HasValueChanged(_AlternateTroubleShortThreshold, value, "AlternateTroubleShortThreshold"))
        {
          _AlternateTroubleShortThreshold = value; 
          RaisePropertyChanged("AlternateTroubleShortThreshold");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Alternate Normal Change Threshold value
    /// </summary>
    
    [DataMember]
    
    public short AlternateNormalChangeThreshold 
    { 
      get { return _AlternateNormalChangeThreshold; }
      set 
      { 
        if(HasValueChanged(_AlternateNormalChangeThreshold, value, "AlternateNormalChangeThreshold"))
        {
          _AlternateNormalChangeThreshold = value; 
          RaisePropertyChanged("AlternateNormalChangeThreshold");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Alternate Trouble Open Threshold value
    /// </summary>
    
    [DataMember]
    
    public short AlternateTroubleOpenThreshold 
    { 
      get { return _AlternateTroubleOpenThreshold; }
      set 
      { 
        if(HasValueChanged(_AlternateTroubleOpenThreshold, value, "AlternateTroubleOpenThreshold"))
        {
          _AlternateTroubleOpenThreshold = value; 
          RaisePropertyChanged("AlternateTroubleOpenThreshold");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Trouble Short Threshold value
    /// </summary>
    
    [DataMember]
    
    public short TroubleShortThreshold 
    { 
      get { return _TroubleShortThreshold; }
      set 
      { 
        if(HasValueChanged(_TroubleShortThreshold, value, "TroubleShortThreshold"))
        {
          _TroubleShortThreshold = value; 
          RaisePropertyChanged("TroubleShortThreshold");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Insert Name value
    /// </summary>
    
    [DataMember]
    
    public string InsertName 
    { 
      get { return _InsertName; }
      set 
      { 
        if(HasValueChanged(_InsertName, value, "InsertName"))
        {
          _InsertName = value; 
          RaisePropertyChanged("InsertName");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Insert Date value
    /// </summary>
    
    [DataMember]
    
    public DateTimeOffset InsertDate 
    { 
      get { return _InsertDate; }
      set 
      { 
        if(HasValueChanged(_InsertDate, value, "InsertDate"))
        {
          _InsertDate = value; 
          RaisePropertyChanged("InsertDate");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Update Name value
    /// </summary>
    
    [DataMember]
    
    public string UpdateName 
    { 
      get { return _UpdateName; }
      set 
      { 
        if(HasValueChanged(_UpdateName, value, "UpdateName"))
        {
          _UpdateName = value; 
          RaisePropertyChanged("UpdateName");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Update Date value
    /// </summary>
    
    [DataMember]
    
    public DateTimeOffset UpdateDate 
    { 
      get { return _UpdateDate; }
      set 
      { 
        if(HasValueChanged(_UpdateDate, value, "UpdateDate"))
        {
          _UpdateDate = value; 
          RaisePropertyChanged("UpdateDate");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Concurrency Value value
    /// </summary>
    
    [DataMember]
    
    public short ConcurrencyValue 
    { 
      get { return _ConcurrencyValue; }
      set 
      { 
        if(HasValueChanged(_ConcurrencyValue, value, "ConcurrencyValue"))
        {
          _ConcurrencyValue = value; 
          RaisePropertyChanged("ConcurrencyValue");
        }
      } 
    }
        

        /// <summary>
    /// Get/Set the Input Device UidOld value
    /// </summary>
    
    public Guid InputDeviceUidOld
    { 
      get { return _InputDeviceUidOld; }
      set 
      { 
        if(HasValueChanged(_InputDeviceUidOld, value, "InputDeviceUid"))
        {
          _InputDeviceUidOld = value; 
          RaisePropertyChanged("InputDeviceUidOld");
        }
      } 
    }
    #endregion
  }
}
