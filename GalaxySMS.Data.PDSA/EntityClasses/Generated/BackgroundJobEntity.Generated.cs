using System;
using System.ComponentModel;
using System.Runtime.Serialization;


using PDSA.Validation;

namespace GalaxySMS.EntityLayer
{
  /// <summary>
  /// This class contains properties for each data value that makes up a BackgroundJobPDSA.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
  /// </summary>
  
  public partial class BackgroundJobPDSA : PDSAEntityBase
  {
    #region Private Variables
    private Guid _BackgroundJobUid = Guid.Empty;
    private Guid _UserId = Guid.Empty;
    private string _State = string.Empty;
    private string _JobType = string.Empty;
    private string _DataType = string.Empty;
    private Guid _DataItemUid = Guid.Empty;
    private string _InsertName = string.Empty;
    private DateTimeOffset _InsertDate = DateTimeOffset.Now;
    private string _UpdateName = string.Empty;
    private DateTimeOffset _UpdateDate = DateTimeOffset.Now;
    private short _ConcurrencyValue = 0;
    private Guid _EntityId = Guid.Empty;
    private string _ItemName = string.Empty;
    private Guid _BackgroundJobUidOld = Guid.Empty;
    #endregion
    
    #region Public Properties
    /// <summary>
    /// Get/Set the Background Job Uid value
    /// </summary>
    
    [DataMember]
    
    public Guid BackgroundJobUid 
    { 
      get { return _BackgroundJobUid; }
      set 
      { 
        if(HasValueChanged(_BackgroundJobUid, value, "BackgroundJobUid"))
        {
          _BackgroundJobUid = value; 
          RaisePropertyChanged("BackgroundJobUid");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the User Id value
    /// </summary>
    
    [DataMember]
    
    public Guid UserId 
    { 
      get { return _UserId; }
      set 
      { 
        if(HasValueChanged(_UserId, value, "UserId"))
        {
          _UserId = value; 
          RaisePropertyChanged("UserId");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the State value
    /// </summary>
    
    [DataMember]
    
    public string State 
    { 
      get { return _State; }
      set 
      { 
        if(HasValueChanged(_State, value, "State"))
        {
          _State = value; 
          RaisePropertyChanged("State");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Job Type value
    /// </summary>
    
    [DataMember]
    
    public string JobType 
    { 
      get { return _JobType; }
      set 
      { 
        if(HasValueChanged(_JobType, value, "JobType"))
        {
          _JobType = value; 
          RaisePropertyChanged("JobType");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Data Type value
    /// </summary>
    
    [DataMember]
    
    public string DataType 
    { 
      get { return _DataType; }
      set 
      { 
        if(HasValueChanged(_DataType, value, "DataType"))
        {
          _DataType = value; 
          RaisePropertyChanged("DataType");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Data Item Uid value
    /// </summary>
    
    [DataMember]
    
    public Guid DataItemUid 
    { 
      get { return _DataItemUid; }
      set 
      { 
        if(HasValueChanged(_DataItemUid, value, "DataItemUid"))
        {
          _DataItemUid = value; 
          RaisePropertyChanged("DataItemUid");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Insert Name value
    /// </summary>
    
    [DataMember]
    
    public string InsertName 
    { 
      get { return _InsertName; }
      set 
      { 
        if(HasValueChanged(_InsertName, value, "InsertName"))
        {
          _InsertName = value; 
          RaisePropertyChanged("InsertName");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Insert Date value
    /// </summary>
    
    [DataMember]
    
    public DateTimeOffset InsertDate 
    { 
      get { return _InsertDate; }
      set 
      { 
        if(HasValueChanged(_InsertDate, value, "InsertDate"))
        {
          _InsertDate = value; 
          RaisePropertyChanged("InsertDate");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Update Name value
    /// </summary>
    
    [DataMember]
    
    public string UpdateName 
    { 
      get { return _UpdateName; }
      set 
      { 
        if(HasValueChanged(_UpdateName, value, "UpdateName"))
        {
          _UpdateName = value; 
          RaisePropertyChanged("UpdateName");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Update Date value
    /// </summary>
    
    [DataMember]
    
    public DateTimeOffset UpdateDate 
    { 
      get { return _UpdateDate; }
      set 
      { 
        if(HasValueChanged(_UpdateDate, value, "UpdateDate"))
        {
          _UpdateDate = value; 
          RaisePropertyChanged("UpdateDate");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Concurrency Value value
    /// </summary>
    
    [DataMember]
    
    public short ConcurrencyValue 
    { 
      get { return _ConcurrencyValue; }
      set 
      { 
        if(HasValueChanged(_ConcurrencyValue, value, "ConcurrencyValue"))
        {
          _ConcurrencyValue = value; 
          RaisePropertyChanged("ConcurrencyValue");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Entity Id value
    /// </summary>
    
    [DataMember]
    
    public Guid EntityId 
    { 
      get { return _EntityId; }
      set 
      { 
        if(HasValueChanged(_EntityId, value, "EntityId"))
        {
          _EntityId = value; 
          RaisePropertyChanged("EntityId");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Item Name value
    /// </summary>
    
    [DataMember]
    
    public string ItemName 
    { 
      get { return _ItemName; }
      set 
      { 
        if(HasValueChanged(_ItemName, value, "ItemName"))
        {
          _ItemName = value; 
          RaisePropertyChanged("ItemName");
        }
      } 
    }
        

        /// <summary>
    /// Get/Set the Background Job UidOld value
    /// </summary>
    
    public Guid BackgroundJobUidOld
    { 
      get { return _BackgroundJobUidOld; }
      set 
      { 
        if(HasValueChanged(_BackgroundJobUidOld, value, "BackgroundJobUid"))
        {
          _BackgroundJobUidOld = value; 
          RaisePropertyChanged("BackgroundJobUidOld");
        }
      } 
    }
    #endregion
  }
}
