using System;
using System.ComponentModel;
using System.Runtime.Serialization;


using PDSA.Validation;

namespace GalaxySMS.EntityLayer
{
  /// <summary>
  /// This class contains properties for each data value that makes up a gcsUserPDSA.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
  /// </summary>
  
  public partial class gcsUserPDSA : PDSAEntityBase
  {
    #region Private Variables
    private Guid _UserId = Guid.Empty;
    private Guid _LanguageId = Guid.Empty;
    private string _FirstName = string.Empty;
    private string _LastName = string.Empty;
    private string _UserInitials = string.Empty;
    private string _Email = string.Empty;
    private string _UserName = string.Empty;
    private string _DisplayName = string.Empty;
    private string _UserPassword = string.Empty;
    private DateTimeOffset? _LastLoginDate = null;
    private string _UserTheme = string.Empty;
    private bool _IsLockedOut = false;
    private bool _IsActive = false;
    private bool _ResetPasswordFlag = false;
    private DateTimeOffset? _LastPasswordResetDate = null;
    private DateTime? _UserActivationDate = null;
    private DateTime? _UserExpirationDate = null;
    private bool _ImportedFromActiveDirectory = false;
    private byte[] _SecurityImage = null;
    private byte[] _UserImage = null;
    private string _InsertName = string.Empty;
    private DateTimeOffset _InsertDate = DateTimeOffset.Now;
    private string _UpdateName = string.Empty;
    private DateTimeOffset _UpdateDate = DateTimeOffset.Now;
    private short _ConcurrencyValue = 0;
    private Guid _ActiveDirectoryObjectGuid = Guid.Empty;
    private Guid _PrimaryEntityId = Guid.Empty;
    private int _AccessFailedCount = 0;
    private string _ConcurrencyStamp = string.Empty;
    private bool _EmailConfirmed = false;
    private bool _LockoutEnabled = false;
    private DateTimeOffset? _LockoutEnd = null;
    private string _NormalizedEmail = string.Empty;
    private string _NormalizedUserName = string.Empty;
    private string _PhoneNumber = string.Empty;
    private bool _PhoneNumberConfirmed = false;
    private string _SecurityStamp = string.Empty;
    private bool _TwoFactorEnabled = false;
    private string _PasswordHash = string.Empty;
    private DateTimeOffset? _IsLockedOutClearedDate = null;
    private int _PageNumber = 0;
    private int _PageSize = 0;
    private string _SortColumn = string.Empty;
    private bool _DescendingOrder = false;
    private int _TotalRowCount = 0;
    private string _LanguageName = string.Empty;
    private Guid _UserIdOld = Guid.Empty;
    #endregion
    
    #region Public Properties
    /// <summary>
    /// Get/Set the User Id value
    /// </summary>
    
    [DataMember]
    
    public Guid UserId 
    { 
      get { return _UserId; }
      set 
      { 
        if(HasValueChanged(_UserId, value, "UserId"))
        {
          _UserId = value; 
          RaisePropertyChanged("UserId");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Language Id value
    /// </summary>
    
    [DataMember]
    
    public Guid LanguageId 
    { 
      get { return _LanguageId; }
      set 
      { 
        if(HasValueChanged(_LanguageId, value, "LanguageId"))
        {
          _LanguageId = value; 
          RaisePropertyChanged("LanguageId");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the First Name value
    /// </summary>
    
    [DataMember]
    
    public string FirstName 
    { 
      get { return _FirstName; }
      set 
      { 
        if(HasValueChanged(_FirstName, value, "FirstName"))
        {
          _FirstName = value; 
          RaisePropertyChanged("FirstName");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Last Name value
    /// </summary>
    
    [DataMember]
    
    public string LastName 
    { 
      get { return _LastName; }
      set 
      { 
        if(HasValueChanged(_LastName, value, "LastName"))
        {
          _LastName = value; 
          RaisePropertyChanged("LastName");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the User Initials value
    /// </summary>
    
    [DataMember]
    
    public string UserInitials 
    { 
      get { return _UserInitials; }
      set 
      { 
        if(HasValueChanged(_UserInitials, value, "UserInitials"))
        {
          _UserInitials = value; 
          RaisePropertyChanged("UserInitials");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Email value
    /// </summary>
    
    [DataMember]
    
    public string Email 
    { 
      get { return _Email; }
      set 
      { 
        if(HasValueChanged(_Email, value, "Email"))
        {
          _Email = value; 
          RaisePropertyChanged("Email");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the User Name value
    /// </summary>
    
    [DataMember]
    
    public string UserName 
    { 
      get { return _UserName; }
      set 
      { 
        if(HasValueChanged(_UserName, value, "UserName"))
        {
          _UserName = value; 
          RaisePropertyChanged("UserName");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Display Name value
    /// </summary>
    
    [DataMember]
    
    public string DisplayName 
    { 
      get { return _DisplayName; }
      set 
      { 
        if(HasValueChanged(_DisplayName, value, "DisplayName"))
        {
          _DisplayName = value; 
          RaisePropertyChanged("DisplayName");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the User Password value
    /// </summary>
    
    [DataMember]
    
    public string UserPassword 
    { 
      get { return _UserPassword; }
      set 
      { 
        if(HasValueChanged(_UserPassword, value, "UserPassword"))
        {
          _UserPassword = value; 
          RaisePropertyChanged("UserPassword");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Last Login Date value
    /// </summary>
    
    [DataMember]
    
    public DateTimeOffset? LastLoginDate 
    { 
      get { return _LastLoginDate; }
      set 
      { 
        if(HasValueChanged(_LastLoginDate, value, "LastLoginDate"))
        {
          _LastLoginDate = value; 
          RaisePropertyChanged("LastLoginDate");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the User Theme value
    /// </summary>
    
    [DataMember]
    
    public string UserTheme 
    { 
      get { return _UserTheme; }
      set 
      { 
        if(HasValueChanged(_UserTheme, value, "UserTheme"))
        {
          _UserTheme = value; 
          RaisePropertyChanged("UserTheme");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Is Locked Out value
    /// </summary>
    
    [DataMember]
    
    public bool IsLockedOut 
    { 
      get { return _IsLockedOut; }
      set 
      { 
        if(HasValueChanged(_IsLockedOut, value, "IsLockedOut"))
        {
          _IsLockedOut = value; 
          RaisePropertyChanged("IsLockedOut");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Is Active value
    /// </summary>
    
    [DataMember]
    
    public bool IsActive 
    { 
      get { return _IsActive; }
      set 
      { 
        if(HasValueChanged(_IsActive, value, "IsActive"))
        {
          _IsActive = value; 
          RaisePropertyChanged("IsActive");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Reset Password Flag value
    /// </summary>
    
    [DataMember]
    
    public bool ResetPasswordFlag 
    { 
      get { return _ResetPasswordFlag; }
      set 
      { 
        if(HasValueChanged(_ResetPasswordFlag, value, "ResetPasswordFlag"))
        {
          _ResetPasswordFlag = value; 
          RaisePropertyChanged("ResetPasswordFlag");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Last Password Reset Date value
    /// </summary>
    
    [DataMember]
    
    public DateTimeOffset? LastPasswordResetDate 
    { 
      get { return _LastPasswordResetDate; }
      set 
      { 
        if(HasValueChanged(_LastPasswordResetDate, value, "LastPasswordResetDate"))
        {
          _LastPasswordResetDate = value; 
          RaisePropertyChanged("LastPasswordResetDate");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the User Activation Date value
    /// </summary>
    
    [DataMember]
    
    public DateTime? UserActivationDate 
    { 
      get { return _UserActivationDate; }
      set 
      { 
        if(HasValueChanged(_UserActivationDate, value, "UserActivationDate"))
        {
          _UserActivationDate = value; 
          RaisePropertyChanged("UserActivationDate");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the User Expiration Date value
    /// </summary>
    
    [DataMember]
    
    public DateTime? UserExpirationDate 
    { 
      get { return _UserExpirationDate; }
      set 
      { 
        if(HasValueChanged(_UserExpirationDate, value, "UserExpirationDate"))
        {
          _UserExpirationDate = value; 
          RaisePropertyChanged("UserExpirationDate");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Imported From Active Directory value
    /// </summary>
    
    [DataMember]
    
    public bool ImportedFromActiveDirectory 
    { 
      get { return _ImportedFromActiveDirectory; }
      set 
      { 
        if(HasValueChanged(_ImportedFromActiveDirectory, value, "ImportedFromActiveDirectory"))
        {
          _ImportedFromActiveDirectory = value; 
          RaisePropertyChanged("ImportedFromActiveDirectory");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Security Image value
    /// </summary>
    
    [DataMember]
    
    public byte[] SecurityImage 
    { 
      get { return _SecurityImage; }
      set 
      { 
        if(HasValueChanged(_SecurityImage, value, "SecurityImage"))
        {
          _SecurityImage = value; 
          RaisePropertyChanged("SecurityImage");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the User Image value
    /// </summary>
    
    [DataMember]
    
    public byte[] UserImage 
    { 
      get { return _UserImage; }
      set 
      { 
        if(HasValueChanged(_UserImage, value, "UserImage"))
        {
          _UserImage = value; 
          RaisePropertyChanged("UserImage");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Insert Name value
    /// </summary>
    
    [DataMember]
    
    public string InsertName 
    { 
      get { return _InsertName; }
      set 
      { 
        if(HasValueChanged(_InsertName, value, "InsertName"))
        {
          _InsertName = value; 
          RaisePropertyChanged("InsertName");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Insert Date value
    /// </summary>
    
    [DataMember]
    
    public DateTimeOffset InsertDate 
    { 
      get { return _InsertDate; }
      set 
      { 
        if(HasValueChanged(_InsertDate, value, "InsertDate"))
        {
          _InsertDate = value; 
          RaisePropertyChanged("InsertDate");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Update Name value
    /// </summary>
    
    [DataMember]
    
    public string UpdateName 
    { 
      get { return _UpdateName; }
      set 
      { 
        if(HasValueChanged(_UpdateName, value, "UpdateName"))
        {
          _UpdateName = value; 
          RaisePropertyChanged("UpdateName");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Update Date value
    /// </summary>
    
    [DataMember]
    
    public DateTimeOffset UpdateDate 
    { 
      get { return _UpdateDate; }
      set 
      { 
        if(HasValueChanged(_UpdateDate, value, "UpdateDate"))
        {
          _UpdateDate = value; 
          RaisePropertyChanged("UpdateDate");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Concurrency Value value
    /// </summary>
    
    [DataMember]
    
    public short ConcurrencyValue 
    { 
      get { return _ConcurrencyValue; }
      set 
      { 
        if(HasValueChanged(_ConcurrencyValue, value, "ConcurrencyValue"))
        {
          _ConcurrencyValue = value; 
          RaisePropertyChanged("ConcurrencyValue");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Active Directory Object Guid value
    /// </summary>
    
    [DataMember]
    
    public Guid ActiveDirectoryObjectGuid 
    { 
      get { return _ActiveDirectoryObjectGuid; }
      set 
      { 
        if(HasValueChanged(_ActiveDirectoryObjectGuid, value, "ActiveDirectoryObjectGuid"))
        {
          _ActiveDirectoryObjectGuid = value; 
          RaisePropertyChanged("ActiveDirectoryObjectGuid");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Primary Entity Id value
    /// </summary>
    
    [DataMember]
    
    public Guid PrimaryEntityId 
    { 
      get { return _PrimaryEntityId; }
      set 
      { 
        if(HasValueChanged(_PrimaryEntityId, value, "PrimaryEntityId"))
        {
          _PrimaryEntityId = value; 
          RaisePropertyChanged("PrimaryEntityId");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Access Failed Count value
    /// </summary>
    
    [DataMember]
    
    public int AccessFailedCount 
    { 
      get { return _AccessFailedCount; }
      set 
      { 
        if(HasValueChanged(_AccessFailedCount, value, "AccessFailedCount"))
        {
          _AccessFailedCount = value; 
          RaisePropertyChanged("AccessFailedCount");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Concurrency Stamp value
    /// </summary>
    
    [DataMember]
    
    public string ConcurrencyStamp 
    { 
      get { return _ConcurrencyStamp; }
      set 
      { 
        if(HasValueChanged(_ConcurrencyStamp, value, "ConcurrencyStamp"))
        {
          _ConcurrencyStamp = value; 
          RaisePropertyChanged("ConcurrencyStamp");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Email Confirmed value
    /// </summary>
    
    [DataMember]
    
    public bool EmailConfirmed 
    { 
      get { return _EmailConfirmed; }
      set 
      { 
        if(HasValueChanged(_EmailConfirmed, value, "EmailConfirmed"))
        {
          _EmailConfirmed = value; 
          RaisePropertyChanged("EmailConfirmed");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Lockout Enabled value
    /// </summary>
    
    [DataMember]
    
    public bool LockoutEnabled 
    { 
      get { return _LockoutEnabled; }
      set 
      { 
        if(HasValueChanged(_LockoutEnabled, value, "LockoutEnabled"))
        {
          _LockoutEnabled = value; 
          RaisePropertyChanged("LockoutEnabled");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Lockout End value
    /// </summary>
    
    [DataMember]
    
    public DateTimeOffset? LockoutEnd 
    { 
      get { return _LockoutEnd; }
      set 
      { 
        if(HasValueChanged(_LockoutEnd, value, "LockoutEnd"))
        {
          _LockoutEnd = value; 
          RaisePropertyChanged("LockoutEnd");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Normalized Email value
    /// </summary>
    
    [DataMember]
    
    public string NormalizedEmail 
    { 
      get { return _NormalizedEmail; }
      set 
      { 
        if(HasValueChanged(_NormalizedEmail, value, "NormalizedEmail"))
        {
          _NormalizedEmail = value; 
          RaisePropertyChanged("NormalizedEmail");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Normalized User Name value
    /// </summary>
    
    [DataMember]
    
    public string NormalizedUserName 
    { 
      get { return _NormalizedUserName; }
      set 
      { 
        if(HasValueChanged(_NormalizedUserName, value, "NormalizedUserName"))
        {
          _NormalizedUserName = value; 
          RaisePropertyChanged("NormalizedUserName");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Phone Number value
    /// </summary>
    
    [DataMember]
    
    public string PhoneNumber 
    { 
      get { return _PhoneNumber; }
      set 
      { 
        if(HasValueChanged(_PhoneNumber, value, "PhoneNumber"))
        {
          _PhoneNumber = value; 
          RaisePropertyChanged("PhoneNumber");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Phone Number Confirmed value
    /// </summary>
    
    [DataMember]
    
    public bool PhoneNumberConfirmed 
    { 
      get { return _PhoneNumberConfirmed; }
      set 
      { 
        if(HasValueChanged(_PhoneNumberConfirmed, value, "PhoneNumberConfirmed"))
        {
          _PhoneNumberConfirmed = value; 
          RaisePropertyChanged("PhoneNumberConfirmed");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Security Stamp value
    /// </summary>
    
    [DataMember]
    
    public string SecurityStamp 
    { 
      get { return _SecurityStamp; }
      set 
      { 
        if(HasValueChanged(_SecurityStamp, value, "SecurityStamp"))
        {
          _SecurityStamp = value; 
          RaisePropertyChanged("SecurityStamp");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Two Factor Enabled value
    /// </summary>
    
    [DataMember]
    
    public bool TwoFactorEnabled 
    { 
      get { return _TwoFactorEnabled; }
      set 
      { 
        if(HasValueChanged(_TwoFactorEnabled, value, "TwoFactorEnabled"))
        {
          _TwoFactorEnabled = value; 
          RaisePropertyChanged("TwoFactorEnabled");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Password Hash value
    /// </summary>
    
    [DataMember]
    
    public string PasswordHash 
    { 
      get { return _PasswordHash; }
      set 
      { 
        if(HasValueChanged(_PasswordHash, value, "PasswordHash"))
        {
          _PasswordHash = value; 
          RaisePropertyChanged("PasswordHash");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Is Locked Out Cleared Date value
    /// </summary>
    
    [DataMember]
    
    public DateTimeOffset? IsLockedOutClearedDate 
    { 
      get { return _IsLockedOutClearedDate; }
      set 
      { 
        if(HasValueChanged(_IsLockedOutClearedDate, value, "IsLockedOutClearedDate"))
        {
          _IsLockedOutClearedDate = value; 
          RaisePropertyChanged("IsLockedOutClearedDate");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Page Number value
    /// </summary>
    
    [DataMember]
    
    public int PageNumber 
    { 
      get { return _PageNumber; }
      set 
      { 
        if(HasValueChanged(_PageNumber, value, "PageNumber"))
        {
          _PageNumber = value; 
          RaisePropertyChanged("PageNumber");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Page Size value
    /// </summary>
    
    [DataMember]
    
    public int PageSize 
    { 
      get { return _PageSize; }
      set 
      { 
        if(HasValueChanged(_PageSize, value, "PageSize"))
        {
          _PageSize = value; 
          RaisePropertyChanged("PageSize");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Sort Column value
    /// </summary>
    
    [DataMember]
    
    public string SortColumn 
    { 
      get { return _SortColumn; }
      set 
      { 
        if(HasValueChanged(_SortColumn, value, "SortColumn"))
        {
          _SortColumn = value; 
          RaisePropertyChanged("SortColumn");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Descending Order value
    /// </summary>
    
    [DataMember]
    
    public bool DescendingOrder 
    { 
      get { return _DescendingOrder; }
      set 
      { 
        if(HasValueChanged(_DescendingOrder, value, "DescendingOrder"))
        {
          _DescendingOrder = value; 
          RaisePropertyChanged("DescendingOrder");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Total Row Count value
    /// </summary>
    
    [DataMember]
    
    public int TotalRowCount 
    { 
      get { return _TotalRowCount; }
      set 
      { 
        if(HasValueChanged(_TotalRowCount, value, "TotalRowCount"))
        {
          _TotalRowCount = value; 
          RaisePropertyChanged("TotalRowCount");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Language Name value
    /// </summary>
    
    [DataMember]
    
    public string LanguageName 
    { 
      get { return _LanguageName; }
      set 
      { 
        if(HasValueChanged(_LanguageName, value, "LanguageName"))
        {
          _LanguageName = value; 
          RaisePropertyChanged("LanguageName");
        }
      } 
    }
        

        /// <summary>
    /// Get/Set the User IdOld value
    /// </summary>
    
    public Guid UserIdOld
    { 
      get { return _UserIdOld; }
      set 
      { 
        if(HasValueChanged(_UserIdOld, value, "UserId"))
        {
          _UserIdOld = value; 
          RaisePropertyChanged("UserIdOld");
        }
      } 
    }
    #endregion
  }
}
