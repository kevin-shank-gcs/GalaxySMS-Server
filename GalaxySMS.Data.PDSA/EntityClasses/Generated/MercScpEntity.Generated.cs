using System;
using System.ComponentModel;
using System.Runtime.Serialization;


using PDSA.Validation;

namespace GalaxySMS.EntityLayer
{
  /// <summary>
  /// This class contains properties for each data value that makes up a MercScpPDSA.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
  /// </summary>
  
  public partial class MercScpPDSA : PDSAEntityBase
  {
    #region Private Variables
    private Guid _MercScpUid = Guid.Empty;
    private Guid _MercScpTypeUid = Guid.Empty;
    private Guid _MercScpGroupUid = Guid.Empty;
    private string _ScpName = string.Empty;
    private string _Location = string.Empty;
    private string _Description = string.Empty;
    private string _MacAddress = string.Empty;
    private ulong _Serialnumber = 0;
    private int _ConnectionType = 0;
    private string _IpAddress = string.Empty;
    private int _IpPort = 0;
    private string _AesPassword = string.Empty;
    private int _ScpReplyTimeout = 0;
    private int _TcpConnectRetryInterval = 0;
    private int _RetryCountBeforeOffline = 0;
    private int _OfflineTime = 0;
    private int _PollDelay = 0;
    private string _TimeZoneId = string.Empty;
    private bool _UseDaylightSavingsTime = false;
    private int _TransactionCount = 0;
    private int _TransactionUnreportedLimit = 0;
    private bool _DualPortEnabled = false;
    private int _ConnectionTypeAlt = 0;
    private int _RetryCountBeforeOfflineAlt = 0;
    private int _PollDelayAlt = 0;
    private string _IpAddressAlt = string.Empty;
    private int _IpPortAlt = 0;
    private bool _AllowConnection = false;
    private string _InsertName = string.Empty;
    private DateTimeOffset _InsertDate = DateTimeOffset.Now;
    private string _UpdateName = string.Empty;
    private DateTimeOffset _UpdateDate = DateTimeOffset.Now;
    private short _ConcurrencyValue = 0;
    private Guid _EntityId = Guid.Empty;
    private int _PageNumber = 0;
    private int _PageSize = 0;
    private string _SortColumn = string.Empty;
    private bool _DescendingOrder = false;
    private Guid _SiteUid = Guid.Empty;
    private int _TotalRowCount = 0;
    private bool? _Online = null;
    private DateTimeOffset? _LastConnected = null;
    private DateTimeOffset? _LastDisconnected = null;
    private Guid _MercScpUidOld = Guid.Empty;
    #endregion
    
    #region Public Properties
    /// <summary>
    /// Get/Set the Merc Scp Uid value
    /// </summary>
    
    [DataMember]
    
    public Guid MercScpUid 
    { 
      get { return _MercScpUid; }
      set 
      { 
        if(HasValueChanged(_MercScpUid, value, "MercScpUid"))
        {
          _MercScpUid = value; 
          RaisePropertyChanged("MercScpUid");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Merc Scp Type Uid value
    /// </summary>
    
    [DataMember]
    
    public Guid MercScpTypeUid 
    { 
      get { return _MercScpTypeUid; }
      set 
      { 
        if(HasValueChanged(_MercScpTypeUid, value, "MercScpTypeUid"))
        {
          _MercScpTypeUid = value; 
          RaisePropertyChanged("MercScpTypeUid");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Merc Scp Group Uid value
    /// </summary>
    
    [DataMember]
    
    public Guid MercScpGroupUid 
    { 
      get { return _MercScpGroupUid; }
      set 
      { 
        if(HasValueChanged(_MercScpGroupUid, value, "MercScpGroupUid"))
        {
          _MercScpGroupUid = value; 
          RaisePropertyChanged("MercScpGroupUid");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Scp Name value
    /// </summary>
    
    [DataMember]
    
    public string ScpName 
    { 
      get { return _ScpName; }
      set 
      { 
        if(HasValueChanged(_ScpName, value, "ScpName"))
        {
          _ScpName = value; 
          RaisePropertyChanged("ScpName");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Location value
    /// </summary>
    
    [DataMember]
    
    public string Location 
    { 
      get { return _Location; }
      set 
      { 
        if(HasValueChanged(_Location, value, "Location"))
        {
          _Location = value; 
          RaisePropertyChanged("Location");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Description value
    /// </summary>
    
    [DataMember]
    
    public string Description 
    { 
      get { return _Description; }
      set 
      { 
        if(HasValueChanged(_Description, value, "Description"))
        {
          _Description = value; 
          RaisePropertyChanged("Description");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Mac Address value
    /// </summary>
    
    [DataMember]
    
    public string MacAddress 
    { 
      get { return _MacAddress; }
      set 
      { 
        if(HasValueChanged(_MacAddress, value, "MacAddress"))
        {
          _MacAddress = value; 
          RaisePropertyChanged("MacAddress");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Serial Number value
    /// </summary>
    
    [DataMember]
    
    public ulong Serialnumber 
    { 
      get { return _Serialnumber; }
      set 
      { 
        if(HasValueChanged(_Serialnumber, value, "Serialnumber"))
        {
          _Serialnumber = value; 
          RaisePropertyChanged("Serialnumber");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Connection Type value
    /// </summary>
    
    [DataMember]
    
    public int ConnectionType 
    { 
      get { return _ConnectionType; }
      set 
      { 
        if(HasValueChanged(_ConnectionType, value, "ConnectionType"))
        {
          _ConnectionType = value; 
          RaisePropertyChanged("ConnectionType");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Ip Address value
    /// </summary>
    
    [DataMember]
    
    public string IpAddress 
    { 
      get { return _IpAddress; }
      set 
      { 
        if(HasValueChanged(_IpAddress, value, "IpAddress"))
        {
          _IpAddress = value; 
          RaisePropertyChanged("IpAddress");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Ip Port value
    /// </summary>
    
    [DataMember]
    
    public int IpPort 
    { 
      get { return _IpPort; }
      set 
      { 
        if(HasValueChanged(_IpPort, value, "IpPort"))
        {
          _IpPort = value; 
          RaisePropertyChanged("IpPort");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Aes Password value
    /// </summary>
    
    [DataMember]
    
    public string AesPassword 
    { 
      get { return _AesPassword; }
      set 
      { 
        if(HasValueChanged(_AesPassword, value, "AesPassword"))
        {
          _AesPassword = value; 
          RaisePropertyChanged("AesPassword");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Scp Reply Timeout value
    /// </summary>
    
    [DataMember]
    
    public int ScpReplyTimeout 
    { 
      get { return _ScpReplyTimeout; }
      set 
      { 
        if(HasValueChanged(_ScpReplyTimeout, value, "ScpReplyTimeout"))
        {
          _ScpReplyTimeout = value; 
          RaisePropertyChanged("ScpReplyTimeout");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Tcp Connect Retry Interval value
    /// </summary>
    
    [DataMember]
    
    public int TcpConnectRetryInterval 
    { 
      get { return _TcpConnectRetryInterval; }
      set 
      { 
        if(HasValueChanged(_TcpConnectRetryInterval, value, "TcpConnectRetryInterval"))
        {
          _TcpConnectRetryInterval = value; 
          RaisePropertyChanged("TcpConnectRetryInterval");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Retry Count Before Offline value
    /// </summary>
    
    [DataMember]
    
    public int RetryCountBeforeOffline 
    { 
      get { return _RetryCountBeforeOffline; }
      set 
      { 
        if(HasValueChanged(_RetryCountBeforeOffline, value, "RetryCountBeforeOffline"))
        {
          _RetryCountBeforeOffline = value; 
          RaisePropertyChanged("RetryCountBeforeOffline");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Offline Time value
    /// </summary>
    
    [DataMember]
    
    public int OfflineTime 
    { 
      get { return _OfflineTime; }
      set 
      { 
        if(HasValueChanged(_OfflineTime, value, "OfflineTime"))
        {
          _OfflineTime = value; 
          RaisePropertyChanged("OfflineTime");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Poll Delay value
    /// </summary>
    
    [DataMember]
    
    public int PollDelay 
    { 
      get { return _PollDelay; }
      set 
      { 
        if(HasValueChanged(_PollDelay, value, "PollDelay"))
        {
          _PollDelay = value; 
          RaisePropertyChanged("PollDelay");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Time Zone Id value
    /// </summary>
    
    [DataMember]
    
    public string TimeZoneId 
    { 
      get { return _TimeZoneId; }
      set 
      { 
        if(HasValueChanged(_TimeZoneId, value, "TimeZoneId"))
        {
          _TimeZoneId = value; 
          RaisePropertyChanged("TimeZoneId");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Use Daylight Savings Time value
    /// </summary>
    
    [DataMember]
    
    public bool UseDaylightSavingsTime 
    { 
      get { return _UseDaylightSavingsTime; }
      set 
      { 
        if(HasValueChanged(_UseDaylightSavingsTime, value, "UseDaylightSavingsTime"))
        {
          _UseDaylightSavingsTime = value; 
          RaisePropertyChanged("UseDaylightSavingsTime");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Transaction Count value
    /// </summary>
    
    [DataMember]
    
    public int TransactionCount 
    { 
      get { return _TransactionCount; }
      set 
      { 
        if(HasValueChanged(_TransactionCount, value, "TransactionCount"))
        {
          _TransactionCount = value; 
          RaisePropertyChanged("TransactionCount");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Transaction Unreported Limit value
    /// </summary>
    
    [DataMember]
    
    public int TransactionUnreportedLimit 
    { 
      get { return _TransactionUnreportedLimit; }
      set 
      { 
        if(HasValueChanged(_TransactionUnreportedLimit, value, "TransactionUnreportedLimit"))
        {
          _TransactionUnreportedLimit = value; 
          RaisePropertyChanged("TransactionUnreportedLimit");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Dual Port Enabled value
    /// </summary>
    
    [DataMember]
    
    public bool DualPortEnabled 
    { 
      get { return _DualPortEnabled; }
      set 
      { 
        if(HasValueChanged(_DualPortEnabled, value, "DualPortEnabled"))
        {
          _DualPortEnabled = value; 
          RaisePropertyChanged("DualPortEnabled");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Connection Type Alt value
    /// </summary>
    
    [DataMember]
    
    public int ConnectionTypeAlt 
    { 
      get { return _ConnectionTypeAlt; }
      set 
      { 
        if(HasValueChanged(_ConnectionTypeAlt, value, "ConnectionTypeAlt"))
        {
          _ConnectionTypeAlt = value; 
          RaisePropertyChanged("ConnectionTypeAlt");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Retry Count Before Offline Alt value
    /// </summary>
    
    [DataMember]
    
    public int RetryCountBeforeOfflineAlt 
    { 
      get { return _RetryCountBeforeOfflineAlt; }
      set 
      { 
        if(HasValueChanged(_RetryCountBeforeOfflineAlt, value, "RetryCountBeforeOfflineAlt"))
        {
          _RetryCountBeforeOfflineAlt = value; 
          RaisePropertyChanged("RetryCountBeforeOfflineAlt");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Poll Delay Alt value
    /// </summary>
    
    [DataMember]
    
    public int PollDelayAlt 
    { 
      get { return _PollDelayAlt; }
      set 
      { 
        if(HasValueChanged(_PollDelayAlt, value, "PollDelayAlt"))
        {
          _PollDelayAlt = value; 
          RaisePropertyChanged("PollDelayAlt");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Ip Address Alt value
    /// </summary>
    
    [DataMember]
    
    public string IpAddressAlt 
    { 
      get { return _IpAddressAlt; }
      set 
      { 
        if(HasValueChanged(_IpAddressAlt, value, "IpAddressAlt"))
        {
          _IpAddressAlt = value; 
          RaisePropertyChanged("IpAddressAlt");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Ip Port Alt value
    /// </summary>
    
    [DataMember]
    
    public int IpPortAlt 
    { 
      get { return _IpPortAlt; }
      set 
      { 
        if(HasValueChanged(_IpPortAlt, value, "IpPortAlt"))
        {
          _IpPortAlt = value; 
          RaisePropertyChanged("IpPortAlt");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Allow Connection value
    /// </summary>
    
    [DataMember]
    
    public bool AllowConnection 
    { 
      get { return _AllowConnection; }
      set 
      { 
        if(HasValueChanged(_AllowConnection, value, "AllowConnection"))
        {
          _AllowConnection = value; 
          RaisePropertyChanged("AllowConnection");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Insert Name value
    /// </summary>
    
    [DataMember]
    
    public string InsertName 
    { 
      get { return _InsertName; }
      set 
      { 
        if(HasValueChanged(_InsertName, value, "InsertName"))
        {
          _InsertName = value; 
          RaisePropertyChanged("InsertName");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Insert Date value
    /// </summary>
    
    [DataMember]
    
    public DateTimeOffset InsertDate 
    { 
      get { return _InsertDate; }
      set 
      { 
        if(HasValueChanged(_InsertDate, value, "InsertDate"))
        {
          _InsertDate = value; 
          RaisePropertyChanged("InsertDate");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Update Name value
    /// </summary>
    
    [DataMember]
    
    public string UpdateName 
    { 
      get { return _UpdateName; }
      set 
      { 
        if(HasValueChanged(_UpdateName, value, "UpdateName"))
        {
          _UpdateName = value; 
          RaisePropertyChanged("UpdateName");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Update Date value
    /// </summary>
    
    [DataMember]
    
    public DateTimeOffset UpdateDate 
    { 
      get { return _UpdateDate; }
      set 
      { 
        if(HasValueChanged(_UpdateDate, value, "UpdateDate"))
        {
          _UpdateDate = value; 
          RaisePropertyChanged("UpdateDate");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Concurrency Value value
    /// </summary>
    
    [DataMember]
    
    public short ConcurrencyValue 
    { 
      get { return _ConcurrencyValue; }
      set 
      { 
        if(HasValueChanged(_ConcurrencyValue, value, "ConcurrencyValue"))
        {
          _ConcurrencyValue = value; 
          RaisePropertyChanged("ConcurrencyValue");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Entity Id value
    /// </summary>
    
    [DataMember]
    
    public Guid EntityId 
    { 
      get { return _EntityId; }
      set 
      { 
        if(HasValueChanged(_EntityId, value, "EntityId"))
        {
          _EntityId = value; 
          RaisePropertyChanged("EntityId");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Page Number value
    /// </summary>
    
    [DataMember]
    
    public int PageNumber 
    { 
      get { return _PageNumber; }
      set 
      { 
        if(HasValueChanged(_PageNumber, value, "PageNumber"))
        {
          _PageNumber = value; 
          RaisePropertyChanged("PageNumber");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Page Size value
    /// </summary>
    
    [DataMember]
    
    public int PageSize 
    { 
      get { return _PageSize; }
      set 
      { 
        if(HasValueChanged(_PageSize, value, "PageSize"))
        {
          _PageSize = value; 
          RaisePropertyChanged("PageSize");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Sort Column value
    /// </summary>
    
    [DataMember]
    
    public string SortColumn 
    { 
      get { return _SortColumn; }
      set 
      { 
        if(HasValueChanged(_SortColumn, value, "SortColumn"))
        {
          _SortColumn = value; 
          RaisePropertyChanged("SortColumn");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Descending Order value
    /// </summary>
    
    [DataMember]
    
    public bool DescendingOrder 
    { 
      get { return _DescendingOrder; }
      set 
      { 
        if(HasValueChanged(_DescendingOrder, value, "DescendingOrder"))
        {
          _DescendingOrder = value; 
          RaisePropertyChanged("DescendingOrder");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Site Uid value
    /// </summary>
    
    [DataMember]
    
    public Guid SiteUid 
    { 
      get { return _SiteUid; }
      set 
      { 
        if(HasValueChanged(_SiteUid, value, "SiteUid"))
        {
          _SiteUid = value; 
          RaisePropertyChanged("SiteUid");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Total Row Count value
    /// </summary>
    
    [DataMember]
    
    public int TotalRowCount 
    { 
      get { return _TotalRowCount; }
      set 
      { 
        if(HasValueChanged(_TotalRowCount, value, "TotalRowCount"))
        {
          _TotalRowCount = value; 
          RaisePropertyChanged("TotalRowCount");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Online value
    /// </summary>
    
    [DataMember]
    
    public bool? Online 
    { 
      get { return _Online; }
      set 
      { 
        if(HasValueChanged(_Online, value, "Online"))
        {
          _Online = value; 
          RaisePropertyChanged("Online");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Last Connected value
    /// </summary>
    
    [DataMember]
    
    public DateTimeOffset? LastConnected 
    { 
      get { return _LastConnected; }
      set 
      { 
        if(HasValueChanged(_LastConnected, value, "LastConnected"))
        {
          _LastConnected = value; 
          RaisePropertyChanged("LastConnected");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Last Disconnected value
    /// </summary>
    
    [DataMember]
    
    public DateTimeOffset? LastDisconnected 
    { 
      get { return _LastDisconnected; }
      set 
      { 
        if(HasValueChanged(_LastDisconnected, value, "LastDisconnected"))
        {
          _LastDisconnected = value; 
          RaisePropertyChanged("LastDisconnected");
        }
      } 
    }
        

        /// <summary>
    /// Get/Set the Merc Scp UidOld value
    /// </summary>
    
    public Guid MercScpUidOld
    { 
      get { return _MercScpUidOld; }
      set 
      { 
        if(HasValueChanged(_MercScpUidOld, value, "MercScpUid"))
        {
          _MercScpUidOld = value; 
          RaisePropertyChanged("MercScpUidOld");
        }
      } 
    }
    #endregion
  }
}
