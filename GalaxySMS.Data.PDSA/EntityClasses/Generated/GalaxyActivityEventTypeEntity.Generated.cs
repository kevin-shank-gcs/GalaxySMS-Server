using System;
using System.ComponentModel;
using System.Runtime.Serialization;


using PDSA.Validation;

namespace GalaxySMS.EntityLayer
{
  /// <summary>
  /// This class contains properties for each data value that makes up a GalaxyActivityEventTypePDSA.
  /// This class is generated by the Haystack Code Generator for .NET.
  /// Do not modify this class or add methods as it is intended to be able to be re-generated at any time.
  /// </summary>
  
  public partial class GalaxyActivityEventTypePDSA : PDSAEntityBase
  {
    #region Private Variables
    private Guid _GalaxyActivityEventTypeUid = Guid.Empty;
    private Guid _DisplayResourceKey = Guid.Empty;
    private Guid _DescriptionResourceKey = Guid.Empty;
    private string _Display = string.Empty;
    private string _Description = string.Empty;
    private string _EventType = string.Empty;
    private int _ForeColor = 0;
    private string _InsertName = string.Empty;
    private DateTimeOffset _InsertDate = DateTimeOffset.Now;
    private string _UpdateName = string.Empty;
    private DateTimeOffset? _UpdateDate = null;
    private short _ConcurrencyValue = 0;
    private string _ForeColorHex = string.Empty;
    private string _CultureName = string.Empty;
    private string _DeviceType = string.Empty;
    private Guid _GalaxyActivityEventTypeUidOld = Guid.Empty;
    #endregion
    
    #region Public Properties
    /// <summary>
    /// Get/Set the Galaxy Activity Event Type Uid value
    /// </summary>
    
    [DataMember]
    
    public Guid GalaxyActivityEventTypeUid 
    { 
      get { return _GalaxyActivityEventTypeUid; }
      set 
      { 
        if(HasValueChanged(_GalaxyActivityEventTypeUid, value, "GalaxyActivityEventTypeUid"))
        {
          _GalaxyActivityEventTypeUid = value; 
          RaisePropertyChanged("GalaxyActivityEventTypeUid");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Display Resource Key value
    /// </summary>
    
    [DataMember]
    
    public Guid DisplayResourceKey 
    { 
      get { return _DisplayResourceKey; }
      set 
      { 
        if(HasValueChanged(_DisplayResourceKey, value, "DisplayResourceKey"))
        {
          _DisplayResourceKey = value; 
          RaisePropertyChanged("DisplayResourceKey");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Description Resource Key value
    /// </summary>
    
    [DataMember]
    
    public Guid DescriptionResourceKey 
    { 
      get { return _DescriptionResourceKey; }
      set 
      { 
        if(HasValueChanged(_DescriptionResourceKey, value, "DescriptionResourceKey"))
        {
          _DescriptionResourceKey = value; 
          RaisePropertyChanged("DescriptionResourceKey");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Display value
    /// </summary>
    
    [DataMember]
    
    public string Display 
    { 
      get { return _Display; }
      set 
      { 
        if(HasValueChanged(_Display, value, "Display"))
        {
          _Display = value; 
          RaisePropertyChanged("Display");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Description value
    /// </summary>
    
    [DataMember]
    
    public string Description 
    { 
      get { return _Description; }
      set 
      { 
        if(HasValueChanged(_Description, value, "Description"))
        {
          _Description = value; 
          RaisePropertyChanged("Description");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Event Type value
    /// </summary>
    
    [DataMember]
    
    public string EventType 
    { 
      get { return _EventType; }
      set 
      { 
        if(HasValueChanged(_EventType, value, "EventType"))
        {
          _EventType = value; 
          RaisePropertyChanged("EventType");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Fore Color value
    /// </summary>
    
    [DataMember]
    
    public int ForeColor 
    { 
      get { return _ForeColor; }
      set 
      { 
        if(HasValueChanged(_ForeColor, value, "ForeColor"))
        {
          _ForeColor = value; 
          RaisePropertyChanged("ForeColor");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Insert Name value
    /// </summary>
    
    [DataMember]
    
    public string InsertName 
    { 
      get { return _InsertName; }
      set 
      { 
        if(HasValueChanged(_InsertName, value, "InsertName"))
        {
          _InsertName = value; 
          RaisePropertyChanged("InsertName");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Insert Date value
    /// </summary>
    
    [DataMember]
    
    public DateTimeOffset InsertDate 
    { 
      get { return _InsertDate; }
      set 
      { 
        if(HasValueChanged(_InsertDate, value, "InsertDate"))
        {
          _InsertDate = value; 
          RaisePropertyChanged("InsertDate");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Update Name value
    /// </summary>
    
    [DataMember]
    
    public string UpdateName 
    { 
      get { return _UpdateName; }
      set 
      { 
        if(HasValueChanged(_UpdateName, value, "UpdateName"))
        {
          _UpdateName = value; 
          RaisePropertyChanged("UpdateName");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Update Date value
    /// </summary>
    
    [DataMember]
    
    public DateTimeOffset? UpdateDate 
    { 
      get { return _UpdateDate; }
      set 
      { 
        if(HasValueChanged(_UpdateDate, value, "UpdateDate"))
        {
          _UpdateDate = value; 
          RaisePropertyChanged("UpdateDate");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Concurrency Value value
    /// </summary>
    
    [DataMember]
    
    public short ConcurrencyValue 
    { 
      get { return _ConcurrencyValue; }
      set 
      { 
        if(HasValueChanged(_ConcurrencyValue, value, "ConcurrencyValue"))
        {
          _ConcurrencyValue = value; 
          RaisePropertyChanged("ConcurrencyValue");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Fore Color Hex value
    /// </summary>
    
    [DataMember]
    
    public string ForeColorHex 
    { 
      get { return _ForeColorHex; }
      set 
      { 
        if(HasValueChanged(_ForeColorHex, value, "ForeColorHex"))
        {
          _ForeColorHex = value; 
          RaisePropertyChanged("ForeColorHex");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Culture Name value
    /// </summary>
    
    [DataMember]
    
    public string CultureName 
    { 
      get { return _CultureName; }
      set 
      { 
        if(HasValueChanged(_CultureName, value, "CultureName"))
        {
          _CultureName = value; 
          RaisePropertyChanged("CultureName");
        }
      } 
    }
        
    /// <summary>
    /// Get/Set the Device Type value
    /// </summary>
    
    [DataMember]
    
    public string DeviceType 
    { 
      get { return _DeviceType; }
      set 
      { 
        if(HasValueChanged(_DeviceType, value, "DeviceType"))
        {
          _DeviceType = value; 
          RaisePropertyChanged("DeviceType");
        }
      } 
    }
        

        /// <summary>
    /// Get/Set the Galaxy Activity Event Type UidOld value
    /// </summary>
    
    public Guid GalaxyActivityEventTypeUidOld
    { 
      get { return _GalaxyActivityEventTypeUidOld; }
      set 
      { 
        if(HasValueChanged(_GalaxyActivityEventTypeUidOld, value, "GalaxyActivityEventTypeUid"))
        {
          _GalaxyActivityEventTypeUidOld = value; 
          RaisePropertyChanged("GalaxyActivityEventTypeUidOld");
        }
      } 
    }
    #endregion
  }
}
