using System;
using System.Collections.Generic;
using System.Linq;


namespace GalaxySMS.EntityLayer
{
  /// <summary>
  /// This class is an extension of the PersonalAccessGroupDynamicAccessGroupPDSA Entity class
  /// This class is generated by the Haystack Code Generator for .NET.
  /// You may add additional properties to this class.
  /// </summary>
  //[Serializable]
  public partial class PersonalAccessGroupDynamicAccessGroupPDSA
  {
    #region Constructor
    /// <summary>
    /// Constructor for the PersonalAccessGroupDynamicAccessGroupPDSA class
    /// </summary>
    public PersonalAccessGroupDynamicAccessGroupPDSA() : base()
    {
      ClassName = "PersonalAccessGroupDynamicAccessGroupPDSA";
    }
    #endregion

    #region RETURNVALUE property for Stored Procs
    private long _RETURNVALUE;

    /// <summary>
    /// Get/Set the RETURNVALUE from a stored procedure
    /// If you do not use Stored Procedures, feel free to comment this out
    /// </summary>
    public long RETURNVALUE
    {
      get { return _RETURNVALUE; }
      set
      {
        if (_RETURNVALUE != value)
        {
          _RETURNVALUE = value;
          RaisePropertyChanged("RETURNVALUE");
        }
      }
    }
    #endregion
        
    #region Override of ToString()
    /// <summary>
    /// Override the ToString() to display fields and field values.
    /// This helps when viewing Collection classes in Visual Studio
    /// </summary>
    /// <returns>A string with data from this class</returns>
    public override string ToString()
    {
      string ret = string.Empty;

      ret += "PersonalAccessGroupDynamicAccessGroupUid: " + PersonalAccessGroupDynamicAccessGroupUid.ToString() + " / ";
      ret += "InsertName: " + InsertName.ToString() + " / ";
      
      return ret;
    }
    #endregion
  }
  
  /// <summary>
  /// This class is used when you wish to create a collection of PersonalAccessGroupDynamicAccessGroupPDSA classes.
  /// You may add additional methods to this class.
  /// </summary>
  public class PersonalAccessGroupDynamicAccessGroupPDSACollection : List<PersonalAccessGroupDynamicAccessGroupPDSA>
  {
    /// <summary>
    /// Find a PersonalAccessGroupDynamicAccessGroupPDSA object
    /// </summary>
    /// <param name="personalAccessGroupDynamicAccessGroupUid">The Personal Access Group Dynamic Access Group Uid to find</param>
    /// <returns>A PersonalAccessGroupDynamicAccessGroupPDSA object</returns>
    public PersonalAccessGroupDynamicAccessGroupPDSA GetPersonalAccessGroupDynamicAccessGroupPDSA(Guid personalAccessGroupDynamicAccessGroupUid)
    {
      return Find(x => x.PersonalAccessGroupDynamicAccessGroupUid == personalAccessGroupDynamicAccessGroupUid);
    }
    
    /// <summary>
    /// Get all PersonalAccessGroupDynamicAccessGroupPDSA objects where IsDirty=True
    /// </summary>
    /// <returns>A List of PersonalAccessGroupDynamicAccessGroupPDSA Objects</returns>
    public List<PersonalAccessGroupDynamicAccessGroupPDSA> GetChanged()
    {
      return (from item in this
              where item.IsDirty == true
              select item).ToList<PersonalAccessGroupDynamicAccessGroupPDSA>();
    }
        
    /// <summary>
    /// Get all PersonalAccessGroupDynamicAccessGroupPDSA objects where IsSelected=True
    /// </summary>
    /// <returns>A List of PersonalAccessGroupDynamicAccessGroupPDSA Objects where IsSelected=True</returns>
    public List<PersonalAccessGroupDynamicAccessGroupPDSA> GetSelected()
    {
      return (from item in this
              where item.IsSelected == true
              select item).ToList<PersonalAccessGroupDynamicAccessGroupPDSA>();
    }

  }
}
