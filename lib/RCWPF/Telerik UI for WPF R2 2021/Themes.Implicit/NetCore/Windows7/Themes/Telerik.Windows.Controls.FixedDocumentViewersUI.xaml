<ResourceDictionary
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:telerikChromes="clr-namespace:Telerik.Windows.Controls.Chromes;assembly=Telerik.Windows.Controls"
        xmlns:animation="clr-namespace:Telerik.Windows.Controls.Animation;assembly=Telerik.Windows.Controls"
        xmlns:telerikNavigation="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls.Navigation"
        xmlns:navigation="clr-namespace:Telerik.Windows.Controls.Navigation;assembly=Telerik.Windows.Controls.Navigation"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:c="http://schemas.telerik.com/2008/xaml/compile"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="c"
        xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
        xmlns:telerik1="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls"
        xmlns:localization="clr-namespace:Telerik.Windows.Controls.Localization;assembly=Telerik.Windows.Controls"
        xmlns:treeView="clr-namespace:Telerik.Windows.Controls.TreeView;assembly=Telerik.Windows.Controls.Navigation"
        xmlns:animationNavigation="clr-namespace:Telerik.Windows.Controls.Animation;assembly=Telerik.Windows.Controls.Navigation"
        xmlns:telerikTabControl="clr-namespace:Telerik.Windows.Controls.TabControl;assembly=Telerik.Windows.Controls.Navigation"
        xmlns:telerikPrimitives="clr-namespace:Telerik.Windows.Controls.Primitives;assembly=Telerik.Windows.Controls"
        xmlns:telerikNavigationPrimitives="clr-namespace:Telerik.Windows.Controls.Primitives;assembly=Telerik.Windows.Controls.Navigation"
        xmlns:localConverters="clr-namespace:Telerik.Windows.Controls.FixedDocumentViewersUI.Converters;assembly=Telerik.Windows.Controls.FixedDocumentViewersUI"
        xmlns:converters="clr-namespace:Telerik.Windows.Documents.Converters;assembly=Telerik.Windows.Controls.FixedDocumentViewers"
        xmlns:fixedDocumentViewersUI="clr-namespace:Telerik.Windows.Controls.FixedDocumentViewersUI;assembly=Telerik.Windows.Controls.FixedDocumentViewersUI"
        xmlns:fixedDocumentViewersUIControls="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls.FixedDocumentViewersUI"
        xmlns:dialogs="clr-namespace:Telerik.Windows.Controls.FixedDocumentViewersUI.Dialogs;assembly=Telerik.Windows.Controls.FixedDocumentViewersUI">
    <CornerRadius x:Key="ValidationTooltipCornerRadius">1</CornerRadius>
    <CornerRadius x:Key="ValidationTooltip_CornerRadius">1</CornerRadius>
    <SolidColorBrush x:Key="ValidationTooltipForeground" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ValidationTooltipOuterBorder" Color="#FFDC000C"/>
    <SolidColorBrush x:Key="ValidationTooltipInnerBorder" Color="#FFFFFFFF"/>
    <LinearGradientBrush x:Key="ValidationTooltipBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFF424C" Offset="1"/>
        <GradientStop Color="#FFC92931"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ValidationInnerTick" Color="#FFCB576E"/>
    <SolidColorBrush x:Key="ValidationOuterTick" Color="#FFFFFFFF"/>
    <ControlTemplate x:Key="ErrorTooltipTemplate" TargetType="ToolTip">
        <Grid x:Name="RootVisual" HorizontalAlignment="Right" RenderTransformOrigin="0 0" Opacity="0" Margin="5 0">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0"/>
                        <VisualTransition To="Open" GeneratedDuration="0:0:0.2">
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="xform" Storyboard.TargetProperty="X" To="0" Duration="0:0:0.2">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase Amplitude=".3" EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Storyboard.TargetName="RootVisual" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2"/>
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="RootVisual" Storyboard.TargetProperty="Opacity" To="0" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="xform" Storyboard.TargetProperty="X" To="0" Duration="0"/>
                            <DoubleAnimation Storyboard.TargetName="RootVisual" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.RenderTransform>
                <TranslateTransform x:Name="xform" X="-25"/>
            </Grid.RenderTransform>
            <Border
                    MinHeight="22"
                    Background="{StaticResource ValidationTooltipBackground}"
                    BorderBrush="{StaticResource ValidationTooltipOuterBorder}"
                    BorderThickness="1"
                    CornerRadius="{StaticResource ValidationTooltipCornerRadius}">
                <Border BorderBrush="{StaticResource ValidationTooltipInnerBorder}" BorderThickness="1">
                    <ContentPresenter TextBlock.Foreground="{StaticResource ValidationTooltipForeground}" Content="{Binding ErrorContent}" Margin="4 0 4 1"/>
                </Border>
            </Border>
            <ContentControl/>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="ValidationTooltipTemplate">
        <Grid SnapsToDevicePixels="True" VerticalAlignment="Top">
            <Border Background="Transparent" HorizontalAlignment="Right" VerticalAlignment="Top" Width="3" Height="3"/>
            <AdornedElementPlaceholder x:Name="Holder"/>
            <Border BorderBrush="{StaticResource ValidationTooltipOuterBorder}" BorderThickness="1" CornerRadius="{StaticResource ValidationTooltip_CornerRadius}"/>
            <Path Data="M2,1 L6,1 6,5 Z" Fill="{StaticResource ValidationInnerTick}" Width="7" Height="7" HorizontalAlignment="Right" VerticalAlignment="Top"/>
            <Path Data="M0,0 L2,0 7,5 7,7 Z" Fill="{StaticResource ValidationOuterTick}" Width="7" Height="7" HorizontalAlignment="Right" VerticalAlignment="Top"/>
            <ToolTipService.ToolTip>
                <ToolTip x:Name="PART_ToolTip"
                        DataContext="{Binding RelativeSource={RelativeSource Mode=Self}, Path=PlacementTarget.DataContext}"
                        Template="{StaticResource ErrorTooltipTemplate}"
                        Placement="Right"/>
            </ToolTipService.ToolTip>
        </Grid>
    </ControlTemplate>
    <telerik1:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <telerik1:InvertedBooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter"/>
    <telerik1:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
    <sys:String x:Key="GlyphClose"></sys:String>
    <sys:String x:Key="GlyphPin"></sys:String>
    <sys:String x:Key="GlyphUnpin"></sys:String>
    <telerik1:ThicknessToOrientedThicknessConverter x:Key="ThicknessToOrientedThicknessConverter"/>
    <SolidColorBrush x:Key="ControlBackground_Disabled" Color="#FFF8F8F8"/>
    <LinearGradientBrush x:Key="TileView_ButtonBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF1E395B" Offset="0.004"/>
        <GradientStop Color="#FF8CA0B9" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TileView_ButtonBackground_MouseOver" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF3C596C"/>
        <GradientStop Color="#FFC3E4F5" Offset="1"/>
        <GradientStop Color="#FF86C8EB" Offset="0.5"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="BorderInnerBrush" Color="#FF979994"/>
    <SolidColorBrush x:Key="BorderOuterBrush" Color="#FFFCFCFC"/>
    <SolidColorBrush x:Key="FocusBrushBlack" Color="#FF000000"/>
    <SolidColorBrush x:Key="Header2ForegroundBrush" Color="#FF000000"/>
    <SolidColorBrush x:Key="InputTextBoxBackground" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="RadWindow_OuterBorder" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="RadWindow_InnerBorder" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="RadWindow_InnerMostBorder" Color="#FFA0AFC3"/>
    <SolidColorBrush x:Key="BorderLineOuterColor" Color="#26000000"/>
    <SolidColorBrush x:Key="BorderLineInnerColor" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="RadAlert_OuterStrokeBrush" Color="#34000000"/>
    <SolidColorBrush x:Key="RadAlert_InnerStrokeBrush" Color="#FFFFFFFF"/>
    <RadialGradientBrush x:Key="RadAlert_InnerBackgroundBrush">
        <GradientStop Color="#FFFFF000" Offset="0.026"/>
        <GradientStop Color="#FFFFDE00" Offset="1"/>
    </RadialGradientBrush>
    <SolidColorBrush x:Key="RadAlert_InnerMostStrokeBrush" Color="#1A000000"/>
    <SolidColorBrush x:Key="RadAlert_ExclamationMarkBackgroundBrush" Color="#FF000000"/>
    <SolidColorBrush x:Key="RadConfirm_OuterStrokeBrush" Color="#FFB3B3B3"/>
    <SolidColorBrush x:Key="RadConfirm_InnerStrokeBrush" Color="#FFFFFFFF"/>
    <RadialGradientBrush x:Key="RadConfirm_InnerBackgroundBrush" RadiusX="0.618667" RadiusY="0.61864" Center="0.483044,0.5" GradientOrigin="0.483044,0.5">
        <RadialGradientBrush.RelativeTransform>
            <TransformGroup/>
        </RadialGradientBrush.RelativeTransform>
        <GradientStop Color="#FF00BAFF" Offset="0"/>
        <GradientStop Color="#FF004BA5" Offset="1"/>
    </RadialGradientBrush>
    <SolidColorBrush x:Key="RadConfirm_QuestionMarkBackgroundBrush" Color="#FFFFFFFF"/>
    <SolidColorBrush Color="#0C000000" x:Key="BorderShadowColor1"/>
    <SolidColorBrush Color="#19000000" x:Key="BorderShadowColor2"/>
    <SolidColorBrush Color="#33000000" x:Key="BorderShadowColor3"/>
    <SolidColorBrush Color="#4C000000" x:Key="BorderShadowColor4"/>
    <SolidColorBrush Color="#99FFFFFF" x:Key="ButtonArea_InnerBorderBrush"/>
    <SolidColorBrush Color="#FFA0AFC3" x:Key="ButtonArea_OuterBorderBrush"/>
    <LinearGradientBrush x:Key="HeaderButton_FillBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFDFDFD" Offset="0"/>
        <GradientStop Color="#FFDDDDDD" Offset="0.5"/>
    </LinearGradientBrush>
    <SolidColorBrush Color="#7F000000" x:Key="HeaderButton_StrokeBrush"/>
    <LinearGradientBrush x:Key="HeaderButton_NormalBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#00000000" Offset="0"/>
        <GradientStop Color="#0F000000" Offset="0.5"/>
        <GradientStop Color="#30000000" Offset="0.5"/>
        <GradientStop Color="#14000000" Offset="0.845"/>
        <GradientStop Color="#19FFFFFF" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="CloseButton_NormalBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFF4CAC2" Offset="0"/>
        <GradientStop Color="#FFCC7D6D" Offset="0.5"/>
        <GradientStop Color="#FFB94630" Offset="0.5"/>
        <GradientStop Color="#FFF4B19C" Offset="1"/>
        <GradientStop Color="#FFBE7360" Offset="0.85"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HeaderButton_OverBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#CCBBDDF5" Offset="0"/>
        <GradientStop Color="#CC80B4D6" Offset="0.5"/>
        <GradientStop Color="#CC1C75A9" Offset="0.5"/>
        <GradientStop Color="#CC389CC9" Offset="0.85"/>
        <GradientStop Color="#CC29DDE8" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="CloseButton_OverBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFF2C7BF" Offset="0"/>
        <GradientStop Color="#FFE5715D" Offset="0.5"/>
        <GradientStop Color="#FFB62107" Offset="0.5"/>
        <GradientStop Color="#FFF1D86C" Offset="1"/>
        <GradientStop Color="#FFD26324" Offset="0.85"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HeaderButton_PressedBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFA2C1D4" Offset="0"/>
        <GradientStop Color="#FF4C7992" Offset="0.5"/>
        <GradientStop Color="#FF092847" Offset="0.5"/>
        <GradientStop Color="#FF1A5F80" Offset="0.85"/>
        <GradientStop Color="#FF12E7DE" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="CloseButton_PressedBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFC6A18A" Offset="0"/>
        <GradientStop Color="#FF974126" Offset="0.5"/>
        <GradientStop Color="#FF5E1002" Offset="0.5"/>
        <GradientStop Color="#FFE6BA15" Offset="1"/>
        <GradientStop Color="#FF764708" Offset="0.85"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="CloseButton_ShadowStrokeBrush" EndPoint="0.5,1" StartPoint="0.5,0" MappingMode="RelativeToBoundingBox">
        <GradientStop Color="#99FB631D" Offset="0.19"/>
        <GradientStop Color="#99FB631D" Offset="0.82"/>
        <GradientStop Color="#00FB631D" Offset="1"/>
        <GradientStop Color="#00FB631D" Offset="0"/>
        <GradientStop Color="#00FB631D" Offset="0.19"/>
        <GradientStop Color="#00FB631D" Offset="0.803"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="CloseButton_ShadowStroke2Brush" EndPoint="0.5,1" StartPoint="0.5,0" MappingMode="RelativeToBoundingBox">
        <GradientStop Color="#99F77032" Offset="0.172"/>
        <GradientStop Color="#99F67C43" Offset="0.82"/>
        <GradientStop Color="#00FF5000" Offset="1"/>
        <GradientStop Color="#00FB631D" Offset="0.06"/>
        <GradientStop Color="#00FF5000" Offset="0.172"/>
        <GradientStop Color="#00FF5000" Offset="0.92"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="CloseButton_ShadowOpacityMaskBrush" EndPoint="0,0.5" StartPoint="1,0.5" MappingMode="RelativeToBoundingBox">
        <GradientStop Color="#99FFFFFF" Offset="0.09"/>
        <GradientStop Color="#99FFFFFF" Offset="0.861"/>
        <GradientStop Color="#00FFFFFF" Offset="0"/>
        <GradientStop Color="#00FFFFFF" Offset="0.98682502596053989"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HeaderButton_ShadowStrokeBrush" EndPoint="0.5,1" StartPoint="0.5,0" MappingMode="RelativeToBoundingBox">
        <GradientStop Color="#FF00D2FF" Offset="0.19"/>
        <GradientStop Color="#FF00D2FF" Offset="0.753"/>
        <GradientStop Color="#0000D2FF" Offset="1"/>
        <GradientStop Color="#0000D2FF" Offset="0"/>
        <GradientStop Color="#0000D2FF" Offset="0.19"/>
        <GradientStop Color="#0000D2FF" Offset="0.752"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HeaderButton_ShadowStroke2Brush" EndPoint="0.5,1" StartPoint="0.5,0" MappingMode="RelativeToBoundingBox">
        <GradientStop Color="#FF00D2FF" Offset="0.19"/>
        <GradientStop Color="#FF00D2FF" Offset="0.81"/>
        <GradientStop Color="#0000D2FF" Offset="0.94"/>
        <GradientStop Color="#0000D2FF" Offset="0.06"/>
        <GradientStop Color="#0000D2FF" Offset="0.19"/>
        <GradientStop Color="#0000D2FF" Offset="0.791"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HeaderButton_ShadowOpacityMaskBrush" EndPoint="0,0.5" StartPoint="1,0.5" MappingMode="RelativeToBoundingBox">
        <GradientStop Color="#E5FFFFFF" Offset="0.15"/>
        <GradientStop Color="#E5FFFFFF" Offset="0.85"/>
        <GradientStop Color="#00FFFFFF" Offset="0"/>
        <GradientStop Color="#00FFFFFF" Offset="0.98682502596053989"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="RadHyperlinkButtonNormalBrush" Color="#006FFF"/>
    <SolidColorBrush x:Key="RadHyperlinkButtonHoverBrush" Color="#338CFF"/>
    <SolidColorBrush x:Key="RadHyperlinkButtonVisitedBrush" Color="#0047A3"/>
    <CornerRadius x:Key="SplitButton_LeftPartCornerRadius">2 0 0 2</CornerRadius>
    <CornerRadius x:Key="SplitButton_RightPartCornerRadius">0 2 2 0</CornerRadius>
    <CornerRadius x:Key="ControlOuterBorder_CornerRadius">2</CornerRadius>
    <CornerRadius x:Key="ControlInnerBorder_CornerRadius">1</CornerRadius>
    <SolidColorBrush x:Key="ControlOuterBorder" Color="#FFA0AFC3"/>
    <SolidColorBrush x:Key="ControlBackground" Color="#FFFCFCFC"/>
    <SolidColorBrush x:Key="ControlElement_Disabled" Color="#FFA7A7A7"/>
    <LinearGradientBrush x:Key="ControlInnerBorder_Disabled" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFAFAFB" Offset="0"/>
        <GradientStop Color="#FFF0F0F0" Offset="1"/>
    </LinearGradientBrush>
    <sys:Double x:Key="ControlElement_Height">4</sys:Double>
    <sys:Double x:Key="ControlElement_Width">7</sys:Double>
    <SolidColorBrush x:Key="ControlElement_Normal" Color="#FF1E395B"/>
    <SolidColorBrush x:Key="ControlElement_InnerNormal" Color="#00FFFFFF"/>
    <SolidColorBrush x:Key="ControlForeground_Normal" Color="#FF1E395B"/>
    <LinearGradientBrush x:Key="ControlOuterBorder_Normal" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFA9BFD6"/>
        <GradientStop Color="#FFCDDAEA" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ControlInnerBorder_Normal" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFAFCFD" Offset="0"/>
        <GradientStop Color="#FFE4EFFB" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ControlBackground_Normal" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFDFEFF" Offset="0"/>
        <GradientStop Color="#FFE6F0FA" Offset="0.5"/>
        <GradientStop Color="#FFDCE6F4" Offset="0.5"/>
        <GradientStop Color="#FFDDE9F7" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ControlOuterBorder_MouseOver" Color="#FFB8D6FB"/>
    <LinearGradientBrush x:Key="ControlInnerBorder_MouseOver" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="White" Offset="0"/>
        <GradientStop Color="#FFFAFCFD" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ControlBackground_MouseOver" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFBFCFD" Offset="0"/>
        <GradientStop Color="#FFF6F8FB" Offset="0.5"/>
        <GradientStop Color="#FFEDF2F9" Offset="0.5"/>
        <GradientStop Color="#FFE5EBF4" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ControlOuterBorder_Pressed" Color="#FFC0CBD9"/>
    <LinearGradientBrush x:Key="ControlInnerBorder_Pressed" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFC0CBD9" Offset="0"/>
        <GradientStop Color="#FFE6EAEE" Offset="0.5"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ControlBackground_Pressed" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFC0CBD9" Offset="0"/>
        <GradientStop Color="#FFE6EAEE" Offset="0.5"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ControlOuterBorder_Checked" Color="#FFC0CBD9"/>
    <SolidColorBrush x:Key="ControlInnerBorder_Checked" Color="#00000000"/>
    <LinearGradientBrush x:Key="ControlBackground_Checked" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFC0CBD9" Offset="0"/>
        <GradientStop Color="#FFE6EAEE" Offset="0.5"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ControlOuterBorder_MouseOverChecked" Color="#FFB8D6FB"/>
    <SolidColorBrush x:Key="ControlInnerBorder_MouseOverChecked" Color="#FFFCFCFC"/>
    <LinearGradientBrush x:Key="ControlBackground_MouseOverChecked" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFC5CFDC" Offset="0"/>
        <GradientStop Color="#FFEDF2F9" Offset="0.5"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ControlOuterBorder_Focused" Color="#FF6CAFFF"/>
    <SolidColorBrush x:Key="ControlInnerBorder_Focused" Color="Transparent"/>
    <SolidColorBrush x:Key="ControlSubItem_OuterBorder_MouseOver" Color="#FFB8D6FB"/>
    <LinearGradientBrush x:Key="ControlSubItem_InnerBorder_MouseOver" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFCFDFE"/>
        <GradientStop Color="#FFF2F7FE" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ControlSubItem_Background_MouseOver" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFAFBFD"/>
        <GradientStop Color="#FFEBF3FD" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ControlSubItem_OuterBorder_Selected" Color="#FF7DA2CE"/>
    <LinearGradientBrush x:Key="ControlSubItem_InnerBorder_Selected" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFEBF4FD"/>
        <GradientStop Color="#FFDBEAFD" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ControlSubItem_Background_Selected" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFDCEBFC"/>
        <GradientStop Color="#FFC1DBFC" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ControlSubItem_OuterBorder_UnFocus" Color="#FFdbdbdb"/>
    <SolidColorBrush x:Key="ControlSubItem_InnerBorder_UnFocus" Color="Transparent"/>
    <LinearGradientBrush x:Key="ControlSubItem_Background_UnFocus" EndPoint="0,1">
        <GradientStop Color="#FFf8f6f9" Offset="0"/>
        <GradientStop Color="#FFf0f0f0" Offset="1"/>
    </LinearGradientBrush>
    <CornerRadius x:Key="ControlSubItem_OuterCornerRadius">3</CornerRadius>
    <CornerRadius x:Key="ControlSubItem_InnerCornerRadius">2</CornerRadius>
    <Thickness x:Key="ControlSubItem_OuterBorderThickness">1</Thickness>
    <Thickness x:Key="ControlSubItem_InnerBorderThickness">1</Thickness>
    <SolidColorBrush x:Key="WindowOuterBorder" Color="#FFA0AFC3"/>
    <LinearGradientBrush x:Key="WindowBorderBackground" EndPoint="0.742,0.854" StartPoint="0.258,0.146">
        <GradientStop Color="#99F1F5FB" Offset="0"/>
        <GradientStop Color="#99F1F5FB" Offset="0.181"/>
        <GradientStop Color="#99F0F5FB" Offset="0.164"/>
        <GradientStop Color="#99FFFFFF" Offset="0.142"/>
        <GradientStop Color="#99F1F5FB" Offset="0.328"/>
        <GradientStop Color="#B2FFFFFF" Offset="0.358"/>
        <GradientStop Color="#99F1F5FB" Offset="0.478"/>
        <GradientStop Color="#99F1F5FB" Offset="1"/>
        <GradientStop Color="#99F1F5FB" Offset="0.578"/>
        <GradientStop Color="#BFFFFFFF" Offset="0.621"/>
        <GradientStop Color="#99F1F5FB" Offset="0.379"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="WindowBackground" Color="#FFFFFFFF"/>
    <LinearGradientBrush x:Key="WindowModalBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#5900BCFF" Offset="1"/>
        <GradientStop Color="#5900455E" Offset="0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="MenuPopupBackground" Color="#FFFCFCFC"/>
    <SolidColorBrush x:Key="MenuHeaderBackground" Color="#FFEFF7FC"/>
    <CornerRadius x:Key="SplitButton_TopPartCornerRadius">1 1 0 0</CornerRadius>
    <CornerRadius x:Key="SplitButton_BottomPartCornerRadius">0 0 1 1</CornerRadius>
    <SolidColorBrush x:Key="MenuItemBorderBrush" Color="#FFA0AFC3"/>
    <SolidColorBrush x:Key="TreeView_LineColor" Color="#FFCCCCCC"/>
    <SolidColorBrush x:Key="TreeView_ExpandElement_BorderBrush_Disabled" Color="#FFA7A7A7"/>
    <SolidColorBrush x:Key="TreeView_ExpandElement_Background_Normal" Color="White"/>
    <SolidColorBrush x:Key="TreeView_ExpandElement_Background_MouseOver" Color="White"/>
    <SolidColorBrush x:Key="TreeView_ExpandElement_Background_ExpandedStates" Color="#FF585858"/>
    <SolidColorBrush x:Key="TreeView_ExpandElement_Background_ExpandedStates_MouseOver" Color="White"/>
    <SolidColorBrush x:Key="TreeView_ExpandElement_BorderBrush_Normal" Color="#FFA6A6A6"/>
    <SolidColorBrush x:Key="TreeView_ExpandElement_BorderBrush_MouseOver" Color="#FF27C7F7"/>
    <SolidColorBrush x:Key="TreeView_ExpandElement_BorderBrush_ExpandedStates" Color="#FF262626"/>
    <SolidColorBrush x:Key="TreeView_ExpandElement_BorderBrush_ExpandedStates_MouseOver" Color="#FF27C7F7"/>
    <SolidColorBrush x:Key="TreeView_DragContainerFormOuterBorder" Color="#993C7FB1"/>
    <SolidColorBrush x:Key="RadTreeView_DragContainerFormInnerBorder" Color="#FFE9F6FD"/>
    <LinearGradientBrush x:Key="RadTreeView_DragContainerFormInnerBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFA7D9F5" Offset="1"/>
        <GradientStop Color="#FFEAF6FD" Offset="0"/>
        <GradientStop Color="#FFBEE6FD" Offset="0.51"/>
        <GradientStop Color="#FFD9F0FC" Offset="0.5"/>
    </LinearGradientBrush>
    <SolidColorBrush Color="#FF3C7FB1" x:Key="DragBetweenItemsFeedback_BackgroundBrush"/>
    <LinearGradientBrush x:Key="RadTreeView_DragTooltipFormFillBrush" EndPoint="0.5,0.034" StartPoint="0.5,0.966">
        <GradientStop Color="#FFE4E5F0" Offset="0"/>
        <GradientStop Color="#FFFFFFFF" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="RadTreeView_InsertDragIcon" Color="#FF308DD4"/>
    <LinearGradientBrush x:Key="RadTreeView_ForbiddenDragIcon" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF2F0101" Offset="0"/>
        <GradientStop Color="#FFFF0000" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="TabControl_DropDownHeaderBrush" Color="Transparent"/>
    <SolidColorBrush x:Key="TabControl_HeaderBackground" Color="#FFDFE9F5"/>
    <SolidColorBrush x:Key="TabControl_ContentBackground" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="TabControl_ContentBorderBrush" Color="#FFBAC9DB"/>
    <SolidColorBrush x:Key="TabItem_OuterBorder_Normal" Color="Transparent"/>
    <SolidColorBrush x:Key="TabItem_InnerBorder_Normal" Color="Transparent"/>
    <SolidColorBrush x:Key="TabItem_Background_Normal" Color="Transparent"/>
    <SolidColorBrush x:Key="TabItem_OuterBorder_MouseOver" Color="#FF91C3FF"/>
    <SolidColorBrush x:Key="TabItem_InnerBorder_MouseOver" Color="Transparent"/>
    <SolidColorBrush x:Key="TabItem_Background_MouseOver" Color="Transparent"/>
    <SolidColorBrush x:Key="TabItem_OuterBorder_Selected" Color="#FFBAC9DB"/>
    <SolidColorBrush x:Key="TabItem_InnerBorder_Selected" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="TabItem_Background_Selected" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="TabItem_OuterBorder_SelectedMouseOver" Color="#FF91C3FF"/>
    <Thickness x:Key="TabItem_Margin">0</Thickness>
    <Thickness x:Key="TabItem_Margin_Selected">0</Thickness>
    <Thickness x:Key="TabItem_OuterBorderThickness">1 1 1 0</Thickness>
    <Thickness x:Key="TabItem_InnerBorderThickness">1 1 1 0</Thickness>
    <CornerRadius x:Key="TabItem_OuterCornerRadius">2 2 0 0</CornerRadius>
    <CornerRadius x:Key="TabItem_InnerCornerRadius">1 1 0 0</CornerRadius>
    <ControlTemplate x:Key="GroupTemplate" TargetType="telerikNavigation:RadMenuGroupItem">
        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="HeaderStates">
                    <VisualState x:Name="EmptyHeader">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Header" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="VisibleHeader"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Border x:Name="Header" Background="{StaticResource MenuHeaderBackground}" Margin="1 1 1 0">
                    <ContentPresenter x:Name="Content"
                            Margin="4 2"
                            TextBlock.FontWeight="Bold"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            ContentSource="Header"/>
                </Border>
                <ScrollViewer x:Name="PART_ScrollViewer"
                        Grid.Row="1"
                        Margin="0"
                        BorderThickness="0"
                        Padding="0"
                        Background="Transparent"
                        HorizontalScrollBarVisibility="{Binding (ScrollViewer.HorizontalScrollBarVisibility), RelativeSource={RelativeSource TemplatedParent}}"
                        VerticalScrollBarVisibility="{Binding (ScrollViewer.VerticalScrollBarVisibility), RelativeSource={RelativeSource TemplatedParent}}"
                        Focusable="False">
                    <ItemsPresenter/>
                </ScrollViewer>
            </Grid>
        </Border>
    </ControlTemplate>
    <Style x:Key="RadMenuItemBaseStyle" TargetType="telerikNavigation:RadMenuItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{StaticResource MenuItemBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    </Style>
    <Style x:Key="RadMenuGroupItemStyle" TargetType="telerikNavigation:RadMenuGroupItem" BasedOn="{StaticResource RadMenuItemBaseStyle}">
        <Setter Property="telerik:SharedSizeScope.IsSharedSizeScope" Value="True"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Background" Value="{StaticResource MenuPopupBackground}"/>
        <Setter Property="BorderThickness" Value="0 0 0 1"/>
        <Setter Property="Template" Value="{StaticResource GroupTemplate}"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
    </Style>
    <Style x:Key="RadButtonStyle" TargetType="telerik1:RadButton">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource ControlForeground_Normal}"/>
        <Setter Property="Background" Value="{StaticResource ControlBackground_Normal}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlOuterBorder_Normal}"/>
        <Setter Property="CornerRadius" Value="{StaticResource ControlOuterBorder_CornerRadius}"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadButton">
                    <Grid SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OuterMouseOverBorder"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterPressedBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity" To="0"/>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity" To="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity" To="0"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" To="0.5"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BackgroundVisibility">
                                <VisualState x:Name="BackgroundIsHidden">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisual" Storyboard.TargetProperty="Opacity" To="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="BackgroundIsVisible"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStatesGroup">
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.150">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.115">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="OuterBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding CornerRadius}">
                            <Border
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{x:Null}"
                                    CornerRadius="{TemplateBinding InnerCornerRadius}"
                                    BorderBrush="{StaticResource ControlInnerBorder_Normal}"/>
                        </Border>
                        <Border x:Name="OuterMouseOverBorder"
                                Opacity="0"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{StaticResource ControlBackground_MouseOver}"
                                BorderBrush="{StaticResource ControlOuterBorder_MouseOver}">
                            <Border
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{x:Null}"
                                    CornerRadius="{TemplateBinding InnerCornerRadius}"
                                    BorderBrush="{StaticResource ControlInnerBorder_MouseOver}"/>
                        </Border>
                        <Border x:Name="OuterPressedBorder"
                                Visibility="Collapsed"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Background="{StaticResource ControlBackground_Pressed}"
                                BorderBrush="{StaticResource ControlOuterBorder_Pressed}">
                            <Border
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{x:Null}"
                                    CornerRadius="{TemplateBinding InnerCornerRadius}"
                                    BorderBrush="{StaticResource ControlInnerBorder_Pressed}"/>
                        </Border>
                        <Border x:Name="DisabledVisual"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Visibility="Collapsed"
                                BorderBrush="{StaticResource ControlInnerBorder_Disabled}"
                                Background="{StaticResource ControlBackground_Disabled}"/>
                        <ContentPresenter x:Name="Content"
                                TextBlock.Foreground="{TemplateBinding Foreground}"
                                Margin="{TemplateBinding Padding}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                RecognizesAccessKey="True"/>
                        <Border x:Name="CommonStatesWrapper">
                            <Border x:Name="FocusVisual"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    Visibility="Collapsed"
                                    BorderBrush="{StaticResource ControlOuterBorder_Focused}">
                                <Border BorderThickness="1" BorderBrush="{StaticResource ControlInnerBorder_Focused}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                            </Border>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadPathButtonPathStyle" TargetType="Path">
        <Setter Property="Fill" Value="{StaticResource ControlElement_Normal}"/>
        <Setter Property="Stretch" Value="Fill"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>
    <Style x:Key="RadPathButtonStyle" TargetType="telerik1:RadPathButton">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource ControlForeground_Normal}"/>
        <Setter Property="Background" Value="{StaticResource ControlBackground_Normal}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlOuterBorder_Normal}"/>
        <Setter Property="CornerRadius" Value="{StaticResource ControlOuterBorder_CornerRadius}"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="PathStyle" Value="{StaticResource RadPathButtonPathStyle}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadPathButton">
                    <Grid SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OuterMouseOverBorder"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterPressedBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity" To="0"/>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity" To="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity" To="0"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Path" Storyboard.TargetProperty="Opacity" To="0.5"/>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" To="0.5"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BackgroundVisibility">
                                <VisualState x:Name="BackgroundIsHidden">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisual" Storyboard.TargetProperty="Opacity" To="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="BackgroundIsVisible"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStatesGroup">
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.150">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.115">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ContentVisibilityStates">
                                <VisualState x:Name="Visible"/>
                                <VisualState x:Name="Collapsed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentHost" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="OuterBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding CornerRadius}">
                            <Border
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{x:Null}"
                                    CornerRadius="{TemplateBinding InnerCornerRadius}"
                                    BorderBrush="{StaticResource ControlInnerBorder_Normal}"/>
                        </Border>
                        <Border x:Name="OuterMouseOverBorder"
                                Opacity="0"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{StaticResource ControlBackground_MouseOver}"
                                BorderBrush="{StaticResource ControlOuterBorder_MouseOver}">
                            <Border
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{x:Null}"
                                    CornerRadius="{TemplateBinding InnerCornerRadius}"
                                    BorderBrush="{StaticResource ControlInnerBorder_MouseOver}"/>
                        </Border>
                        <Border x:Name="OuterPressedBorder"
                                Visibility="Collapsed"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Background="{StaticResource ControlBackground_Pressed}"
                                BorderBrush="{StaticResource ControlOuterBorder_Pressed}">
                            <Border
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{x:Null}"
                                    CornerRadius="{TemplateBinding InnerCornerRadius}"
                                    BorderBrush="{StaticResource ControlInnerBorder_Pressed}"/>
                        </Border>
                        <Border x:Name="DisabledVisual"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Visibility="Collapsed"
                                BorderBrush="{StaticResource ControlInnerBorder_Disabled}"
                                Background="{StaticResource ControlBackground_Disabled}"/>
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Path x:Name="Path" Grid.Column="1" Grid.Row="1" Style="{TemplateBinding PathStyle}" Data="{TemplateBinding PathGeometry}"/>
                            <Grid x:Name="ContentHost" Grid.Column="1" Grid.Row="2">
                                <ContentPresenter x:Name="Content"
                                        TextBlock.Foreground="{TemplateBinding Foreground}"
                                        Margin="{TemplateBinding ContentMargin}"
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                        RecognizesAccessKey="True"/>
                            </Grid>
                        </Grid>
                        <Border x:Name="CommonStatesWrapper">
                            <Border x:Name="FocusVisual"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    Visibility="Collapsed"
                                    BorderBrush="{StaticResource ControlOuterBorder_Focused}">
                                <Border BorderThickness="1" BorderBrush="{StaticResource ControlInnerBorder_Focused}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                            </Border>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!-- content placement -->
                        <Trigger Property="ContentPlacement" Value="Left">
                            <Setter TargetName="ContentHost" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="ContentHost" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="ContentHost" Property="Margin" Value="0 0 3 0"/>
                        </Trigger>
                        <Trigger Property="ContentPlacement" Value="Right">
                            <Setter TargetName="ContentHost" Property="Grid.Column" Value="2"/>
                            <Setter TargetName="ContentHost" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="ContentHost" Property="Margin" Value="3 0 0 0"/>
                        </Trigger>
                        <Trigger Property="ContentPlacement" Value="Top">
                            <Setter TargetName="ContentHost" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="ContentHost" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="ContentHost" Property="Margin" Value="0 0 0 3"/>
                        </Trigger>
                        <Trigger Property="ContentPlacement" Value="Bottom">
                            <Setter TargetName="ContentHost" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="ContentHost" Property="Grid.Row" Value="2"/>
                            <Setter TargetName="ContentHost" Property="Margin" Value="0 3 0 0"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ContentPlacement" Value="Left"/>
                                <Condition SourceName="Path" Property="HorizontalAlignment" Value="Right"/>
                                <Condition SourceName="Path" Property="Stretch" Value="None"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Path" Property="Grid.Column" Value="2"/>
                            <Setter TargetName="ContentHost" Property="Grid.Column" Value="1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ContentPlacement" Value="Right"/>
                                <Condition SourceName="Path" Property="HorizontalAlignment" Value="Left"/>
                                <Condition SourceName="Path" Property="Stretch" Value="None"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Path" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="ContentHost" Property="Grid.Column" Value="1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ContentPlacement" Value="Top"/>
                                <Condition SourceName="Path" Property="VerticalAlignment" Value="Bottom"/>
                                <Condition SourceName="Path" Property="Stretch" Value="None"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Path" Property="Grid.Row" Value="2"/>
                            <Setter TargetName="ContentHost" Property="Grid.Row" Value="1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ContentPlacement" Value="Bottom"/>
                                <Condition SourceName="Path" Property="VerticalAlignment" Value="Top"/>
                                <Condition SourceName="Path" Property="Stretch" Value="None"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Path" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="ContentHost" Property="Grid.Row" Value="1"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadToggleButtonStyle" TargetType="telerik1:RadToggleButton">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource ControlForeground_Normal}"/>
        <Setter Property="Background" Value="{StaticResource ControlBackground_Normal}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlOuterBorder_Normal}"/>
        <Setter Property="CornerRadius" Value="{StaticResource ControlOuterBorder_CornerRadius}"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadToggleButton">
                    <Grid SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OuterMouseOverBorder"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterPressedBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity" To="0"/>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity" To="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity" To="0"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" To="0.5"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DisabledChecked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" To="0.5"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOverChecked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ControlBackground_MouseOverChecked}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ControlOuterBorder_MouseOverChecked}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="InnerCheckedVisual" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ControlInnerBorder_MouseOverChecked}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BackgroundVisibility">
                                <VisualState x:Name="BackgroundIsHidden">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisual" Storyboard.TargetProperty="Opacity" To="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="BackgroundIsVisible"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="Opacity" To="1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStatesGroup">
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.150">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.115">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="OuterBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding CornerRadius}">
                            <Border
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{x:Null}"
                                    CornerRadius="{TemplateBinding InnerCornerRadius}"
                                    BorderBrush="{StaticResource ControlInnerBorder_Normal}"/>
                        </Border>
                        <Border x:Name="OuterMouseOverBorder"
                                Opacity="0"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{StaticResource ControlBackground_MouseOver}"
                                BorderBrush="{StaticResource ControlOuterBorder_MouseOver}">
                            <Border
                                    Background="{x:Null}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{StaticResource ControlInnerBorder_MouseOver}"
                                    CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                        </Border>
                        <Border x:Name="OuterPressedBorder"
                                Visibility="Collapsed"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{StaticResource ControlOuterBorder_Pressed}"
                                Background="{StaticResource ControlBackground_Pressed}">
                            <Border
                                    Background="{x:Null}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{StaticResource ControlInnerBorder_Pressed}"
                                    CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                        </Border>
                        <Border x:Name="DisabledVisual"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Visibility="Collapsed"
                                BorderBrush="{StaticResource ControlInnerBorder_Disabled}"
                                Background="{StaticResource ControlBackground_Disabled}"/>
                        <Grid x:Name="CommonStatesWrapper">
                            <Border x:Name="FocusVisual"
                                    Visibility="Collapsed"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    BorderBrush="{StaticResource ControlOuterBorder_Focused}">
                                <Border x:Name="FocusInnerVisual" BorderThickness="1" BorderBrush="{StaticResource ControlInnerBorder_Focused}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                            </Border>
                            <Border x:Name="CheckedVisual"
                                    Opacity="0"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    BorderBrush="{StaticResource ControlOuterBorder_Checked}"
                                    Background="{StaticResource ControlBackground_Checked}">
                                <Border x:Name="InnerCheckedVisual"
                                        Background="{x:Null}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{StaticResource ControlInnerBorder_Checked}"
                                        CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                            </Border>
                        </Grid>
                        <ContentPresenter x:Name="Content"
                                Margin="{TemplateBinding Padding}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                RecognizesAccessKey="True"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadRadioButtonStyle" TargetType="telerik1:RadRadioButton">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource ControlForeground_Normal}"/>
        <Setter Property="Background" Value="{StaticResource ControlBackground_Normal}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlOuterBorder_Normal}"/>
        <Setter Property="CornerRadius" Value="{StaticResource ControlOuterBorder_CornerRadius}"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationTooltipTemplate}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadRadioButton">
                    <Grid SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OuterMouseOverBorder"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterPressedBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity" To="0"/>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity" To="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity" To="0"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" To="0.5"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DisabledChecked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" To="0.5"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOverChecked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ControlBackground_MouseOverChecked}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ControlOuterBorder_MouseOverChecked}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="InnerCheckedVisual" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ControlInnerBorder_MouseOverChecked}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BackgroundVisibility">
                                <VisualState x:Name="BackgroundIsHidden">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisual" Storyboard.TargetProperty="Opacity" To="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="BackgroundIsVisible"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="Opacity" To="1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStatesGroup">
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.150">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.115">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="OuterBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding CornerRadius}">
                            <Border
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{x:Null}"
                                    CornerRadius="{TemplateBinding InnerCornerRadius}"
                                    BorderBrush="{StaticResource ControlInnerBorder_Normal}"/>
                        </Border>
                        <Border x:Name="OuterMouseOverBorder"
                                Opacity="0"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Background="{StaticResource ControlBackground_MouseOver}"
                                BorderBrush="{StaticResource ControlOuterBorder_MouseOver}">
                            <Border
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{x:Null}"
                                    CornerRadius="{TemplateBinding InnerCornerRadius}"
                                    BorderBrush="{StaticResource ControlInnerBorder_MouseOver}"/>
                        </Border>
                        <Border x:Name="OuterPressedBorder"
                                Visibility="Collapsed"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Background="{StaticResource ControlBackground_Pressed}"
                                BorderBrush="{StaticResource ControlOuterBorder_Pressed}">
                            <Border
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{x:Null}"
                                    CornerRadius="{TemplateBinding InnerCornerRadius}"
                                    BorderBrush="{StaticResource ControlInnerBorder_Pressed}"/>
                        </Border>
                        <Border x:Name="DisabledVisual"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Visibility="Collapsed"
                                BorderBrush="{StaticResource ControlInnerBorder_Disabled}"
                                Background="{StaticResource ControlBackground_Disabled}"/>
                        <Grid x:Name="CommonStatesWrapper">
                            <Border x:Name="FocusVisual"
                                    Visibility="Collapsed"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    BorderBrush="{StaticResource ControlOuterBorder_Focused}">
                                <Border x:Name="FocusInnerVisual" BorderThickness="1" BorderBrush="{StaticResource ControlInnerBorder_Focused}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                            </Border>
                            <Border x:Name="CheckedVisual"
                                    Opacity="0"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    BorderBrush="{StaticResource ControlOuterBorder_Checked}"
                                    Background="{StaticResource ControlBackground_Checked}">
                                <Border x:Name="InnerCheckedVisual"
                                        Background="{x:Null}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{StaticResource ControlInnerBorder_Checked}"
                                        CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                            </Border>
                        </Grid>
                        <ContentPresenter x:Name="Content"
                                Margin="{TemplateBinding Padding}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                RecognizesAccessKey="True"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadDropDownButtonStyle" TargetType="telerik1:RadDropDownButton">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="DropDownMinHeight" Value="3"/>
        <Setter Property="DropDownMinWidth" Value="3"/>
        <Setter Property="Foreground" Value="{StaticResource ControlForeground_Normal}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlOuterBorder_Normal}"/>
        <Setter Property="Background" Value="{StaticResource ControlBackground_Normal}"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="CornerRadius" Value="{StaticResource ControlOuterBorder_CornerRadius}"/>
        <Setter Property="IsOpen" Value="false"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadDropDownButton">
                    <Grid SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OuterMouseOverBorder"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterPressedBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity" To="0"/>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity" To="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity" To="0"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" To="0.5"/>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="DropDownIndicator" Storyboard.TargetProperty="Opacity" To="0.5"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BackgroundVisibility">
                                <VisualState x:Name="BackgroundIsHidden">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisual" Storyboard.TargetProperty="Opacity" To="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="BackgroundIsVisible"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="IsOpenState">
                                <VisualState x:Name="Closed"/>
                                <VisualState x:Name="Opened">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="Opacity" To="1"/>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity" To="0"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DropDownButtonPosition">
                                <VisualState x:Name="DropDownButtonAtLeft">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="DropDownIndicator" Storyboard.TargetProperty="(Grid.Column)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>0</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="DropDownIndicator" Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>1</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DropDownButtonAtTop">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="DropDownIndicator" Storyboard.TargetProperty="(Grid.Column)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>1</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="DropDownIndicator" Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>0</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DropDownButtonAtRight">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="DropDownIndicator" Storyboard.TargetProperty="(Grid.Column)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>2</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="DropDownIndicator" Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>1</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DropDownButtonAtBottom">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="DropDownIndicator" Storyboard.TargetProperty="(Grid.Column)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>1</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="DropDownIndicator" Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>2</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="PopupPlacementState">
                                <VisualState x:Name="PlacementBottom"/>
                                <VisualState x:Name="PlacementTop">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="DropDownIndicator" Storyboard.TargetProperty="RenderTransform">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <TransformGroup>
                                                        <RotateTransform Angle="180"/>
                                                    </TransformGroup>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PlacementLeft">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="DropDownIndicator" Storyboard.TargetProperty="RenderTransform">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <TransformGroup>
                                                        <RotateTransform Angle="90"/>
                                                    </TransformGroup>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PlacementRight">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="DropDownIndicator" Storyboard.TargetProperty="RenderTransform">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <TransformGroup>
                                                        <RotateTransform Angle="-90"/>
                                                    </TransformGroup>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStatesGroup">
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.150">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.115">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="OuterBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding CornerRadius}">
                            <Border
                                    Background="{x:Null}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{StaticResource ControlInnerBorder_Normal}"
                                    CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                        </Border>
                        <Border x:Name="OuterMouseOverBorder"
                                Opacity="0"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Background="{StaticResource ControlBackground_MouseOver}"
                                BorderBrush="{StaticResource ControlOuterBorder_MouseOver}">
                            <Border
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{x:Null}"
                                    CornerRadius="{TemplateBinding InnerCornerRadius}"
                                    BorderBrush="{StaticResource ControlInnerBorder_MouseOver}"/>
                        </Border>
                        <Border x:Name="OuterPressedBorder"
                                Visibility="Collapsed"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Background="{StaticResource ControlBackground_Pressed}"
                                BorderBrush="{StaticResource ControlOuterBorder_Pressed}">
                            <Border
                                    Background="{x:Null}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{StaticResource ControlInnerBorder_Pressed}"
                                    CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                        </Border>
                        <Border x:Name="DisabledVisual"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Visibility="Collapsed"
                                BorderBrush="{StaticResource ControlInnerBorder_Disabled}"
                                Background="{StaticResource ControlBackground_Disabled}"/>
                        <Border x:Name="CheckedVisual"
                                Opacity="0"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Background="{StaticResource ControlBackground_Checked}"
                                BorderBrush="{StaticResource ControlOuterBorder_Checked}">
                            <Border x:Name="InnerCheckedVisual"
                                    Background="{x:Null}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{StaticResource ControlInnerBorder_Checked}"
                                    CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                        </Border>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="Content"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    TextBlock.Foreground="{TemplateBinding Foreground}"
                                    Margin="{TemplateBinding Padding}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                    RecognizesAccessKey="True"/>
                            <Grid x:Name="DropDownIndicator"
                                    IsHitTestVisible="False"
                                    Grid.Column="1"
                                    Grid.Row="2"
                                    HorizontalAlignment="Center"
                                    Canvas.ZIndex="2"
                                    VerticalAlignment="Center"
                                    RenderTransformOrigin="0.5,0.5"
                                    Visibility="{TemplateBinding DropDownIndicatorVisibility}"
                                    Margin="5 3">
                                <Path
                                        Data="M0,0 L2,0 1,1 Z"
                                        Margin="0 2 0 0"
                                        Stretch="Fill"
                                        Width="{StaticResource ControlElement_Width}"
                                        Height="{StaticResource ControlElement_Height}"
                                        Fill="{StaticResource ControlElement_InnerNormal}"/>
                                <Path x:Name="Path"
                                        Data="M0,0 L2,0 1,1 Z"
                                        Margin="0 1"
                                        Fill="{StaticResource ControlElement_Normal}"
                                        Width="{StaticResource ControlElement_Width}"
                                        Height="{StaticResource ControlElement_Height}"
                                        Stretch="Fill"/>
                            </Grid>
                        </Grid>
                        <Popup x:Name="DropDownPopup" PopupAnimation="{TemplateBinding PopupAnimation}" AllowsTransparency="True" StaysOpen="False" Focusable="False" Placement="Bottom">
                            <Grid>
                                <Border x:Name="DropDownPopupBorder"
                                        BorderThickness="1"
                                        Width="{TemplateBinding DropDownWidth}"
                                        Height="{TemplateBinding DropDownHeight}"
                                        MinWidth="{TemplateBinding DropDownMinWidth}"
                                        MinHeight="{TemplateBinding DropDownMinHeight}"
                                        MaxWidth="{TemplateBinding DropDownMaxWidth}"
                                        MaxHeight="{TemplateBinding DropDownMaxHeight}"
                                        Background="{StaticResource ControlBackground}"
                                        BorderBrush="{StaticResource ControlOuterBorder}"
                                        CornerRadius="{StaticResource ControlOuterBorder_CornerRadius}">
                                    <ContentControl x:Name="DropDownPopupContent"
                                            Foreground="{TemplateBinding Foreground}"
                                            Content="{TemplateBinding DropDownContent}"
                                            HorizontalContentAlignment="Stretch"
                                            VerticalContentAlignment="Stretch"
                                            ContentTemplate="{TemplateBinding DropDownContentTemplate}"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext}"
                                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                            ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
                                </Border>
                            </Grid>
                        </Popup>
                        <Border x:Name="CommonStatesWrapper">
                            <Border x:Name="FocusVisual"
                                    Visibility="Collapsed"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    BorderBrush="{StaticResource ControlOuterBorder_Focused}">
                                <Border x:Name="FocusInnerVisual" BorderThickness="1" BorderBrush="{StaticResource ControlInnerBorder_Focused}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                            </Border>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadSplitButtonToggleButtonStyle" BasedOn="{StaticResource RadToggleButtonStyle}" TargetType="telerik1:RadToggleButton">
        <Setter Property="Foreground" Value="{StaticResource ControlElement_Normal}"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadToggleButton">
                    <Grid SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OuterMouseOverBorder"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterPressedBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity" To="0"/>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity" To="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity" To="0"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" To="0.5"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DisabledChecked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" To="0.5"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOverChecked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ControlBackground_MouseOverChecked}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ControlOuterBorder_MouseOverChecked}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="InnerCheckedVisual" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ControlInnerBorder_MouseOverChecked}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BackgroundVisibility">
                                <VisualState x:Name="BackgroundIsHidden">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisual" Storyboard.TargetProperty="Opacity" To="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="BackgroundIsVisible"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="Opacity" To="1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStatesGroup">
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.150">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.115">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="OuterBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding CornerRadius}">
                            <Border
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{x:Null}"
                                    CornerRadius="{TemplateBinding InnerCornerRadius}"
                                    BorderBrush="{StaticResource ControlInnerBorder_Normal}"/>
                        </Border>
                        <Border x:Name="OuterMouseOverBorder"
                                Opacity="0"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{StaticResource ControlBackground_MouseOver}"
                                BorderBrush="{StaticResource ControlOuterBorder_MouseOver}">
                            <Border
                                    Background="{x:Null}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{StaticResource ControlInnerBorder_MouseOver}"
                                    CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                        </Border>
                        <Border x:Name="OuterPressedBorder"
                                Visibility="Collapsed"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{StaticResource ControlOuterBorder_Pressed}"
                                Background="{StaticResource ControlBackground_Pressed}">
                            <Border
                                    Background="{x:Null}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{StaticResource ControlInnerBorder_Pressed}"
                                    CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                        </Border>
                        <Border x:Name="DisabledVisual"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Visibility="Collapsed"
                                BorderBrush="{StaticResource ControlInnerBorder_Disabled}"
                                Background="{StaticResource ControlBackground_Disabled}"/>
                        <Grid x:Name="CommonStatesWrapper">
                            <Border x:Name="FocusVisual"
                                    Visibility="Collapsed"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    BorderBrush="{StaticResource ControlOuterBorder_Focused}">
                                <Border x:Name="FocusInnerVisual" BorderThickness="1" BorderBrush="{StaticResource ControlInnerBorder_Focused}" CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                            </Border>
                            <Border x:Name="CheckedVisual"
                                    Opacity="0"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    BorderBrush="{StaticResource ControlOuterBorder_Checked}"
                                    Background="{StaticResource ControlBackground_Checked}">
                                <Border x:Name="InnerCheckedVisual"
                                        Background="{x:Null}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{StaticResource ControlInnerBorder_Checked}"
                                        CornerRadius="{TemplateBinding InnerCornerRadius}"/>
                            </Border>
                        </Grid>
                        <ContentPresenter x:Name="Content"
                                Content="{TemplateBinding Content}"
                                Margin="{TemplateBinding Padding}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                RecognizesAccessKey="True"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadSplitButtonStyle" TargetType="telerik1:RadSplitButton">
        <Setter Property="IsTabStop" Value="true"/>
        <Setter Property="IsOpen" Value="false"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ButtonPartStyle" Value="{StaticResource RadButtonStyle}"/>
        <Setter Property="TogglePartStyle" Value="{StaticResource RadSplitButtonToggleButtonStyle}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource ControlForeground_Normal}"/>
        <Setter Property="Background" Value="{StaticResource ControlBackground_Normal}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlOuterBorder_Normal}"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="CornerRadius" Value="{StaticResource ControlOuterBorder_CornerRadius}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadSplitButton">
                    <Grid SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard/>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MouseOverVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="IsCheckedState">
                                <VisualState x:Name="UnChecked"/>
                                <VisualState x:Name="Checked">
                                    <Storyboard/>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="IsOpenState">
                                <VisualState x:Name="Closed"/>
                                <VisualState x:Name="Opened">
                                    <Storyboard/>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="IsOpenOrChecked">
                                <VisualState x:Name="OpenOrChecked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ButtonPart" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ControlBackground_Checked}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonPart" Storyboard.TargetProperty="IsBackgroundVisible">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Boolean>True</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="CommonStatesWrapper" Storyboard.TargetProperty="Opacity" To="0"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="NotOpenNotChecked"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DropDownButtonPosition">
                                <VisualState x:Name="DropDownButtonAtLeft">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownPart" Storyboard.TargetProperty="(Grid.Column)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>0</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownPart" Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>1</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownPart" Storyboard.TargetProperty="Margin" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0 0 -1 0</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownPart" Storyboard.TargetProperty="CornerRadius" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SplitButton_LeftPartCornerRadius}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonPart" Storyboard.TargetProperty="CornerRadius" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SplitButton_RightPartCornerRadius}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DropDownButtonAtTop">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownPart" Storyboard.TargetProperty="(Grid.Column)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>1</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownPart" Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>0</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownPart" Storyboard.TargetProperty="Margin" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0 0 0 -1</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownPart" Storyboard.TargetProperty="CornerRadius" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SplitButton_TopPartCornerRadius}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonPart" Storyboard.TargetProperty="CornerRadius" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SplitButton_BottomPartCornerRadius}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DropDownButtonAtRight">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownPart" Storyboard.TargetProperty="(Grid.Column)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>2</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownPart" Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>1</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownPart" Storyboard.TargetProperty="Margin" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>-1 0 0 0</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DropDownButtonAtBottom">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownPart" Storyboard.TargetProperty="(Grid.Column)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>1</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownPart" Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>2</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownPart" Storyboard.TargetProperty="Margin" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0 -1 0 0</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownPart" Storyboard.TargetProperty="CornerRadius" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SplitButton_BottomPartCornerRadius}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonPart" Storyboard.TargetProperty="CornerRadius" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SplitButton_TopPartCornerRadius}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ButtonPartVisibility">
                                <VisualState x:Name="ButtonInvisible">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownPart" Storyboard.TargetProperty="Margin">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Thickness>0 0 0 0</Thickness>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownPart" Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>0</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownPart" Storyboard.TargetProperty="(Grid.RowSpan)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>3</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownPart" Storyboard.TargetProperty="(Grid.Column)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>0</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownPart" Storyboard.TargetProperty="(Grid.ColumnSpan)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Int32>3</sys:Int32>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonPart" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ButtonVisible"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BackgroundVisibility">
                                <VisualState x:Name="BackgroundIsHidden"/>
                                <VisualState x:Name="BackgroundIsVisible"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStatesGroup">
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.150">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Double>0</sys:Double>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.115">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Double>1</sys:Double>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <telerik1:RadButton x:Name="ButtonPart"
                                    IsTabStop="False"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Path=IsButtonPartVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                                    Background="{TemplateBinding Background}"
                                    Style="{TemplateBinding ButtonPartStyle}"
                                    Padding="{TemplateBinding Padding}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    IsBackgroundVisible="{TemplateBinding IsBackgroundVisible}"
                                    Foreground="{TemplateBinding Foreground}"
                                    FontSize="{TemplateBinding FontSize}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    MinHeight="{TemplateBinding MinHeight}"
                                    CornerRadius="{StaticResource SplitButton_LeftPartCornerRadius}"
                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                    Focusable="False"/>
                            <Border x:Name="CheckedVisual"
                                    Visibility="Collapsed"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Margin="1"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{StaticResource ControlInnerBorder_Checked}"
                                    Background="{x:Null}"
                                    CornerRadius="{StaticResource ControlInnerBorder_CornerRadius}"/>
                            <telerik1:RadToggleButton x:Name="DropDownPart"
                                    Margin="-1 0 0 0"
                                    Grid.Row="1"
                                    Grid.Column="2"
                                    IsTabStop="False"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Background="{TemplateBinding Background}"
                                    Style="{TemplateBinding TogglePartStyle}"
                                    FontSize="{TemplateBinding FontSize}"
                                    IsBackgroundVisible="{TemplateBinding IsBackgroundVisible}"
                                    Visibility="{TemplateBinding DropDownIndicatorVisibility}"
                                    IsChecked="{Binding Path=IsOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    MinHeight="9"
                                    MinWidth="15"
                                    CornerRadius="{StaticResource SplitButton_RightPartCornerRadius}"
                                    Focusable="False">
                                <Grid x:Name="PART_DropDownIndicatorInner"
                                        IsHitTestVisible="False"
                                        HorizontalAlignment="Center"
                                        Canvas.ZIndex="2"
                                        VerticalAlignment="Center"
                                        RenderTransformOrigin="0.5 0.5">
                                    <Path
                                            Data="M0,0 L2,0 1,1 Z"
                                            Margin="0 2 0 0"
                                            Stretch="Fill"
                                            Width="{StaticResource ControlElement_Width}"
                                            Height="{StaticResource ControlElement_Height}"
                                            Fill="{StaticResource ControlElement_InnerNormal}"/>
                                    <Path x:Name="Path"
                                            Fill="{Binding (TextElement.Foreground), RelativeSource={RelativeSource AncestorType=ContentPresenter}}"
                                            Margin="0 1"
                                            Data="M0,0 L2,0 1,1 Z"
                                            Width="{StaticResource ControlElement_Width}"
                                            Height="{StaticResource ControlElement_Height}"
                                            Stretch="Fill"/>
                                </Grid>
                            </telerik1:RadToggleButton>
                        </Grid>
                        <Border x:Name="MouseOverVisual"
                                Visibility="Collapsed"
                                Background="{x:Null}"
                                BorderThickness="1"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                IsHitTestVisible="False"
                                BorderBrush="{StaticResource ControlOuterBorder_Focused}"/>
                        <Border x:Name="CommonStatesWrapper" Visibility="{Binding Path=IsPressed, ElementName = DropDownPart, Converter={StaticResource InvertedBooleanToVisibilityConverter}}">
                            <Border x:Name="FocusVisual"
                                    Visibility="{Binding Path=IsPressed, ElementName = ButtonPart, Converter={StaticResource InvertedBooleanToVisibilityConverter}}"
                                    Background="{x:Null}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    Opacity="0"
                                    BorderBrush="{StaticResource ControlOuterBorder_Focused}">
                                <Border x:Name="FocusInnerVisual" BorderThickness="1" CornerRadius="{TemplateBinding InnerCornerRadius}" BorderBrush="{StaticResource ControlInnerBorder_Focused}"/>
                            </Border>
                        </Border>
                        <Popup x:Name="DropDownPopup" PopupAnimation="{TemplateBinding PopupAnimation}" AllowsTransparency="True" StaysOpen="False" Focusable="False" Placement="Bottom">
                            <Grid>
                                <Border x:Name="DropDownPopupBorder"
                                        BorderThickness="1"
                                        MinWidth="3"
                                        MinHeight="3"
                                        Width="{TemplateBinding DropDownWidth}"
                                        Height="{TemplateBinding DropDownHeight}"
                                        MaxWidth="{TemplateBinding DropDownMaxWidth}"
                                        MaxHeight="{TemplateBinding DropDownMaxHeight}"
                                        Background="{StaticResource ControlBackground}"
                                        BorderBrush="{StaticResource ControlOuterBorder}"
                                        CornerRadius="{StaticResource ControlOuterBorder_CornerRadius}">
                                    <ContentControl x:Name="DropDownPopupContent"
                                            Foreground="{TemplateBinding Foreground}"
                                            Content="{TemplateBinding DropDownContent}"
                                            ContentTemplate="{TemplateBinding DropDownContentTemplate}"
                                            HorizontalContentAlignment="Stretch"
                                            VerticalContentAlignment="Stretch"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext}"/>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="DropDownPlacement" Value="Bottom"/>
                        <Trigger Property="DropDownPlacement" Value="Top">
                            <Setter TargetName="PART_DropDownIndicatorInner" Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform Angle="180"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="DropDownPlacement" Value="Left">
                            <Setter TargetName="PART_DropDownIndicatorInner" Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform Angle="90"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="DropDownPlacement" Value="Right">
                            <Setter TargetName="PART_DropDownIndicatorInner" Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform Angle="-90"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="False">
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadHyperlinkButtonStyle" TargetType="telerik1:RadHyperlinkButton">
        <Setter Property="Foreground" Value="{StaticResource RadHyperlinkButtonNormalBrush}"/>
        <Setter Property="VisitedForeground" Value="{StaticResource RadHyperlinkButtonVisitedBrush}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadHyperlinkButton">
                    <Border x:Name="PART_Background"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{TemplateBinding CornerRadius}">
                        <TextBlock VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                            <Hyperlink x:Name="PART_Hyperlink"
                                    Command="{TemplateBinding Command}"
                                    AutomationProperties.Name="HyperlinkElement"
                                    CommandParameter="{TemplateBinding CommandParameter}"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontSize="{TemplateBinding FontSize}"
                                    TextDecorations="{x:Null}"
                                    Cursor="Hand"
                                    TargetName="{TemplateBinding TargetName}"
                                    NavigateUri="{TemplateBinding NavigateUri}"
                                    Foreground="{TemplateBinding Foreground}">
                                <ContentPresenter x:Name="ContentPresenter"
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                        ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
                            </Hyperlink>
                        </TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_Hyperlink" Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource RadHyperlinkButtonHoverBrush}"/>
                            <Setter TargetName="PART_Hyperlink" Property="TextDecorations" Value="Underline"/>
                        </Trigger>
                        <Trigger Property="IsVisited" Value="True">
                            <Setter TargetName="PART_Hyperlink" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=VisitedForeground}"/>
                            <Setter TargetName="PART_Hyperlink" Property="TextDecorations" Value="Underline"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="PART_Hyperlink" Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsVisited" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Hyperlink" Property="Foreground" Value="{StaticResource RadHyperlinkButtonHoverBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ContentPresenter" Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsBackgroundVisible" Value="False">
                            <Setter TargetName="PART_Background" Property="Background" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerik1:RadButton" BasedOn="{StaticResource RadButtonStyle}"/>
    <Style TargetType="telerik1:RadPathButton" BasedOn="{StaticResource RadPathButtonStyle}"/>
    <Style TargetType="telerik1:RadToggleButton" BasedOn="{StaticResource RadToggleButtonStyle}"/>
    <Style TargetType="telerik1:RadRadioButton" BasedOn="{StaticResource RadRadioButtonStyle}"/>
    <Style TargetType="telerik1:RadDropDownButton" BasedOn="{StaticResource RadDropDownButtonStyle}"/>
    <Style TargetType="telerik1:RadSplitButton" BasedOn="{StaticResource RadSplitButtonStyle}"/>
    <Style TargetType="telerik1:RadHyperlinkButton" BasedOn="{StaticResource RadHyperlinkButtonStyle}"/>
    <DataTemplate x:Key="AlertIconTemplate">
        <Grid Width="42" Height="42">
            <Path
                    Stretch="Fill"
                    StrokeThickness="5"
                    StrokeLineJoin="Round"
                    Stroke="{StaticResource RadAlert_OuterStrokeBrush}"
                    Data="F1 M 30.2,2.5L 2.5,50.5L 57.9,50.5L 30.2,2.5 Z"
                    Margin="0 0 0 1"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"/>
            <Path
                    Stretch="Fill"
                    StrokeThickness="4"
                    StrokeLineJoin="Round"
                    Fill="{StaticResource RadAlert_InnerBackgroundBrush}"
                    Stroke="{StaticResource RadAlert_InnerStrokeBrush}"
                    Data="F1 M 30.2,2.5L 2.5,50.5L 57.9,50.5L 30.2,2.5 Z"
                    Margin="0.5,0.5,0.5,1.5"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"/>
            <Path
                    Stretch="Fill"
                    StrokeLineJoin="Round"
                    Stroke="{StaticResource RadAlert_InnerMostStrokeBrush}"
                    Data="F1 M 30.2,5.5L 5.9,48.6L 54.4,48.6L 30.2,5.5 Z"
                    Margin="5"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"/>
            <Path
                    Stretch="Fill"
                    Fill="{StaticResource RadAlert_ExclamationMarkBackgroundBrush}"
                    Data="F1 M 30.6,34.7L 30,34.7C 29.9,33.5 29.7,32.1 29.3,30.4L 28.4,27C 28,25 27.7,23.5 27.7,22.7C 27.7,21.9 28,21.2 28.4,20.7C 28.9,20.2 29.5,20 30.3,20C 31,20 31.6,20.2 32.1,20.7C 32.6,21.2 32.8,21.9 32.8,22.6C 32.8,23.4 32.6,24.9 32.1,27L 31.2,30.4C 30.9,31.6 30.7,33.1 30.6,34.7 Z M 30.3,37C 31,37 31.6,37.2 32.1,37.7C 32.6,38.2 32.8,38.8 32.8,39.5C 32.8,40.2 32.6,40.8 32.1,41.3C 31.6,41.8 31,42.1 30.3,42.1C 29.6,42.1 29,41.8 28.5,41.3C 28,40.8 27.7,40.2 27.7,39.5C 27.7,38.8 28,38.2 28.5,37.7C 29,37.2 29.6,37 30.3,37 Z"
                    Margin="17 15 17 8"/>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="ConfirmIconTemplate">
        <Grid Width="42" Height="42">
            <Path
                    Stretch="Fill"
                    StrokeThickness="4"
                    StrokeMiterLimit="3"
                    Stroke="{StaticResource RadConfirm_OuterStrokeBrush}"
                    Data="F1 M 10224,10026.7C 10224,10048.8 10206.1,10066.7 10184,10066.7C 10161.9,10066.7 10144,10048.8 10144,10026.7C 10144,10004.6 10161.9,9986.6 10184,9986.6C 10206.1,9986.6 10224,10004.6 10224,10026.7 Z"
                    Margin="0 1 0 -1"/>
            <Path
                    Stretch="Fill"
                    Fill="{StaticResource RadConfirm_InnerBackgroundBrush}"
                    Data="F1 M 10144,10026.7C 10144,10048.8 10161.9,10066.7 10184,10066.7L 10184,10066.7C 10206.1,10066.7 10224,10048.8 10224,10026.7L 10224,10026.7C 10224,10004.6 10206.1,9986.6 10184,9986.6L 10184,9986.6C 10161.9,9986.6 10144,10004.6 10144,10026.7 Z"
                    Margin="3"/>
            <Path
                    Stretch="Fill"
                    StrokeThickness="4"
                    StrokeMiterLimit="3"
                    Stroke="{StaticResource RadConfirm_InnerStrokeBrush}"
                    Data="F1 M 10224,10026.7C 10224,10048.8 10206.1,10066.7 10184,10066.7C 10161.9,10066.7 10144,10048.8 10144,10026.7C 10144,10004.6 10161.9,9986.67 10184,9986.67C 10206.1,9986.67 10224,10004.6 10224,10026.7 Z"/>
            <Path
                    Stretch="Fill"
                    Fill="{StaticResource RadConfirm_QuestionMarkBackgroundBrush}"
                    Data="F1 M 10178,10044.1C 10178,10041.5 10179.7,10039.7 10182,10039.7C 10184.5,10039.7 10186.1,10041.5 10186.1,10044.1C 10186.1,10046.5 10184.5,10048.3 10182,10048.3C 10179.6,10048.3 10178,10046.5 10178,10044.1 Z M 10179.4,10034.4L 10179.3,10032.6C 10178.9,10028.9 10180.1,10024.8 10183.5,10020.7C 10186.6,10017 10188.4,10014.4 10188.4,10011.3C 10188.4,10007.7 10186.2,10005.4 10181.8,10005.3C 10179.3,10005.3 10176.6,10006.2 10174.9,10007.5L 10173.2,10003.1C 10175.6,10001.5 10179.4,10000.4 10183.1,10000.4C 10191,10000.4 10194.6,10005.3 10194.6,10010.5C 10194.6,10015.2 10191.9,10018.6 10188.6,10022.5C 10185.6,10026.1 10184.5,10029.1 10184.7,10032.7L 10184.9,10034.4L 10179.4,10034.4 Z"
                    Margin="15 9"/>
        </Grid>
    </DataTemplate>
    <Style x:Key="WindowResizeThumbStyle" TargetType="Thumb">
        <Setter Property="MinWidth" Value="5"/>
        <Setter Property="MinHeight" Value="5"/>
        <Setter Property="Margin" Value="-2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Rectangle Fill="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="WindowHeaderButtonStyle" TargetType="telerik:RadButton">
        <Setter Property="IsEnabled" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="MinWidth" Value="5"/>
        <Setter Property="MinHeight" Value="5"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButton_OverBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ShadowOver" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource HeaderButton_PressedBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ShadowOver" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                                <VisualState x:Name="Normal"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{StaticResource ButtonArea_OuterBorderBrush}" Width="25" HorizontalAlignment="Left" BorderThickness="0 0 1 0">
                            <Border x:Name="OuterBorder" Background="{StaticResource HeaderButton_NormalBackgroundBrush}">
                                <Border BorderBrush="#99FFFFFF" BorderThickness="1"/>
                            </Border>
                        </Border>
                        <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                        <StackPanel Visibility="Collapsed" x:Name="ShadowOver" IsHitTestVisible="False" Width="34.175" Height="36.089" Margin="-22 -5 -20 -15">
                            <StackPanel IsHitTestVisible="False">
                                <Rectangle
                                        IsHitTestVisible="False"
                                        Stroke="{StaticResource HeaderButton_ShadowStrokeBrush}"
                                        OpacityMask="{StaticResource HeaderButton_ShadowOpacityMaskBrush}"
                                        StrokeThickness="10"
                                        HorizontalAlignment="Left"
                                        Margin="0"
                                        VerticalAlignment="Top"
                                        Width="34.175"
                                        Height="25.915"
                                        RadiusX="5"
                                        RadiusY="5"/>
                                <Rectangle
                                        IsHitTestVisible="False"
                                        Stroke="{StaticResource HeaderButton_ShadowStroke2Brush}"
                                        StrokeThickness="10"
                                        HorizontalAlignment="Left"
                                        Margin="9 -33 -8 0"
                                        VerticalAlignment="Top"
                                        Width="16.163"
                                        Height="36.415"
                                        RenderTransformOrigin="0.5,0.5">
                                    <Rectangle.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="0.99246469169824569" ScaleY="1.0075925202828731"/>
                                            <SkewTransform AngleX="0" AngleY="0"/>
                                            <RotateTransform Angle="90"/>
                                            <TranslateTransform X="0" Y="0"/>
                                        </TransformGroup>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CloseButtonStyle" TargetType="telerik:RadButton">
        <Setter Property="IsEnabled" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="MinWidth" Value="5"/>
        <Setter Property="MinHeight" Value="5"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik:RadButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CloseButton_OverBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ShadowOver" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CloseButton_PressedBackgroundBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                                <VisualState x:Name="Normal"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="OuterBorder" HorizontalAlignment="Left" Width="39" Background="{StaticResource CloseButton_NormalBackgroundBrush}" CornerRadius="0 0 6 0">
                            <Border CornerRadius="0 0 3 0" BorderBrush="#99FFFFFF" BorderThickness="1"/>
                        </Border>
                        <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                        <StackPanel Visibility="Collapsed" x:Name="ShadowOver" IsHitTestVisible="False" Width="53.57" Height="41.695" Margin="-20 -4 -15 -15">
                            <Rectangle
                                    Stroke="{StaticResource CloseButton_ShadowStrokeBrush}"
                                    OpacityMask="{StaticResource CloseButton_ShadowOpacityMaskBrush}"
                                    RadiusX="4"
                                    RadiusY="4"
                                    StrokeThickness="10"
                                    HorizontalAlignment="Left"
                                    Margin="0"
                                    VerticalAlignment="Top"
                                    Width="53.57"
                                    Height="25.915"/>
                            <Rectangle
                                    Stroke="{StaticResource CloseButton_ShadowStroke2Brush}"
                                    StrokeThickness="10"
                                    HorizontalAlignment="Left"
                                    Margin="15 -34 0 0"
                                    VerticalAlignment="Top"
                                    Width="24.046"
                                    Height="41.695"
                                    RenderTransformOrigin="0.5,0.5">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="0.66713942516425861" ScaleY="1.4989370471603993"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="90"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="RadWindow_ControlTemplate" TargetType="telerikNavigation:RadWindow">
        <Grid x:Name="LayoutRoot">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="Disabled"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused"/>
                    <VisualState x:Name="Unfocused"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ResizeStates">
                    <VisualState x:Name="NotDragging"/>
                    <VisualState x:Name="Dragging"/>
                    <VisualState x:Name="Resizing"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="WindowStates">
                    <VisualState x:Name="NormalWindow"/>
                    <VisualState x:Name="MaximizedRestricted"/>
                    <VisualState x:Name="Maximized">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Shadow" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentHost" Storyboard.TargetProperty="Margin">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Thickness>0</Thickness>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentHost" Storyboard.TargetProperty="Padding">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Thickness>0</Thickness>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="innerShape" Storyboard.TargetProperty="BorderThickness">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Thickness>0 1 0 0</Thickness>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="innerMostShape" Storyboard.TargetProperty="BorderThickness">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Thickness>0 1 0 0</Thickness>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Margin">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Thickness>0</Thickness>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Header" Storyboard.TargetProperty="Margin">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Thickness>6 0 6 0</Thickness>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="CornerRadius">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <CornerRadius>0</CornerRadius>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MainBorder" Storyboard.TargetProperty="CornerRadius">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <CornerRadius>0</CornerRadius>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Buttons" Storyboard.TargetProperty="Margin">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Thickness>0 0 -6 0</Thickness>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Minimized">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentHost" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="HorizontalAlignment">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <HorizontalAlignment>Left</HorizontalAlignment>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="VerticalAlignment">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <VerticalAlignment>Top</VerticalAlignment>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="MinHeight">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <sys:Double>30</sys:Double>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid x:Name="Shadow" Grid.RowSpan="2">
                <Rectangle Stroke="{StaticResource BorderShadowColor1}" IsHitTestVisible="False" StrokeThickness="1" RadiusX="11" RadiusY="11"/>
                <Rectangle Margin="1" Stroke="{StaticResource BorderShadowColor2}" IsHitTestVisible="False" StrokeThickness="1" RadiusX="10" RadiusY="10"/>
                <Rectangle Margin="2" Stroke="{StaticResource BorderShadowColor3}" IsHitTestVisible="False" StrokeThickness="1" RadiusX="9" RadiusY="9"/>
                <Rectangle Margin="3" Stroke="{StaticResource BorderShadowColor4}" IsHitTestVisible="False" StrokeThickness="1" RadiusX="8" RadiusY="8"/>
            </Grid>
            <Border x:Name="OuterBorder"
                    Grid.RowSpan="2"
                    BorderThickness="1"
                    BorderBrush="{StaticResource RadWindow_OuterBorder}"
                    RenderTransformOrigin="0.5 0.5"
                    Margin="4"
                    CornerRadius="6">
                <Border x:Name="MainBorder" CornerRadius="6" Background="{TemplateBinding BorderBackground}" BorderBrush="{TemplateBinding BorderBrush}"/>
            </Border>
            <Grid x:Name="Header" Margin="7 4 8 0" MinHeight="24" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Thumb x:Name="titleThumb" Grid.ColumnSpan="2" Opacity="0" Grid.Column="0" Style="{StaticResource WindowResizeThumbStyle}"/>
                <Grid Grid.Column="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <ContentControl
                            ContentTemplate="{TemplateBinding IconTemplate}"
                            IsTabStop="False"
                            Content="{TemplateBinding Icon}"
                            Margin="2"
                            Grid.Column="0"
                            HorizontalContentAlignment="Center"
                            VerticalContentAlignment="Center"/>
                    <Grid x:Name="TitlePresenter" Grid.Column="1">
                        <Border x:Name="TitleBackground" CornerRadius="4" Margin="-6 0 -10 -2">
                            <Border.OpacityMask>
                                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                    <GradientStop Color="#FF000000" Offset="0.15"/>
                                    <GradientStop Color="#00000000" Offset="0.996"/>
                                    <GradientStop Color="#FF000000" Offset="0.85"/>
                                    <GradientStop Color="#00000000" Offset="0"/>
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#CCFFFFFF" Offset="0.4"/>
                                    <GradientStop Color="#00FFFFFF" Offset="1"/>
                                    <GradientStop Color="#00FFFFFF" Offset="0"/>
                                    <GradientStop Color="#CCFFFFFF" Offset="0.6"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <ContentPresenter x:Name="HeaderContent"
                                Content="{TemplateBinding Header}"
                                VerticalAlignment="Center"
                                Margin="4 0 0 0"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"/>
                    </Grid>
                </Grid>
                <Grid x:Name="Buttons" Grid.Column="1" VerticalAlignment="Top" Margin="0">
                    <StackPanel Margin="5 0 0 0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="Auto" Orientation="Horizontal">
                        <telerik:RadButton x:Name="PART_MinimizeButton"
                                Command="{x:Static telerik:WindowCommands.Minimize}"
                                Style="{StaticResource WindowHeaderButtonStyle}"
                                Height="16"
                                Margin="0"
                                VerticalAlignment="Top"
                                Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <ToolTipService.ToolTip>
                                <ToolTip telerik:LocalizationManager.ResourceKey="Minimize"/>
                            </ToolTipService.ToolTip>
                            <Rectangle
                                    Stroke="{StaticResource HeaderButton_StrokeBrush}"
                                    Fill="{StaticResource HeaderButton_FillBrush}"
                                    RadiusX="1"
                                    RadiusY="1"
                                    HorizontalAlignment="Center"
                                    Margin="-1 8.5 0 3.5"
                                    Width="12"/>
                        </telerik:RadButton>
                        <telerik:RadButton x:Name="PART_RestoreButton"
                                Command="{x:Static telerik:WindowCommands.Restore}"
                                Style="{StaticResource WindowHeaderButtonStyle}"
                                Height="16"
                                VerticalAlignment="Top"
                                HorizontalAlignment="Right"
                                Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <ToolTipService.ToolTip>
                                <ToolTip telerik:LocalizationManager.ResourceKey="Restore"/>
                            </ToolTipService.ToolTip>
                            <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" x:Name="restore">
                                <Path
                                        Stretch="Fill"
                                        HorizontalAlignment="Left"
                                        Margin="8.5,3,0,0"
                                        VerticalAlignment="Top"
                                        Stroke="{StaticResource HeaderButton_StrokeBrush}"
                                        Fill="{StaticResource HeaderButton_FillBrush}"
                                        Width="9"
                                        Height="8"
                                        Data="M1.5,0.5 L10.5,0.5 C11.052284,0.5 11.5,0.94771537 11.5,1.5 L11.5,8.5 C11.5,9.0522842 11.052284,9.5 10.5,9.5 L1.5,9.5 C0.94771519,9.5 0.5,9.0522841 0.5,8.5 L0.5,1.5 C0.5,0.94771546 0.9477151,0.5 1.5,0.5 z"/>
                                <Path
                                        Stretch="Fill"
                                        Stroke="{StaticResource HeaderButton_StrokeBrush}"
                                        Fill="{StaticResource HeaderButton_FillBrush}"
                                        Margin="6.5,5,0,0"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Width="9"
                                        Height="9"
                                        Data="M3.5443635,6.4780002 L8.4556365,6.4780002 8.4556365,3.52 3.5443635,3.52 z M1.5,0.5 L10.5,0.5 C11.052284,0.5 11.5,0.94771537 11.5,1.5 L11.5,8.5 C11.5,9.0522842 11.052284,9.5 10.5,9.5 L1.5,9.5 C0.94771519,9.5 0.5,9.0522841 0.5,8.5 L0.5,1.5 C0.5,0.94771546 0.9477151,0.5 1.5,0.5 z"/>
                            </Grid>
                        </telerik:RadButton>
                        <telerik:RadButton x:Name="PART_MaximizeButton"
                                Command="{x:Static telerik:WindowCommands.Maximize}"
                                Style="{StaticResource WindowHeaderButtonStyle}"
                                Height="16"
                                VerticalAlignment="Top"
                                HorizontalAlignment="Right"
                                Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <ToolTipService.ToolTip>
                                <ToolTip telerik:LocalizationManager.ResourceKey="Maximize"/>
                            </ToolTipService.ToolTip>
                            <Grid x:Name="maximize" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0 3" Width="12">
                                <Path
                                        Stretch="Fill"
                                        Stroke="{StaticResource HeaderButton_StrokeBrush}"
                                        Fill="{StaticResource HeaderButton_FillBrush}"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Margin="0"
                                        Width="12"
                                        Data="M2.625,3.52 L2.625,6.4780002 9.375,6.4780002 9.375,3.52 2.625,3.52 z M1.5,0.5 L10.5,0.5 C11.052284,0.5 11.5,0.94771537 11.5,1.5 L11.5,8.5 C11.5,9.0522842 11.052284,9.5 10.5,9.5 L1.5,9.5 C0.94771519,9.5 0.5,9.0522841 0.5,8.5 L0.5,1.5 C0.5,0.94771546 0.9477151,0.5 1.5,0.5 z"/>
                            </Grid>
                        </telerik:RadButton>
                        <telerik:RadButton x:Name="PART_CloseButton"
                                Style="{StaticResource CloseButtonStyle}"
                                Command="{x:Static telerik:WindowCommands.Close}"
                                Height="16"
                                HorizontalAlignment="Right"
                                Margin="0"
                                VerticalAlignment="Top"
                                HorizontalContentAlignment="Left"
                                Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Converter={StaticResource BooleanToVisibilityConverter}}"
                                VerticalContentAlignment="Top">
                            <ToolTipService.ToolTip>
                                <ToolTip telerik:LocalizationManager.ResourceKey="Close"/>
                            </ToolTipService.ToolTip>
                            <Grid Width="11" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0 3">
                                <Path
                                        Stretch="Fill"
                                        Stroke="{StaticResource HeaderButton_StrokeBrush}"
                                        Fill="{StaticResource HeaderButton_FillBrush}"
                                        HorizontalAlignment="Right"
                                        Width="11"
                                        Data="M1.7378059,0.5 L2.6141474,0.5 C3.1662261,0.50000006 3.8039908,0.75809938 4.4048114,1.5 4.5550169,1.685475 4.9485269,2.160322 5.4658298,2.7821105 L5.4860015,2.8063081 5.5061731,2.7821105 C6.0234754,2.1603227 6.4169869,1.6854752 6.5671916,1.5 7.1680121,0.75809938 7.805777,0.50000006 8.3578553,0.5 L9.2341971,0.5 C9.7862759,0.50000006 10.979304,0.58072393 10.233824,1.5 9.8610825,1.9596381 8.6079334,3.4697623 7.345519,4.9849148 L7.3238601,5.0108548 9.0990157,7.1366935 C9.6334218,7.7765244 10.052589,8.2784384 10.237003,8.5 10.974663,9.3862554 9.7894541,9.5 9.2373757,9.5 L8.3610196,9.5 C7.8089409,9.5 7.3899587,9.4595025 6.5703706,8.5 6.4679222,8.3800621 6.3116059,8.195097 6.1150331,7.9614411 L5.4860015,7.2116037 4.8569698,7.9614411 C4.6603975,8.195097 4.5040812,8.3800621 4.4016328,8.5 3.5820441,9.4595032 3.1630621,9.5 2.6109833,9.5 L1.7346272,9.5 C1.1825502,9.5 -0.0026579946,9.3862555 0.73499992,8.5 0.91941352,8.2784385 1.338581,7.7765249 1.8729872,7.1366935 L3.6481428,5.0108552 3.6264839,4.9849148 C2.36407,3.4697629 1.1109188,1.9596384 0.73817882,1.5 -0.0073020967,0.58072303 1.1857272,0.50000006 1.7378059,0.5 z"/>
                            </Grid>
                        </telerik:RadButton>
                    </StackPanel>
                    <Border x:Name="PART_HeaderButtonsBorder" BorderBrush="{StaticResource ButtonArea_InnerBorderBrush}" Margin="3 0 0 0" BorderThickness="1 0 1 1" CornerRadius="0 0 5 5">
                        <Border BorderBrush="{StaticResource ButtonArea_OuterBorderBrush}" BorderThickness="1 0 1 1" CornerRadius="0 0 4 4"/>
                    </Border>
                </Grid>
            </Grid>
            <Border x:Name="ContentHost" Grid.Row="1" Margin="4 0 4 4" Padding="{TemplateBinding BorderThickness}">
                <Border x:Name="innerShape" Background="{TemplateBinding Background}" BorderThickness="1" CornerRadius="2" BorderBrush="{StaticResource RadWindow_InnerBorder}">
                    <Border x:Name="innerMostShape" BorderBrush="{StaticResource RadWindow_InnerMostBorder}" BorderThickness="1" CornerRadius="1">
                        <Grid>
                            <AdornerDecorator>
                                <ContentPresenter x:Name="ContentElement" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}"/>
                            </AdornerDecorator>
                            <ResizeGrip x:Name="WindowResizeGrip" Margin="1" HorizontalAlignment="Right" VerticalAlignment="Bottom" Visibility="Collapsed" IsTabStop="False"/>
                        </Grid>
                    </Border>
                </Border>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsInActiveState" Value="False">
                <Setter TargetName="HeaderContent" Property="Opacity" Value="0.7"/>
                <Setter TargetName="Buttons" Property="Opacity" Value="0.7"/>
                <Setter TargetName="Shadow" Property="Opacity" Value="0.5"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                    <Condition Property="WindowState" Value="Normal"/>
                </MultiTrigger.Conditions>
                <Setter Property="MinHeight" Value="56"/>
                <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="RadWindowStyle" TargetType="telerikNavigation:RadWindow">
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Background" Value="{StaticResource WindowBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource WindowOuterBorder}"/>
        <Setter Property="BorderBackground" Value="{StaticResource WindowBorderBackground}"/>
        <Setter Property="BorderThickness" Value="2 0 2 2"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="MinWidth" Value="130"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Header" Value="RadWindow"/>
        <Setter Property="WindowStartupLocation" Value="Manual"/>
        <Setter Property="WindowState" Value="Normal"/>
        <Setter Property="Template" Value="{StaticResource RadWindow_ControlTemplate}"/>
        <Setter Property="ModalBackground" Value="{StaticResource WindowModalBackground}"/>
        <Setter Property="CaptionHeight" Value="24"/>
        <Setter Property="ResizeBorder" Value="8 8 10 10"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
        <Setter Property="animation:AnimationManager.AnimationSelector">
            <Setter.Value>
                <animation:AnimationSelector>
                    <animation:AnimationGroup AnimationName="Show">
                        <animation:FadeAnimation Direction="In" TargetElementName="LayoutRoot"/>
                        <animation:ScaleAnimation Direction="In" TargetElementName="LayoutRoot" MinScale="0.9"/>
                    </animation:AnimationGroup>
                    <animation:AnimationGroup AnimationName="Hide">
                        <animation:FadeAnimation Direction="Out" TargetElementName="LayoutRoot"/>
                        <animation:ScaleAnimation Direction="Out" TargetElementName="LayoutRoot" MinScale="0.9"/>
                    </animation:AnimationGroup>
                </animation:AnimationSelector>
            </Setter.Value>
        </Setter>
        <Setter Property="navigation:RadWindowInteropHelper.OpaqueWindowBackground" Value="{StaticResource WindowBorderBackground}"/>
        <Style.Triggers>
            <Trigger Property="navigation:RadWindowInteropHelper.AllowTransparency" Value="False">
                <Setter Property="navigation:RadWindowInteropHelper.ClipMaskCornerRadius" Value="10"/>
                <Setter Property="ResizeBorder" Value="5"/>
                <Setter Property="CaptionHeight" Value="23"/>
                <Setter Property="animation:AnimationManager.IsAnimationEnabled" Value="False"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RadPromptStyle" TargetType="telerikNavigation:RadPrompt">
        <Setter Property="MinWidth" Value="275"/>
        <Setter Property="MaxWidth" Value="500"/>
        <Setter Property="IconTemplate" Value="{StaticResource ConfirmIconTemplate}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikNavigation:RadPrompt">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="2"/>
                            <RowDefinition Height="36"/>
                        </Grid.RowDefinitions>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="Icon" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="10" ContentTemplate="{TemplateBinding IconTemplate}"/>
                            <StackPanel x:Name="PromptContent" Margin="0 10 10 0" Grid.Column="1">
                                <ContentControl x:Name="PromptText" Content="{TemplateBinding Content}" IsTabStop="False"/>
                                <Border x:Name="OuterBorder" Grid.Column="0" BorderBrush="{StaticResource BorderOuterBrush}" BorderThickness="1" CornerRadius="3">
                                    <Border x:Name="InnerBorder" BorderThickness="1" CornerRadius="2" Background="{StaticResource InputTextBoxBackground}" BorderBrush="{StaticResource BorderInnerBrush}">
                                        <TextBox x:Name="PromptTextBox" Margin="8" IsTabStop="True" TabIndex="0" Focusable="True"/>
                                    </Border>
                                </Border>
                            </StackPanel>
                        </Grid>
                        <Border Height="2" Background="{StaticResource BorderLineOuterColor}" Grid.Row="1" BorderBrush="{StaticResource BorderLineInnerColor}" BorderThickness="0 0 0 1"/>
                        <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right">
                            <telerik:RadButton x:Name="OK"
                                    Margin="5"
                                    telerik:LocalizationManager.ResourceKey="Ok"
                                    Command="{x:Static telerik:WindowCommands.Confirm}"
                                    telerikNavigation:RadWindow.ResponseButton="Accept"
                                    Height="25"
                                    MinWidth="60"
                                    SnapsToDevicePixels="True"/>
                            <telerik:RadButton x:Name="Cancel"
                                    Margin="0 5 5 5"
                                    telerik:LocalizationManager.ResourceKey="Cancel"
                                    Command="{x:Static telerik:WindowCommands.Cancel}"
                                    telerikNavigation:RadWindow.ResponseButton="Cancel"
                                    Height="25"
                                    MinWidth="80"
                                    SnapsToDevicePixels="True"/>
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="false"/>
    </Style>
    <Style TargetType="telerikNavigation:RadPrompt" BasedOn="{StaticResource RadPromptStyle}"/>
    <Style x:Key="RadConfirmStyle" TargetType="telerikNavigation:RadConfirm">
        <Setter Property="ContentAreaMargin" Value="0 10 10 10"/>
        <Setter Property="MinWidth" Value="275"/>
        <Setter Property="MaxWidth" Value="500"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="IconTemplate" Value="{StaticResource ConfirmIconTemplate}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikNavigation:RadConfirm">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="2"/>
                            <RowDefinition Height="36"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="Icon" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="10 10 12 12" ContentTemplate="{TemplateBinding IconTemplate}"/>
                            <ContentPresenter x:Name="ConfirmText" Margin="{TemplateBinding ContentAreaMargin}" Grid.Column="1" Content="{TemplateBinding Content}"/>
                        </Grid>
                        <Border Height="2" BorderThickness="0 0 0 1" Background="{StaticResource BorderLineOuterColor}" Grid.Row="1" BorderBrush="{StaticResource BorderLineInnerColor}"/>
                        <StackPanel HorizontalAlignment="Right" Grid.Row="2" Orientation="Horizontal">
                            <telerik:RadButton x:Name="OK"
                                    Margin="5"
                                    telerik:LocalizationManager.ResourceKey="Ok"
                                    Command="{x:Static telerik:WindowCommands.Confirm}"
                                    telerikNavigation:RadWindow.ResponseButton="Accept"
                                    Height="25"
                                    MinWidth="60"
                                    SnapsToDevicePixels="True"/>
                            <telerik:RadButton x:Name="Cancel"
                                    telerik:LocalizationManager.ResourceKey="Cancel"
                                    Command="{x:Static telerik:WindowCommands.Cancel}"
                                    telerikNavigation:RadWindow.ResponseButton="Cancel"
                                    Height="25"
                                    MinWidth="80"
                                    Margin="0 5 5 5"
                                    SnapsToDevicePixels="True"/>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IconTemplate" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerikNavigation:RadConfirm" BasedOn="{StaticResource RadConfirmStyle}"/>
    <Style x:Key="RadAlertStyle" TargetType="telerikNavigation:RadAlert">
        <Setter Property="MinWidth" Value="275"/>
        <Setter Property="MaxWidth" Value="500"/>
        <Setter Property="IconTemplate" Value="{StaticResource AlertIconTemplate}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikNavigation:RadAlert">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="2"/>
                            <RowDefinition Height="36"/>
                        </Grid.RowDefinitions>
                        <Grid.InputBindings>
                            <KeyBinding Key="Escape" Command="{x:Static telerik:WindowCommands.Confirm}"/>
                        </Grid.InputBindings>
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="Icon" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="10 10 12 12" ContentTemplate="{TemplateBinding IconTemplate}"/>
                            <ContentControl x:Name="AlertText" Margin="0 10 10 0" Grid.Column="1" IsTabStop="False" Content="{TemplateBinding Content}"/>
                        </Grid>
                        <Grid Grid.Row="1" Height="2" Background="{StaticResource BorderLineOuterColor}">
                            <Rectangle Fill="{StaticResource BorderLineInnerColor}" VerticalAlignment="Bottom" Height="1"/>
                        </Grid>
                        <telerik:RadButton x:Name="OK"
                                Grid.Row="2"
                                HorizontalAlignment="Right"
                                Margin="5"
                                Command="{x:Static telerik:WindowCommands.Confirm}"
                                telerikNavigation:RadWindow.ResponseButton="Accept"
                                telerik:LocalizationManager.ResourceKey="Ok"
                                Height="25"
                                MinWidth="60"
                                SnapsToDevicePixels="True"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="false"/>
    </Style>
    <Style TargetType="telerikNavigation:RadAlert" BasedOn="{StaticResource RadAlertStyle}"/>
    <localization:CultureToLocalizationStringConverter x:Key="cultureToStringConverter"/>
    <telerik:LocalizationManager x:Key="localizationManagerProvider"/>
    <Style x:Key="TreeviewFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Stroke="Transparent" StrokeThickness="0" Margin="0"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="treeView:TreeViewDragVisual" x:Key="TreeViewDragVisualStyle">
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Setter Property="Padding" Value="4 0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource TreeView_DragContainerFormOuterBorder}"/>
        <Setter Property="Background" Value="{StaticResource RadTreeView_DragContainerFormInnerBackground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="treeView:TreeViewDragVisual">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Border
                                Background="{TemplateBinding Background}"
                                Visibility="{TemplateBinding DragPreviewVisibility}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="0.8"
                                CornerRadius="3">
                            <Border Background="{x:Null}" BorderBrush="{StaticResource RadTreeView_DragContainerFormInnerBorder}" BorderThickness="1" CornerRadius="2"/>
                        </Border>
                        <ContentControl
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Margin="{TemplateBinding Padding}"
                                Visibility="{TemplateBinding DragPreviewVisibility}"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Opacity="0.8"/>
                        <Grid Visibility="{TemplateBinding DragTooltipVisibility}" Row="1" MinHeight="24" Margin="0 2 0 0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle
                                    Grid.ColumnSpan="3"
                                    StrokeLineJoin="Bevel"
                                    StrokeThickness="1"
                                    RadiusX="3"
                                    RadiusY="3"
                                    Stroke="{TemplateBinding BorderBrush}"
                                    Fill="{StaticResource RadTreeView_DragTooltipFormFillBrush}"/>
                            <Grid Margin="5 0 0 0" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropPossible, Converter={StaticResource InvertedBooleanToVisibilityConverter}}">
                                <Path
                                        Data="M2.7,3.7 L2.6,3.7 C2.2,4.4 2,5.1 2,6 C2,8.2 3.7,10 6,10 C6.7,10 7.5,9.7 8.1,9.3 L8.2,9.3 z M6,2 C5.1,2 4.4,2.2 3.7,2.6 L3.7,2.6 L9.2,8.3 L9.3,8.2 C9.7,7.5 10,6.8 10,6 C10,3.7 8.2,2 6,2 z M6,0 C9.3,0 12,2.6 12,6 C12,7.3 11.5,8.6 10.7,9.7 L10.3,10.1 L9.9,10.5 C8.8,11.4 7.5,12 6,12 C2.6,12 0,9.3 0,6 C0,4.6 0.4,3.3 1.2,2.2 L1.2,2.2 L1.5,2 L1.5,1.9 C2.6,0.7 4.2,0 6,0 z"
                                        Fill="{StaticResource RadTreeView_ForbiddenDragIcon}"
                                        Height="12"
                                        Stretch="Fill"
                                        Width="12"/>
                            </Grid>
                            <Grid Margin="5 0" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropPossible, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Path
                                        Height="11"
                                        Width="12"
                                        Stretch="Fill"
                                        Data="M 0,10 C0,10 0,16 0,16 0,16 14,16 14,16 14,16 8,22 8,22 8,22 12,26 12,26 12,26 25,13 25,13 25,13 12,0 12,0 12,0 8,4 8,4 8,4 14,10 14,10 14,10 0,10 0,10 z"
                                        Fill="{StaticResource RadTreeView_InsertDragIcon}"
                                        UseLayoutRounding="False"/>
                            </Grid>
                            <TextBlock
                                    Grid.Column="1"
                                    VerticalAlignment="Center"
                                    Text="{Binding DropActionText, RelativeSource={RelativeSource TemplatedParent}, StringFormat='{}{0} '}"
                                    Foreground="{TemplateBinding Foreground}"/>
                            <ContentControl
                                    Grid.Column="2"
                                    Margin="0 0 5 0"
                                    VerticalAlignment="Center"
                                    Foreground="{TemplateBinding Foreground}"
                                    Content="{TemplateBinding DropTarget}"
                                    ContentTemplate="{TemplateBinding DropTargetTemplate}"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="treeView:TreeViewDragCue" x:Key="TreeViewDragCueStyle">
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderBrush" Value="{StaticResource TreeView_DragContainerFormOuterBorder}"/>
        <Setter Property="Background" Value="{StaticResource RadTreeView_DragContainerFormInnerBackground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="treeView:TreeViewDragCue">
                    <StackPanel>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="DropStates">
                                <VisualState x:Name="DropPossible"/>
                                <VisualState x:Name="DropImpossible">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropImpossibleIconElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropPossibleIconElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid HorizontalAlignment="Left" Visibility="{TemplateBinding DragPreviewVisibility}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="1" CornerRadius="3">
                                <Border CornerRadius="2" Background="{x:Null}" BorderThickness="1" BorderBrush="{StaticResource RadTreeView_DragContainerFormInnerBorder}">
                                    <ItemsPresenter Margin="{TemplateBinding Padding}"/>
                                </Border>
                            </Border>
                        </Grid>
                        <Grid Visibility="{TemplateBinding DragTooltipVisibility}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle
                                    Grid.ColumnSpan="2"
                                    Fill="{StaticResource RadTreeView_DragTooltipFormFillBrush}"
                                    StrokeLineJoin="Bevel"
                                    StrokeThickness="1"
                                    RadiusX="3"
                                    RadiusY="3"
                                    Stroke="{TemplateBinding BorderBrush}"/>
                            <ContentPresenter x:Name="DropImpossibleIconElement"
                                    Content="{TemplateBinding DropImpossibleIcon}"
                                    ContentTemplate="{TemplateBinding DropImpossibleIconTemplate}"
                                    Visibility="Collapsed"/>
                            <ContentPresenter x:Name="DropPossibleIconElement" Content="{TemplateBinding DropPossibleIcon}" ContentTemplate="{TemplateBinding DropPossibleIconTemplate}"/>
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Grid.Column="1" MinHeight="20">
                                <ContentControl
                                        Content="{TemplateBinding DragActionContent}"
                                        ContentTemplate="{TemplateBinding DragActionContentTemplate}"
                                        Foreground="{StaticResource Header2ForegroundBrush}"
                                        VerticalAlignment="Center"/>
                                <ContentControl Content="{TemplateBinding DragTooltipContent}" ContentTemplate="{TemplateBinding DragTooltipContentTemplate}" Margin="0 0 5 0" VerticalAlignment="Center"/>
                            </StackPanel>
                        </Grid>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="DropImpossibleIcon" Value="The icon is assigned as DataTemplate because assigning as Content triggers a bug in Silverlight"/>
        <Setter Property="DropImpossibleIconTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Margin="5 5 0 5" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropPossible, Converter={StaticResource InvertedBooleanToVisibilityConverter}}">
                        <Path
                                Data="M2.7,3.7 L2.6,3.7 C2.2,4.4 2,5.1 2,6 C2,8.2 3.7,10 6,10 C6.7,10 7.5,9.7 8.1,9.3 L8.2,9.3 z M6,2 C5.1,2 4.4,2.2 3.7,2.6 L3.7,2.6 L9.2,8.3 L9.3,8.2 C9.7,7.5 10,6.8 10,6 C10,3.7 8.2,2 6,2 z M6,0 C9.3,0 12,2.6 12,6 C12,7.3 11.5,8.6 10.7,9.7 L10.3,10.1 L9.9,10.5 C8.8,11.4 7.5,12 6,12 C2.6,12 0,9.3 0,6 C0,4.6 0.4,3.3 1.2,2.2 L1.2,2.2 L1.5,2 L1.5,1.9 C2.6,0.7 4.2,0 6,0 z"
                                Fill="{StaticResource RadTreeView_ForbiddenDragIcon}"
                                Height="12"
                                Stretch="Fill"
                                Width="12"/>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="DropPossibleIcon" Value="The icon is assigned as DataTemplate because assigning as Content triggers a bug in Silverlight"/>
        <Setter Property="DropPossibleIconTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Margin="5" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropPossible, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Path
                                Height="11"
                                Width="12"
                                Stretch="Fill"
                                Data="M 0,10 C0,10 0,16 0,16 0,16 14,16 14,16 14,16 8,22 8,22 8,22 12,26 12,26 12,26 25,13 25,13 25,13 12,0 12,0 12,0 8,4 8,4 8,4 14,10 14,10 14,10 0,10 0,10 z"
                                Fill="{StaticResource RadTreeView_InsertDragIcon}"
                                UseLayoutRounding="False"/>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerikNavigation:RadTreeView" x:Key="RadTreeViewStyle">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="animation:AnimationManager.AnimationSelector">
            <Setter.Value>
                <animation:AnimationSelector>
                    <animationNavigation:TreeViewExpandCollapseAnimation AnimationName="Expand" Direction="In"/>
                    <animationNavigation:TreeViewExpandCollapseAnimation AnimationName="Collapse" Direction="Out"/>
                </animation:AnimationSelector>
            </Setter.Value>
        </Setter>
        <Setter Property="IsDragTooltipEnabled" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="TextDropAfter" Value="{Binding Manager.Culture, Source={StaticResource localizationManagerProvider}, Converter={StaticResource cultureToStringConverter}, ConverterParameter=TreeViewDropAfter}"/>
        <Setter Property="TextDropBefore" Value="{Binding Manager.Culture, Source={StaticResource localizationManagerProvider}, Converter={StaticResource cultureToStringConverter}, ConverterParameter=TreeViewDropBefore}"/>
        <Setter Property="TextDropIn" Value="{Binding Manager.Culture, Source={StaticResource localizationManagerProvider}, Converter={StaticResource cultureToStringConverter}, ConverterParameter=TreeViewDropIn}"/>
        <Setter Property="TextDropRoot" Value="{Binding Manager.Culture, Source={StaticResource localizationManagerProvider}, Converter={StaticResource cultureToStringConverter}, ConverterParameter=TreeViewDropRoot}"/>
        <Setter Property="IsDropPreviewLineEnabled" Value="True"/>
        <Setter Property="IsRootLinesEnabled" Value="True"/>
        <Setter Property="IsExpandOnDblClickEnabled" Value="True"/>
        <Setter Property="IsDragPreviewEnabled" Value="True"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="ItemsIndent" Value="20"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Local"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <treeView:TreeViewPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemEditTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBox/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ExpanderStyle">
            <Setter.Value>
                <Style TargetType="ToggleButton">
                    <Setter Property="IsTabStop" Value="False"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="BorderBrush" Value="{StaticResource TreeView_ExpandElement_BorderBrush_Normal}"/>
                    <Setter Property="Margin" Value="0 0 1 0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ToggleButton">
                                <Grid Background="Transparent">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.05" Storyboard.TargetName="ExpandedVisualOver" Storyboard.TargetProperty="Opacity" To="1"/>
                                                    <DoubleAnimation Duration="0:0:0.05" Storyboard.TargetName="CollapsedVisualOver" Storyboard.TargetProperty="Opacity" To="1"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandedVisual" Storyboard.TargetProperty="Fill">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ControlElement_Disabled}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandedVisual" Storyboard.TargetProperty="Stroke">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ControlElement_Disabled}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CollapsedVisual" Storyboard.TargetProperty="Stroke">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TreeView_ExpandElement_BorderBrush_Disabled}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="CheckStates">
                                            <VisualState x:Name="Checked">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.05" Storyboard.TargetName="ExpandedStates" Storyboard.TargetProperty="Opacity" To="1"/>
                                                    <DoubleAnimation Duration="0:0:0.05" Storyboard.TargetName="CollapsedStates" Storyboard.TargetProperty="Opacity" To="0"/>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Unchecked">
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.05" Storyboard.TargetName="ExpandedStates" Storyboard.TargetProperty="Opacity" To="0"/>
                                                    <DoubleAnimation Duration="0:0:0.05" Storyboard.TargetName="CollapsedStates" Storyboard.TargetProperty="Opacity" To="1"/>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Grid x:Name="CollapsedStates" Background="Transparent">
                                        <Path x:Name="CollapsedVisual"
                                                Stretch="Fill"
                                                Data="M0.5,0.5 L5.2,5.4 L5.2,5.4 L0.5,10.5 z"
                                                RenderTransformOrigin="0.5,1"
                                                HorizontalAlignment="Center"
                                                Width="6"
                                                Height="9"
                                                VerticalAlignment="Center"
                                                Stroke="{StaticResource TreeView_ExpandElement_BorderBrush_Normal}"
                                                Fill="{StaticResource TreeView_ExpandElement_Background_Normal}"/>
                                        <Path x:Name="CollapsedVisualOver"
                                                Opacity="0"
                                                Stretch="Fill"
                                                Data="M0.5,0.5 L5.2,5.4 L5.2,5.4 L0.5,10.5 z"
                                                RenderTransformOrigin="0.5,1"
                                                HorizontalAlignment="Center"
                                                Width="6"
                                                Height="9"
                                                VerticalAlignment="Center"
                                                Stroke="{StaticResource TreeView_ExpandElement_BorderBrush_MouseOver}"
                                                Fill="{StaticResource TreeView_ExpandElement_Background_MouseOver}"/>
                                    </Grid>
                                    <Grid x:Name="ExpandedStates" Opacity="0" Background="Transparent">
                                        <Path x:Name="ExpandedVisual"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Margin="2 1 0 0"
                                                Width="7"
                                                Height="7"
                                                Stroke="{StaticResource TreeView_ExpandElement_BorderBrush_ExpandedStates}"
                                                Data="M0,7 L7,0 L7,7 z"
                                                Fill="{StaticResource TreeView_ExpandElement_Background_ExpandedStates}"/>
                                        <Path x:Name="ExpandedVisualOver"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Margin="2 1 0 0"
                                                Width="7"
                                                Height="7"
                                                Opacity="0"
                                                Data="M0,7 L7,0 L7,7 z"
                                                Stroke="{StaticResource TreeView_ExpandElement_BorderBrush_ExpandedStates_MouseOver}"
                                                Fill="{StaticResource TreeView_ExpandElement_Background_ExpandedStates_MouseOver}"/>
                                    </Grid>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikNavigation:RadTreeView">
                    <Grid x:Name="RootElement">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <Grid>
                                <ScrollViewer
                                        Padding="{TemplateBinding Padding}"
                                        IsTabStop="False"
                                        x:Name="ScrollViewer"
                                        BorderThickness="0"
                                        Background="{x:Null}"
                                        HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                        VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                        CanContentScroll="True">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                                <Canvas x:Name="DragBetweenItemsFeedback" Height="8" Visibility="Collapsed" HorizontalAlignment="Left" VerticalAlignment="Top" IsHitTestVisible="False">
                                    <Ellipse StrokeThickness="2" Width="8" Height="8" Stroke="{StaticResource DragBetweenItemsFeedback_BackgroundBrush}"/>
                                    <Grid Width="{Binding ElementName=DragBetweenItemsFeedback, Path=Width}">
                                        <Rectangle RadiusX="2" RadiusY="2" Height="2" Margin="6 3 0 3" Fill="{StaticResource DragBetweenItemsFeedback_BackgroundBrush}"/>
                                    </Grid>
                                </Canvas>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate TargetType="telerikNavigation:RadTreeViewItem" x:Key="TreeViewItemDefaultTemplate">
        <Grid x:Name="RootElement" UseLayoutRounding="True">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="EditStates">
                    <VisualState x:Name="Display"/>
                    <VisualState x:Name="Edit">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="EditHeaderElement" Storyboard.TargetProperty="Visibility" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Header" Storyboard.TargetProperty="Visibility" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Header" To="0.35" Duration="0"/>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Image" To="0.35" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverVisual" To="1" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="SelectionStates">
                    <VisualState x:Name="Unselected"/>
                    <VisualState x:Name="Selected">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionVisual" Storyboard.TargetProperty="Visibility" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="SelectedUnfocused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionUnfocusedVisual" Storyboard.TargetProperty="Visibility" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="LoadingOnDemandStates">
                    <VisualState x:Name="LoadingOnDemand">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LoadingVisual" Storyboard.TargetProperty="Visibility" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Expander" Storyboard.TargetProperty="Visibility" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimation Storyboard.TargetName="LoadingVisualAngleTransform" Storyboard.TargetProperty="Angle" From="0" To="359" Duration="0:0:1" RepeatBehavior="Forever"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="LoadingOnDemandReverse"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unfocused"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ExpandStates">
                    <VisualState x:Name="Expanded">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemsHost" Storyboard.TargetProperty="Visibility" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Collapsed"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid x:Name="HeaderRow" Background="Transparent" MinHeight="{TemplateBinding MinHeight}" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>

                    <!-- indent -->
                    <ColumnDefinition Width="Auto"/>

                    <!-- collapse/expand -->
                    <ColumnDefinition Width="Auto"/>

                    <!-- checkbox, radio -->
                    <ColumnDefinition Width="Auto"/>

                    <!-- left image -->
                    <ColumnDefinition Width="Auto"/>

                    <!-- selection, text, edit element -->
                    <ColumnDefinition Width="Auto"/>

                    <!-- empty -->
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border
                        CornerRadius="2"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Grid.Column="2"
                        Grid.ColumnSpan="6"/>
                <Border x:Name="MouseOverVisual"
                        Opacity="0"
                        Grid.ColumnSpan="6"
                        Grid.Column="2"
                        Background="{StaticResource ControlSubItem_Background_MouseOver}"
                        CornerRadius="{StaticResource ControlSubItem_OuterCornerRadius}"
                        BorderBrush="{StaticResource ControlSubItem_OuterBorder_MouseOver}"
                        BorderThickness="{StaticResource ControlSubItem_OuterBorderThickness}">
                    <Border
                            BorderBrush="{StaticResource ControlSubItem_InnerBorder_MouseOver}"
                            CornerRadius="{StaticResource ControlSubItem_InnerCornerRadius}"
                            BorderThickness="{StaticResource ControlSubItem_InnerBorderThickness}"
                            Background="{x:Null}"/>
                </Border>
                <Border x:Name="SelectionUnfocusedVisual"
                        Visibility="Collapsed"
                        Grid.ColumnSpan="6"
                        Grid.Column="2"
                        Background="{StaticResource ControlSubItem_Background_UnFocus}"
                        CornerRadius="{StaticResource ControlSubItem_OuterCornerRadius}"
                        BorderBrush="{StaticResource ControlSubItem_OuterBorder_UnFocus}"
                        BorderThickness="{StaticResource ControlSubItem_OuterBorderThickness}">
                    <Border
                            BorderBrush="{StaticResource ControlSubItem_InnerBorder_UnFocus}"
                            CornerRadius="{StaticResource ControlSubItem_InnerCornerRadius}"
                            BorderThickness="{StaticResource ControlSubItem_InnerBorderThickness}"
                            Background="{x:Null}"/>
                </Border>
                <Border x:Name="SelectionVisual"
                        Visibility="Collapsed"
                        Grid.ColumnSpan="6"
                        Grid.Column="2"
                        Background="{StaticResource ControlSubItem_Background_Selected}"
                        CornerRadius="{StaticResource ControlSubItem_OuterCornerRadius}"
                        BorderBrush="{StaticResource ControlSubItem_OuterBorder_Selected}"
                        BorderThickness="{StaticResource ControlSubItem_OuterBorderThickness}">
                    <Border
                            BorderBrush="{StaticResource ControlSubItem_InnerBorder_Selected}"
                            CornerRadius="{StaticResource ControlSubItem_InnerCornerRadius}"
                            BorderThickness="{StaticResource ControlSubItem_InnerBorderThickness}"
                            Background="{x:Null}"/>
                </Border>
                <StackPanel x:Name="IndentContainer" Orientation="Horizontal">
                    <Rectangle x:Name="IndentFirstVerticalLine" Width="1" Visibility="Collapsed" Stroke="{StaticResource TreeView_LineColor}" VerticalAlignment="Top"/>
                </StackPanel>
                <Grid Grid.Column="1" x:Name="ListRootContainer" HorizontalAlignment="Center" MinWidth="{TemplateBinding ExpanderButtonMinWidth}">
                    <Rectangle x:Name="HorizontalLine" Height="1" Stroke="{StaticResource TreeView_LineColor}" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                    <Rectangle x:Name="VerticalLine" Width="1" Stroke="{StaticResource TreeView_LineColor}" VerticalAlignment="Top" HorizontalAlignment="Center"/>
                    <ToggleButton x:Name="Expander" AutomationProperties.Name="ExpanderButton" IsTabStop="False" Background="{TemplateBinding Background}"/>
                    <Grid x:Name="LoadingVisual" RenderTransformOrigin="0.5,0.5" Visibility="Collapsed" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <RotateTransform x:Name="LoadingVisualAngleTransform" Angle="0" CenterX="0.5" CenterY="0.5"/>
                            </TransformGroup>
                        </Grid.RenderTransform>
                        <Path Width="10" Height="10" Stretch="Fill" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" StrokeStartLineCap="Round" Data="M1,0 A1,1,90,1,1,0,-1"/>
                        <Path
                                Margin="5 -1.5 0 0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Width="4"
                                Height="4"
                                Stretch="Fill"
                                Fill="{TemplateBinding Foreground}"
                                Data="M0,-1.1 L0.1,-1 L0,-0.9"
                                StrokeThickness="1"/>
                    </Grid>
                </Grid>
                <Image x:Name="Image"
                        Grid.Column="3"
                        MaxWidth="16"
                        MaxHeight="16"
                        Margin="2"
                        Visibility="{Binding RelativeSource={RelativeSource Self}, Path=Source, Converter={StaticResource NullToVisibilityConverter}}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"/>
                <Rectangle x:Name="FocusVisual"
                        Visibility="Collapsed"
                        Grid.Column="2"
                        Grid.ColumnSpan="6"
                        StrokeThickness="1"
                        IsHitTestVisible="False"
                        Stroke="{StaticResource FocusBrushBlack}"
                        StrokeDashArray="1 2"
                        RadiusX="3"
                        RadiusY="3"/>
                <Grid x:Name="HeaderContentPanel" Grid.Column="4" Grid.ColumnSpan="2" Background="Transparent">
                    <ContentControl x:Name="Header"
                            Content="{TemplateBinding Header}"
                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                            Margin="{TemplateBinding Padding}"
                            IsTabStop="False"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                            ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                            Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground, Mode=OneWay}"/>
                    <ContentPresenter x:Name="EditHeaderElement"
                            Visibility="Collapsed"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Margin="{TemplateBinding Padding}"
                            ContentTemplateSelector="{TemplateBinding HeaderEditTemplateSelector}"
                            ContentTemplate="{TemplateBinding HeaderEditTemplate}"/>
                </Grid>
                <CheckBox x:Name="CheckBoxElement" IsTabStop="False" Grid.Column="2" VerticalAlignment="Center" Padding="0" Margin="5 0 0 0" Visibility="Collapsed"/>
                <RadioButton x:Name="RadioButtonElement" IsTabStop="False" Grid.Column="2" VerticalAlignment="Center" Padding="0" Margin="5 0 0 0" Visibility="Collapsed"/>
            </Grid>
            <ItemsPresenter Grid.Row="1" x:Name="ItemsHost" Visibility="Collapsed"/>
        </Grid>
    </ControlTemplate>
    <Style TargetType="telerikNavigation:RadTreeViewItem" x:Key="RadTreeViewItemStyle">
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeviewFocusVisual}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="ExpanderButtonMinWidth" Value="21"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="4 4 5 4"/>
        <Setter Property="MinHeight" Value="24"/>
        <Setter Property="IsDropAllowed" Value="True"/>
        <Setter Property="IsEnabled" Value="True"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Local"/>
        <Setter Property="Template" Value="{StaticResource TreeViewItemDefaultTemplate}"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <treeView:TreeViewPanel VerticalAlignment="Bottom"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="treeView:TreeViewDragVisual" BasedOn="{StaticResource TreeViewDragVisualStyle}"/>
    <Style TargetType="treeView:TreeViewDragCue" BasedOn="{StaticResource TreeViewDragCueStyle}"/>
    <Style TargetType="telerikNavigation:RadTreeView" BasedOn="{StaticResource RadTreeViewStyle}"/>
    <Style TargetType="telerikNavigation:RadTreeViewItem" BasedOn="{StaticResource RadTreeViewItemStyle}"/>
    <ControlTemplate x:Key="DropDownMenuItemTemplate" TargetType="telerikTabControl:DropDownMenuItem">
        <Grid x:Name="RootElement" Background="Transparent">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStateGroup">
                    <VisualState x:Name="Highlighted">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="MouseOverVisual" Storyboard.TargetProperty="Opacity" To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" To="0.5"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Normal"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CheckStateGroup">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="Opacity" To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="CheckedVisual"
                    Opacity="0"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{StaticResource ControlOuterBorder_CornerRadius}"
                    BorderBrush="{StaticResource ControlSubItem_OuterBorder_Selected}"
                    Background="{StaticResource ControlSubItem_Background_Selected}"/>
            <Border x:Name="MouseOverVisual"
                    Opacity="0"
                    Background="{StaticResource ControlSubItem_Background_MouseOver}"
                    CornerRadius="{StaticResource ControlSubItem_OuterCornerRadius}"
                    BorderBrush="{StaticResource ControlSubItem_OuterBorder_MouseOver}"
                    BorderThickness="{StaticResource ControlSubItem_OuterBorderThickness}">
                <Border
                        BorderBrush="{StaticResource ControlSubItem_InnerBorder_MouseOver}"
                        CornerRadius="{StaticResource ControlSubItem_InnerCornerRadius}"
                        BorderThickness="{StaticResource ControlSubItem_InnerBorderThickness}"
                        Background="{x:Null}"/>
            </Border>
            <ContentControl x:Name="Content"
                    Content="{TemplateBinding Header}"
                    ContentTemplate="{TemplateBinding HeaderTemplate}"
                    Cursor="{TemplateBinding Cursor}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    Foreground="{TemplateBinding Foreground}"
                    Margin="{TemplateBinding Padding}"
                    ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"/>
        </Grid>
    </ControlTemplate>
    <Style TargetType="telerikTabControl:DropDownMenuItem" x:Key="DropDownMenuItemStyle">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="SubmenuItemTemplateKey" Value="{StaticResource DropDownMenuItemTemplate}"/>
        <Setter Property="SubmenuHeaderTemplateKey" Value="{StaticResource DropDownMenuItemTemplate}"/>
        <Setter Property="TopLevelHeaderTemplateKey" Value="{StaticResource DropDownMenuItemTemplate}"/>
        <Setter Property="TopLevelItemTemplateKey" Value="{StaticResource DropDownMenuItemTemplate}"/>
        <Setter Property="Foreground" Value="{StaticResource ControlForeground_Normal}"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Template" Value="{StaticResource DropDownMenuItemTemplate}"/>
    </Style>
    <Style x:Key="EmptyScrollViewerStyle" TargetType="ScrollViewer">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Border CornerRadius="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ScrollContentPresenter x:Name="ScrollContentPresenter" Cursor="{TemplateBinding Cursor}" Margin="{TemplateBinding Padding}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollButtonStyle" TargetType="RepeatButton">
        <Setter Property="Content" Value=""/>
        <Setter Property="MinWidth" Value="18"/>
        <Setter Property="Padding" Value="6 0"/>
        <Setter Property="telerik:RadDockPanel.Dock" Value="Left"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid x:Name="ButtonBorder" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ControlOuterBorder_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ControlBackground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="InnerBorder" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ControlInnerBorder_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ControlOuterBorder_Pressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ControlBackground_Pressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="InnerBorder" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ControlInnerBorder_Pressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="Path" Storyboard.TargetProperty="Opacity" To="0.5"/>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity" To="0.5"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="OuterBorder" BorderThickness="1" Background="Transparent" CornerRadius="0" BorderBrush="Transparent">
                            <Border x:Name="InnerBorder" Background="{x:Null}" BorderThickness="0" CornerRadius="0" BorderBrush="{x:Null}"/>
                        </Border>
                        <Path x:Name="Path"
                                Margin="{TemplateBinding Padding}"
                                Stretch="None"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                SnapsToDevicePixels="True"
                                Data="M4,0L4,7L0,3.5z"
                                Fill="{StaticResource ControlElement_Normal}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DropDownButtonStyle" TargetType="ToggleButton">
        <Setter Property="Background" Value="{StaticResource ControlBackground_Normal}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlOuterBorder_Normal}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="2 4 4 2"/>
        <Setter Property="Padding" Value="5 0"/>
        <Setter Property="MinWidth" Value="18"/>
        <Setter Property="Content" Value=""/>
        <Setter Property="telerik:RadDockPanel.Dock" Value="Right"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid x:Name="root" Background="#01FFFFFF">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush" Duration="0:0:0">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource ControlOuterBorder_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="Background" Duration="0:0:0">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource ControlBackground_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InnerBorder" Storyboard.TargetProperty="BorderBrush" Duration="0:0:0">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource ControlInnerBorder_MouseOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush" Duration="0:0:0">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource ControlOuterBorder_Pressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="Background" Duration="0:0:0">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource ControlBackground_Pressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InnerBorder" Storyboard.TargetProperty="BorderBrush" Duration="0:0:0">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{StaticResource ControlInnerBorder_Pressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="root"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="CheckedVisual" Storyboard.TargetProperty="Opacity" To="1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                            <Border x:Name="InnerBorder" BorderThickness="1" BorderBrush="{StaticResource ControlInnerBorder_Normal}"/>
                        </Border>
                        <Border x:Name="CheckedVisual"
                                Opacity="0"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{StaticResource ControlOuterBorder_Checked}"
                                Background="{StaticResource ControlBackground_Checked}">
                            <Border BorderThickness="1" BorderBrush="{StaticResource ControlInnerBorder_Checked}"/>
                        </Border>
                        <Path x:Name="arrow"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Margin="{TemplateBinding Padding}"
                                SnapsToDevicePixels="True"
                                Data="M0,2 L6,2 L3,6 z M0,0 L6,0 L6,1 L0,1 z"
                                Fill="{StaticResource ControlElement_Normal}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerikTabControl:DropDownMenu" x:Key="DropDownMenuStyle">
        <Setter Property="Background" Value="{StaticResource ControlBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlOuterBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="3 0 3 3"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="MaxHeight" Value="500"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <telerik:RadWrapPanel Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikTabControl:DropDownMenu">
                    <Grid>
                        <Border
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Margin="{TemplateBinding Padding}">
                            <ItemsPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="2"/>
                            <Border.Effect>
                                <DropShadowEffect Opacity="0.3" ShadowDepth="3" Color="Black"/>
                            </Border.Effect>
                        </Border>
                        <Rectangle Fill="{StaticResource TabControl_DropDownHeaderBrush}" x:Name="BorderMaskElement" VerticalAlignment="Top" HorizontalAlignment="Left"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="TabControlTemplate" TargetType="telerikNavigation:RadTabControl">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Disabled"/>
                    <VisualState x:Name="Normal"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="DropDownDisplayStates">
                    <VisualState x:Name="DropDownButtonCollapsed"/>
                    <VisualState x:Name="DropDownButtonVisible">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownButtonElement" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="PlacementStates">
                    <VisualState x:Name="Left">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderDockedElement" Storyboard.TargetProperty="LayoutTransform">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <RotateTransform Angle="-90"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="AdditionalContentTransform" Storyboard.TargetProperty="(telerik1:RadDockPanel.Dock)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Dock>Left</Dock>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownButtonElement" Storyboard.TargetProperty="(telerik1:RadDockPanel.Dock)" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Dock>Left</Dock>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Right">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderDockedElement" Storyboard.TargetProperty="LayoutTransform">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <RotateTransform Angle="90"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Top"/>
                    <VisualState x:Name="Bottom">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderDockedElement" Storyboard.TargetProperty="LayoutTransform">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <RotateTransform Angle="180"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="AdditionalContentTransform" Storyboard.TargetProperty="LayoutTransform">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <RotateTransform Angle="180"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="AdditionalContentTransform" Storyboard.TargetProperty="(telerik1:RadDockPanel.Dock)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Dock>Left</Dock>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropDownButtonElement" Storyboard.TargetProperty="(telerik1:RadDockPanel.Dock)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Dock>Left</Dock>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <telerik:RadDockPanel LastChildFill="True">
                <telerikPrimitives:LayoutTransformControl x:Name="HeaderDockedElement" telerik:RadDockPanel.Dock="Top">
                    <Grid SnapsToDevicePixels="True">
                        <Border x:Name="HeaderBackground" Background="{TemplateBinding HeaderBackground}" Visibility="{TemplateBinding BackgroundVisibility}"/>
                        <Border BorderThickness="0 0 0 1" BorderBrush="{StaticResource TabControl_ContentBorderBrush}"/>
                        <telerik:RadDockPanel Panel.ZIndex="10">
                            <telerikPrimitives:LayoutTransformControl x:Name="AdditionalContentTransform" Margin="0 4 0 2" telerik1:RadDockPanel.Dock="Right">
                                <ContentPresenter x:Name="AdditionalContentElement" Content="{TemplateBinding AdditionalContent}"/>
                            </telerikPrimitives:LayoutTransformControl>
                            <ToggleButton x:Name="DropDownButtonElement"
                                    Visibility="Collapsed"
                                    AutomationProperties.Name="drop down menu"
                                    telerik1:RadDockPanel.Dock="Right"
                                    Style="{TemplateBinding DropDownButtonStyle}"
                                    ClickMode="Press"
                                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                <telerikNavigation:RadContextMenu.ContextMenu>
                                    <telerikTabControl:DropDownMenu x:Name="DropDownMenuElement"
                                            StaysOpen="False"
                                            Style="{TemplateBinding DropDownStyle}"
                                            ItemTemplate="{TemplateBinding ItemDropDownContentTemplate}"
                                            ItemTemplateSelector="{TemplateBinding ItemDropDownContentTemplateSelector}"
                                            DisplayMemberPath="{TemplateBinding DropDownDisplayMemberPath}"/>
                                </telerikNavigation:RadContextMenu.ContextMenu>
                            </ToggleButton>
                            <RepeatButton x:Name="LeftScrollButtonElement" AutomationProperties.Name="scroll left" Style="{StaticResource ScrollButtonStyle}" Margin="4 4 2 2"/>
                            <RepeatButton x:Name="RightScrollButtonElement"
                                    AutomationProperties.Name="scroll right"
                                    Style="{StaticResource ScrollButtonStyle}"
                                    telerik:RadDockPanel.Dock="Right"
                                    RenderTransformOrigin="0.5 0.5"
                                    Margin="2 4 0 2">
                                <RepeatButton.RenderTransform>
                                    <ScaleTransform ScaleX="-1"/>
                                </RepeatButton.RenderTransform>
                            </RepeatButton>
                            <ScrollViewer x:Name="ScrollViewerElement"
                                    Style="{StaticResource EmptyScrollViewerStyle}"
                                    VerticalScrollBarVisibility="Disabled"
                                    BorderThickness="0"
                                    IsTabStop="False"
                                    HorizontalScrollBarVisibility="{Binding (ScrollViewer.HorizontalScrollBarVisibility), RelativeSource={RelativeSource TemplatedParent}}"
                                    Margin="2 4 2 0">
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </telerik:RadDockPanel>
                    </Grid>
                </telerikPrimitives:LayoutTransformControl>
                <Border x:Name="ContentBorder"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Mode=TwoWay}"
                        Background="{TemplateBinding Background}"
                        Padding="{TemplateBinding Padding}">
                    <Grid>
                        <ContentPresenter x:Name="ContentElement"
                                Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsContentPreserved,Converter={StaticResource InvertedBooleanToVisibilityConverter}}"
                                ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding SelectedContentTemplateSelector}"/>
                        <Grid x:Name="ContentElementsPanel" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsContentPreserved, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    </Grid>
                </Border>
            </telerik:RadDockPanel>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TabStripPlacement" Value="Top">
                <Setter TargetName="ContentBorder" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=LeftRightBottom}"/>
                <Setter TargetName="DropDownMenuElement" Property="Padding" Value="3 0 3 3"/>
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Left">
                <Setter TargetName="ContentBorder" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=TopRightBottom}"/>
                <Setter TargetName="DropDownMenuElement" Property="Padding" Value="0 3 3 3"/>
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Right">
                <Setter TargetName="ContentBorder" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=TopLeftBottom}"/>
                <Setter TargetName="DropDownMenuElement" Property="Padding" Value="3 0 0 3"/>
            </Trigger>
            <Trigger Property="TabStripPlacement" Value="Bottom">
                <Setter TargetName="ContentBorder" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=TopRightLeft}"/>
                <Setter TargetName="DropDownMenuElement" Property="Padding" Value="3 3 3 0"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="telerikNavigation:RadTabControl" x:Key="RadTabControlStyle">
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
        <Setter Property="BorderBrush" Value="{StaticResource TabControl_ContentBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="{StaticResource TabControl_ContentBackground}"/>
        <Setter Property="MinWidth" Value="5"/>
        <Setter Property="MinHeight" Value="26"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="HeaderBackground" Value="{StaticResource TabControl_HeaderBackground}"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <telerikNavigationPrimitives:TabWrapPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="DropDownButtonStyle" Value="{StaticResource DropDownButtonStyle}"/>
        <Setter Property="DropDownStyle" Value="{StaticResource DropDownMenuStyle}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Template" Value="{StaticResource TabControlTemplate}"/>
    </Style>
    <Style x:Key="PinCloseButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource RadButtonStyle}">
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="0 0 4 0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource TileView_ButtonBackground_MouseOver}"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource TileView_ButtonBackground}"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="TabItemTemplate" TargetType="telerikNavigation:RadTabItem">
        <Grid x:Name="wrapper">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStateGroup">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="MouseOverVisual" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Selected">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="SelectionVisual" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="SelectedMouseOver">
                        <Storyboard>
                            <DoubleAnimation Duration="0" Storyboard.TargetName="SelectionVisual" Storyboard.TargetProperty="(UIElement.Opacity)" To="1"/>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionVisual" Storyboard.TargetProperty="BorderBrush" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TabItem_OuterBorder_SelectedMouseOver}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="wrapper" To="0.3" Duration="0:0:0.1"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="PlacementStates">
                    <VisualState x:Name="HorizontalTop"/>
                    <VisualState x:Name="HorizontalLeft"/>
                    <VisualState x:Name="HorizontalRight"/>
                    <VisualState x:Name="HorizontalBottom">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OrientationTransform" Storyboard.TargetProperty="LayoutTransform" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <RotateTransform Angle="180"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="VerticalTop">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OrientationTransform" Storyboard.TargetProperty="LayoutTransform" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <RotateTransform Angle="-90"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="VerticalLeft">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OrientationTransform" Storyboard.TargetProperty="LayoutTransform" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <RotateTransform Angle="90"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="VerticalRight">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OrientationTransform" Storyboard.TargetProperty="LayoutTransform" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <RotateTransform Angle="-90"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="VerticalBottom">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OrientationTransform" Storyboard.TargetProperty="LayoutTransform" Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <RotateTransform Angle="90"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused"/>
                    <VisualState x:Name="Focused"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="NormalVisual"
                    Margin="{StaticResource TabItem_Margin}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Background="{TemplateBinding Background}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{StaticResource TabItem_OuterCornerRadius}">
                <Border BorderBrush="{StaticResource TabItem_InnerBorder_Normal}" CornerRadius="{StaticResource TabItem_InnerCornerRadius}" BorderThickness="{StaticResource TabItem_InnerBorderThickness}"/>
            </Border>
            <Border x:Name="MouseOverVisual"
                    Opacity="0"
                    Margin="{StaticResource TabItem_Margin}"
                    BorderBrush="{StaticResource TabItem_OuterBorder_MouseOver}"
                    BorderThickness="{StaticResource TabItem_OuterBorderThickness}"
                    Background="{StaticResource TabItem_Background_MouseOver}"
                    CornerRadius="{StaticResource TabItem_OuterCornerRadius}">
                <Border BorderBrush="{StaticResource TabItem_InnerBorder_MouseOver}" CornerRadius="{StaticResource TabItem_InnerCornerRadius}" BorderThickness="{StaticResource TabItem_InnerBorderThickness}"/>
            </Border>
            <Border x:Name="SelectionVisual"
                    Opacity="0"
                    Margin="{StaticResource TabItem_Margin_Selected}"
                    Background="{StaticResource TabItem_Background_Selected}"
                    BorderBrush="{StaticResource TabItem_OuterBorder_Selected}"
                    BorderThickness="{StaticResource TabItem_OuterBorderThickness}"
                    CornerRadius="{StaticResource TabItem_OuterCornerRadius}">
                <Border BorderBrush="{StaticResource TabItem_InnerBorder_Selected}" CornerRadius="{StaticResource TabItem_InnerCornerRadius}" BorderThickness="{StaticResource TabItem_InnerBorderThickness}"/>
            </Border>
            <telerikPrimitives:LayoutTransformControl x:Name="OrientationTransform">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="HeaderElement"
                            RecognizesAccessKey="True"
                            TextBlock.Foreground="{TemplateBinding HeaderForeground}"
                            Content="{TemplateBinding Header}"
                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Margin="{TemplateBinding Padding}"
                            ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                            ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                            SnapsToDevicePixels="True"/>
                    <telerik:RadButton x:Name="PinButton"
                            Grid.Column="1"
                            Style="{StaticResource PinCloseButtonStyle}"
                            Visibility="{TemplateBinding PinButtonVisibility}"
                            SnapsToDevicePixels="True"
                            Command="telerikTabControl:TabItemCommands.TogglePin"
                            IsTabStop="False">
                        <telerik:RadGlyph x:Name="PinGlyph" Glyph="{StaticResource GlyphUnpin}" FontSize="14" IsHitTestVisible="False"/>
                    </telerik:RadButton>
                    <telerik:RadButton x:Name="CloseButton"
                            Grid.Column="2"
                            Style="{StaticResource PinCloseButtonStyle}"
                            Visibility="{TemplateBinding CloseButtonVisibility}"
                            SnapsToDevicePixels="True"
                            Command="telerikTabControl:TabItemCommands.Close"
                            IsTabStop="False">
                        <telerik:RadGlyph x:Name="CloseGlyph" Glyph="{StaticResource GlyphClose}" FontSize="14" IsHitTestVisible="False"/>
                    </telerik:RadButton>
                </Grid>
            </telerikPrimitives:LayoutTransformControl>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsPinned" Value="True">
                <Setter TargetName="PinGlyph" Property="Glyph" Value="{StaticResource GlyphPin}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True"/>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="telerikNavigation:RadTabItem" x:Key="RadTabItemStyle">
        <Setter Property="BorderThickness" Value="{StaticResource TabItem_OuterBorderThickness}"/>
        <Setter Property="MinWidth" Value="5"/>
        <Setter Property="MinHeight" Value="5"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{StaticResource TabItem_Background_Normal}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TabItem_OuterBorder_Normal}"/>
        <Setter Property="HeaderForeground" Value="{StaticResource ControlForeground_Normal}"/>
        <Setter Property="Padding" Value="6 3"/>
        <Setter Property="Template" Value="{StaticResource TabItemTemplate}"/>
    </Style>
    <Style TargetType="telerikTabControl:DropDownMenuItem" BasedOn="{StaticResource DropDownMenuItemStyle}"/>
    <Style TargetType="telerikTabControl:DropDownMenu" BasedOn="{StaticResource DropDownMenuStyle}"/>
    <Style TargetType="telerikNavigation:RadTabControl" BasedOn="{StaticResource RadTabControlStyle}"/>
    <Style TargetType="telerikNavigation:RadTabItem" BasedOn="{StaticResource RadTabItemStyle}"/>
    <LinearGradientBrush x:Key="SignaturePanel_OuterBorder" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFA9BFD6" Offset="0"/>
        <GradientStop Color="#FFCDDAEA" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="SignaturePanel_InnerBorder" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="SignaturePanel_OuterBackground" Color="#FFF1F5FB"/>
    <SolidColorBrush x:Key="ValidationMessageForeground" Color="#FF1E395B"/>
    <localConverters:DoubleToPercentConverter x:Key="DoubleToPercentConverter"/>
    <localConverters:ScaleModeToBooleanConverter x:Key="ScaleModeToBooleanConverter"/>
    <localConverters:BookmarkItemStyleTypeToFontStyleConverter x:Key="BookmarkItemStyleTypeToFontStyleConverter"/>
    <localConverters:BookmarkItemStyleTypeToFontWeightConverter x:Key="BookmarkItemStyleTypeToFontWeightConverter"/>
    <localConverters:NullableDoubleToGridLengthConverter x:Key="NullableDoubleToGridLengthConverter"/>
    <converters:DoubleToStringPercentConverter x:Key="DoubleToStringPercentConverter"/>
    <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    <telerik:EnumToVisibilityConverter x:Key="EnumToVisibilityConverter"/>
    <telerik:IconSources x:Key="IconPaths"
            LightBasePath="/Telerik.Windows.Controls.FixedDocumentViewers;component/Images/"
            DarkBasePath="/Telerik.Windows.Controls.FixedDocumentViewers;component/Images/Dark/"
            ModernBasePath="/Telerik.Windows.Controls.FixedDocumentViewers;component/Images/Modern/"/>
    <converters:FixedDocumentViewerModeConverter x:Key="ModeConverter"/>
    <telerik:VisibilityToBooleanConverter x:Key="VisibilityToBooleanConverter"/>
    <telerik:InvertedBooleanConverter x:Key="InvertedBooleanConverter"/>
    <Style x:Key="BookmarksTreeViewItemStyle" TargetType="telerik:RadTreeViewItem" BasedOn="{StaticResource RadTreeViewItemStyle}">
        <Setter Property="Command" Value="{Binding ViewModel.BookmarksTabItemViewModel.BookmarkItemActivatedCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type fixedDocumentViewersUI:RadPdfViewerNavigationPane}}}"/>
        <Setter Property="CommandParameter" Value="{Binding BookmarkItemModel}"/>
        <Setter Property="CommandExecutionTrigger" Value="Click"/>
        <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded, Mode=TwoWay}"/>
        <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="DefaultImageSrc" Value="{telerik:IconResource IconRelativePath=bookmark.png, IconSources={StaticResource IconPaths}}"/>
        <Setter Property="SelectedImageSrc" Value="{telerik:IconResource IconRelativePath=current-bookmark.png, IconSources={StaticResource IconPaths}}"/>
    </Style>
    <HierarchicalDataTemplate x:Key="BookmarksTreeViewItemTemplate" ItemsSource="{Binding Children}">
        <TextBlock Text="{Binding BookmarkItemModel.Title}" FontStyle="{Binding BookmarkItemModel.TextStyle, Converter={StaticResource BookmarkItemStyleTypeToFontStyleConverter}}" FontWeight="{Binding BookmarkItemModel.TextStyle, Converter={StaticResource BookmarkItemStyleTypeToFontWeightConverter}}"/>
    </HierarchicalDataTemplate>
    <DataTemplate x:Key="BookmarksTabItemHeaderTemplate">
        <Image Margin="5" Source="{telerik:IconResource IconRelativePath=bookmark.png, IconSources={StaticResource IconPaths}}" Stretch="None">
            <Image.ToolTip>
                <ToolTip telerik:LocalizationManager.ResourceKey="FixedDocumentViewers_NavigationPane_BookmarksDescription"/>
            </Image.ToolTip>
        </Image>
    </DataTemplate>
    <DataTemplate x:Key="BookmarksTabItemContentTemplate">
        <Grid DataContext="{Binding ViewModel, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type fixedDocumentViewersUI:RadPdfViewerNavigationPane}}}" Visibility="{Binding BookmarksTabItemViewModel.IsVisible, Converter={StaticResource BoolToVisibilityConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock telerik:LocalizationManager.ResourceKey="FixedDocumentViewers_NavigationPane_Bookmarks" Margin="5" VerticalAlignment="Center" TextTrimming="CharacterEllipsis"/>
            <Button
                    Grid.Column="1"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Margin="0 0 5 0"
                    Focusable="False"
                    Command="{Binding CloseTabItemCommand}"
                    CommandParameter="{Binding BookmarksTabItemViewModel}"
                    BorderBrush="Transparent"
                    Background="Transparent"
                    Padding="5">
                <Path
                        Data="M1,0L4,3 7,0 8,1 5,4 8,7 7,8 4,5 1,8 0,7 3,4 0,1z"
                        Fill="{Binding (TextElement.Foreground), RelativeSource={RelativeSource AncestorType=ContentPresenter}}"
                        Stretch="Fill"
                        Width="8"
                        Height="8"/>
            </Button>
            <Separator Grid.ColumnSpan="2" VerticalAlignment="Bottom" Margin="5 0"/>
            <telerik:RadButton
                    Command="{Binding BookmarksTabItemViewModel.SyncCurrentBookmarkItemCommand}"
                    Grid.Row="1"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Padding="3"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    IsBackgroundVisible="False"
                    Margin="5 0 0 0"
                    Focusable="False">
                <Image Source="{telerik:IconResource IconRelativePath=sync-bookmark.png, IconSources={StaticResource IconPaths}}" Stretch="None"/>
                <ToolTipService.ToolTip>
                    <ToolTip telerik:LocalizationManager.ResourceKey="FixedDocumentViewers_NavigationPane_SyncCurrentBookmark"/>
                </ToolTipService.ToolTip>
            </telerik:RadButton>
            <Separator Grid.ColumnSpan="2" Grid.Row="1" VerticalAlignment="Bottom" Margin="5 0"/>
            <telerik:RadTreeView
                    Grid.ColumnSpan="2"
                    Grid.Row="2"
                    VerticalAlignment="Stretch"
                    HorizontalAlignment="Stretch"
                    x:Name="PART_BookmarksTreeView"
                    telerik:TextSearch.TextPath="BookmarkItemModel.Title"
                    IsVirtualizing="True"
                    AutoScrollToSelectedItem="True"
                    ItemsSource="{Binding BookmarksTabItemViewModel.Bookmarks}"
                    IsExpandOnSingleClickEnabled="False"
                    BorderThickness="0"
                    ItemContainerStyle="{StaticResource BookmarksTreeViewItemStyle}"
                    ItemTemplate="{StaticResource BookmarksTreeViewItemTemplate}"
                    AutomationProperties.Name="Bookmarks"/>
        </Grid>
    </DataTemplate>
    <Style x:Key="PercentComboBoxStyle" TargetType="fixedDocumentViewersUI:PercentComboBox">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="MinHeight" Value="23"/>
        <Setter Property="MinWidth" Value="95"/>
        <Setter Property="Foreground" Value="{StaticResource ControlForeground_Normal}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="fixedDocumentViewersUI:PercentComboBox">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBox x:Name="PART_textBox"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    Foreground="{TemplateBinding Foreground}"
                                    FontSize="{TemplateBinding FontSize}"
                                    VerticalContentAlignment="Center"
                                    Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay, UpdateSourceTrigger=Explicit, Converter={StaticResource DoubleToStringPercentConverter}}"
                                    AutomationProperties.Name="Current Zoom Percent"/>
                            <telerik:RadDropDownButton Grid.Column="1" Margin="-1 0 0 0" PopupPlacementTarget="{Binding ElementName=PART_textBox}" AutomationProperties.Name="Show Zoom Options" Width="15">
                                <telerik:RadDropDownButton.DropDownContent>
                                    <telerik:RadContextMenu x:Name="PART_contextMenu" BorderThickness="0">
                                        <fixedDocumentViewersUI:RadRadioMenuGroupItem
                                                ItemsSource="{TemplateBinding PercentValues}"
                                                SelectedItem="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DoubleToPercentConverter}}"
                                                Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PercentItemsGroupIsDisplayed, Converter={StaticResource BoolToVisibilityConverter}}"
                                                BorderThickness="0 0 0 1"/>
                                        <telerik:RadMenuGroupItem Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AdditionalGroupIsDisplayed, Converter={StaticResource BoolToVisibilityConverter}}" BorderThickness="0">
                                            <telerik:RadMenuItem
                                                    telerik:LocalizationManager.ResourceKey="FixedDocumentViewers_ZoomToPageLevel"
                                                    IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=RadPdfViewer.ScaleMode, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource ScaleModeToBooleanConverter}, ConverterParameter=FitToPage}"
                                                    Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ShowFitToPage, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                                                    Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=RadPdfViewer.CommandDescriptors.FitToPageCommandDescriptor.Command}"/>
                                            <telerik:RadMenuItem
                                                    telerik:LocalizationManager.ResourceKey="FixedDocumentViewers_FitWidth"
                                                    IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=RadPdfViewer.ScaleMode, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource ScaleModeToBooleanConverter}, ConverterParameter=FitToWidth}"
                                                    Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ShowFitToWidth, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                                                    Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=RadPdfViewer.CommandDescriptors.FitToWidthCommandDescriptor.Command}"/>
                                        </telerik:RadMenuGroupItem>
                                    </telerik:RadContextMenu>
                                </telerik:RadDropDownButton.DropDownContent>
                            </telerik:RadDropDownButton>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="fixedDocumentViewersUI:PercentComboBox" BasedOn="{StaticResource PercentComboBoxStyle}"/>
    <Style x:Key="SignaturePanelStyle" TargetType="fixedDocumentViewersUI:SignaturePanel">
        <Setter Property="Background" Value="{StaticResource SignaturePanel_OuterBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource SignaturePanel_OuterBorder}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="1 -2 1 1"/>
        <Setter Property="Padding" Value="14 4 4 4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="fixedDocumentViewersUI:SignaturePanel">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
                        <Grid>
                            <Border BorderThickness="1" BorderBrush="{StaticResource SignaturePanel_InnerBorder}" CornerRadius="1"/>
                            <Grid Margin="{TemplateBinding Padding}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center">
                                    <Image Source="/Telerik.Windows.Controls.FixedDocumentViewers;component/Images/signature16x16_valid.png" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SignatureGeneralStatus, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter=Valid}" Stretch="None"/>
                                    <Image Source="/Telerik.Windows.Controls.FixedDocumentViewers;component/Images/signature16x16_invalid.png" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SignatureGeneralStatus, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter=Invalid}" Stretch="None"/>
                                    <Image Source="/Telerik.Windows.Controls.FixedDocumentViewers;component/Images/signature16x16_error.png" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SignatureGeneralStatus, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter=Unknown}" Stretch="None"/>
                                </StackPanel>
                                <TextBlock
                                        Grid.Column="1"
                                        Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ValidationMessage}"
                                        Foreground="{StaticResource ValidationMessageForeground}"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        Margin="40 0 0 0"/>
                                <Button x:Name="PART_signaturePanel_closeButton"
                                        Grid.Column="2"
                                        BorderBrush="Transparent"
                                        Background="Transparent"
                                        AutomationProperties.Name="Close Signature Panel"
                                        Padding="5">
                                    <Path
                                            Data="M1,0L4,3 7,0 8,1 5,4 8,7 7,8 4,5 1,8 0,7 3,4 0,1z"
                                            Fill="{Binding (TextElement.Foreground), RelativeSource={RelativeSource AncestorType=ContentPresenter}}"
                                            Stretch="Fill"
                                            Width="8"
                                            Height="8"/>
                                </Button>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadPdfViewerToolBarStyle" TargetType="fixedDocumentViewersUIControls:RadPdfViewerToolBar">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Margin" Value="0 1"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="fixedDocumentViewersUIControls:RadPdfViewerToolBar">
                    <telerik:RadToolBar x:Name="PART_ToolBar" DataContext="{Binding Path=RadPdfViewer.CommandDescriptors, RelativeSource={RelativeSource TemplatedParent}}" Margin="0">
                        <telerik:RadButton x:Name="PART_OpenButton"
                                Command="{Binding OpenCommandDescriptor.Command}"
                                ToolTipService.ToolTip="Open"
                                Visibility="{Binding OpenCommandDescriptor.IsEnabled, Converter={StaticResource BoolToVisibilityConverter}}"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Stretch"
                                Margin="2"
                                Padding="0"
                                HorizontalContentAlignment="Center"
                                VerticalContentAlignment="Center"
                                IsBackgroundVisible="False">
                            <Image Source="{telerik:IconResource IconRelativePath=open.png, IconSources={StaticResource IconPaths}}" Stretch="None"/>
                        </telerik:RadButton>
                        <telerik:RadButton x:Name="PART_SaveButton"
                                Command="{Binding SaveAsCommandDescriptor.Command}"
                                ToolTipService.ToolTip="Save As"
                                Visibility="{Binding SaveAsCommandDescriptor.IsEnabled, Converter={StaticResource BoolToVisibilityConverter}}"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Stretch"
                                Margin="2"
                                Padding="0"
                                HorizontalContentAlignment="Center"
                                VerticalContentAlignment="Center"
                                IsBackgroundVisible="False">
                            <Image Source="{telerik:IconResource IconRelativePath=save.png, IconSources={StaticResource IconPaths}}" Stretch="None"/>
                        </telerik:RadButton>
                        <telerik:RadButton x:Name="PART_PrintButton"
                                Command="{Binding PrintCommandDescriptor.Command}"
                                ToolTipService.ToolTip="Print"
                                Visibility="{Binding PrintCommandDescriptor.IsEnabled, Converter={StaticResource BoolToVisibilityConverter}}"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Stretch"
                                Margin="2"
                                Padding="0"
                                HorizontalContentAlignment="Center"
                                VerticalContentAlignment="Center"
                                IsBackgroundVisible="False">
                            <Image Source="{telerik:IconResource IconRelativePath=printer.png, IconSources={StaticResource IconPaths}}" Stretch="None"/>
                        </telerik:RadButton>
                        <telerik:RadToolBarSeparator x:Name="PART_FirstSeparator"/>
                        <telerik:RadButton x:Name="PART_CounterclockwiseButton"
                                Command="{Binding RotateCounterClockwiseCommandDescriptor.Command}"
                                ToolTipService.ToolTip="Rotate counterclockwise"
                                Margin="2"
                                Padding="0"
                                IsBackgroundVisible="False"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Stretch">
                            <Image Source="pack://application:,,,/Telerik.Windows.Controls.FixedDocumentViewers;component/Images/Modern/rotate-counterclockwise.png" Stretch="None"/>
                        </telerik:RadButton>
                        <telerik:RadButton x:Name="PART_ClockwiseButton"
                                Command="{Binding RotateClockwiseCommandDescriptor.Command}"
                                ToolTipService.ToolTip="Rotate clockwise"
                                Margin="2"
                                Padding="0"
                                IsBackgroundVisible="False"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Stretch">
                            <Image Source="pack://application:,,,/Telerik.Windows.Controls.FixedDocumentViewers;component/Images/Modern/rotate-clockwise.png" Stretch="None"/>
                        </telerik:RadButton>
                        <telerik:RadToolBarSeparator x:Name="PART_SecondSeparator"/>
                        <telerik:RadButton x:Name="PART_PageUpButton"
                                Command="{Binding PageUpCommandDescriptor.Command}"
                                ToolTipService.ToolTip="Previous page"
                                Visibility="{Binding PageUpCommandDescriptor.IsEnabled, Converter={StaticResource BoolToVisibilityConverter}}"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Stretch"
                                Margin="2"
                                Padding="0"
                                HorizontalContentAlignment="Center"
                                VerticalContentAlignment="Center"
                                IsBackgroundVisible="False">
                            <Image Source="{telerik:IconResource IconRelativePath=previous.png, IconSources={StaticResource IconPaths}}" Stretch="None"/>
                        </telerik:RadButton>
                        <telerik:RadButton x:Name="PART_PageDownButton"
                                Command="{Binding PageDownCommandDescriptor.Command}"
                                ToolTipService.ToolTip="Next page"
                                Visibility="{Binding PageDownCommandDescriptor.IsEnabled, Converter={StaticResource BoolToVisibilityConverter}}"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Stretch"
                                Margin="2"
                                Padding="0"
                                HorizontalContentAlignment="Center"
                                VerticalContentAlignment="Center"
                                IsBackgroundVisible="False">
                            <Image Source="{telerik:IconResource IconRelativePath=next.png, IconSources={StaticResource IconPaths}}" Stretch="None"/>
                        </telerik:RadButton>
                        <fixedDocumentViewersUI:CurrentPageTextBox x:Name="PART_CurrentPageNumberTextBox"
                                Width="45"
                                Margin="2"
                                Text="{Binding FixedDocumentViewer.CurrentPageNumber, Mode=TwoWay, ValidatesOnExceptions=True}"
                                HorizontalContentAlignment="Center"
                                VerticalContentAlignment="Center"
                                AutomationProperties.Name="Current Page"/>
                        <TextBlock x:Name="PART_PagesSlashTextBlock" VerticalAlignment="Center" Margin="2" Text="/"/>
                        <TextBlock x:Name="PART_PagesCountTextBlock" VerticalAlignment="Center" Margin="2" Text="{Binding FixedDocumentViewer.PagesCount}"/>
                        <telerik:RadToolBarSeparator x:Name="PART_ThirdSeparator"/>
                        <telerik:RadButton x:Name="PART_ZoomInButton"
                                Command="{Binding ZoomInCommandDescriptor.Command}"
                                ToolTipService.ToolTip="Zoom in"
                                Visibility="{Binding ZoomInCommandDescriptor.IsEnabled, Converter={StaticResource BoolToVisibilityConverter}}"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Stretch"
                                Margin="2"
                                Padding="0"
                                HorizontalContentAlignment="Center"
                                VerticalContentAlignment="Center"
                                IsBackgroundVisible="False">
                            <Image Source="{telerik:IconResource IconRelativePath=zoom-in.png, IconSources={StaticResource IconPaths}}" Stretch="None"/>
                        </telerik:RadButton>
                        <telerik:RadButton x:Name="PART_ZoomOutButton"
                                Command="{Binding ZoomOutCommandDescriptor.Command}"
                                ToolTipService.ToolTip="Zoom out"
                                Visibility="{Binding ZoomOutCommandDescriptor.IsEnabled, Converter={StaticResource BoolToVisibilityConverter}}"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Stretch"
                                Margin="2"
                                Padding="0"
                                HorizontalContentAlignment="Center"
                                VerticalContentAlignment="Center"
                                IsBackgroundVisible="False">
                            <Image Source="{telerik:IconResource IconRelativePath=zoom-out.png, IconSources={StaticResource IconPaths}}" Stretch="None"/>
                        </telerik:RadButton>
                        <fixedDocumentViewersUI:PercentComboBox x:Name="PART_PercentComboBox"
                                Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=RadPdfViewer.ScaleFactor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                RadPdfViewer="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=RadPdfViewer}"
                                Margin="2"
                                AutomationProperties.Name="Zoom Percent"/>
                        <telerik:RadToolBarSeparator x:Name="PART_FourthSeparator"/>
                        <telerik:RadToggleButton x:Name="PART_FitToWidthButton"
                                Command="{Binding FitToWidthFixedDocumentPagesPresenterCommandDescriptor.Command}"
                                ToolTipService.ToolTip="Fit to window width and enable scrolling."
                                IsEnabled="{Binding FitToWidthFixedDocumentPagesPresenterCommandDescriptor.IsEnabled, Converter={StaticResource InvertedBooleanConverter}, Mode=TwoWay}"
                                IsChecked="{Binding FitToWidthFixedDocumentPagesPresenterCommandDescriptor.IsEnabled, Mode=TwoWay}"
                                Margin="2"
                                Padding="0"
                                IsBackgroundVisible="False"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Stretch">
                            <Image Source="{telerik:IconResource IconRelativePath=document-fit-width.png, IconSources={StaticResource IconPaths}}" Stretch="None"/>
                        </telerik:RadToggleButton>
                        <telerik:RadToggleButton x:Name="PART_FitToPageButton"
                                Command="{Binding FitToPageFixedDocumentSinglePageViewPresenterCommandDescriptor.Command}"
                                ToolTipService.ToolTip="Fit one full page to window."
                                IsEnabled="{Binding FitToPageFixedDocumentSinglePageViewPresenterCommandDescriptor.IsEnabled, Converter={StaticResource InvertedBooleanConverter}, Mode=TwoWay}"
                                IsChecked="{Binding FitToPageFixedDocumentSinglePageViewPresenterCommandDescriptor.IsEnabled, Mode=TwoWay}"
                                Margin="2"
                                Padding="0"
                                IsBackgroundVisible="False"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Stretch">
                            <Image Source="{telerik:IconResource IconRelativePath=document-fit-page.png, IconSources={StaticResource IconPaths}}" Stretch="None"/>
                        </telerik:RadToggleButton>
                        <telerik:RadToolBarSeparator x:Name="PART_FifthSeparator"/>
                        <telerik:RadToggleButton x:Name="PART_PanButton"
                                ToolTipService.ToolTip="Pan"
                                IsChecked="{Binding FixedDocumentViewer.Mode, Mode=TwoWay, Converter={StaticResource ModeConverter}, ConverterParameter=Pan}"
                                Margin="2"
                                Padding="0"
                                IsBackgroundVisible="False"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Stretch">
                            <Image Source="{telerik:IconResource IconRelativePath=hand-free.png, IconSources={StaticResource IconPaths}}" Stretch="None"/>
                        </telerik:RadToggleButton>
                        <telerik:RadToggleButton x:Name="PART_TextSelectionButton"
                                ToolTipService.ToolTip="Text Selection"
                                IsChecked="{Binding FixedDocumentViewer.Mode, Mode=TwoWay, Converter={StaticResource ModeConverter}, ConverterParameter=TextSelection}"
                                Margin="2"
                                Padding="0"
                                IsBackgroundVisible="False"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Stretch">
                            <Image Source="{telerik:IconResource IconRelativePath=text-selection.png, IconSources={StaticResource IconPaths}}" Stretch="None"/>
                        </telerik:RadToggleButton>
                        <telerik:RadToggleButton x:Name="PART_SignatureButton"
                                ToolTipService.ToolTip="Signature Panel"
                                IsChecked="{Binding Path=SignaturePanel.Visibility, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Converter={StaticResource VisibilityToBooleanConverter}}"
                                IsEnabled="{Binding ValidateSignaturesCommandDescriptor.IsEnabled}"
                                Margin="2"
                                Padding="0"
                                IsBackgroundVisible="False"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Stretch">
                            <Image Source="{telerik:IconResource IconRelativePath=signature16x16.png, IconSources={StaticResource IconPaths}}" Stretch="None"/>
                        </telerik:RadToggleButton>
                    </telerik:RadToolBar>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="fixedDocumentViewersUIControls:RadPdfViewerToolBar" BasedOn="{StaticResource RadPdfViewerToolBarStyle}"/>
    <Style x:Key="RadPdfViewerNavigationPaneStyle" TargetType="fixedDocumentViewersUI:RadPdfViewerNavigationPane">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="fixedDocumentViewersUI:RadPdfViewerNavigationPane">
                    <Grid DataContext="{Binding Path=ViewModel, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding IsVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{Binding PaneContentWidth, Mode=TwoWay, Converter={StaticResource NullableDoubleToGridLengthConverter}}" MinWidth="{Binding PaneContentMinWidth}"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <telerik:RadTabControl x:Name="PART_NavigationPaneTabControl"
                                TabOrientation="Vertical"
                                TabStripPlacement="Left"
                                Align="Right"
                                IsContentPreserved="True"
                                SelectedIndex="{Binding SelectedIndex, Mode=TwoWay}">
                            <telerik:RadTabItem
                                    HeaderTemplate="{StaticResource BookmarksTabItemHeaderTemplate}"
                                    ContentTemplate="{StaticResource BookmarksTabItemContentTemplate}"
                                    Visibility="{Binding BookmarksTabItemViewModel.IsVisible, Converter={StaticResource BoolToVisibilityConverter}}"
                                    IsSelected="{Binding BookmarksTabItemViewModel.IsSelected, Mode=TwoWay}"/>
                            <telerik:EventToCommandBehavior.EventBindings>
                                <telerik:EventBinding Command="{Binding TabSelectionChangedCommand}" EventName="SelectionChanged"/>
                            </telerik:EventToCommandBehavior.EventBindings>
                        </telerik:RadTabControl>
                        <GridSplitter
                                Name="PART_NavigationPaneGridSplitter"
                                Grid.Column="1"
                                Width="10"
                                VerticalAlignment="Stretch"
                                HorizontalAlignment="Left"
                                BorderThickness="0"
                                Visibility="{Binding IsSplitterVisible, Converter={StaticResource BoolToVisibilityConverter}}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="fixedDocumentViewersUI:RadPdfViewerNavigationPane" BasedOn="{StaticResource RadPdfViewerNavigationPaneStyle}"/>
    <Style TargetType="dialogs:FindDialog" BasedOn="{StaticResource RadWindowStyle}"/>
    <Style TargetType="fixedDocumentViewersUI:RadRadioMenuGroupItem" BasedOn="{StaticResource RadMenuGroupItemStyle}"/>
    <Style TargetType="dialogs:SignaturePropertiesDialog" BasedOn="{StaticResource RadWindowStyle}"/>
    <Style TargetType="fixedDocumentViewersUI:SignaturePanel" BasedOn="{StaticResource SignaturePanelStyle}"/>
    <Style TargetType="dialogs:SignSignatureDialog" BasedOn="{StaticResource RadWindowStyle}"/>
</ResourceDictionary>
