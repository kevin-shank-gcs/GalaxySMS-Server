<ResourceDictionary
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
        xmlns:c="http://schemas.telerik.com/2008/xaml/compile"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="c"
        xmlns:mat="clr-namespace:Telerik.Windows.Controls.MaterialControls;assembly=Telerik.Windows.Controls"
        xmlns:telerik1="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls"
        xmlns:telerikPrimitives="clr-namespace:Telerik.Windows.Controls.Primitives;assembly=Telerik.Windows.Controls"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:dragDrop="clr-namespace:Telerik.Windows.Controls.DragDrop;assembly=Telerik.Windows.Controls"
        xmlns:animation="clr-namespace:Telerik.Windows.Controls.Animation;assembly=Telerik.Windows.Controls"
        xmlns:expander="clr-namespace:Telerik.Windows.Controls.Expander;assembly=Telerik.Windows.Controls"
        xmlns:telerikTransitions="clr-namespace:Telerik.Windows.Controls.TransitionEffects;assembly=Telerik.Windows.Controls"
        xmlns:telerikTransitonControl="clr-namespace:Telerik.Windows.Controls.TransitionControl;assembly=Telerik.Windows.Controls"
        xmlns:slider="clr-namespace:Telerik.Windows.Controls.Slider;assembly=Telerik.Windows.Controls"
        xmlns:filteringEditors="clr-namespace:Telerik.Windows.Controls.Filtering.Editors;assembly=Telerik.Windows.Controls"
        xmlns:legend="clr-namespace:Telerik.Windows.Controls.Legend;assembly=Telerik.Windows.Controls"
        xmlns:telerikDragDrop="clr-namespace:Telerik.Windows.DragDrop;assembly=Telerik.Windows.Controls"
        xmlns:touch="clr-namespace:Telerik.Windows.Input.Touch;assembly=Telerik.Windows.Controls"
        xmlns:telerikShapes="clr-namespace:Telerik.Windows.Shapes;assembly=Telerik.Windows.Controls"
        xmlns:helpers="clr-namespace:Telerik.Windows.Controls.Theming.Helpers;assembly=Telerik.Windows.Controls"
        xmlns:taskBoard="clr-namespace:Telerik.Windows.Controls.TaskBoard;assembly=Telerik.Windows.Controls"
        xmlns:callout="clr-namespace:Telerik.Windows.Controls.Callout;assembly=Telerik.Windows.Controls">
    <ResourceDictionary.MergedDictionaries>
        <telerik:CrystalResourceDictionary/>
    </ResourceDictionary.MergedDictionaries>
    <telerik1:EnumToBooleanConverter x:Key="EnumToBooleanConverter"/>
    <telerik1:DragDropBooleanToVisibilityConverter x:Key="DragDropBooleanToVisibilityConverter"/>
    <telerik1:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <expander:ExpandDirectionToRotationAngleConverter x:Key="ExpandDirectionToRotationAngleConverter"/>
    <telerik1:MultiBindingBooleanOrConverter x:Key="MultiBindingBooleanOrConverter"/>
    <telerik1:ThicknessToOrientedThicknessConverter x:Key="ThicknessToOrientedThicknessConverter"/>
    <telerik1:CornerRadiusConverter x:Key="CornerRadiusConverter"/>
    <telerik1:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
    <telerik1:InvertedBooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter"/>
    <Geometry x:Key="ArrowTopRight8x8">M0,0 L8,0 8,8 z</Geometry>
    <Geometry x:Key="DragArrow">M 0 1 L 0 0 2 2 0 4 0 3</Geometry>
    <sys:String x:Key="GlyphArrowsKpi"></sys:String>
    <sys:String x:Key="GlyphArrowChevronUp"></sys:String>
    <sys:String x:Key="GlyphArrowChevronRight"></sys:String>
    <sys:String x:Key="GlyphArrowChevronDown"></sys:String>
    <sys:String x:Key="GlyphArrowChevronLeft"></sys:String>
    <sys:String x:Key="GlyphArrowRight"></sys:String>
    <sys:String x:Key="GlyphLinkHorizontal"></sys:String>
    <sys:String x:Key="GlyphCancel"></sys:String>
    <sys:String x:Key="GlyphCheck"></sys:String>
    <sys:String x:Key="GlyphPlus"></sys:String>
    <sys:String x:Key="GlyphPreview"></sys:String>
    <sys:String x:Key="GlyphInsertUp"></sys:String>
    <sys:String x:Key="GlyphInsertDown"></sys:String>
    <sys:String x:Key="GlyphUser"></sys:String>
    <mat:MaterialShadowDepth x:Key="PopupShadowDepth">Depth2</mat:MaterialShadowDepth>
    <SolidColorBrush x:Key="RadHyperlinkButtonNormalBrush" Color="#8dc1ff"/>
    <SolidColorBrush x:Key="RadHyperlinkButtonVisitedBrush" Color="#327fd8"/>
    <SolidColorBrush x:Key="TaskBoardItem_Image_BorderBrush" Color="#FFFFFF"/>
    <ControlTemplate x:Key="ErrorTooltipTemplate" TargetType="ToolTip">
        <Grid x:Name="RootVisual" HorizontalAlignment="Right" RenderTransformOrigin="0 0" Opacity="0" SnapsToDevicePixels="True">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0"/>
                        <VisualTransition To="Open" GeneratedDuration="0:0:0.3">
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="xform" Storyboard.TargetProperty="X" To="0" Duration="0:0:0.3">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase Amplitude=".4" EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Storyboard.TargetName="RootVisual" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.3"/>
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="RootVisual" Storyboard.TargetProperty="Opacity" To="0" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="xform" Storyboard.TargetProperty="X" To="0" Duration="0"/>
                            <DoubleAnimation Storyboard.TargetName="RootVisual" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.RenderTransform>
                <TranslateTransform x:Name="xform" X="-25"/>
            </Grid.RenderTransform>
            <Border Background="{telerik1:CrystalResource ResourceKey=ValidationBrush}" Margin="1 0 0 0" UseLayoutRounding="True" CornerRadius="0 5 5 5">
                <ContentPresenter
                        Content="{Binding ErrorContent}"
                        Margin="7 4"
                        VerticalAlignment="Center"
                        TextBlock.Foreground="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}"
                        TextBlock.FontSize="{telerik1:CrystalResource ResourceKey=FontSize}"
                        TextBlock.FontFamily="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
            </Border>
            <ContentControl/>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="ValidationTooltipTemplate">
        <Grid SnapsToDevicePixels="True" VerticalAlignment="Top">
            <AdornedElementPlaceholder x:Name="Holder"/>
            <Border BorderBrush="{telerik1:CrystalResource ResourceKey=ValidationBrush}" BorderThickness="1" CornerRadius="{telerik1:CrystalResource ResourceKey=CornerRadius}"/>
            <Path
                    Data="{StaticResource ArrowTopRight8x8}"
                    Fill="{telerik1:CrystalResource ResourceKey=ValidationBrush}"
                    Width="8"
                    Height="8"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"/>
            <ToolTipService.ToolTip>
                <ToolTip x:Name="PART_ToolTip"
                        DataContext="{Binding RelativeSource={RelativeSource Mode=Self}, Path=PlacementTarget.DataContext}"
                        Template="{StaticResource ErrorTooltipTemplate}"
                        Placement="Right"/>
            </ToolTipService.ToolTip>
        </Grid>
    </ControlTemplate>
    <Style TargetType="{x:Type mat:Shadow}" x:Key="ShadowStyle">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Theme" Value="Crystal"/>
    </Style>
    <Style BasedOn="{StaticResource ShadowStyle}" TargetType="{x:Type mat:Shadow}"/>
    <Style x:Key="RadGlyphStyle" TargetType="{x:Type telerik1:RadGlyph}">
        <Setter Property="TextElement.FontSize" Value="16"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
    </Style>
    <Style TargetType="{x:Type telerik1:RadGlyph}" BasedOn="{StaticResource RadGlyphStyle}"/>
    <Style x:Key="RepeatButtonStyle" TargetType="RepeatButton">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=MouseOverBrush}"/>
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:CrystalResource ResourceKey=PressedBrush}"/>
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}"/>
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}"/>
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1"/>
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=MainBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8 4"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid>
                        <mat:Shadow
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}"
                                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"/>
                        <Border x:Name="BorderVisual"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"/>
                        <Border x:Name="FocusVisual"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Visibility="Collapsed"
                                IsHitTestVisible="False"
                                BorderThickness="{telerik1:CrystalResource ResourceKey=FocusThickness}"
                                Background="{x:Null}"
                                BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"/>
                        <ContentPresenter x:Name="Content"
                                Focusable="False"
                                TextBlock.Foreground="{TemplateBinding Foreground}"
                                Margin="{TemplateBinding Padding}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                                <Condition Property="IsPressed" Value="False"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" TargetName="FocusVisual"/>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}"/>
                        </Trigger>

                        <!-- disabled and focused -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed"/>
                        </MultiTrigger>

                        <!-- disabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Content" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                            <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="RepeatButton" BasedOn="{StaticResource RepeatButtonStyle}"/>
    <Style x:Key="ToolTipStyle" TargetType="ToolTip">
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1"/>
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=MainBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8 4"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Grid>
                        <mat:Shadow
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}"/>
                        <Border
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ToolTip" BasedOn="{StaticResource ToolTipStyle}"/>
    <Style x:Key="LabelStyle" TargetType="telerik1:Label">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:Label">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="Content"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Content" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerik1:Label" BasedOn="{StaticResource LabelStyle}"/>
    <DataTemplate x:Key="GroupTemplate">
        <ContentPresenter Content="{Binding Header}"/>
    </DataTemplate>
    <ItemsPanelTemplate x:Key="GroupPanelTemplate">
        <telerik1:TileListPanel x:Name="groupPanelTemplatePanel" VerticalAlignment="{Binding VerticalTilesAlignment, RelativeSource={RelativeSource AncestorType=telerik1:RadTileList}}" HorizontalAlignment="{Binding HorizontalTilesAlignment, RelativeSource={RelativeSource AncestorType=telerik1:RadTileList}}"/>
    </ItemsPanelTemplate>
    <ControlTemplate x:Key="TileGroupContainerTemplate" TargetType="telerik1:TileGroupContainer">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="{Binding GroupHeaderHeight, RelativeSource={RelativeSource AncestorType=telerik1:RadTileList}}"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <ContentPresenter
                    Content="{Binding Header}"
                    Margin="{TemplateBinding Padding}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    Visibility="{Binding GroupHeaderVisibility, RelativeSource={RelativeSource AncestorType=telerik1:RadTileList}}"
                    ContentTemplate="{TemplateBinding HeaderTemplate}"/>
            <ItemsPresenter Grid.Row="1"/>
        </Grid>
    </ControlTemplate>
    <Style x:Key="TileGroupContainerStyle" TargetType="telerik1:TileGroupContainer">
        <Setter Property="Template" Value="{StaticResource TileGroupContainerTemplate}"/>
        <Setter Property="HeaderTemplate" Value="{Binding GroupTemplate, RelativeSource={RelativeSource AncestorType=telerik1:RadTileList}}"/>
        <Setter Property="ItemsPanel" Value="{StaticResource GroupPanelTemplate}"/>
        <Setter Property="ItemsSource" Value="{Binding Items}"/>
        <Setter Property="Padding" Value="4 0"/>
        <Setter Property="Header" Value="{Binding Header}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
    </Style>
    <ControlTemplate x:Key="RadTileListTemplate" TargetType="telerik1:RadTileList">
        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <StackPanel Orientation="Horizontal">
                    <ContentControl x:Name="PART_PanoramaBackground" HorizontalAlignment="Left" VerticalAlignment="Top" Content="{TemplateBinding PanoramaBackground}" ClipToBounds="False"/>
                </StackPanel>
                <ScrollViewer x:Name="PART_ScrollViewer"
                        Margin="0"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        HorizontalScrollBarVisibility="Auto"
                        VerticalScrollBarVisibility="Hidden"
                        FocusVisualStyle="{x:Null}"
                        CanContentScroll="True"
                        Padding="{TemplateBinding Padding}">
                    <ItemsPresenter/>
                    <ScrollViewer.InputBindings>
                        <KeyBinding Command="telerikPrimitives:ListControl.SelectAllCommand" Key="A" Modifiers="Control"/>
                    </ScrollViewer.InputBindings>
                </ScrollViewer>
                <ContentPresenter x:Name="dragVisualPlaceholder" Visibility="Collapsed" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
            </Grid>
        </Border>
    </ControlTemplate>
    <ItemsPanelTemplate x:Key="RadTileListItemsPanelTemplate">
        <telerik1:TileListGroupPanel/>
    </ItemsPanelTemplate>
    <Style x:Key="RadTileListStyle" TargetType="telerik1:RadTileList">
        <Setter Property="Template" Value="{StaticResource RadTileListTemplate}"/>
        <Setter Property="ItemsPanel" Value="{StaticResource RadTileListItemsPanelTemplate}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
    </Style>
    <ControlTemplate x:Key="TileTemplate" TargetType="telerik1:Tile">
        <Grid Margin="{TemplateBinding Padding}">
            <mat:Shadow Background="{TemplateBinding Background}" ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}" CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"/>
            <Border x:Name="BorderVisual"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Background="{TemplateBinding Background}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"/>
            <Grid>
                <ContentPresenter x:Name="oldContentPresenter"
                        Content=""
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Margin="{TemplateBinding Padding}"/>
                <ContentPresenter x:Name="contentPresenter"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Margin="{TemplateBinding Padding}"/>
                <Grid x:Name="CheckGrid" Background="Transparent" IsHitTestVisible="False" Visibility="Collapsed" Margin="0 2 2 0">
                    <Path x:Name="CheckPath"
                            Data="M0,0L40,0L40,40z"
                            Fill="{TemplateBinding mat:MaterialAssist.CheckedBrush}"
                            VerticalAlignment="Top"
                            HorizontalAlignment="Right"
                            Height="40"
                            Width="40"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    <telerik1:RadGlyph x:Name="Glyph"
                            FontSize="16"
                            SnapsToDevicePixels="True"
                            VerticalAlignment="Top"
                            HorizontalAlignment="Right"
                            Margin="0 4 4 0"
                            Foreground="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}"
                            Glyph="{StaticResource GlyphCheck}"/>
                </Grid>
                <Border x:Name="SelectedVisual"
                        BorderThickness="2"
                        IsHitTestVisible="False"
                        BorderBrush="{TemplateBinding mat:MaterialAssist.CheckedBrush}"
                        Background="{x:Null}"
                        CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                        Visibility="Collapsed"/>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="SelectedVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush)}"/>
                <Setter TargetName="CheckPath" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush)}"/>
                <Setter TargetName="SelectedVisual" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter TargetName="CheckGrid" Property="Visibility" Value="Visible"/>
                <Setter TargetName="SelectedVisual" Property="Visibility" Value="Visible"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="TileStyle" TargetType="telerik1:Tile">
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}"/>
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=AccentPressedBrush}"/>
        <Setter Property="mat:MaterialAssist.CheckedBrush" Value="{telerik1:CrystalResource ResourceKey=AccentSelectedBrush}"/>
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth2"/>
        <Setter Property="Template" Value="{StaticResource TileTemplate}"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="TileType" Value="Double"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
    </Style>
    <Style TargetType="telerik1:Tile" BasedOn="{StaticResource TileStyle}"/>
    <Style TargetType="telerik1:RadTileList" BasedOn="{StaticResource RadTileListStyle}"/>
    <Style TargetType="telerik1:TileGroupContainer" BasedOn="{StaticResource TileGroupContainerStyle}"/>
    <Style x:Key="GroupBoxStyle" TargetType="telerik1:GroupBox">
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AlternativeBasicBrush}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}"/>
        <Setter Property="Header" Value="GroupBox"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:GroupBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border x:Name="PART_Header" Grid.Column="1">
                            <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" Margin="0 4"/>
                        </Border>
                        <Border x:Name="PART_Border"
                                Grid.Row="1"
                                Grid.RowSpan="2"
                                Grid.ColumnSpan="3"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}">
                            <ContentPresenter x:Name="Content" Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerik1:GroupBox" BasedOn="{StaticResource GroupBoxStyle}"/>
    <Style TargetType="dragDrop:DragVisualCue">
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=MainBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="5 6"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dragDrop:DragVisualCue">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter
                                Content="{TemplateBinding Content}"
                                Margin="{TemplateBinding Padding}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dragDrop:DragArrow">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AccentSelectedBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AccentSelectedBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dragDrop:DragArrow">
                    <Grid>
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="15"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1 1 0 1" Grid.Row="1" Grid.RowSpan="2" Margin="0 0 -1 0">
                                <ContentPresenter
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <Path Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" Data="{StaticResource DragArrow}" Grid.Column="1" Grid.RowSpan="4" Stretch="Fill"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadToolTipStyle" TargetType="telerik1:RadToolTip">
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border CornerRadius="2" BorderThickness="1" Background="#FFFFFFFF">
                        <Border.BorderBrush>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFA3AEB9" Offset="0"/>
                                <GradientStop Color="#FF8399A9" Offset="0.375"/>
                                <GradientStop Color="#FF718597" Offset="0.375"/>
                                <GradientStop Color="#FF617584" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.BorderBrush>
                        <Border BorderBrush="#FFFFFFFF" BorderThickness="1" CornerRadius="1" Background="#FFF7F8FA" Padding="3 0">
                            <TextBlock Text="{Binding}" Margin="3 0"/>
                        </Border>
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadToolTip">
                    <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}"/>
    </Style>
    <Style x:Key="RadToolTipContentViewStyle" TargetType="telerik1:RadToolTipContentView">
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=MainBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8 4"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadToolTipContentView">
                    <Grid>
                        <mat:Shadow
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}"/>
                        <Border
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerik1:RadToolTip" BasedOn="{StaticResource RadToolTipStyle}"/>
    <Style TargetType="telerik1:RadToolTipContentView" BasedOn="{StaticResource RadToolTipContentViewStyle}"/>
    <Style x:Key="BorderStyle" TargetType="Border">
        <Setter Property="Width" Value="4"/>
        <Setter Property="Height" Value="13"/>
        <Setter Property="Margin" Value="-6 0"/>
        <Setter Property="CornerRadius" Value="2"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=IconBrush}"/>
    </Style>
    <Style x:Key="BusyIndicatorProgressBarStyle" TargetType="telerik1:RadProgressBar">
        <Setter Property="Margin" Value="0 18"/>
        <Setter Property="Maximum" Value="100"/>
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadProgressBar">
                    <Grid HorizontalAlignment="Center" Width="180">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ProgressBarSpinner" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimation Storyboard.TargetName="border1" Storyboard.TargetProperty="Opacity" From="1" To="0.3" Duration="0:0:0.49" BeginTime="00:00:00.00"/>
                                        <DoubleAnimation Storyboard.TargetName="border2" Storyboard.TargetProperty="Opacity" From="1" To="0.3" Duration="0:0:0.49" BeginTime="00:00:00.07"/>
                                        <DoubleAnimation Storyboard.TargetName="border3" Storyboard.TargetProperty="Opacity" From="1" To="0.3" Duration="0:0:0.49" BeginTime="00:00:00.14"/>
                                        <DoubleAnimation Storyboard.TargetName="border4" Storyboard.TargetProperty="Opacity" From="1" To="0.3" Duration="0:0:0.49" BeginTime="00:00:00.21"/>
                                        <DoubleAnimation Storyboard.TargetName="border5" Storyboard.TargetProperty="Opacity" From="1" To="0.3" Duration="0:0:0.49" BeginTime="00:00:00.28"/>
                                        <DoubleAnimation Storyboard.TargetName="border6" Storyboard.TargetProperty="Opacity" From="1" To="0.3" Duration="0:0:0.49" BeginTime="00:00:00.35"/>
                                        <DoubleAnimation Storyboard.TargetName="border7" Storyboard.TargetProperty="Opacity" From="0.4" To="0.3" Duration="0:0:0.07" BeginTime="00:00:00.07"/>
                                        <DoubleAnimation Storyboard.TargetName="border7" Storyboard.TargetProperty="Opacity" From="1" To="0.4" Duration="0:0:0.42" BeginTime="00:00:00.42"/>
                                        <DoubleAnimation Storyboard.TargetName="border8" Storyboard.TargetProperty="Opacity" From="0.5" To="0.3" Duration="0:0:0.14" BeginTime="00:00:00.07"/>
                                        <DoubleAnimation Storyboard.TargetName="border8" Storyboard.TargetProperty="Opacity" From="1" To="0.5" Duration="0:0:0.35" BeginTime="00:00:00.49"/>
                                        <DoubleAnimation Storyboard.TargetName="border9" Storyboard.TargetProperty="Opacity" From="0.6" To="0.3" Duration="0:0:0.21" BeginTime="00:00:00.07"/>
                                        <DoubleAnimation Storyboard.TargetName="border9" Storyboard.TargetProperty="Opacity" From="1" To="0.6" Duration="0:0:0.28" BeginTime="00:00:00.56"/>
                                        <DoubleAnimation Storyboard.TargetName="border10" Storyboard.TargetProperty="Opacity" From="0.7" To="0.3" Duration="0:0:0.28" BeginTime="00:00:00.07"/>
                                        <DoubleAnimation Storyboard.TargetName="border10" Storyboard.TargetProperty="Opacity" From="1" To="0.7" Duration="0:0:0.21" BeginTime="00:00:00.63"/>
                                        <DoubleAnimation Storyboard.TargetName="border11" Storyboard.TargetProperty="Opacity" From="0.8" To="0.3" Duration="0:0:0.35" BeginTime="00:00:00.07"/>
                                        <DoubleAnimation Storyboard.TargetName="border11" Storyboard.TargetProperty="Opacity" From="1" To="0.8" Duration="0:0:0.14" BeginTime="00:00:00.70"/>
                                        <DoubleAnimation Storyboard.TargetName="border12" Storyboard.TargetProperty="Opacity" From="0.9" To="0.3" Duration="0:0:0.42" BeginTime="00:00:00.07"/>
                                        <DoubleAnimation Storyboard.TargetName="border12" Storyboard.TargetProperty="Opacity" From="1" To="0.9" Duration="0:0:0.07" BeginTime="00:00:00.77"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ProgressBarTrack" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DeterminateRoot" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="ProgressBarSpinner" Margin="40 0 0 18" Width="48" Height="48">
                            <Canvas RenderTransformOrigin="0,.5">
                                <Canvas.RenderTransform>
                                    <RotateTransform x:Name="border1Rotate"/>
                                </Canvas.RenderTransform>
                                <Border x:Name="border1" Style="{StaticResource BorderStyle}" Opacity="1"/>
                            </Canvas>
                            <Canvas RenderTransformOrigin="0,.5">
                                <Canvas.RenderTransform>
                                    <RotateTransform x:Name="border2Rotate" Angle="30"/>
                                </Canvas.RenderTransform>
                                <Border x:Name="border2" Style="{StaticResource BorderStyle}" Opacity="0.3"/>
                            </Canvas>
                            <Canvas RenderTransformOrigin="0,.5">
                                <Canvas.RenderTransform>
                                    <RotateTransform x:Name="border3Rotate" Angle="60"/>
                                </Canvas.RenderTransform>
                                <Border x:Name="border3" Style="{StaticResource BorderStyle}" Opacity="0.3"/>
                            </Canvas>
                            <Canvas RenderTransformOrigin="0,.5">
                                <Canvas.RenderTransform>
                                    <RotateTransform x:Name="border4Rotate" Angle="90"/>
                                </Canvas.RenderTransform>
                                <Border x:Name="border4" Style="{StaticResource BorderStyle}" Opacity="0.3"/>
                            </Canvas>
                            <Canvas RenderTransformOrigin="0,.5">
                                <Canvas.RenderTransform>
                                    <RotateTransform x:Name="border5Rotate" Angle="120"/>
                                </Canvas.RenderTransform>
                                <Border x:Name="border5" Style="{StaticResource BorderStyle}" Opacity="0.3"/>
                            </Canvas>
                            <Canvas RenderTransformOrigin="0,.5">
                                <Canvas.RenderTransform>
                                    <RotateTransform x:Name="border6Rotate" Angle="150"/>
                                </Canvas.RenderTransform>
                                <Border x:Name="border6" Style="{StaticResource BorderStyle}" Opacity="0.3"/>
                            </Canvas>
                            <Canvas RenderTransformOrigin="0,.5">
                                <Canvas.RenderTransform>
                                    <RotateTransform x:Name="border7Rotate" Angle="180"/>
                                </Canvas.RenderTransform>
                                <Border x:Name="border7" Style="{StaticResource BorderStyle}" Opacity="0.4"/>
                            </Canvas>
                            <Canvas RenderTransformOrigin="0,.5">
                                <Canvas.RenderTransform>
                                    <RotateTransform x:Name="border8Rotate" Angle="210"/>
                                </Canvas.RenderTransform>
                                <Border x:Name="border8" Style="{StaticResource BorderStyle}" Opacity="0.5"/>
                            </Canvas>
                            <Canvas RenderTransformOrigin="0,.5">
                                <Canvas.RenderTransform>
                                    <RotateTransform x:Name="border9Rotate" Angle="240"/>
                                </Canvas.RenderTransform>
                                <Border x:Name="border9" Style="{StaticResource BorderStyle}" Opacity="0.6"/>
                            </Canvas>
                            <Canvas RenderTransformOrigin="0,.5">
                                <Canvas.RenderTransform>
                                    <RotateTransform x:Name="border10Rotate" Angle="270"/>
                                </Canvas.RenderTransform>
                                <Border x:Name="border10" Style="{StaticResource BorderStyle}" Opacity="0.7"/>
                            </Canvas>
                            <Canvas RenderTransformOrigin="0,.5">
                                <Canvas.RenderTransform>
                                    <RotateTransform x:Name="border11Rotate" Angle="300"/>
                                </Canvas.RenderTransform>
                                <Border x:Name="border11" Style="{StaticResource BorderStyle}" Opacity="0.8"/>
                            </Canvas>
                            <Canvas RenderTransformOrigin="0,.5">
                                <Canvas.RenderTransform>
                                    <RotateTransform x:Name="border12Rotate" Angle="330"/>
                                </Canvas.RenderTransform>
                                <Border x:Name="border12" Style="{StaticResource BorderStyle}" Opacity="0.9"/>
                            </Canvas>
                        </Grid>
                        <Border x:Name="ProgressBarTrack"
                                Grid.Row="1"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                                MinHeight="9"/>
                        <mat:ClipBorder x:Name="DeterminateRoot"
                                Grid.Row="1"
                                BorderThickness="0"
                                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Rectangle x:Name="SkipValueSpacer"/>
                                <Rectangle x:Name="ProgressBarIndicator" Grid.Column="1" Fill="{telerik1:CrystalResource ResourceKey=AccentSelectedBrush}"/>
                            </Grid>
                        </mat:ClipBorder>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadBusyIndicatorStyle" TargetType="telerik1:RadBusyIndicator">
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="DisplayAfter" Value="00:00:00.1"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=ComplementaryBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}"/>
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="6"/>
        <Setter Property="ProgressBarStyle" Value="{StaticResource BusyIndicatorProgressBarStyle}"/>
        <Setter Property="animation:AnimationManager.AnimationSelector">
            <Setter.Value>
                <animation:AnimationSelector>
                    <animation:FadeAnimation AnimationName="Hide" Direction="Out" TargetElementName="Indicator"/>
                    <animation:FadeAnimation AnimationName="Show" Direction="In" TargetElementName="Indicator"/>
                </animation:AnimationSelector>
            </Setter.Value>
        </Setter>
        <Setter Property="OverlayStyle">
            <Setter.Value>
                <Style TargetType="Rectangle">
                    <Setter Property="Fill" Value="{telerik1:CrystalResource ResourceKey=IconBrush}"/>
                    <Setter Property="Opacity" Value="0.05"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadBusyIndicator">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="VisibilityStates">
                                <VisualState x:Name="Hidden">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="Indicator" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="Overlay" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Visible">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="Indicator" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="Overlay" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BusyStatusStates">
                                <VisualState x:Name="Idle">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Control.IsEnabled)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Boolean>True</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="ProgressBar" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="0" Storyboard.TargetName="ProgressBar" Storyboard.TargetProperty="IsIndeterminate">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Boolean>False</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Busy">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="Content" Storyboard.TargetProperty="(Control.IsEnabled)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Boolean>False</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentControl x:Name="Content"
                                Foreground="{TemplateBinding Foreground}"
                                IsEnabled="False"
                                IsTabStop="False"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Rectangle x:Name="Overlay" Style="{TemplateBinding OverlayStyle}"/>
                        <Grid x:Name="Indicator" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <telerik1:RadProgressBar x:Name="ProgressBar"
                                    AutomationProperties.Name="progress bar"
                                    Grid.Row="0"
                                    IsIndeterminate="{TemplateBinding IsIndeterminate}"
                                    Value="{TemplateBinding ProgressValue}"
                                    Style="{TemplateBinding ProgressBarStyle}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    mat:MaterialAssist.CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"/>
                            <ContentPresenter Grid.Row="1" HorizontalAlignment="Center" Content="{TemplateBinding BusyContent}" ContentTemplate="{TemplateBinding BusyContentTemplate}"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerik1:RadBusyIndicator" BasedOn="{StaticResource RadBusyIndicatorStyle}"/>
    <Style x:Key="ExpanderHeaderButtonStyle" TargetType="telerik1:RadToggleButton">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=MouseOverBrush}"/>
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:CrystalResource ResourceKey=PressedBrush}"/>
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=MainBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="TabIndex" Value="{Binding TabIndex, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}"/>
        <Setter Property="HorizontalAlignment" Value="{Binding HorizontalHeaderAlignment, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}"/>
        <Setter Property="VerticalAlignment" Value="{Binding VerticalHeaderAlignment, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalHeaderAlignment, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalHeaderAlignment, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}"/>
        <Setter Property="FontSize" Value="{Binding FontSize, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}"/>
        <Setter Property="FontStyle" Value="{Binding FontStyle, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}"/>
        <Setter Property="FontWeight" Value="{Binding FontWeight, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}"/>
        <Setter Property="FontFamily" Value="{Binding FontFamily, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}"/>
        <Setter Property="FontStretch" Value="{Binding FontStretch, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}"/>
        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadToggleButton">
                    <Grid x:Name="HeaderPanel" Background="Transparent" Margin="{TemplateBinding Padding}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid>
                            <Ellipse x:Name="BorderVisual"
                                    Fill="{TemplateBinding Background}"
                                    Stroke="{TemplateBinding BorderBrush}"
                                    StrokeThickness="1"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Width="24"
                                    Height="24"/>
                            <Ellipse x:Name="FocusVisual"
                                    Fill="{x:Null}"
                                    IsHitTestVisible="False"
                                    Stroke="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                                    StrokeThickness="2"
                                    Visibility="Collapsed"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Width="24"
                                    Height="24"/>
                            <telerik1:RadGlyph x:Name="chevron"
                                    RenderTransformOrigin="0.5 0.5"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Glyph="{StaticResource GlyphArrowChevronDown}"
                                    Foreground="{telerik1:CrystalResource ResourceKey=IconBrush}">
                                <telerik1:RadGlyph.RenderTransform>
                                    <RotateTransform Angle="{Binding ExpandDirection, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}, Converter={StaticResource ExpandDirectionToRotationAngleConverter}}"/>
                                </telerik1:RadGlyph.RenderTransform>
                            </telerik1:RadGlyph>
                        </Grid>
                        <ContentPresenter x:Name="HeaderContent"
                                Grid.Column="1"
                                Margin="5 0"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True"/>
                                <Condition Property="IsPressed" Value="False"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="FocusVisual" Value="Visible"/>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="BorderVisual" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="BorderVisual" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="chevron" Property="Glyph" Value="{StaticResource GlyphArrowChevronUp}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="chevron" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                            <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate TargetType="telerik1:RadExpander" x:Key="ExpanderTemplate">
        <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition x:Name="row0" Height="Auto"/>
                        <RowDefinition x:Name="row1" Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition x:Name="col0" Width="Auto"/>
                        <ColumnDefinition x:Name="col1" Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <telerikPrimitives:LayoutTransformControl RenderTransformOrigin="0.5 0.5" x:Name="HeaderContentTransform">
                        <telerik1:RadToggleButton x:Name="HeaderButton"
                                IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                ClickMode="{TemplateBinding ClickMode}"
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                Style="{TemplateBinding HeaderButtonStyle}"/>
                    </telerikPrimitives:LayoutTransformControl>
                    <ContentPresenter x:Name="Content"
                            Margin="{TemplateBinding Padding}"
                            Visibility="Collapsed"
                            UseLayoutRounding="True"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Grid>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ResultOrientation" Value="Vertical">
                <Setter TargetName="HeaderContentTransform" Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90"/>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="HeaderContentTransform" Property="Grid.Row" Value="1"/>
            </Trigger>
            <Trigger Property="ResultOrientation" Value="Horizontal">
                <Setter TargetName="HeaderContentTransform" Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="0"/>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="HeaderContentTransform" Property="Grid.Column" Value="1"/>
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Down">
                <Setter TargetName="col0" Property="Width" Value="*"/>
                <Setter TargetName="row1" Property="Height" Value="*"/>
                <Setter TargetName="Content" Property="Grid.Row" Value="1"/>
                <Setter TargetName="Content" Property="Grid.Column" Value="0"/>
                <Setter TargetName="HeaderContentTransform" Property="Grid.Row" Value="0"/>
                <Setter TargetName="HeaderContentTransform" Property="Grid.Column" Value="0"/>
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Up">
                <Setter TargetName="col0" Property="Width" Value="*"/>
                <Setter TargetName="row0" Property="Height" Value="*"/>
                <Setter TargetName="Content" Property="Grid.Row" Value="0"/>
                <Setter TargetName="Content" Property="Grid.Column" Value="0"/>
                <Setter TargetName="HeaderContentTransform" Property="Grid.Row" Value="1"/>
                <Setter TargetName="HeaderContentTransform" Property="Grid.Column" Value="0"/>
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Right">
                <Setter TargetName="col1" Property="Width" Value="*"/>
                <Setter TargetName="row0" Property="Height" Value="*"/>
                <Setter TargetName="Content" Property="Grid.Column" Value="1"/>
                <Setter TargetName="Content" Property="Grid.Row" Value="0"/>
                <Setter TargetName="HeaderContentTransform" Property="Grid.Row" Value="0"/>
                <Setter TargetName="HeaderContentTransform" Property="Grid.Column" Value="0"/>
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Left">
                <Setter TargetName="col0" Property="Width" Value="*"/>
                <Setter TargetName="row0" Property="Height" Value="*"/>
                <Setter TargetName="HeaderContentTransform" Property="Grid.Column" Value="1"/>
                <Setter TargetName="HeaderContentTransform" Property="Grid.Row" Value="0"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="telerik1:RadExpander" x:Key="RadExpanderStyle">
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalHeaderAlignment" Value="Stretch"/>
        <Setter Property="VerticalHeaderAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="HeaderButtonStyle" Value="{StaticResource ExpanderHeaderButtonStyle}"/>
        <Setter Property="Template" Value="{StaticResource ExpanderTemplate}"/>
        <Setter Property="animation:AnimationManager.AnimationSelector">
            <Setter.Value>
                <animation:AnimationSelector>
                    <animation:ExpanderExpandCollapseAnimation AnimationName="Expand" Direction="In" TargetElementName="Content"/>
                    <animation:ExpanderExpandCollapseAnimation AnimationName="Collapse" Direction="Out" TargetElementName="Content"/>
                    <animation:ExpanderExpandCollapseAnimation AnimationName="ExpandHorizontal" Direction="In" TargetElementName="Content"/>
                    <animation:ExpanderExpandCollapseAnimation AnimationName="CollapseHorizontal" Direction="Out" TargetElementName="Content"/>
                </animation:AnimationSelector>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerik1:RadExpander" BasedOn="{StaticResource RadExpanderStyle}"/>
    <LinearGradientBrush x:Key="IndeterminateVisualFill" StartPoint="-0.2,0.5" EndPoint="0.8,0.5" SpreadMethod="Repeat">
        <GradientStop Offset="0"/>
        <GradientStop Color="#33FFFFFF" Offset="0.1"/>
        <GradientStop Color="#4CFFFFFF" Offset="0.2"/>
        <GradientStop Color="#33FFFFFF" Offset="0.3"/>
        <GradientStop Offset="0.4"/>
    </LinearGradientBrush>
    <Style TargetType="telerik1:RadProgressBar" x:Key="RadProgressBarStyle">
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=AccentSelectedBrush}"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=ComplementaryBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Maximum" Value="100"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="9"/>
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadProgressBar">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="OrientationStates">
                                <VisualState x:Name="Horizontal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="transformationRoot" Storyboard.TargetProperty="(telerikPrimitives:LayoutTransformControl.LayoutTransform)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <RotateTransform Angle="0"/>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Vertical">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="transformationRoot" Storyboard.TargetProperty="(telerikPrimitives:LayoutTransformControl.LayoutTransform)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <RotateTransform Angle="-90"/>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="DeterminateRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="IndeterminateRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <Storyboard RepeatBehavior="Forever">
                                            <PointAnimation Storyboard.TargetName="IndeterminateVisual" Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.StartPoint)" From="-0.2,0.5" To="0.8,0.5" Duration="0:0:2"/>
                                            <PointAnimation Storyboard.TargetName="IndeterminateVisual" Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.EndPoint)" From="0.8,0.5" To="1.8,0.5" Duration="0:0:2"/>
                                        </Storyboard>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <telerikPrimitives:LayoutTransformControl x:Name="transformationRoot">
                            <Grid x:Name="Root">
                                <Border x:Name="ProgressBarTrack"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <Grid x:Name="ProgressBarRootGrid">
                                    <Grid x:Name="IndeterminateRoot" Visibility="Collapsed" ClipToBounds="True">
                                        <Rectangle x:Name="IndeterminateVisual" Fill="{StaticResource IndeterminateVisualFill}"/>
                                    </Grid>
                                    <mat:ClipBorder x:Name="DeterminateRoot" CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Rectangle x:Name="SkipValueSpacer" Fill="Transparent" Width="0" Height="1"/>
                                            <Rectangle x:Name="ProgressBarIndicator"
                                                    Grid.Column="1"
                                                    HorizontalAlignment="Left"
                                                    Fill="{TemplateBinding Foreground}"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Grid>
                                    </mat:ClipBorder>
                                </Grid>
                            </Grid>
                        </telerikPrimitives:LayoutTransformControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsIndeterminate" Value="True">
                <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AccentSelectedBrush}"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="MinWidth" Value="9"/>
                <Setter Property="MinHeight" Value="0"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="telerik1:RadProgressBar" BasedOn="{StaticResource RadProgressBarStyle}"/>
    <Style TargetType="telerik1:RadTransitionControl" x:Key="RadTransitionControlStyle">
        <Setter Property="ClipToBounds" Value="true"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Transition">
            <Setter.Value>
                <telerikTransitions:WaveTransition Amplitude="0.02" Angle="0.3" Fade="0.5"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadTransitionControl">
                    <Grid>
                        <telerikTransitonControl:LayoutAnimationPanel x:Name="PART_RootElement">
                            <Border
                                    BorderThickness="1"
                                    BorderBrush="#01000000"
                                    telerikTransitonControl:LayoutAnimationPanel.HeightWeight="0"
                                    telerikTransitonControl:LayoutAnimationPanel.WidthWeight="0"/>
                            <Rectangle x:Name="OldContentPresenter"
                                    IsHitTestVisible="False"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Width="{Binding OldVisualWidth, ElementName=PART_ContentPresenter}"
                                    Height="{Binding OldVisualHeight, ElementName=PART_ContentPresenter}"
                                    Fill="{Binding OldVisualBrush, ElementName=PART_ContentPresenter}"
                                    telerikTransitonControl:LayoutAnimationPanel.HeightWeight="0"
                                    telerikTransitonControl:LayoutAnimationPanel.WidthWeight="0"
                                    Opacity="0"/>
                            <telerikTransitonControl:TransitionPresenter x:Name="PART_ContentPresenter"
                                    Host="{Binding ElementName=PART_RootElement}"
                                    OldContentPresenter="{Binding ElementName=OldContentPresenter}"
                                    CurrentContent="{TemplateBinding Content}"
                                    CurrentContentTemplate="{TemplateBinding ContentTemplate}"
                                    Cursor="{TemplateBinding Cursor}"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Transition="{TemplateBinding Transition}"
                                    Easing="{TemplateBinding Easing}"
                                    Duration="{TemplateBinding Duration}"
                                    telerikTransitonControl:LayoutAnimationPanel.HeightWeight="1"
                                    telerikTransitonControl:LayoutAnimationPanel.WidthWeight="1"/>
                        </telerikTransitonControl:LayoutAnimationPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerik1:RadTransitionControl" BasedOn="{StaticResource RadTransitionControlStyle}"/>
    <Style TargetType="telerikPrimitives:LayoutTransformControl" x:Key="LayoutTransformControlStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikPrimitives:LayoutTransformControl">
                    <Grid x:Name="RootVisual" Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="ContentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerikPrimitives:LayoutTransformControl" BasedOn="{StaticResource LayoutTransformControlStyle}"/>
    <Style x:Key="HandleBaseStyle" TargetType="RepeatButton" BasedOn="{StaticResource RepeatButtonStyle}">
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=IconBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="False"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Padding" Value="0"/>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsKeyboardFocused" Value="True"/>
                    <Condition Property="IsPressed" Value="False"/>
                    <Condition Property="IsMouseOver" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
                <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=MainBrush}"/>
            </MultiTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}"/>
                <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AccentMouseOverBrush}"/>
                <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AccentBasicBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}"/>
                <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AccentPressedBrush}"/>
                <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AccentBasicBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
                <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"/>
                <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="IncreaseHandleStyle" TargetType="RepeatButton" BasedOn="{StaticResource HandleBaseStyle}">
        <Setter Property="Margin" Value="4 0 0 0"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <telerik1:RadGlyph Glyph="{StaticResource GlyphArrowChevronRight}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DecreaseHandleStyle" TargetType="RepeatButton" BasedOn="{StaticResource HandleBaseStyle}">
        <Setter Property="Margin" Value="0 0 4 0"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <telerik1:RadGlyph Glyph="{StaticResource GlyphArrowChevronLeft}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ThumbControlTemplate" TargetType="Thumb">
        <Grid x:Name="RootElement">
            <Path x:Name="ThumbPath"
                    Data="M1.9,0 L7.9,0 C9.1,0 9.9,0.8 9.9,2 L9.9,8 C9.9,8.8 5.4,14 5.4,14 L4.4,14 C4.4,14 -8.9E-08,8.8 1.4E-14,8 L1.4E-14,2 C-8.9E-08,0.8 0.8,0 1.9,0 z"
                    Stretch="Fill"
                    StrokeThickness="{TemplateBinding BorderThickness}"
                    Stroke="{TemplateBinding BorderBrush}"
                    Fill="{TemplateBinding Background}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="ThumbPath" Property="Stroke" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}"/>
                <Setter TargetName="ThumbPath" Property="Fill" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="ThumbPath" Property="Stroke" Value="{telerik1:CrystalResource ResourceKey=AccentBasicBrush}"/>
                <Setter TargetName="ThumbPath" Property="Fill" Value="{telerik1:CrystalResource ResourceKey=AccentMouseOverBrush}"/>
            </Trigger>
            <Trigger Property="IsDragging" Value="True">
                <Setter TargetName="ThumbPath" Property="Stroke" Value="{telerik1:CrystalResource ResourceKey=AccentBasicBrush}"/>
                <Setter TargetName="ThumbPath" Property="Fill" Value="{telerik1:CrystalResource ResourceKey=AccentPressedBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="ThumbPath" Property="Stroke" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
                <Setter TargetName="ThumbPath" Property="Fill" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ThumbStyle" TargetType="Thumb">
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Width" Value="14"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=MainBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=ComplementaryBasicBrush}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template" Value="{StaticResource ThumbControlTemplate}"/>
    </Style>
    <ControlTemplate x:Key="SelectionMiddleThumbControlTemplate" TargetType="Thumb">
        <Grid>
            <Border x:Name="BorderVisual" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="BorderVisual" Property="Background" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="BorderVisual" Property="Background" Value="{telerik1:CrystalResource ResourceKey=AccentMouseOverBrush}"/>
            </Trigger>
            <Trigger Property="IsDragging" Value="True">
                <Setter TargetName="BorderVisual" Property="Background" Value="{telerik1:CrystalResource ResourceKey=AccentPressedBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="BorderVisual" Property="Background" Value="{telerik1:CrystalResource ResourceKey=ComplementaryBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="SelectionMiddleThumbStyle" TargetType="Thumb">
        <Setter Property="Height" Value="3"/>
        <Setter Property="Margin" Value="0 7"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=IconBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template" Value="{StaticResource SelectionMiddleThumbControlTemplate}"/>
    </Style>
    <DataTemplate x:Key="DefaultTicksTemplate">
        <Rectangle Width="1" ToolTipService.ToolTip="{Binding}" Height="3" Fill="{telerik1:CrystalResource ResourceKey=IconBrush}"/>
    </DataTemplate>
    <Style TargetType="telerik1:RadTickBar" x:Key="RadTickBarStyle">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <telerik1:TickBarPanel Background="Transparent"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TrackStyle" TargetType="ContentControl">
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="2"/>
        <Setter Property="Height" Value="3"/>
        <Setter Property="Margin" Value="4 0"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="Opacity" Value=".5"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=IconBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LargeHandleStyle" TargetType="RepeatButton">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid Background="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="DefaultAutoToolTipContentTemplate">
        <TextBlock Text="{Binding .,StringFormat=F2}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
    </DataTemplate>
    <ControlTemplate x:Key="RadSliderControlTemplate" TargetType="telerik1:RadSlider">
        <telerikPrimitives:LayoutTransformControl x:Name="layoutControl" RenderTransformOrigin=".5 0">
            <telerikPrimitives:LayoutTransformControl.LayoutTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </telerikPrimitives:LayoutTransformControl.LayoutTransform>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="OrientationStates">
                    <VisualState x:Name="Horizontal">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="layoutControl" Storyboard.TargetProperty="LayoutTransform">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <RotateTransform Angle="0"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Vertical">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="layoutControl" Storyboard.TargetProperty="LayoutTransform">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <RotateTransform Angle="-90"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="ReversedHorizontal">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="layoutControl" Storyboard.TargetProperty="LayoutTransform">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <ScaleTransform ScaleX="-1"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BottomTickBar" Storyboard.TargetProperty="RenderTransform">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <ScaleTransform ScaleX="-1"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TopTickBar" Storyboard.TargetProperty="RenderTransform">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <ScaleTransform ScaleX="-1"/>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="ReversedVertical">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="layoutControl" Storyboard.TargetProperty="LayoutTransform">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <TransformGroup>
                                            <ScaleTransform ScaleY="-1"/>
                                            <RotateTransform Angle="90"/>
                                        </TransformGroup>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BottomTickBar" Storyboard.TargetProperty="RenderTransform">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <TransformGroup>
                                            <ScaleTransform ScaleY="-1"/>
                                            <RotateTransform Angle="-180"/>
                                        </TransformGroup>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TopTickBar" Storyboard.TargetProperty="RenderTransform">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <TransformGroup>
                                            <ScaleTransform ScaleY="-1"/>
                                            <RotateTransform Angle="-180"/>
                                        </TransformGroup>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="RangeStates">
                    <VisualState x:Name="SingleThumb"/>
                    <VisualState x:Name="RangeThumbs">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ThumbsHost" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ActiveThumb">
                    <VisualState x:Name="MultiRangeInactiveThumb">
                        <Storyboard>
                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="DecreaseButton" Storyboard.TargetProperty="(IsEnabled)">
                                <DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
                            </BooleanAnimationUsingKeyFrames>
                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="IncreaseButton" Storyboard.TargetProperty="(IsEnabled)">
                                <DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
                            </BooleanAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MultiRangeActiveThumb">
                        <Storyboard>
                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="DecreaseButton" Storyboard.TargetProperty="(IsEnabled)">
                                <DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
                            </BooleanAnimationUsingKeyFrames>
                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="IncreaseButton" Storyboard.TargetProperty="(IsEnabled)">
                                <DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
                            </BooleanAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="MultipleRanges">
                    <VisualState x:Name="MultipleRangeThumbs">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ThumbsHost" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RangeThumbsPanel" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SingleThumbHost" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LargeIncreaseButton" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LargeDecreaseButton" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid UseLayoutRounding="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <telerik1:RadTickBar x:Name="TopTickBar"
                        Grid.Column="1"
                        Grid.ColumnSpan="3"
                        ItemTemplate="{TemplateBinding TickTemplate}"
                        ItemsSource="{TemplateBinding ResultTicks}"
                        ItemTemplateSelector="{TemplateBinding TickTemplateSelector}"
                        Maximum="{TemplateBinding Maximum}"
                        Minimum="{TemplateBinding Minimum}"
                        IsDirectionReversed="{TemplateBinding IsDirectionReversed}"
                        Style="{TemplateBinding TickBarStyle}"
                        RenderTransformOrigin="0.5,0.5">
                    <telerik1:RadTickBar.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </telerik1:RadTickBar.RenderTransform>
                </telerik1:RadTickBar>
                <ContentControl x:Name="Track" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="3" Style="{TemplateBinding TrackStyle}"/>
                <RepeatButton x:Name="DecreaseButton"
                        Grid.Row="1"
                        Delay="{TemplateBinding Delay}"
                        Interval="{TemplateBinding RepeatInterval}"
                        Visibility="{TemplateBinding HandlesVisibility}"
                        Style="{TemplateBinding DecreaseHandleStyle}"/>
                <RepeatButton x:Name="LargeDecreaseButton"
                        Grid.Row="1"
                        Grid.Column="1"
                        Delay="{TemplateBinding Delay}"
                        Interval="{TemplateBinding RepeatInterval}"
                        Style="{StaticResource LargeHandleStyle}"/>
                <Grid Grid.Row="1" Grid.Column="2" VerticalAlignment="Center">
                    <Thumb x:Name="SingleThumbHost" Style="{TemplateBinding ThumbStyle}" Visibility="{TemplateBinding ThumbVisibility}"/>
                    <StackPanel x:Name="RangeThumbsPanel" Orientation="Horizontal" Visibility="Collapsed">
                        <Thumb x:Name="RangeStartThumb" Style="{TemplateBinding ThumbStyle}" Visibility="{TemplateBinding ThumbVisibility}"/>
                        <Thumb x:Name="RangeMiddleThumb" Style="{TemplateBinding SelectionMiddleThumbStyle}"/>
                        <Thumb x:Name="RangeEndThumb" Style="{TemplateBinding AlternateThumbStyle}" Visibility="{TemplateBinding ThumbVisibility}"/>
                    </StackPanel>
                </Grid>
                <slider:ThumbsHost x:Name="ThumbsHost"
                        Grid.Row="1"
                        Grid.Column="1"
                        Grid.ColumnSpan="3"
                        Visibility="Collapsed"
                        VerticalAlignment="Center"
                        Maximum="{TemplateBinding Maximum}"
                        Minimum="{TemplateBinding Minimum}"
                        ItemsSource="{Binding Thumbs, RelativeSource={RelativeSource AncestorType=telerik1:RadSlider}}"
                        SelectedItem="{Binding ActiveThumb, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
                <RepeatButton x:Name="LargeIncreaseButton"
                        Grid.Row="1"
                        Grid.Column="3"
                        Delay="{TemplateBinding Delay}"
                        Interval="{TemplateBinding RepeatInterval}"
                        Style="{StaticResource LargeHandleStyle}"/>
                <RepeatButton x:Name="IncreaseButton"
                        Grid.Row="1"
                        Grid.Column="4"
                        Delay="{TemplateBinding Delay}"
                        Interval="{TemplateBinding RepeatInterval}"
                        Visibility="{TemplateBinding HandlesVisibility}"
                        RenderTransformOrigin="0.5,0.5"
                        Style="{TemplateBinding IncreaseHandleStyle}"/>
                <telerik1:RadTickBar x:Name="BottomTickBar"
                        Grid.Row="2"
                        Grid.Column="1"
                        Grid.ColumnSpan="3"
                        Maximum="{TemplateBinding Maximum}"
                        Minimum="{TemplateBinding Minimum}"
                        ItemsSource="{TemplateBinding ResultTicks}"
                        ItemTemplate="{TemplateBinding TickTemplate}"
                        ItemTemplateSelector="{TemplateBinding TickTemplateSelector}"
                        IsDirectionReversed="{TemplateBinding IsDirectionReversed}"
                        Style="{TemplateBinding TickBarStyle}"
                        RenderTransformOrigin="0.5,0.5">
                    <telerik1:RadTickBar.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </telerik1:RadTickBar.RenderTransform>
                </telerik1:RadTickBar>
            </Grid>
        </telerikPrimitives:LayoutTransformControl>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSelectionRangeEnabled" Value="True">
                <Setter TargetName="SingleThumbHost" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="RangeThumbsPanel" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="TickPlacement" Value="None">
                <Setter TargetName="TopTickBar" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="BottomTickBar" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTickBar" Property="Visibility" Value="Visible"/>
                <Setter TargetName="BottomTickBar" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="TopTickBar" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="BottomTickBar" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTickBar" Property="Visibility" Value="Visible"/>
                <Setter TargetName="BottomTickBar" Property="Visibility" Value="Collapsed"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="RadSliderStyle" TargetType="telerik1:RadSlider">
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1"/>
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}"/>
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=PressedBrush}"/>
        <Setter Property="TickTemplate" Value="{StaticResource DefaultTicksTemplate}"/>
        <Setter Property="ThumbStyle" Value="{StaticResource ThumbStyle}"/>
        <Setter Property="AlternateThumbStyle" Value="{StaticResource ThumbStyle}"/>
        <Setter Property="SelectionMiddleThumbStyle" Value="{StaticResource SelectionMiddleThumbStyle}"/>
        <Setter Property="TickBarStyle" Value="{StaticResource RadTickBarStyle}"/>
        <Setter Property="TrackStyle" Value="{StaticResource TrackStyle}"/>
        <Setter Property="IncreaseHandleStyle" Value="{StaticResource IncreaseHandleStyle}"/>
        <Setter Property="DecreaseHandleStyle" Value="{StaticResource DecreaseHandleStyle}"/>
        <Setter Property="AutoToolTipContentTemplate" Value="{StaticResource DefaultAutoToolTipContentTemplate}"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template" Value="{StaticResource RadSliderControlTemplate}"/>
    </Style>
    <Style x:Key="ThumbsHostStyle" TargetType="{x:Type slider:ThumbsHost}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <slider:ThumbsPanel x:Name="PART_ThumbPanel" IsItemsHost="True"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type slider:ThumbsHost}">
                    <Grid Margin="{TemplateBinding Padding}">
                        <ItemsPresenter x:Name="PART_ItemsPresenter" VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RangeSliderThumbStyle" TargetType="telerik1:RangeSliderThumb">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="ThumbStyle" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type telerik1:RadSlider}}, Path=ThumbStyle}"/>
        <Setter Property="AlternateThumbStyle" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type telerik1:RadSlider}}, Path=AlternateThumbStyle}"/>
        <Setter Property="MiddleThumbStyle" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type telerik1:RadSlider}}, Path=SelectionMiddleThumbStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RangeSliderThumb">
                    <StackPanel Orientation="Horizontal">
                        <telerik1:SliderThumb x:Name="StartThumb"
                                Style="{TemplateBinding ThumbStyle}"
                                Visibility="{Binding ThumbVisibility, RelativeSource={RelativeSource AncestorType=telerik1:RadSlider}}"
                                InteractionMode="{TemplateBinding InteractionMode}"
                                Value="{Binding RangeStart, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
                        <Thumb x:Name="MiddleThumb" Style="{TemplateBinding MiddleThumbStyle}"/>
                        <telerik1:SliderThumb x:Name="EndThumb"
                                Visibility="{Binding ThumbVisibility, RelativeSource={RelativeSource AncestorType=telerik1:RadSlider}}"
                                InteractionMode="{TemplateBinding InteractionMode}"
                                Style="{TemplateBinding AlternateThumbStyle}"
                                Value="{Binding RangeEnd, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerik1:SliderThumb" BasedOn="{StaticResource ThumbStyle}"/>
    <Style TargetType="telerik1:RangeSliderThumb" BasedOn="{StaticResource RangeSliderThumbStyle}"/>
    <Style TargetType="slider:ThumbsHost" BasedOn="{StaticResource ThumbsHostStyle}"/>
    <Style TargetType="telerik1:RadTickBar" BasedOn="{StaticResource RadTickBarStyle}"/>
    <Style TargetType="telerik1:RadSlider" BasedOn="{StaticResource RadSliderStyle}"/>
    <Style x:Key="RadButtonStyle" TargetType="telerik1:RadButton">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=MouseOverBrush}"/>
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:CrystalResource ResourceKey=PressedBrush}"/>
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}"/>
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1"/>
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=MainBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8 4"/>
        <Setter Property="CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadButton">
                    <Grid>
                        <mat:Shadow
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}"
                                CornerRadius="{TemplateBinding CornerRadius}"/>
                        <Border x:Name="BorderVisual"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding CornerRadius}"/>
                        <Border x:Name="FocusVisual"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Visibility="Collapsed"
                                IsHitTestVisible="False"
                                BorderThickness="{telerik1:CrystalResource ResourceKey=FocusThickness}"
                                BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                                CornerRadius="{TemplateBinding CornerRadius}"/>
                        <ContentPresenter x:Name="Content"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                RecognizesAccessKey="True"
                                Focusable="False"
                                TextBlock.Foreground="{TemplateBinding Foreground}"
                                Margin="{TemplateBinding Padding}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!-- background is hidden -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsBackgroundVisible" Value="False"/>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                        </MultiTrigger>

                        <!-- General IsKeyboardFocused setters -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                                <Condition Property="IsPressed" Value="False"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="FocusVisual" Value="Visible"/>
                        </MultiTrigger>

                        <!-- general setters for IsMouseOver -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}"/>
                        </Trigger>

                        <!-- general setters for IsPressed -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}"/>
                        </Trigger>

                        <!-- disabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Content" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                            <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"/>
                        </Trigger>

                        <!-- disabled and focused -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed"/>
                        </MultiTrigger>

                        <!-- disabled & background is hidden -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsBackgroundVisible" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerik1:RadButton" BasedOn="{StaticResource RadButtonStyle}"/>
    <ControlTemplate x:Key="RadHyperlinkButtonControlTemplate" TargetType="telerik1:RadHyperlinkButton">
        <Border x:Name="PART_Background"
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}"
                Background="{TemplateBinding Background}"
                CornerRadius="{TemplateBinding CornerRadius}">
            <TextBlock VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                <Hyperlink x:Name="PART_Hyperlink"
                        AutomationProperties.Name="HyperlinkElement"
                        Command="{TemplateBinding Command}"
                        CommandParameter="{TemplateBinding CommandParameter}"
                        FontFamily="{TemplateBinding FontFamily}"
                        FontSize="{TemplateBinding FontSize}"
                        TextDecorations="{x:Null}"
                        Cursor="Hand"
                        TargetName="{TemplateBinding TargetName}"
                        NavigateUri="{TemplateBinding NavigateUri}"
                        Foreground="{TemplateBinding Foreground}">
                    <ContentPresenter x:Name="ContentPresenter"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
                </Hyperlink>
            </TextBlock>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger SourceName="PART_Hyperlink" Property="IsMouseOver" Value="True">
                <Setter TargetName="PART_Hyperlink" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}"/>
                <Setter TargetName="PART_Hyperlink" Property="TextDecorations" Value="Underline"/>
            </Trigger>
            <Trigger Property="IsVisited" Value="True">
                <Setter TargetName="PART_Hyperlink" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=VisitedForeground}"/>
                <Setter TargetName="PART_Hyperlink" Property="TextDecorations" Value="Underline"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="PART_Hyperlink" Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsVisited" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Hyperlink" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="ContentPresenter" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
            </Trigger>
            <Trigger Property="IsBackgroundVisible" Value="False">
                <Setter TargetName="PART_Background" Property="Background" Value="Transparent"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="RadHyperlinkButtonStyle" TargetType="telerik1:RadHyperlinkButton">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}"/>
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}"/>
        <Setter Property="Foreground" Value="{StaticResource RadHyperlinkButtonNormalBrush}"/>
        <Setter Property="VisitedForeground" Value="{StaticResource RadHyperlinkButtonVisitedBrush}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template" Value="{StaticResource RadHyperlinkButtonControlTemplate}"/>
    </Style>
    <Style TargetType="telerik1:RadHyperlinkButton" BasedOn="{StaticResource RadHyperlinkButtonStyle}"/>
    <Style x:Key="RadPathButtonPathStyle" TargetType="Path">
        <Setter Property="Fill" Value="{telerik1:CrystalResource ResourceKey=IconBrush}"/>
        <Setter Property="Stretch" Value="Fill"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>
    <Style x:Key="RadPathButtonStyle" TargetType="telerik1:RadPathButton">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=MouseOverBrush}"/>
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:CrystalResource ResourceKey=PressedBrush}"/>
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}"/>
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1"/>
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=MainBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8 4"/>
        <Setter Property="CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}"/>
        <Setter Property="PathStyle" Value="{StaticResource RadPathButtonPathStyle}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadPathButton">
                    <Grid>
                        <mat:Shadow
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}"
                                CornerRadius="{TemplateBinding CornerRadius}"/>
                        <Border x:Name="BorderVisual"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        <Border x:Name="FocusVisual"
                                Visibility="Collapsed"
                                IsHitTestVisible="False"
                                BorderThickness="{telerik1:CrystalResource ResourceKey=FocusThickness}"
                                Background="{x:Null}"
                                BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                CornerRadius="{TemplateBinding CornerRadius}"/>
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Path x:Name="Path" Grid.Column="1" Grid.Row="1" Style="{TemplateBinding PathStyle}" Data="{TemplateBinding PathGeometry}"/>
                            <Grid x:Name="ContentHost" Grid.Column="1" Grid.Row="2" Margin="0 5 0 0">
                                <ContentPresenter x:Name="Content"
                                        TextBlock.Foreground="{TemplateBinding Foreground}"
                                        Margin="{TemplateBinding ContentMargin}"
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                        RecognizesAccessKey="True"/>
                            </Grid>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!-- background is hidden -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsBackgroundVisible" Value="False"/>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                        </MultiTrigger>

                        <!-- General setters for IsKeyboardFocused -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                                <Condition Property="IsPressed" Value="False"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="FocusVisual" Value="Visible"/>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="BorderVisual" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="BorderVisual" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}"/>
                        </Trigger>

                        <!-- disabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"/>
                            <Setter TargetName="Path" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                            <Setter TargetName="Content" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                        </Trigger>

                        <!-- disabled & background is hidden -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsBackgroundVisible" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                        </MultiTrigger>

                        <!-- content & content template are not preset -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Content" Value="{x:Null}"/>
                                <Condition Property="ContentTemplate" Value="{x:Null}"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentHost" Property="Visibility" Value="Collapsed"/>
                        </MultiTrigger>

                        <!-- content placement -->
                        <Trigger Property="ContentPlacement" Value="Left">
                            <Setter TargetName="ContentHost" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="ContentHost" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="ContentHost" Property="Margin" Value="0 0 5 0"/>
                        </Trigger>
                        <Trigger Property="ContentPlacement" Value="Right">
                            <Setter TargetName="ContentHost" Property="Grid.Column" Value="2"/>
                            <Setter TargetName="ContentHost" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="ContentHost" Property="Margin" Value="5 0 0 0"/>
                        </Trigger>
                        <Trigger Property="ContentPlacement" Value="Top">
                            <Setter TargetName="ContentHost" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="ContentHost" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="ContentHost" Property="Margin" Value="0 0 0 5"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ContentPlacement" Value="Left"/>
                                <Condition SourceName="Path" Property="HorizontalAlignment" Value="Right"/>
                                <Condition SourceName="Path" Property="Stretch" Value="None"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Path" Property="Grid.Column" Value="2"/>
                            <Setter TargetName="ContentHost" Property="Grid.Column" Value="1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ContentPlacement" Value="Right"/>
                                <Condition SourceName="Path" Property="HorizontalAlignment" Value="Left"/>
                                <Condition SourceName="Path" Property="Stretch" Value="None"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Path" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="ContentHost" Property="Grid.Column" Value="1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ContentPlacement" Value="Top"/>
                                <Condition SourceName="Path" Property="VerticalAlignment" Value="Bottom"/>
                                <Condition SourceName="Path" Property="Stretch" Value="None"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Path" Property="Grid.Row" Value="2"/>
                            <Setter TargetName="ContentHost" Property="Grid.Row" Value="1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ContentPlacement" Value="Bottom"/>
                                <Condition SourceName="Path" Property="VerticalAlignment" Value="Top"/>
                                <Condition SourceName="Path" Property="Stretch" Value="None"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Path" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="ContentHost" Property="Grid.Row" Value="1"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerik1:RadPathButton" BasedOn="{StaticResource RadPathButtonStyle}"/>
    <Style x:Key="RadToggleButtonStyle" TargetType="telerik1:RadToggleButton">
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}"/>
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=MouseOverBrush}"/>
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:CrystalResource ResourceKey=PressedBrush}"/>
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}"/>
        <Setter Property="mat:MaterialAssist.CheckedBrush" Value="{telerik1:CrystalResource ResourceKey=AccentBrush}"/>
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1"/>
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=MainBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8 4"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadToggleButton">
                    <Grid>
                        <mat:Shadow
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}"
                                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"/>
                        <Border x:Name="BorderVisual"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"/>
                        <Border x:Name="FocusVisual"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Visibility="Collapsed"
                                IsHitTestVisible="False"
                                BorderThickness="{telerik1:CrystalResource ResourceKey=FocusThickness}"
                                Background="{x:Null}"
                                BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"/>
                        <ContentPresenter x:Name="Content"
                                Margin="{TemplateBinding Padding}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!-- background is hidden -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsBackgroundVisible" Value="False"/>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                        </MultiTrigger>

                        <!-- general setters for IsChecked -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=AccentMouseOverBrush}"/>
                            <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:CrystalResource ResourceKey=AccentPressedBrush}"/>
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}"/>
                            <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AccentBasicBrush}"/>
                            <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}"/>
                        </Trigger>

                        <!-- general setters for IsKeyboardFocused -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsPressed" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>

                        <!-- General setters for IsMouseOver -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}"/>
                        </Trigger>

                        <!-- General setters for IsPressed -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}"/>
                        </Trigger>

                        <!-- disabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Content" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                            <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"/>
                        </Trigger>

                        <!-- disabled and focused -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed"/>
                        </MultiTrigger>

                        <!-- disabled & background is hidden -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsBackgroundVisible" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerik1:RadToggleButton" BasedOn="{StaticResource RadToggleButtonStyle}"/>
    <Style x:Key="RadToggleSwitchButtonStyle" TargetType="telerik1:RadToggleSwitchButton">
        <Setter Property="Padding" Value="6 0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}"/>
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AccentBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AccentBasicBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="TrackWidth" Value="50"/>
        <Setter Property="TrackHeight" Value="22"/>
        <Setter Property="ThumbWidth" Value="14"/>
        <Setter Property="ThumbHeight" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadToggleSwitchButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TrackWidth}"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <ContentPresenter x:Name="UncheckedContent"
                                Grid.Column="2"
                                Margin="{TemplateBinding Padding}"
                                TextBlock.Foreground="{TemplateBinding Foreground}"
                                Content="{TemplateBinding UncheckedContent}"
                                ContentTemplate="{TemplateBinding UncheckedContentTemplate}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                RecognizesAccessKey="True"/>
                        <Grid SnapsToDevicePixels="True" Grid.Column="1" Height="{TemplateBinding TrackHeight}">
                            <Rectangle x:Name="TrackBackground"
                                    RadiusX="9"
                                    RadiusY="9"
                                    Opacity="0"
                                    Fill="{TemplateBinding Background}"
                                    Stroke="{TemplateBinding BorderBrush}"
                                    StrokeThickness="{TemplateBinding BorderThickness}"/>
                            <Rectangle x:Name="UncheckedTrackBackground"
                                    RadiusX="9"
                                    RadiusY="9"
                                    Fill="{telerik1:CrystalResource ResourceKey=MainBrush}"
                                    Stroke="{telerik1:CrystalResource ResourceKey=AlternativeBasicBrush}"
                                    StrokeThickness="{TemplateBinding BorderThickness}"/>
                            <Ellipse x:Name="PART_Thumb"
                                    Fill="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}"
                                    Width="{TemplateBinding ThumbWidth}"
                                    Height="{TemplateBinding ThumbHeight}"
                                    HorizontalAlignment="Left"
                                    RenderTransformOrigin="0.5,0.5"
                                    Margin="4 0">
                                <Ellipse.RenderTransform>
                                    <TranslateTransform X="0" Y="0"/>
                                </Ellipse.RenderTransform>
                            </Ellipse>
                        </Grid>
                        <ContentPresenter x:Name="CheckedContent"
                                Grid.Column="2"
                                Margin="{TemplateBinding Padding}"
                                TextBlock.Foreground="{TemplateBinding Foreground}"
                                Content="{TemplateBinding CheckedContent}"
                                ContentTemplate="{TemplateBinding CheckedContentTemplate}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                                <Condition Property="IsEnabled" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="TrackBackground" Property="Stroke" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}"/>
                            <Setter TargetName="UncheckedTrackBackground" Property="Stroke" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}"/>
                            <Setter Property="BorderThickness" Value="2"/>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Thumb" Property="Fill" Value="{telerik1:CrystalResource ResourceKey=AccentMouseOverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="PART_Thumb" Property="Fill" Value="{telerik1:CrystalResource ResourceKey=IconBrush}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="TrackBackground" Property="Opacity" Value="1"/>
                            <Setter TargetName="UncheckedTrackBackground" Property="Opacity" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="PART_Thumb" Property="Fill" Value="{telerik1:CrystalResource ResourceKey=IconBrush}"/>
                            <Setter TargetName="TrackBackground" Property="Opacity" Value="0"/>
                            <Setter TargetName="UncheckedTrackBackground" Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_Thumb" Property="Fill" Value="{telerik1:CrystalResource ResourceKey=AccentPressedBrush}"/>
                            <Setter TargetName="TrackBackground" Property="Stroke" Value="{telerik1:CrystalResource ResourceKey=AccentBasicBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="CheckedContent" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                            <Setter TargetName="UncheckedContent" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                            <Setter TargetName="PART_Thumb" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                            <Setter TargetName="PART_Thumb" Property="Fill" Value="{telerik1:CrystalResource ResourceKey=IconBrush}"/>
                            <Setter TargetName="TrackBackground" Property="Stroke" Value="{telerik1:CrystalResource ResourceKey=AlternativeBasicBrush}"/>
                            <Setter TargetName="TrackBackground" Property="Fill" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"/>
                            <Setter TargetName="UncheckedTrackBackground" Property="Fill" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"/>
                            <Setter TargetName="UncheckedTrackBackground" Property="Fill" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True"/>
                                <Condition Value="True">
                                    <Condition.Binding>
                                        <MultiBinding Converter="{StaticResource MultiBindingBooleanOrConverter}" Mode="OneWay">
                                            <Binding Path="ContentPosition" RelativeSource="{RelativeSource Self}" Mode="OneWay" Converter="{StaticResource EnumToBooleanConverter}" ConverterParameter="Left"/>
                                            <Binding Path="ContentPosition" RelativeSource="{RelativeSource Self}" Mode="OneWay" Converter="{StaticResource EnumToBooleanConverter}" ConverterParameter="Right"/>
                                        </MultiBinding>
                                    </Condition.Binding>
                                </Condition>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="UncheckedContent" Property="Visibility" Value="Hidden"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="False"/>
                                <Condition Value="True">
                                    <Condition.Binding>
                                        <MultiBinding Converter="{StaticResource MultiBindingBooleanOrConverter}" Mode="OneWay">
                                            <Binding Path="ContentPosition" RelativeSource="{RelativeSource Self}" Mode="OneWay" Converter="{StaticResource EnumToBooleanConverter}" ConverterParameter="Left"/>
                                            <Binding Path="ContentPosition" RelativeSource="{RelativeSource Self}" Mode="OneWay" Converter="{StaticResource EnumToBooleanConverter}" ConverterParameter="Right"/>
                                        </MultiBinding>
                                    </Condition.Binding>
                                </Condition>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="CheckedContent" Property="Visibility" Value="Hidden"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="{x:Null}"/>
                                <Condition Value="True">
                                    <Condition.Binding>
                                        <MultiBinding Converter="{StaticResource MultiBindingBooleanOrConverter}" Mode="OneWay">
                                            <Binding Path="ContentPosition" RelativeSource="{RelativeSource Self}" Mode="OneWay" Converter="{StaticResource EnumToBooleanConverter}" ConverterParameter="Left"/>
                                            <Binding Path="ContentPosition" RelativeSource="{RelativeSource Self}" Mode="OneWay" Converter="{StaticResource EnumToBooleanConverter}" ConverterParameter="Right"/>
                                        </MultiBinding>
                                    </Condition.Binding>
                                </Condition>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="CheckedContent" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="UncheckedContent" Property="Visibility" Value="Hidden"/>
                        </MultiDataTrigger>
                        <Trigger Property="ContentPosition" Value="Left">
                            <Setter TargetName="CheckedContent" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="UncheckedContent" Property="Grid.Column" Value="0"/>
                            <Setter Property="HorizontalContentAlignment" Value="Right"/>
                        </Trigger>
                        <Trigger Property="ContentPosition" Value="Both">
                            <Setter TargetName="UncheckedContent" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="CheckedContent" Property="Grid.Column" Value="2"/>
                            <Setter TargetName="CheckedContent" Property="HorizontalAlignment" Value="Right"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="animation:AnimationManager.AnimationSelector">
            <Setter.Value>
                <animation:AnimationSelector>
                    <animation:AnimationGroup AnimationName="CheckedAnimation">
                        <animation:MoveAnimation TargetElementName="PART_Thumb" Duration="0:0:0.4">
                            <animation:MoveAnimation.Easing>
                                <QuadraticEase EasingMode="EaseInOut"/>
                            </animation:MoveAnimation.Easing>
                        </animation:MoveAnimation>
                        <animation:FadeAnimation TargetElementName="UncheckedTrackBackground" Direction="Out" Duration="0:0:0.4"/>
                        <animation:FadeAnimation TargetElementName="TrackBackground" Direction="In" Duration="0:0:0.4"/>
                    </animation:AnimationGroup>
                    <animation:AnimationGroup AnimationName="UncheckedAnimation">
                        <animation:MoveAnimation TargetElementName="PART_Thumb" Duration="0:0:0.4">
                            <animation:MoveAnimation.Easing>
                                <QuadraticEase EasingMode="EaseInOut"/>
                            </animation:MoveAnimation.Easing>
                        </animation:MoveAnimation>
                        <animation:FadeAnimation TargetElementName="TrackBackground" Direction="Out" Duration="0:0:0.4"/>
                        <animation:FadeAnimation TargetElementName="UncheckedTrackBackground" Direction="In" Duration="0:0:0.4"/>
                    </animation:AnimationGroup>
                    <animation:AnimationGroup AnimationName="IsThreeStateUncheckedAnimation">
                        <animation:MoveAnimation TargetElementName="PART_Thumb" Duration="0:0:0.4">
                            <animation:MoveAnimation.Easing>
                                <QuadraticEase EasingMode="EaseInOut"/>
                            </animation:MoveAnimation.Easing>
                        </animation:MoveAnimation>
                    </animation:AnimationGroup>
                    <animation:AnimationGroup AnimationName="IndeterminateAnimation">
                        <animation:MoveAnimation TargetElementName="PART_Thumb" Duration="0:0:0.4">
                            <animation:MoveAnimation.Easing>
                                <QuadraticEase EasingMode="EaseInOut"/>
                            </animation:MoveAnimation.Easing>
                        </animation:MoveAnimation>
                        <animation:FadeAnimation TargetElementName="TrackBackground" Direction="Out" Duration="0:0:0.4"/>
                        <animation:FadeAnimation TargetElementName="UncheckedTrackBackground" Direction="In" Duration="0:0:0.4"/>
                    </animation:AnimationGroup>
                </animation:AnimationSelector>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerik1:RadToggleSwitchButton" BasedOn="{StaticResource RadToggleSwitchButtonStyle}"/>
    <Style x:Key="RadRadioButtonStyle" TargetType="telerik1:RadRadioButton">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=MouseOverBrush}"/>
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:CrystalResource ResourceKey=PressedBrush}"/>
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}"/>
        <Setter Property="mat:MaterialAssist.CheckedBrush" Value="{telerik1:CrystalResource ResourceKey=AccentBrush}"/>
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1"/>
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=MainBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8 4"/>
        <Setter Property="CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationTooltipTemplate}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadRadioButton">
                    <Grid>
                        <mat:Shadow
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}"
                                CornerRadius="{TemplateBinding CornerRadius}"/>
                        <Border x:Name="BorderVisual"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding CornerRadius}"/>
                        <Border x:Name="FocusVisual"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Visibility="Collapsed"
                                IsHitTestVisible="False"
                                BorderThickness="{telerik1:CrystalResource ResourceKey=FocusThickness}"
                                Background="{x:Null}"
                                BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.FocusBrush)}"
                                CornerRadius="{TemplateBinding CornerRadius}"/>
                        <ContentPresenter x:Name="Content"
                                Margin="{TemplateBinding Padding}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!-- background is hidden -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsBackgroundVisible" Value="False"/>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                        </MultiTrigger>

                        <!-- general setters for IsChecked -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=AccentMouseOverBrush}"/>
                            <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:CrystalResource ResourceKey=AccentPressedBrush}"/>
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}"/>
                            <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AccentBasicBrush}"/>
                            <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}"/>
                        </Trigger>

                        <!-- general setters for IsKeyboardFocused -->
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <!-- General setters for IsMouseOver -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="BorderVisual" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}"/>
                        </Trigger>

                        <!-- General setters for IsPressed -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}"/>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Hidden"/>
                        </Trigger>

                        <!-- disabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"/>
                            <Setter TargetName="Content" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                        </Trigger>

                        <!-- disabled and focused -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed"/>
                        </MultiTrigger>

                        <!-- disabled & checked & visible background -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsBackgroundVisible" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
                        </MultiTrigger>

                        <!-- disabled & hidden background -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsBackgroundVisible" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerik1:RadRadioButton" BasedOn="{StaticResource RadRadioButtonStyle}"/>
    <Style x:Key="RadDropDownButtonStyle" TargetType="telerik1:RadDropDownButton">
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}"/>
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=MouseOverBrush}"/>
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:CrystalResource ResourceKey=PressedBrush}"/>
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}"/>
        <Setter Property="mat:MaterialAssist.CheckedBrush" Value="{telerik1:CrystalResource ResourceKey=PressedBrush}"/>
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1"/>
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=MainBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
        <Setter Property="DropDownMinHeight" Value="3"/>
        <Setter Property="DropDownMinWidth" Value="3"/>
        <Setter Property="Padding" Value="8 4"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="IsOpen" Value="False"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadDropDownButton">
                    <Grid>
                        <mat:Shadow
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}"
                                CornerRadius="{TemplateBinding CornerRadius}"/>
                        <Border x:Name="BorderVisual"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding CornerRadius}"/>
                        <Border x:Name="FocusVisual"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Visibility="Collapsed"
                                IsHitTestVisible="False"
                                BorderThickness="{telerik1:CrystalResource ResourceKey=FocusThickness}"
                                Background="{x:Null}"
                                BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                                CornerRadius="{TemplateBinding CornerRadius}"/>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="Content"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    TextBlock.Foreground="{TemplateBinding Foreground}"
                                    Margin="{TemplateBinding Padding}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    VerticalAlignment="{Binding RelativeSource={RelativeSource AncestorType={x:Type telerik1:RadDropDownButton}},Path=VerticalContentAlignment}"
                                    HorizontalAlignment="{Binding RelativeSource={RelativeSource AncestorType={x:Type telerik1:RadDropDownButton}},Path= HorizontalContentAlignment}"
                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                    RecognizesAccessKey="True"/>
                            <Grid x:Name="DropDownIndicator"
                                    IsHitTestVisible="False"
                                    Grid.Column="1"
                                    Grid.Row="2"
                                    HorizontalAlignment="Center"
                                    Canvas.ZIndex="2"
                                    VerticalAlignment="Center"
                                    Visibility="{TemplateBinding DropDownIndicatorVisibility}"
                                    Width="20"
                                    Height="24">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <telerik1:RadGlyph x:Name="arrowUp" Foreground="{telerik1:CrystalResource ResourceKey=IconBrush}" Glyph="{StaticResource GlyphArrowChevronUp}" Margin="2 -1 2 -4"/>
                                <telerik1:RadGlyph x:Name="arrowDown" Grid.Row="1" Foreground="{telerik1:CrystalResource ResourceKey=IconBrush}" Glyph="{StaticResource GlyphArrowChevronDown}" Margin="2 -4 2 -1"/>
                            </Grid>
                        </Grid>
                        <Popup x:Name="DropDownPopup"
                                AllowsTransparency="True"
                                StaysOpen="False"
                                Focusable="False"
                                Placement="Bottom"
                                PopupAnimation="{TemplateBinding PopupAnimation}"
                                HorizontalOffset="0"
                                VerticalOffset="1">
                            <Grid x:Name="PopupGrid" Margin="5">
                                <mat:Shadow x:Name="PopupShadow"
                                        ShadowDepth="{StaticResource PopupShadowDepth}"
                                        SnapsToDevicePixels="True"
                                        Background="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"
                                        CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"/>
                                <Border x:Name="DropDownPopupBorder"
                                        MinWidth="{TemplateBinding DropDownMinWidth}"
                                        MinHeight="{TemplateBinding DropDownMinHeight}"
                                        Width="{TemplateBinding DropDownWidth}"
                                        Height="{TemplateBinding DropDownHeight}"
                                        MaxWidth="{TemplateBinding DropDownMaxWidth}"
                                        MaxHeight="{TemplateBinding DropDownMaxHeight}"
                                        Background="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"
                                        BorderThickness="1"
                                        BorderBrush="{telerik1:CrystalResource ResourceKey=ComplementaryBasicBrush}"
                                        CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}">
                                    <ContentControl x:Name="DropDownPopupContent"
                                            Content="{TemplateBinding DropDownContent}"
                                            HorizontalContentAlignment="Stretch"
                                            VerticalContentAlignment="Stretch"
                                            ContentTemplate="{TemplateBinding DropDownContentTemplate}"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext}"
                                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!-- background is hidden -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsBackgroundVisible" Value="False"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsOpen" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                        </MultiTrigger>

                        <!-- General IsKeyboardFocused setters -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                                <Condition Property="IsPressed" Value="False"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="FocusVisual" Value="Visible"/>
                        </MultiTrigger>

                        <!-- General setters for IsMouseOver -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="BorderVisual" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}"/>
                        </Trigger>

                        <!-- General setters for IsPressed -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="BorderVisual" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}"/>
                        </Trigger>

                        <!-- General setters for IsOpen -->
                        <Trigger Property="IsOpen" Value="True">
                            <Setter Property="Visibility" TargetName="FocusVisual" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="PopupShadow" Value="Visible"/>
                            <Setter Property="Background" TargetName="BorderVisual" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}"/>
                        </Trigger>

                        <!-- disabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Content" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                            <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"/>
                            <Setter TargetName="DropDownIndicator" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                        </Trigger>

                        <!-- disabled and focused -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed"/>
                        </MultiTrigger>

                        <!-- disabled & background is hidden -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsBackgroundVisible" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                        </MultiTrigger>

                        <!-- DropDownButtonPosition and DropDownPacement -->
                        <Trigger Property="DropDownButtonPosition" Value="Bottom"/>
                        <Trigger Property="DropDownButtonPosition" Value="Left">
                            <Setter TargetName="DropDownIndicator" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="DropDownIndicator" Property="Grid.Row" Value="1"/>
                        </Trigger>
                        <Trigger Property="DropDownButtonPosition" Value="Top">
                            <Setter TargetName="DropDownIndicator" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="DropDownIndicator" Property="Grid.Row" Value="0"/>
                        </Trigger>
                        <Trigger Property="DropDownButtonPosition" Value="Right">
                            <Setter TargetName="DropDownIndicator" Property="Grid.Column" Value="2"/>
                            <Setter TargetName="DropDownIndicator" Property="Grid.Row" Value="1"/>
                        </Trigger>
                        <Trigger Property="DropDownPlacement" Value="Bottom"/>
                        <Trigger Property="DropDownPlacement" Value="Top">
                            <Setter TargetName="DropDownPopup" Property="VerticalOffset" Value="-1"/>
                            <Setter TargetName="DropDownPopup" Property="HorizontalOffset" Value="0"/>
                            <Setter TargetName="PopupGrid" Property="Margin" Value="1 1 1 0"/>
                        </Trigger>
                        <Trigger Property="DropDownPlacement" Value="Left">
                            <Setter TargetName="DropDownPopup" Property="VerticalOffset" Value="0"/>
                            <Setter TargetName="DropDownPopup" Property="HorizontalOffset" Value="-1"/>
                            <Setter TargetName="PopupGrid" Property="Margin" Value="1 1 0 1"/>
                        </Trigger>
                        <Trigger Property="DropDownPlacement" Value="Right">
                            <Setter TargetName="DropDownPopup" Property="VerticalOffset" Value="0"/>
                            <Setter TargetName="DropDownPopup" Property="HorizontalOffset" Value="1"/>
                            <Setter TargetName="PopupGrid" Property="Margin" Value="0 1 1 1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerik1:RadDropDownButton" BasedOn="{StaticResource RadDropDownButtonStyle}"/>
    <Style x:Key="SplitButtonPartStyle" TargetType="telerik1:RadButton" BasedOn="{StaticResource RadButtonStyle}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Visibility" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Path=IsButtonPartVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="mat:MaterialAssist.IsShadowDisabled" Value="True"/>
        <Setter Property="Padding" Value="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="IsBackgroundVisible" Value="{Binding IsBackgroundVisible, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="FontSize" Value="{Binding FontSize, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="MinHeight" Value="{Binding MinHeight, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=BottomLeftTop}"/>
    </Style>
    <Style x:Key="SplitToggleButtonStyle" TargetType="telerik1:RadToggleButton" BasedOn="{StaticResource RadToggleButtonStyle}">
        <Setter Property="mat:MaterialAssist.CheckedBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush)}"/>
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:CrystalResource ResourceKey=PressedBrush}"/>
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{x:Null}"/>
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=MouseOverBrush}"/>
        <Setter Property="mat:MaterialAssist.IsShadowDisabled" Value="True"/>
        <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=BottomRightTop}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AccentBasicBrush}"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AccentBrush}"/>
        <Setter Property="FontSize" Value="{Binding FontSize, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Focusable" Value="False"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=IconBrush}"/>
                <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=IconBrush}"/>
                <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=PressedBrush}"/>
                <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:CrystalResource ResourceKey=MouseOverBrush}"/>
                <Setter Property="mat:MaterialAssist.FocusBrush" Value="{x:Null}"/>
                <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=IconBrush}"/>
                <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RadSplitButtonStyle" TargetType="telerik1:RadSplitButton">
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}"/>
        <Setter Property="mat:MaterialAssist.CheckedBrush" Value="{telerik1:CrystalResource ResourceKey=PressedBrush}"/>
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}"/>
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1"/>
        <Setter Property="ButtonPartStyle" Value="{StaticResource SplitButtonPartStyle}"/>
        <Setter Property="TogglePartStyle" Value="{StaticResource SplitToggleButtonStyle}"/>
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=MainBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8 4"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="IsOpen" Value="False"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadSplitButton">
                    <Grid SnapsToDevicePixels="True">
                        <mat:Shadow
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}"
                                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"/>
                        <Border x:Name="BorderVisual"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{x:Null}"
                                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                                Background="{x:Null}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                IsHitTestVisible="False"/>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <telerik1:RadButton x:Name="ButtonPart"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Style="{TemplateBinding ButtonPartStyle}"
                                    CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CornerRadius), Converter={StaticResource CornerRadiusConverter}, ConverterParameter=LeftTopBottom}"
                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"/>
                            <Rectangle x:Name="Separator"
                                    MinWidth="1"
                                    MinHeight="1"
                                    Fill="{Binding BorderBrush, ElementName=DropDownPart}"
                                    VerticalAlignment="Stretch"
                                    HorizontalAlignment="Right"
                                    Stroke="{x:Null}"
                                    StrokeThickness="0"
                                    Grid.Row="1"
                                    Grid.Column="1"/>
                            <telerik1:RadToggleButton x:Name="DropDownPart"
                                    Grid.Row="1"
                                    Grid.Column="2"
                                    IsChecked="{Binding Path=IsOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{TemplateBinding TogglePartStyle}"
                                    mat:MaterialAssist.CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CornerRadius), Converter={StaticResource CornerRadiusConverter}, ConverterParameter=RightTopBottom}"
                                    IsBackgroundVisible="{TemplateBinding IsBackgroundVisible}"
                                    Visibility="{TemplateBinding DropDownIndicatorVisibility}">
                                <telerik1:RadToggleButton.Content>
                                    <Grid x:Name="DropDownIndicator" HorizontalAlignment="Center" Canvas.ZIndex="2" VerticalAlignment="Center" Width="20" Height="24">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <telerik1:RadGlyph x:Name="arrowUp"
                                                Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type telerik1:RadToggleButton}}}"
                                                Glyph="{StaticResource GlyphArrowChevronUp}"
                                                Margin="0 -1 0 -3"/>
                                        <telerik1:RadGlyph x:Name="arrowDown"
                                                Grid.Row="1"
                                                Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type telerik1:RadToggleButton}}}"
                                                Glyph="{StaticResource GlyphArrowChevronDown}"
                                                Margin="0 -3 0 -1"/>
                                    </Grid>
                                </telerik1:RadToggleButton.Content>
                            </telerik1:RadToggleButton>
                        </Grid>
                        <Border x:Name="FocusVisual"
                                Visibility="Collapsed"
                                IsHitTestVisible="False"
                                Grid.Row="1"
                                Grid.Column="2"
                                Background="{x:Null}"
                                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                                BorderThickness="{telerik1:CrystalResource ResourceKey=FocusThickness}"
                                BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        <Popup x:Name="DropDownPopup"
                                AllowsTransparency="True"
                                StaysOpen="False"
                                Focusable="False"
                                Placement="Bottom"
                                PopupAnimation="{TemplateBinding PopupAnimation}"
                                HorizontalOffset="0"
                                VerticalOffset="1">
                            <Grid x:Name="PopupGrid" Margin="5">
                                <mat:Shadow x:Name="PopupShadow"
                                        ShadowDepth="{StaticResource PopupShadowDepth}"
                                        Height="{TemplateBinding DropDownHeight}"
                                        Width="{TemplateBinding DropDownWidth}"
                                        CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                                        SnapsToDevicePixels="True"
                                        Background="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"/>
                                <Border x:Name="DropDownPopupBorder"
                                        MinWidth="3"
                                        MinHeight="3"
                                        BorderThickness="1"
                                        Width="{TemplateBinding DropDownWidth}"
                                        Height="{TemplateBinding DropDownHeight}"
                                        MaxWidth="{TemplateBinding DropDownMaxWidth}"
                                        MaxHeight="{TemplateBinding DropDownMaxHeight}"
                                        Background="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"
                                        BorderBrush="{telerik1:CrystalResource ResourceKey=ComplementaryBasicBrush}"
                                        CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}">
                                    <ContentControl x:Name="DropDownPopupContent"
                                            Content="{TemplateBinding DropDownContent}"
                                            ContentTemplate="{TemplateBinding DropDownContentTemplate}"
                                            HorizontalContentAlignment="Stretch"
                                            VerticalContentAlignment="Stretch"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext}"/>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!-- background is hidden -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsBackgroundVisible" Value="False"/>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsOpen" Value="False"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="DropDownPart" Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=IconBrush}"/>
                        </MultiTrigger>

                        <!-- hidden background & mouseover button part -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsBackgroundVisible" Value="False"/>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsOpen" Value="False"/>
                                <Condition SourceName="ButtonPart" Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="DropDownPart" Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}"/>
                            <Setter TargetName="DropDownPart" Property="Background" Value="{telerik1:CrystalResource ResourceKey=AccentBrush}"/>
                            <Setter TargetName="DropDownPart" Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AccentBasicBrush}"/>
                        </MultiTrigger>

                        <!-- focused -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsOpen" Value="False"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="FocusVisual" Value="Visible"/>
                            <Setter TargetName="ButtonPart" Property="Background" Value="{telerik1:CrystalResource ResourceKey=MainBrush}"/>
                            <Setter TargetName="DropDownPart" Property="Background" Value="{telerik1:CrystalResource ResourceKey=MainBrush}"/>
                            <Setter TargetName="Separator" Property="Fill" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
                            <Setter TargetName="DropDownPart" Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=IconBrush}"/>
                        </MultiTrigger>

                        <!-- disabled and focused -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed"/>
                        </MultiTrigger>

                        <!-- IsToggle = True && checked -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsToggle" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="mat:MaterialAssist.CheckedBrush" Value="{telerik1:CrystalResource ResourceKey=AccentBrush}"/>
                            <Setter TargetName="ButtonPart" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}"/>
                            <Setter TargetName="ButtonPart" Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=AccentMouseOverBrush}"/>
                            <Setter TargetName="ButtonPart" Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:CrystalResource ResourceKey=AccentPressedBrush}"/>
                            <Setter TargetName="ButtonPart" Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AccentBasicBrush}"/>
                            <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}"/>
                        </MultiTrigger>

                        <!-- disabled -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsBackgroundVisible" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="DropDownPart" Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=IconBrush}"/>
                            <Setter TargetName="DropDownPart" Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
                        </MultiTrigger>

                        <!-- disabled & background is hidden -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsBackgroundVisible" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="DropDownPart" Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                        </MultiTrigger>

                        <!-- opened -->
                        <Trigger Property="IsOpen" Value="True">
                            <Setter TargetName="ButtonPart" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}"/>
                            <Setter TargetName="ButtonPart" Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
                            <Setter TargetName="Separator" Property="Fill" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
                        </Trigger>

                        <!-- DropDownButton Position -->
                        <Trigger Property="DropDownButtonPosition" Value="Bottom">
                            <Setter TargetName="DropDownPart" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="DropDownPart" Property="Grid.Row" Value="2"/>
                            <Setter TargetName="FocusVisual" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="FocusVisual" Property="Grid.Row" Value="2"/>
                            <Setter TargetName="Separator" Property="HorizontalAlignment" Value="Stretch"/>
                            <Setter TargetName="Separator" Property="VerticalAlignment" Value="Bottom"/>
                            <Setter TargetName="DropDownPart" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=RightBottomLeft}"/>
                            <Setter TargetName="ButtonPart" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=RightTopLeft}"/>
                            <Setter TargetName="ButtonPart" Property="mat:MaterialAssist.CornerRadius" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CornerRadius), Converter={StaticResource CornerRadiusConverter}, ConverterParameter=TopLeftRight}"/>
                            <Setter TargetName="DropDownPart" Property="mat:MaterialAssist.CornerRadius" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CornerRadius), Converter={StaticResource CornerRadiusConverter}, ConverterParameter=BottomLeftRight}"/>
                        </Trigger>
                        <Trigger Property="DropDownButtonPosition" Value="Left">
                            <Setter TargetName="DropDownPart" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="DropDownPart" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="FocusVisual" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="FocusVisual" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="Separator" Property="HorizontalAlignment" Value="Left"/>
                            <Setter TargetName="Separator" Property="VerticalAlignment" Value="Stretch"/>
                            <Setter TargetName="DropDownPart" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=BottomLeftTop}"/>
                            <Setter TargetName="ButtonPart" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=BottomRightTop}"/>
                            <Setter TargetName="ButtonPart" Property="mat:MaterialAssist.CornerRadius" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CornerRadius), Converter={StaticResource CornerRadiusConverter}, ConverterParameter=RightTopBottom}"/>
                            <Setter TargetName="DropDownPart" Property="mat:MaterialAssist.CornerRadius" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CornerRadius), Converter={StaticResource CornerRadiusConverter}, ConverterParameter=LeftTopBottom}"/>
                        </Trigger>
                        <Trigger Property="DropDownButtonPosition" Value="Top">
                            <Setter TargetName="DropDownPart" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="DropDownPart" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="FocusVisual" Property="Grid.Column" Value="1"/>
                            <Setter TargetName="FocusVisual" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="Separator" Property="HorizontalAlignment" Value="Stretch"/>
                            <Setter TargetName="Separator" Property="VerticalAlignment" Value="Top"/>
                            <Setter TargetName="DropDownPart" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=RightTopLeft}"/>
                            <Setter TargetName="ButtonPart" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=RightBottomLeft}"/>
                            <Setter TargetName="ButtonPart" Property="mat:MaterialAssist.CornerRadius" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CornerRadius), Converter={StaticResource CornerRadiusConverter}, ConverterParameter=BottomLeftRight}"/>
                            <Setter TargetName="DropDownPart" Property="mat:MaterialAssist.CornerRadius" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CornerRadius), Converter={StaticResource CornerRadiusConverter}, ConverterParameter=TopLeftRight}"/>
                        </Trigger>
                        <Trigger Property="DropDownButtonPosition" Value="Right">
                            <Setter TargetName="DropDownPart" Property="Grid.Column" Value="2"/>
                            <Setter TargetName="DropDownPart" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="FocusVisual" Property="Grid.Column" Value="2"/>
                            <Setter TargetName="FocusVisual" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="Separator" Property="HorizontalAlignment" Value="Right"/>
                            <Setter TargetName="Separator" Property="VerticalAlignment" Value="Stretch"/>
                        </Trigger>

                        <!-- ButtonPartVisibility - Hidden -->
                        <Trigger Property="IsButtonPartVisible" Value="False">
                            <Setter TargetName="DropDownPart" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="DropDownPart" Property="Grid.RowSpan" Value="3"/>
                            <Setter TargetName="DropDownPart" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="DropDownPart" Property="Grid.ColumnSpan" Value="3"/>
                            <Setter TargetName="DropDownPart" Property="IsTabStop" Value="True"/>
                            <Setter TargetName="DropDownPart" Property="mat:MaterialAssist.CornerRadius" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CornerRadius)}"/>
                            <Setter TargetName="DropDownPart" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness}"/>
                            <Setter TargetName="FocusVisual" Property="Grid.Row" Value="0"/>
                            <Setter TargetName="FocusVisual" Property="Grid.RowSpan" Value="3"/>
                            <Setter TargetName="FocusVisual" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="FocusVisual" Property="Grid.ColumnSpan" Value="3"/>
                            <Setter TargetName="ButtonPart" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="Separator" Property="Visibility" Value="Collapsed"/>
                        </Trigger>

                        <!-- DropDownIndicatorVisibility - Hidden -->
                        <Trigger Property="DropDownIndicatorVisibility" Value="Collapsed">
                            <Setter TargetName="Separator" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="ButtonPart" Property="mat:MaterialAssist.CornerRadius" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CornerRadius)}"/>
                            <Setter TargetName="ButtonPart" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness}"/>
                            <Setter TargetName="FocusVisual" Property="Grid.Row" Value="1"/>
                            <Setter TargetName="FocusVisual" Property="Grid.Column" Value="1"/>
                        </Trigger>
                        <Trigger Property="DropDownPlacement" Value="Bottom"/>
                        <Trigger Property="DropDownPlacement" Value="Top">
                            <Setter TargetName="DropDownPopup" Property="VerticalOffset" Value="-1"/>
                            <Setter TargetName="DropDownPopup" Property="HorizontalOffset" Value="0"/>
                            <Setter TargetName="PopupGrid" Property="Margin" Value="1 1 1 0"/>
                        </Trigger>
                        <Trigger Property="DropDownPlacement" Value="Left">
                            <Setter TargetName="DropDownPopup" Property="VerticalOffset" Value="0"/>
                            <Setter TargetName="DropDownPopup" Property="HorizontalOffset" Value="-1"/>
                            <Setter TargetName="PopupGrid" Property="Margin" Value="1 1 0 1"/>
                        </Trigger>
                        <Trigger Property="DropDownPlacement" Value="Right">
                            <Setter TargetName="DropDownPopup" Property="VerticalOffset" Value="0"/>
                            <Setter TargetName="DropDownPopup" Property="HorizontalOffset" Value="1"/>
                            <Setter TargetName="PopupGrid" Property="Margin" Value="0 1 1 1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerik1:RadSplitButton" BasedOn="{StaticResource RadSplitButtonStyle}"/>
    <ControlTemplate x:Key="StringFilterEditorTemplate" TargetType="filteringEditors:StringFilterEditor">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBox
                    Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                    AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}"
                    AutomationProperties.HelpText="{TemplateBinding AutomationProperties.HelpText}"
                    AutomationProperties.LabeledBy="{TemplateBinding AutomationProperties.LabeledBy}"
                    VerticalAlignment="Stretch"
                    telerik1:TextBoxBehavior.UpdateTextOnEnter="True"
                    telerik1:TextBoxBehavior.SelectAllOnGotFocus="True"
                    MinWidth="120"/>
            <telerik1:RadToggleButton
                    Grid.Column="1"
                    IsChecked="{Binding IsCaseSensitive, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                    Visibility="{Binding MatchCaseVisibility, RelativeSource={RelativeSource TemplatedParent}}"
                    Margin="5 0 0 0"
                    Content="aA"
                    FontSize="{telerik1:CrystalResource ResourceKey=FontSize}"
                    FontFamily="{telerik1:CrystalResource ResourceKey=FontFamily}"
                    VerticalAlignment="Bottom"
                    HorizontalAlignment="Center"
                    VerticalContentAlignment="Center"
                    HorizontalContentAlignment="Center"
                    Padding="0"
                    MinWidth="28"
                    MinHeight="24">
                <ToolTipService.ToolTip>
                    <ToolTip telerik1:LocalizationManager.ResourceKey="GridViewFilterMatchCase"/>
                </ToolTipService.ToolTip>
            </telerik1:RadToggleButton>
        </Grid>
    </ControlTemplate>
    <Style x:Key="StringFilterEditorStyle" TargetType="filteringEditors:StringFilterEditor">
        <Setter Property="Template" Value="{StaticResource StringFilterEditorTemplate}"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>
    <Style TargetType="filteringEditors:StringFilterEditor" BasedOn="{StaticResource StringFilterEditorStyle}"/>
    <DataTemplate x:Key="DefaultLegendItemContentTemplate">
        <StackPanel Orientation="Horizontal">
            <Path Fill="{Binding MarkerFill}" Width="12" Height="12">
                <Path.Data>
                    <Binding Path="ActualMarkerGeometry" RelativeSource="{RelativeSource AncestorType=legend:LegendItemControl}"/>
                </Path.Data>
            </Path>
            <TextBlock Margin="2" Text="{Binding Title}"/>
        </StackPanel>
    </DataTemplate>
    <Style x:Key="LegendItemControlStyle" TargetType="legend:LegendItemControl">
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="MarkerGeometry" Value="{Binding MarkerGeometry}"/>
        <Setter Property="ContentTemplate" Value="{StaticResource DefaultLegendItemContentTemplate}"/>
        <Setter Property="DefaultMarkerGeometry">
            <Setter.Value>
                <Binding Path="DefaultMarkerGeometry" RelativeSource="{RelativeSource AncestorType=telerik1:RadLegend}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="legend:LegendItemControl">
                    <Border x:Name="PART_OuterBorder"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Margin="{TemplateBinding Padding}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStatesGroup">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Faded">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetName="PART_OuterBorder" Storyboard.TargetProperty="(UIElement.Opacity)"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Highlighted">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_OuterBorder" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="#FFF1F1F1"/>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadLegendStyle" TargetType="telerik1:RadLegend">
        <Setter Property="DefaultMarkerGeometry">
            <Setter.Value>
                <RectangleGeometry Rect="1 1 10 10"/>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate" Value="{StaticResource DefaultLegendItemContentTemplate}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadLegend">
                    <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Margin="{TemplateBinding Padding}">
                        <ItemsControl ItemsPanel="{TemplateBinding ItemsPanel}" ItemsSource="{TemplateBinding Items}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <legend:LegendItemControl
                                            Content="{Binding}"
                                            ContentTemplate="{Binding ItemTemplate, RelativeSource={RelativeSource AncestorType=telerik1:RadLegend}}"
                                            IsHovered="{Binding IsHovered, Mode=TwoWay}"
                                            VisualState="{Binding VisualState}"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource LegendItemControlStyle}" TargetType="legend:LegendItemControl"/>
    <Style BasedOn="{StaticResource RadLegendStyle}" TargetType="telerik1:RadLegend"/>
    <Style TargetType="dragDrop:LinearDropVisual" x:Key="LinearDropVisualStyle">
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AccentSelectedBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dragDrop:LinearDropVisual">
                    <Grid x:Name="DropCueElement" VerticalAlignment="Stretch" IsHitTestVisible="{TemplateBinding IsHitTestVisible}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="OrientationStates">
                                <VisualState x:Name="Horizontal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="HorizontalState">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="VerticalState">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Vertical">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="VerticalState">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="HorizontalState">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="VerticalState" Height="11" VerticalAlignment="Top" Visibility="Collapsed" Margin="0 -4 0 0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="11"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Ellipse
                                    Fill="{TemplateBinding Background}"
                                    Stroke="{TemplateBinding BorderBrush}"
                                    SnapsToDevicePixels="True"
                                    StrokeThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Left}"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Width="11"
                                    Height="11"/>
                            <Rectangle
                                    VerticalAlignment="Top"
                                    Height="3"
                                    HorizontalAlignment="Stretch"
                                    Fill="{TemplateBinding BorderBrush}"
                                    Stroke="{TemplateBinding BorderBrush}"
                                    Grid.Column="1"
                                    Margin="0 4 0 0"
                                    SnapsToDevicePixels="True"/>
                        </Grid>
                        <Grid x:Name="HorizontalState" Visibility="Collapsed" Width="11" HorizontalAlignment="Left" Margin="-4 0 0 0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="11"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Ellipse
                                    Stroke="{TemplateBinding BorderBrush}"
                                    Fill="{TemplateBinding Background}"
                                    StrokeThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Left}"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Width="11"
                                    Height="11"
                                    SnapsToDevicePixels="True"
                                    Margin="0"/>
                            <Rectangle
                                    VerticalAlignment="Stretch"
                                    Width="3"
                                    HorizontalAlignment="Center"
                                    Stroke="{TemplateBinding BorderBrush}"
                                    Fill="{TemplateBinding BorderBrush}"
                                    SnapsToDevicePixels="True"
                                    Grid.Row="1"
                                    Margin="0 -1 0 0"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dragDrop:LinearDropVisual" BasedOn="{StaticResource LinearDropVisualStyle}"/>
    <Style x:Key="RadWatermarkTextBoxStyle" TargetType="telerik1:RadWatermarkTextBox">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=MouseOverBrush}"/>
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}"/>
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}"/>
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1"/>
        <Setter Property="SelectionBrush" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}"/>
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=PrimaryBackgroundBrush}"/>
        <Setter Property="ReadOnlyBackground" Value="{telerik1:CrystalResource ResourceKey=ReadOnlyBackgroundBrush}"/>
        <Setter Property="DisabledBackground" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8 3"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="telerik1:CaretBrushHelper.CaretBrush" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationTooltipTemplate}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadWatermarkTextBox">
                    <Grid x:Name="RootElement">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <mat:Shadow
                                Grid.ColumnSpan="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}"
                                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"/>
                        <Border x:Name="BorderVisual"
                                Grid.ColumnSpan="2"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"/>
                        <Border x:Name="ReadOnlyVisual"
                                Grid.ColumnSpan="2"
                                Background="{TemplateBinding ReadOnlyBackground}"
                                BorderBrush="{x:Null}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                                IsHitTestVisible="False"
                                Visibility="Collapsed"/>
                        <Border x:Name="FocusVisual"
                                Grid.ColumnSpan="2"
                                Background="{x:Null}"
                                BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                                BorderThickness="{telerik1:CrystalResource ResourceKey=FocusThickness}"
                                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                                IsHitTestVisible="False"
                                Visibility="Collapsed"/>
                        <ScrollViewer x:Name="PART_ContentHost"
                                Background="Transparent"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                BorderThickness="0"
                                IsTabStop="False"
                                Margin="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                mat:MaterialAssist.CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"/>
                        <ContentControl x:Name="WatermarkVisualElement"
                                IsTabStop="False"
                                Opacity="{telerik1:CrystalResource ResourceKey=InputOpacity}"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                FontStyle="Italic"
                                Content="{TemplateBinding WatermarkContent}"
                                ContentTemplate="{TemplateBinding WatermarkTemplate}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                IsHitTestVisible="False"
                                Padding="{TemplateBinding Padding}"
                                Foreground="{TemplateBinding Foreground}"
                                Visibility="Hidden">
                            <ContentControl.Template>
                                <ControlTemplate TargetType="ContentControl">
                                    <ContentPresenter Margin="{TemplateBinding Padding}"/>
                                </ControlTemplate>
                            </ContentControl.Template>
                        </ContentControl>
                        <ContentPresenter x:Name="AdditionalContentHost" Grid.Column="1" Content="{TemplateBinding AdditionalContent}" ContentTemplate="{TemplateBinding AdditionalContentTemplate}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="WatermarkVisualElement" Property="Opacity" Value="1"/>
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=ReadOnlyBorderBrush}"/>
                            <Setter TargetName="PART_ContentHost" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=ReadOnlyOpacity}"/>
                            <Setter TargetName="WatermarkVisualElement" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=ReadOnlyOpacity}"/>
                            <Setter TargetName="ReadOnlyVisual" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsReadOnly" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{x:Null}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DisabledBackground}"/>
                            <Setter TargetName="PART_ContentHost" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                            <Setter TargetName="WatermarkVisualElement" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                        </Trigger>
                        <Trigger Property="IsWatermarkVisible" Value="True">
                            <Setter TargetName="WatermarkVisualElement" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="WatermarkBehavior" Value="HideOnTextEntered">
                            <Setter TargetName="WatermarkVisualElement" Property="Margin" Value="4 0 0 0"/>
                        </Trigger>

                        <!-- Invalid -->
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerik1:RadWatermarkTextBox" BasedOn="{StaticResource RadWatermarkTextBoxStyle}"/>
    <Style x:Key="DragVisualStyle" TargetType="telerikDragDrop:DragVisual">
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=MainBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="5 0 0 0"/>
        <Setter Property="Padding" Value="5 3"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikDragDrop:DragVisual">
                    <Grid>
                        <Border x:Name="SecondItemVisual"
                                Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsDraggingMultipleItems, Converter={StaticResource BooleanToVisibilityConverter}}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Opacity="0.8"
                                Margin="4 4 0 0"
                                Background="{TemplateBinding Background}"/>
                        <Border x:Name="ThirdthItemVisual"
                                Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsDraggingMultipleItems, Converter={StaticResource BooleanToVisibilityConverter}}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Opacity="0.8"
                                Margin="2"
                                Background="{TemplateBinding Background}"/>
                        <Border x:Name="DragBackgroundVisual"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Margin="0 0 4 4"
                                Opacity="0.8"
                                Background="{TemplateBinding Background}"/>
                        <Border Padding="{TemplateBinding BorderThickness}" Margin="0 0 4 4">
                            <Grid Margin="{TemplateBinding Padding}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <telerik1:RadGlyph x:Name="NoneEffect"
                                        Visibility="Collapsed"
                                        Glyph="{StaticResource GlyphCancel}"
                                        VerticalAlignment="Top"
                                        HorizontalAlignment="Left"
                                        Foreground="{telerik1:CrystalResource ResourceKey=ValidationBrush}"
                                        Margin="0 0 5 0"/>
                                <telerik1:RadGlyph x:Name="MoveEffect"
                                        Visibility="Collapsed"
                                        Glyph="{StaticResource GlyphArrowRight}"
                                        VerticalAlignment="Top"
                                        HorizontalAlignment="Left"
                                        Foreground="{telerik1:CrystalResource ResourceKey=IconBrush}"
                                        Margin="0 0 5 0"/>
                                <telerik1:RadGlyph x:Name="CopyEffect"
                                        Visibility="Collapsed"
                                        Glyph="{StaticResource GlyphPlus}"
                                        VerticalAlignment="Top"
                                        HorizontalAlignment="Left"
                                        Foreground="{telerik1:CrystalResource ResourceKey=IconBrush}"
                                        Margin="0 0 5 0"/>
                                <telerik1:RadGlyph x:Name="LinkEffect"
                                        Visibility="Collapsed"
                                        Glyph="{StaticResource GlyphLinkHorizontal}"
                                        VerticalAlignment="Top"
                                        HorizontalAlignment="Left"
                                        Foreground="{telerik1:CrystalResource ResourceKey=IconBrush}"
                                        Margin="0 0 5 0"/>
                                <telerik1:RadGlyph x:Name="ScrollEffect"
                                        Visibility="Collapsed"
                                        Glyph="{StaticResource GlyphArrowsKpi}"
                                        VerticalAlignment="Top"
                                        HorizontalAlignment="Left"
                                        Foreground="{telerik1:CrystalResource ResourceKey=IconBrush}"
                                        Margin="0 0 5 0"/>
                                <ContentPresenter x:Name="Content"
                                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                        Grid.Column="1"
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Effects" Value="None">
                            <Setter TargetName="NoneEffect" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Effects" Value="Move">
                            <Setter TargetName="MoveEffect" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Effects" Value="Copy">
                            <Setter TargetName="CopyEffect" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Effects" Value="Move, Scroll">
                            <Setter TargetName="MoveEffect" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Effects" Value="Copy, Scroll">
                            <Setter TargetName="CopyEffect" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Effects" Value="Link">
                            <Setter TargetName="LinkEffect" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Effects" Value="Scroll">
                            <Setter TargetName="ScrollEffect" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerikDragDrop:DragVisual" BasedOn="{StaticResource DragVisualStyle}"/>
    <Style x:Key="RadListBoxItemStyle" TargetType="telerik1:RadListBoxItem">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=AccentSelectedBrush}"/>
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:CrystalResource ResourceKey=AccentPressedBrush}"/>
        <Setter Property="mat:MaterialAssist.CheckedBrush" Value="{telerik1:CrystalResource ResourceKey=AccentPressedBrush}"/>
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}"/>
        <Setter Property="Padding" Value="8 4"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Local"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadListBoxItem">
                    <Grid Background="Transparent">
                        <Grid Margin="0">
                            <Border x:Name="BorderVisual"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <Border x:Name="FocusVisual"
                                    Background="{x:Null}"
                                    BorderThickness="{telerik1:CrystalResource ResourceKey=FocusThickness}"
                                    BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    IsHitTestVisible="False"
                                    Visibility="Collapsed"/>
                            <ContentControl x:Name="contentPresenter"
                                    Margin="{TemplateBinding Padding}"
                                    Foreground="{TemplateBinding Foreground}"
                                    IsTabStop="False"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    Content="{TemplateBinding Content}"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}"/>
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}"/>
                        </Trigger>

                        <!-- IsSelected -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:CrystalResource ResourceKey=AccentPressedBrush}"/>
                            <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}"/>
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}"/>
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}"/>
                        </Trigger>

                        <!-- Focused -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="contentPresenter" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}" Property="Opacity"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ListBoxDragVisualStyle" TargetType="telerikDragDrop:ListBoxDragVisual" BasedOn="{StaticResource DragVisualStyle}">
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AccentSelectedBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AccentSelectedBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="5 4"/>
        <Setter Property="Margin" Value="10 0 0 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikDragDrop:DragVisual">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="DragBackgroundVisual"
                                    Grid.ColumnSpan="2"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    Opacity="0.9"/>
                            <telerik1:RadGlyph Glyph="{StaticResource GlyphCancel}" x:Name="NoneEffect" Foreground="{TemplateBinding Foreground}" Visibility="Collapsed" VerticalAlignment="Center" Margin="5 0 0 0"/>
                            <ItemsControl
                                    ItemsSource="{Binding DraggedItemsStrings}"
                                    Grid.Column="1"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <Grid x:Name="lowerGrid" Grid.Row="1">
                            <Border BorderThickness="1" BorderBrush="{telerik1:CrystalResource ResourceKey=BasicBrush}" Background="{telerik1:CrystalResource ResourceKey=MainBrush}" Opacity="0.8"/>
                            <StackPanel Orientation="Horizontal" Margin="{TemplateBinding Padding}">
                                <telerik1:RadGlyph
                                        Glyph="{StaticResource GlyphInsertUp}"
                                        FontSize="16"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Margin="0 0 5 0"
                                        Foreground="{telerik1:CrystalResource ResourceKey=IconBrush}"
                                        Visibility="{Binding DropPosition, Converter={StaticResource DragDropBooleanToVisibilityConverter}, ConverterParameter=Before}"/>
                                <telerik1:RadGlyph
                                        Glyph="{StaticResource GlyphInsertDown}"
                                        FontSize="16"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Foreground="{telerik1:CrystalResource ResourceKey=IconBrush}"
                                        Margin="0 0 5 0"
                                        Visibility="{Binding DropPosition, Converter={StaticResource DragDropBooleanToVisibilityConverter}, ConverterParameter=After}"/>
                                <TextBlock Text="{Binding DropPosition}" Foreground="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
                                <TextBlock Text=":" Margin="1 0 3 0" Foreground="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
                                <TextBlock Text="{Binding DropItemString}" Foreground="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
                            </StackPanel>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Effects" Value="None">
                            <Setter TargetName="NoneEffect" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="lowerGrid" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Effects" Value="Move">
                            <Setter TargetName="NoneEffect" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadListBoxStyle" TargetType="telerik1:RadListBox">
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}"/>
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="0 5"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="telerik1:ScrollingSettingsBehavior.IsEnabled" Value="True"/>
        <Setter Property="telerik1:ScrollingSettingsBehavior.ScrollAreaPadding" Value="30"/>

        <!-- ScrollStep should be at least the ActualHeight of the ListBoxItem when scrolling is item based. -->
        <Setter Property="telerik1:ScrollingSettingsBehavior.ScrollStep" Value="24"/>
        <Setter Property="telerik1:ScrollingSettingsBehavior.ScrollStepTime" Value="00:00:00.05"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadListBox">
                    <Grid UseLayoutRounding="True">
                        <Border x:Name="Border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}">
                            <ScrollViewer x:Name="PART_ScrollViewer"
                                    IsTabStop="False"
                                    mat:MaterialAssist.CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                                    HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                    VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                    Padding="{TemplateBinding Padding}"
                                    Background="{x:Null}"
                                    BorderBrush="{x:Null}"
                                    BorderThickness="0">
                                <ScrollViewer.InputBindings>
                                    <KeyBinding Command="telerikPrimitives:ListControl.SelectAllCommand" Key="A" Modifiers="Control"/>
                                </ScrollViewer.InputBindings>
                                <ItemsPresenter ClipToBounds="True"/>
                            </ScrollViewer>
                        </Border>
                        <ContentPresenter x:Name="dragVisualPlaceholder" Visibility="Collapsed" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerik1:RadListBox" BasedOn="{StaticResource RadListBoxStyle}"/>
    <Style TargetType="telerik1:RadListBoxItem" BasedOn="{StaticResource RadListBoxItemStyle}"/>
    <Style TargetType="telerikDragDrop:ListBoxDragVisual" BasedOn="{StaticResource ListBoxDragVisualStyle}"/>
    <Style x:Key="TouchIndicatorStyle" TargetType="touch:TouchIndicator">
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=AccentBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="touch:TouchIndicator">
                    <Grid>
                        <telerikShapes:Arc x:Name="PART_InnerArc"
                                HorizontalAlignment="Left"
                                StrokeThickness="0"
                                VerticalAlignment="Top"
                                StartAngle="0.001"
                                EndAngle="0.001"
                                RenderTransformOrigin="0.5 0.5"
                                Stretch="None"
                                ArcThickness="3"
                                Fill="{TemplateBinding Foreground}">
                            <telerikShapes:Arc.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </telerikShapes:Arc.RenderTransform>
                        </telerikShapes:Arc>
                        <telerikShapes:Arc x:Name="PART_OuterArc"
                                HorizontalAlignment="Left"
                                StrokeThickness="0"
                                VerticalAlignment="Top"
                                StartAngle="0.001"
                                EndAngle="0.001"
                                RenderTransformOrigin="0.5 0.5"
                                Stretch="None"
                                ArcThickness="4"
                                Fill="{TemplateBinding Foreground}">
                            <telerikShapes:Arc.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </telerikShapes:Arc.RenderTransform>
                        </telerikShapes:Arc>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource TouchIndicatorStyle}" TargetType="touch:TouchIndicator"/>
    <Style x:Key="TouchSelectorStyle" TargetType="touch:TouchSelector">
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=AccentBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=IconBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Width" Value="10"/>
        <Setter Property="Height" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="touch:TouchSelector">
                    <Grid x:Name="container"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}"
                            Canvas.ZIndex="1000"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Margin="-10 0 0 0">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="Common">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="beginEllipse" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Center">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="beginEllipse" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="beginEllipse">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="-5"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Hidden">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="beginEllipse" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Ellipse x:Name="beginEllipse"
                                Width="10"
                                Height="10"
                                Visibility="Collapsed"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Stroke="{TemplateBinding BorderBrush}"
                                Fill="{TemplateBinding Foreground}"
                                StrokeThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Left}">
                            <Ellipse.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Ellipse.RenderTransform>
                        </Ellipse>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource TouchSelectorStyle}" TargetType="touch:TouchSelector"/>
    <Style TargetType="telerik1:RadFluidContentControl" x:Key="RadFluidContentControlStyle">
        <Setter Property="Transition">
            <Setter.Value>
                <telerikTransitions:FadeTransition/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadFluidContentControl">
                    <Grid>
                        <telerikTransitonControl:LayoutAnimationPanel x:Name="PART_RootElement">
                            <Border
                                    BorderBrush="#01000000"
                                    BorderThickness="1"
                                    telerikTransitonControl:LayoutAnimationPanel.HeightWeight="0"
                                    telerikTransitonControl:LayoutAnimationPanel.WidthWeight="0"/>
                            <telerikTransitonControl:TransitionPresenter x:Name="ContentElement"
                                    Canvas.ZIndex="2"
                                    Host="{Binding ElementName=PART_RootElement}"
                                    CurrentContent="{TemplateBinding VisibleContent}"
                                    CurrentContentTemplate="{TemplateBinding VisibleContentTemplate}"
                                    Transition="{TemplateBinding Transition}"
                                    Duration="{TemplateBinding TransitionDuration}"
                                    telerikTransitonControl:LayoutAnimationPanel.HeightWeight="1"
                                    telerikTransitonControl:LayoutAnimationPanel.WidthWeight="1"
                                    telerikTransitonControl:TransitionPresenter.AnimationStretch="None"/>
                            <Rectangle x:Name="OldContentPresenter"
                                    Width="{Binding OldVisualWidth, ElementName=ContentElement}"
                                    Height="{Binding OldVisualHeight, ElementName=ContentElement}"
                                    Fill="{Binding OldVisualBrush, ElementName=ContentElement}"
                                    Opacity="0.0"
                                    Canvas.ZIndex="1"
                                    telerikTransitonControl:LayoutAnimationPanel.HeightWeight="1"
                                    telerikTransitonControl:LayoutAnimationPanel.WidthWeight="1"/>
                        </telerikTransitonControl:LayoutAnimationPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerik1:RadFluidContentControl" BasedOn="{StaticResource RadFluidContentControlStyle}"/>
    <ControlTemplate x:Key="RadButtonContentTemplate" TargetType="telerik1:RadButton">
        <Grid>
            <Border x:Name="BorderVisual"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius, Converter={StaticResource CornerRadiusConverter}, ConverterParameter=TopBottomRight}"/>
            <ContentPresenter x:Name="Content"
                    TextBlock.Foreground="{TemplateBinding Foreground}"
                    Margin="{TemplateBinding Padding}"
                    Content="{TemplateBinding Content}"
                    ContentTemplate="{TemplateBinding ContentTemplate}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                    RecognizesAccessKey="True"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Content" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="PasswordBoxButtonStyle" TargetType="telerik1:RadButton">
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=IconBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="2 0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template" Value="{StaticResource RadButtonContentTemplate}"/>
    </Style>
    <DataTemplate x:Key="PasswordButtonContentTemplate">
        <telerik1:RadGlyph Glyph="{StaticResource GlyphPreview}" FontSize="16" TextOptions.TextRenderingMode="Aliased"/>
    </DataTemplate>
    <ControlTemplate x:Key="RadPasswordBoxControlTemplate" TargetType="telerik1:RadPasswordBox">
        <Grid x:Name="RootElement">
            <mat:Shadow
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}"
                    CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"/>
            <Border x:Name="BorderVisual"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"/>
            <Border x:Name="ReadOnlyVisual"
                    Background="{telerik1:CrystalResource ResourceKey=ReadOnlyBackgroundBrush}"
                    BorderBrush="{telerik1:CrystalResource ResourceKey=ReadOnlyBorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                    IsHitTestVisible="False"
                    Visibility="Collapsed"/>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ScrollViewer x:Name="PART_ContentHost"
                        Background="Transparent"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        BorderThickness="0"
                        IsTabStop="False"
                        Padding="{TemplateBinding Padding}"
                        mat:MaterialAssist.CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius, Converter={StaticResource CornerRadiusConverter}, ConverterParameter=TopBottomLeft}"/>
                <telerik1:RadButton x:Name="PART_ShowPasswordButton"
                        Content="{TemplateBinding ShowPasswordButtonContent}"
                        ContentTemplate="{TemplateBinding ShowPasswordButtonContentTemplate}"
                        IsTabStop="False"
                        Focusable="False"
                        Grid.Column="1"
                        Cursor="Hand"
                        HorizontalAlignment="Right"
                        Style="{StaticResource PasswordBoxButtonStyle}"
                        CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"/>
                <ContentControl x:Name="WatermarkVisualElement"
                        IsTabStop="False"
                        FontStyle="Italic"
                        Content="{TemplateBinding WatermarkContent}"
                        ContentTemplate="{TemplateBinding WatermarkTemplate}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        IsHitTestVisible="False"
                        Padding="{TemplateBinding Padding}"
                        Foreground="{TemplateBinding Foreground}"
                        Opacity="{telerik1:CrystalResource ResourceKey=InputOpacity}"
                        Visibility="Hidden">
                    <ContentControl.Template>
                        <ControlTemplate TargetType="ContentControl">
                            <ContentPresenter Margin="{TemplateBinding Padding}"/>
                        </ControlTemplate>
                    </ContentControl.Template>
                </ContentControl>
            </Grid>
            <Border x:Name="FocusVisual"
                    Background="{x:Null}"
                    BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                    BorderThickness="{telerik1:CrystalResource ResourceKey=FocusThickness}"
                    CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                    IsHitTestVisible="False"
                    Visibility="Collapsed"/>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=CurrentText.Length}" Value="0"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ShowPasswordButtonVisibility}" Value="Auto"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Padding" Value="8 4"/>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=ShowPasswordButtonVisibility}" Value="Never">
                <Setter Property="Padding" Value="8 4"/>
            </DataTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="False"/>
                    <Condition Property="IsKeyboardFocusWithin" Value="False"/>
                    <Condition Property="IsEnabled" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_ShowPasswordButton" Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}"/>
                <Setter TargetName="PART_ShowPasswordButton" Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AccentBasicBrush}"/>
                <Setter TargetName="PART_ShowPasswordButton" Property="Background" Value="{telerik1:CrystalResource ResourceKey=AccentBrush}"/>
            </MultiTrigger>

            <!-- MouseOver -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="PART_ContentHost" Property="Opacity" Value="1"/>
                <Setter TargetName="WatermarkVisualElement" Property="Opacity" Value="1"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsReadOnly" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}"/>
                <Setter TargetName="PART_ShowPasswordButton" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}"/>
                <Setter TargetName="PART_ShowPasswordButton" Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
                <Setter TargetName="PART_ShowPasswordButton" Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=IconBrush}"/>
            </MultiTrigger>

            <!-- Focused -->
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsKeyboardFocused" Value="True"/>
                    <Condition Property="IsReadOnly" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_ShowPasswordButton" Property="Background" Value="Transparent"/>
                <Setter TargetName="PART_ShowPasswordButton" Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=IconBrush}"/>
                <Setter TargetName="PART_ShowPasswordButton" Property="BorderBrush" Value="Transparent"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsKeyboardFocused" Value="True"/>
                    <Condition Property="IsEnabled" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_ShowPasswordButton" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}"/>
            </MultiTrigger>

            <!-- ReadOnly -->
            <Trigger Property="IsReadOnly" Value="True">
                <Setter TargetName="PART_ContentHost" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=InputOpacity}"/>
                <Setter TargetName="PART_ShowPasswordButton" Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}"/>
                <Setter TargetName="PART_ShowPasswordButton" Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AccentBasicBrush}"/>
                <Setter TargetName="PART_ShowPasswordButton" Property="Background" Value="{telerik1:CrystalResource ResourceKey=AccentBrush}"/>
                <Setter TargetName="ReadOnlyVisual" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsWatermarkVisible" Value="True">
                <Setter TargetName="WatermarkVisualElement" Property="Visibility" Value="Visible"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsReadOnly" Value="True"/>
                    <Condition Property="IsWatermarkVisible" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="WatermarkVisualElement" Property="Visibility" Value="Hidden"/>
            </MultiTrigger>

            <!-- Invalid -->
            <Trigger Property="Validation.HasError" Value="True">
                <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed"/>
            </Trigger>

            <!-- Disabled -->
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="BorderVisual" Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"/>
                <Setter TargetName="PART_ContentHost" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
                <Setter TargetName="PART_ShowPasswordButton" Property="Background" Value="Transparent"/>
                <Setter TargetName="PART_ShowPasswordButton" Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=IconBrush}"/>
                <Setter TargetName="PART_ShowPasswordButton" Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPasswordVisible" Value="True"/>
                    <Condition Property="IsReadOnly" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}"/>
                <Setter TargetName="PART_ShowPasswordButton" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}"/>
            </MultiTrigger>
            <DataTrigger Binding="{Binding ElementName=PART_ShowPasswordButton, Path=Visibility}" Value="Collapsed">
                <Setter TargetName="PART_ContentHost" Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}"/>
            </DataTrigger>
            <Trigger Property="WatermarkBehavior" Value="HideOnTextEntered">
                <Setter TargetName="WatermarkVisualElement" Property="Margin" Value="2 0 0 0"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="RadPasswordBoxStyle" TargetType="telerik1:RadPasswordBox">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=MouseOverBrush}"/>
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:CrystalResource ResourceKey=PressedBrush}"/>
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}"/>
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}"/>
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1"/>
        <Setter Property="SelectionBrush" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}"/>
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=PrimaryBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8 4 2 4"/>
        <Setter Property="CaretBrush" Value="{telerik1:CrystalResource ResourceKey=IconBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="ShowPasswordButtonContentTemplate" Value="{StaticResource PasswordButtonContentTemplate}"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once"/>
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationTooltipTemplate}"/>
        <Setter Property="Template" Value="{StaticResource RadPasswordBoxControlTemplate}"/>
    </Style>
    <Style TargetType="telerik1:RadPasswordBox" BasedOn="{StaticResource RadPasswordBoxStyle}"/>
    <ControlTemplate x:Key="RadTaskBoardItemTemplate" TargetType="telerik1:RadTaskBoardItem">
        <Grid x:Name="LayoutRoot">
            <mat:Shadow
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding helpers:ThemeHelper.CornerRadius}"
                    ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}"/>
            <Border x:Name="BackgroundVisual"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Background="{TemplateBinding Background}"
                    CornerRadius="{TemplateBinding helpers:ThemeHelper.CornerRadius}"/>
            <Border x:Name="SelectedVisual"
                    BorderThickness="{telerik1:CrystalResource ResourceKey=FocusThickness}"
                    BorderBrush="{TemplateBinding helpers:ThemeHelper.FocusBrush}"
                    Background="{TemplateBinding helpers:ThemeHelper.CheckedBrush}"
                    CornerRadius="{TemplateBinding helpers:ThemeHelper.CornerRadius}"
                    Opacity="0"/>
            <ContentPresenter x:Name="ContentPresenter"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    Margin="{TemplateBinding Padding}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter TargetName="SelectedVisual" Property="Opacity" Value="1"/>
            </Trigger>
            <Trigger Property="IsDragging" Value="True">
                <Setter Property="Opacity" Value="0.6"/>
                <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth0"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="RadTaskBoardItemStyle" TargetType="telerik1:RadTaskBoardItem">
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1"/>
        <Setter Property="helpers:ThemeHelper.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}"/>
        <Setter Property="helpers:ThemeHelper.CheckedBrush" Value="{telerik1:CrystalResource ResourceKey=PressedBrush}"/>
        <Setter Property="helpers:ThemeHelper.FocusBrush" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}"/>
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AlternativeBasicBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="0 10 0 0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template" Value="{StaticResource RadTaskBoardItemTemplate}"/>
    </Style>
    <DataTemplate x:Key="TaskBoardCardTitleTemplate">
        <TextBlock x:Name="Title"
                Text="{Binding}"
                Visibility="{Binding RelativeSource={RelativeSource Self}, Path=Text, Converter={StaticResource NullToVisibilityConverter}}"
                Foreground="{telerik1:CrystalResource ResourceKey=MarkerBrush}"
                FontSize="{telerik1:CrystalResource ResourceKey=FontSizeL}"
                TextWrapping="WrapWithOverflow"
                TextTrimming="CharacterEllipsis"
                MaxHeight="40"
                FontWeight="Medium">
            <TextBlock.ToolTip>
                <ToolTip MaxWidth="250">
                    <TextBlock Text="{Binding}" TextWrapping="Wrap"/>
                </ToolTip>
            </TextBlock.ToolTip>
        </TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="TaskBoardCardDescriptionTemplate">
        <TextBlock x:Name="Description"
                Text="{Binding}"
                Foreground="{telerik1:CrystalResource ResourceKey=MarkerBrush}"
                FontSize="{Binding RelativeSource={RelativeSource AncestorType=telerik1:RadTaskBoardItem}, Path=FontSize}"
                TextWrapping="Wrap"
                TextTrimming="CharacterEllipsis"/>
    </DataTemplate>
    <DataTemplate x:Key="TaskBoardCardNoImageTemplate">
        <Border x:Name="Image"
                CornerRadius="12"
                Width="24"
                Height="24"
                Background="{telerik1:CrystalResource ResourceKey=AccentSelectedBrush}"
                BorderBrush="{StaticResource TaskBoardItem_Image_BorderBrush}"
                BorderThickness="1">
            <Image Source="{telerik1:RadGlyph Glyph={StaticResource GlyphUser}, Foreground={StaticResource TaskBoardItem_Image_BorderBrush}}" Stretch="None"/>
        </Border>
    </DataTemplate>
    <DataTemplate x:Key="TaskBoardCardImageTemplate">
        <Image Source="{Binding}" Stretch="None" MaxHeight="40" MaxWidth="40"/>
    </DataTemplate>
    <DataTemplate x:Key="TaskBoardCardTagsTemplate">
        <Border
                Background="{telerik1:CrystalResource ResourceKey=PrimaryBackgroundBrush}"
                BorderBrush="{telerik1:CrystalResource ResourceKey=ComplementaryBasicBrush}"
                BorderThickness="1"
                Margin="0 0 5 2"
                CornerRadius="2">
            <TextBlock Text="{Binding}" Padding="4 2"/>
        </Border>
    </DataTemplate>
    <taskBoard:TaskBoardDefaultIconTemplateSelector x:Key="TaskBoardDefaultIconTemplateSelector" GlyphTemplate="{StaticResource TaskBoardCardNoImageTemplate}" ImageTemplate="{StaticResource TaskBoardCardImageTemplate}"/>
    <DataTemplate x:Key="TaskBoardDefaultCardTemplate">
        <telerik1:RadTaskBoardCard
                Assignee="{Binding Assignee, Mode=TwoWay}"
                Header="{Binding Title, Mode=TwoWay}"
                Content="{Binding Description, Mode=TwoWay}"
                Tags="{Binding Tags}"
                Icon="{Binding IconPath, Mode=TwoWay}"
                CategoryName="{Binding CategoryName, Mode=TwoWay}"
                ShowCategoryIndicator="{Binding ShowCategoryIndicator, Mode=TwoWay}"/>
    </DataTemplate>
    <taskBoard:TaskBoardDefaultItemTemplateSelector x:Key="TaskBoardDefaultItemTemplateSelector" CardTemplate="{StaticResource TaskBoardDefaultCardTemplate}"/>
    <ControlTemplate x:Key="RadTaskBoardCardTemplate" TargetType="telerik1:RadTaskBoardCard">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Border
                    Width="4"
                    VerticalAlignment="Stretch"
                    HorizontalAlignment="Left"
                    Background="{TemplateBinding CategoryBrush}"
                    CornerRadius="{TemplateBinding helpers:ThemeHelper.CornerRadius, Converter={StaticResource CornerRadiusConverter}, ConverterParameter=TopBottomLeft}"
                    Visibility="{TemplateBinding ShowCategoryIndicator, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <Grid Grid.Column="1" Margin="{TemplateBinding Padding}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter
                        ContentSource="Header"
                        Visibility="{Binding RelativeSource={RelativeSource Self}, Path=Content, Converter={StaticResource NullToVisibilityConverter}}"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        Margin="0 4"/>
                <ContentPresenter ContentSource="Icon" Grid.Column="1" Margin="5 4" VerticalAlignment="Top">
                    <ContentPresenter.ToolTip>
                        <ToolTip Visibility="{TemplateBinding Assignee, Converter={StaticResource NullToVisibilityConverter}}" Content="{TemplateBinding Assignee}"/>
                    </ContentPresenter.ToolTip>
                </ContentPresenter>
                <ContentPresenter ContentSource="Content" Grid.Row="1" Grid.ColumnSpan="2" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0 3 0 0"/>
                <ItemsControl
                        Grid.Row="2"
                        Grid.ColumnSpan="2"
                        FocusVisualStyle="{x:Null}"
                        FontSize="{telerik1:CrystalResource ResourceKey=FontSizeS}"
                        ItemsSource="{TemplateBinding Tags}"
                        ItemTemplate="{TemplateBinding TagTemplate}"
                        Margin="0 3 0 0">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </Grid>
        </Grid>
    </ControlTemplate>
    <Style x:Key="RadTaskBoardCardStyle" TargetType="telerik1:RadTaskBoardCard">
        <Setter Property="helpers:ThemeHelper.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="IconTemplateSelector" Value="{StaticResource TaskBoardDefaultIconTemplateSelector}"/>
        <Setter Property="HeaderTemplate" Value="{StaticResource TaskBoardCardTitleTemplate}"/>
        <Setter Property="ContentTemplate" Value="{StaticResource TaskBoardCardDescriptionTemplate}"/>
        <Setter Property="TagTemplate" Value="{StaticResource TaskBoardCardTagsTemplate}"/>
        <Setter Property="Template" Value="{StaticResource RadTaskBoardCardTemplate}"/>
    </Style>
    <ItemsPanelTemplate x:Key="ColumnPanelTemplate">
        <VirtualizingStackPanel/>
    </ItemsPanelTemplate>
    <ControlTemplate x:Key="ColumnContainerTemplate" TargetType="taskBoard:TaskBoardColumnContainer">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Border x:Name="ColumnHeaderBackgroundVisual"
                    Grid.ColumnSpan="2"
                    Height="{Binding ColumnHeaderHeight, RelativeSource={RelativeSource AncestorType=telerik1:RadTaskBoard}}"
                    Background="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"
                    BorderBrush="{telerik1:CrystalResource ResourceKey=AlternativeBasicBrush}"
                    BorderThickness="1"/>
            <telerik1:RadToggleButton x:Name="ExpandCollapseColumnButton"
                    Grid.Column="1"
                    IsChecked="{Binding IsExpanded}"
                    IsBackgroundVisible="False"
                    Foreground="{telerik1:CrystalResource ResourceKey=IconBrush}"
                    VerticalContentAlignment="Center"
                    mat:MaterialAssist.IsShadowDisabled="True"
                    Visibility="{Binding CanUserCollapseColumns, RelativeSource={RelativeSource AncestorType=telerik1:RadTaskBoard}, Converter={StaticResource BooleanToVisibilityConverter}}"
                    VerticalAlignment="Center"
                    Margin="5 0"
                    Width="24"
                    Height="24"
                    Padding="0">
                <telerik1:RadGlyph x:Name="Glyph" Glyph="{StaticResource GlyphArrowChevronLeft}" FontSize="16"/>
            </telerik1:RadToggleButton>
            <mat:Shadow
                    Grid.Row="1"
                    Grid.ColumnSpan="2"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}"/>
            <ScrollViewer x:Name="PART_TaskBoardItemsScrollViewer"
                    Grid.Row="1"
                    Grid.ColumnSpan="2"
                    CanContentScroll="True"
                    Padding="{TemplateBinding Padding}"
                    HorizontalScrollBarVisibility="Disabled"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=LeftRightBottom}">
                <ItemsPresenter x:Name="TaskBoardItemsItemPresenter"/>
            </ScrollViewer>
            <Border x:Name="CollapsedColumnBackgroundVisual"
                    Grid.Row="1"
                    Grid.ColumnSpan="2"
                    Background="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=LeftRightBottom}"
                    Visibility="{Binding IsExpanded, Converter={StaticResource InvertedBooleanToVisibilityConverter}}"/>
            <ContentPresenter x:Name="ColumnHeaderContentPresenter"
                    RenderTransformOrigin="0.5, 0.5"
                    MaxHeight="{Binding ColumnHeaderHeight, RelativeSource={RelativeSource AncestorType=telerik1:RadTaskBoard}}"
                    Content="{Binding}"
                    Margin="10 0"
                    ContentTemplate="{TemplateBinding HeaderTemplate}"
                    TextBlock.FontWeight="Bold"
                    TextBlock.FontSize="{telerik1:CrystalResource ResourceKey=FontSizeL}"
                    TextBlock.Foreground="{telerik1:CrystalResource ResourceKey=MarkerBrush}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    TextBlock.FontFamily="{telerik1:CrystalResource ResourceKey=FontFamily}">
                <ContentPresenter.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                    </Style>
                </ContentPresenter.Resources>
            </ContentPresenter>
            <ContentPresenter x:Name="PART_DropVisualPlaceholder" Grid.Row="1" Grid.ColumnSpan="2" Visibility="Collapsed" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger SourceName="ExpandCollapseColumnButton" Property="IsMouseOver" Value="True">
                <Setter TargetName="ExpandCollapseColumnButton" Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}"/>
            </Trigger>
            <Trigger SourceName="ExpandCollapseColumnButton" Property="IsPressed" Value="True">
                <Setter TargetName="ExpandCollapseColumnButton" Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}"/>
            </Trigger>
            <Trigger SourceName="ExpandCollapseColumnButton" Property="IsChecked" Value="True">
                <Setter TargetName="ExpandCollapseColumnButton" Property="helpers:ThemeHelper.CheckedBrush" Value="Transparent"/>
                <Setter TargetName="ExpandCollapseColumnButton" Property="Background" Value="Transparent"/>
                <Setter TargetName="ExpandCollapseColumnButton" Property="BorderThickness" Value="0"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="ExpandCollapseColumnButton" Property="IsChecked" Value="False"/>
                    <Condition SourceName="ExpandCollapseColumnButton" Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="ExpandCollapseColumnButton" Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=IconBrush}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="ExpandCollapseColumnButton" Property="IsChecked" Value="False"/>
                    <Condition SourceName="ExpandCollapseColumnButton" Property="IsPressed" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="ExpandCollapseColumnButton" Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=IconBrush}"/>
            </MultiTrigger>
            <Trigger Property="IsExpanded" Value="False">
                <Setter TargetName="Glyph" Property="Glyph" Value="{StaticResource GlyphArrowChevronRight}"/>
                <Setter TargetName="TaskBoardItemsItemPresenter" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="PART_TaskBoardItemsScrollViewer" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="ExpandCollapseColumnButton" Property="Grid.Column" Value="0"/>
                <Setter TargetName="ExpandCollapseColumnButton" Property="HorizontalAlignment" Value="Center"/>
                <Setter TargetName="ColumnHeaderContentPresenter" Property="Grid.Row" Value="1"/>
                <Setter TargetName="ColumnHeaderContentPresenter" Property="HorizontalAlignment" Value="Center"/>
                <Setter TargetName="ColumnHeaderContentPresenter" Property="VerticalAlignment" Value="Top"/>
                <Setter TargetName="ColumnHeaderContentPresenter" Property="Margin" Value="0 20"/>
                <Setter TargetName="ColumnHeaderContentPresenter" Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="-90"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="TaskBoardColumnContainerStyle" TargetType="taskBoard:TaskBoardColumnContainer">
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth3"/>
        <Setter Property="IsExpanded" Value="{Binding IsExpanded}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=PrimaryBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AlternativeBasicBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template" Value="{StaticResource ColumnContainerTemplate}"/>
        <Setter Property="ItemsPanel" Value="{StaticResource ColumnPanelTemplate}"/>
        <Setter Property="ItemsSource" Value="{Binding Items}"/>
        <Setter Property="Padding" Value="5 10"/>
        <Setter Property="Header" Value="{Binding Header}"/>
        <Setter Property="HeaderTemplate" Value="{Binding HeaderTemplate}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="ItemTemplate" Value="{Binding ItemTemplate, RelativeSource={RelativeSource AncestorType=telerik1:RadTaskBoard}}"/>
        <Setter Property="ItemTemplateSelector" Value="{Binding ItemTemplateSelector, RelativeSource={RelativeSource AncestorType=telerik1:RadTaskBoard}}"/>
        <Setter Property="ItemContainerStyle" Value="{Binding ItemContainerStyle, RelativeSource={RelativeSource AncestorType=telerik1:RadTaskBoard}}"/>
        <Setter Property="ItemContainerStyleSelector" Value="{Binding ItemContainerStyleSelector, RelativeSource={RelativeSource AncestorType=telerik1:RadTaskBoard}}"/>
    </Style>
    <ControlTemplate x:Key="TaskBoardTemplate" TargetType="telerik1:RadTaskBoard">
        <Grid x:Name="LayoutRoot" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <mat:Shadow
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding helpers:ThemeHelper.CornerRadius}"
                    ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}"/>
            <Border x:Name="BorderVisual"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding helpers:ThemeHelper.CornerRadius}"/>
            <ScrollViewer x:Name="PART_ScrollViewer"
                    Padding="{TemplateBinding Padding}"
                    Background="Transparent"
                    BorderBrush="Transparent"
                    BorderThickness="0"
                    HorizontalScrollBarVisibility="Auto"
                    VerticalScrollBarVisibility="Hidden"
                    CanContentScroll="True"
                    helpers:ThemeHelper.CornerRadius="{TemplateBinding helpers:ThemeHelper.CornerRadius}">
                <ItemsPresenter/>
            </ScrollViewer>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="LayoutRoot" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ItemsPanelTemplate x:Key="TaskBoardItemsPanel">
        <taskBoard:TaskBoardColumnsPanel/>
    </ItemsPanelTemplate>
    <Style x:Key="RadTaskBoardStyle" TargetType="telerik1:RadTaskBoard">
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth3"/>
        <Setter Property="CollapsedColumnWidth" Value="38"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=PrimaryBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="ColumnHeaderHeight" Value="44"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template" Value="{StaticResource TaskBoardTemplate}"/>
        <Setter Property="ItemsPanel" Value="{StaticResource TaskBoardItemsPanel}"/>
        <Setter Property="ItemTemplateSelector" Value="{StaticResource TaskBoardDefaultItemTemplateSelector}"/>
        <Setter Property="DragDropBehavior">
            <Setter.Value>
                <taskBoard:TaskBoardColumnDragDropBehavior/>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="telerik1:RadTaskBoardItem" BasedOn="{StaticResource RadTaskBoardItemStyle}"/>
    <Style TargetType="telerik1:RadTaskBoardCard" BasedOn="{StaticResource RadTaskBoardCardStyle}"/>
    <Style TargetType="telerik1:RadTaskBoard" BasedOn="{StaticResource RadTaskBoardStyle}"/>
    <Style TargetType="taskBoard:TaskBoardColumnContainer" BasedOn="{StaticResource TaskBoardColumnContainerStyle}"/>
    <ControlTemplate x:Key="CalloutTemplate" TargetType="telerik1:RadCallout">
        <Grid>
            <callout:CanvasGrid x:Name="PART_CanvasGrid">
                <Path x:Name="PART_Geometry"
                        UseLayoutRounding="True"
                        Stretch="{TemplateBinding Stretch}"
                        Fill="{TemplateBinding Background}"
                        Stroke="{TemplateBinding BorderBrush}"
                        StrokeThickness="{TemplateBinding StrokeThickness}"
                        StrokeDashArray="{TemplateBinding StrokeDashArray}"
                        Opacity="{TemplateBinding Opacity}"
                        Data="{TemplateBinding GeometryResult}"/>
            </callout:CanvasGrid>
            <ContentPresenter x:Name="PART_Content"
                    ContentSource="Content"
                    TextBlock.TextAlignment="{TemplateBinding TextAlignment}"
                    TextBlock.Foreground="{TemplateBinding Foreground}"
                    TextBlock.FontFamily="{TemplateBinding FontFamily}"
                    TextBlock.FontSize="{TemplateBinding FontSize}"
                    Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>
    </ControlTemplate>
    <Style x:Key="RadCalloutStyle" TargetType="telerik1:RadCallout">
        <Setter Property="Template" Value="{StaticResource CalloutTemplate}"/>
        <Setter Property="MinHeight" Value="50"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}"/>
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}"/>
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}"/>
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"/>
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AlternativeBasicBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    </Style>
    <Style TargetType="telerik1:RadCallout" BasedOn="{StaticResource RadCalloutStyle}"/>
</ResourceDictionary>
