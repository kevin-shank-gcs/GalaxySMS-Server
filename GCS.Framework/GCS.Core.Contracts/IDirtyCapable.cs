////////////////////////////////////////////////////////////////////////////////////////////////////
// file:	IDirtyCapable.cs
//
// summary:	Declares the IDirtyCapable interface
////////////////////////////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Linq;

namespace GCS.Core.Common.Contracts
{
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   Interface for dirty capable. </summary>
    ///
    /// <remarks>   Kevin, 12/26/2018. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    public interface IDirtyCapable
    {
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets a value indicating whether this IDirtyCapable is dirty. </summary>
        ///
        /// <value> True if this IDirtyCapable is dirty, false if not. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        bool IsDirty { get; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>
        /// Gets a value indicating whether this IDirtyCapable is panel data dirty.
        /// </summary>
        ///
        /// <value> True if this IDirtyCapable is panel data dirty, false if not. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        bool IsPanelDataDirty { get; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>
        /// Gets a value indicating whether this IDirtyCapable is any property dirty.
        /// </summary>
        ///
        /// <value> True if this IDirtyCapable is any property dirty, false if not. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        bool IsAnyPropertyDirty {get;}

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Query if this IDirtyCapable is anything dirty. </summary>
        ///
        /// <returns>   True if anything dirty, false if not. </returns>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        bool IsAnythingDirty();

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets dirty objects. </summary>
        ///
        /// <returns>   The dirty objects. </returns>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        List<IDirtyCapable> GetDirtyObjects();

        /// <summary>   Makes the dirty. </summary>
        void MakeDirty();
        /// <summary>   Makes panel data dirty. </summary>
        void MakePanelDataDirty();
        /// <summary>   Clean all. </summary>
        void CleanAll();
    }
}
