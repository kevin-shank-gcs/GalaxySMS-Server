//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using GCS.Core.Common.Contracts;
using GCS.Core.Common.Core;
using System.Runtime.Serialization;


#if NetCoreApi
using System.ComponentModel.DataAnnotations;
namespace GalaxySMS.Business.Entities.Api.NetCore
#elif NETSTANDARD2_0
namespace GalaxySMS.Business.Entities.NetStd2
#else
namespace GalaxySMS.Business.Entities
#endif
{

#if NetCoreApi
#else
    [DataContract]
#endif

    public partial class gcsEntity : EntityBase, IIdentifiableEntity, IEquatable<gcsEntity>
#if NetCoreApi
#else
,IHasBinaryResource
#endif
    {

#if NetCoreApi
        [Required]
#else
        [DataMember]
#endif
        public System.Guid EntityId { get; set; }

        //#if NetCoreApi
        //#else
        //        [DataMember]
        //#endif
        //        public Nullable<System.Guid> ImageBinaryResourceUid { get; set; }

#if NetCoreApi
        [Required]
        [StringLength(65)]
#else
        [DataMember]
#endif
        public string EntityName { get; set; }

#if NetCoreApi
 //       [Required]
        [StringLength(255)]
#else
        [DataMember]
#endif
        public string EntityDescription { get; set; }

#if NetCoreApi
        [Required]
        [StringLength(255)]
#else
        [DataMember]
#endif
        public string EntityKey { get; set; }

#if NetCoreApi
#else
        [DataMember]
#endif
        public bool IsDefault { get; set; }

#if NetCoreApi
#else
        [DataMember]
#endif
        public bool IsActive { get; set; }


#if NetCoreApi
        [Required]
#else
        [DataMember]
#endif
        public string EntityType { get; set; }

#if NetCoreApi
#else
        [DataMember]
#endif
        public string InsertName { get; set; }

#if NetCoreApi
#else
        [DataMember]
#endif
        public System.DateTimeOffset InsertDate { get; set; }

#if NetCoreApi
#else
        [DataMember]
#endif
        public string UpdateName { get; set; }

#if NetCoreApi
#else
        [DataMember]
#endif
        public Nullable<System.DateTimeOffset> UpdateDate { get; set; }

#if NetCoreApi
#else
        [DataMember]
#endif
        public Nullable<short> ConcurrencyValue { get; set; }

#if NetCoreApi
#else
        [DataMember]
#endif
        public string License { get; set; }

#if NetCoreApi
#else
        [DataMember]
#endif
        public string PublicKey { get; set; }

#if NetCoreApi
#else
        [DataMember]
#endif
        public Nullable<System.Guid> BinaryResourceUid { get; set; }

#if NetCoreApi
#else
        [DataMember]
#endif
        public Nullable<System.Guid> ParentEntityId { get; set; }

        //#if NetCoreApi
        //#else
        //        [DataMember]
        //#endif
        //        public ICollection<gcsUserEntity> gcsUserEntities { get; set; }

        //#if NetCoreApi
        //#else
        //        [DataMember]
        //#endif
        //        public ICollection<gcsEntityApplication> gcsEntityApplications { get; set; }
#if NetCoreApi
#else
        [DataMember]
#endif
        public ICollection<gcsRole> AllRoles { get; set; }

#if NetCoreApi
#else
        [DataMember]
        public string Name { get { return EntityName; } set { EntityName = value; } }
#endif

#if NetCoreApi
#else
        [DataMember]
#endif
        public gcsBinaryResource gcsBinaryResource { get; set; }

#if NetCoreApi
#else
        [DataMember]
#endif
        public gcsEntity ParentEntity { get; set; }

#if NetCoreApi
#else
        [DataMember]
#endif
        public string ParentEntityName
        {
            get { return ParentEntity?.EntityName; }
            set
            {
                if( ParentEntity == null)
                    ParentEntity = new gcsEntity()
                    {
                        EntityId = EntityId
                    };
                if (ParentEntity != null)
                    ParentEntity.EntityName = value;
            }
        }

#if NetCoreApi
#else
        [DataMember]
#endif
        public ICollection<gcsEntity> ChildEntities { get; set; }

#if NetCoreApi
#else
        [DataMember]
#endif
        public License TheLicense { get; set; }


#if NetCoreApi
#else
        [DataMember]
#endif
        public ICollection<gcsSetting> Settings { get; set; }

    }
}
