//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using FluentValidation;

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   An input output group assignment. </summary>
    ///
    /// <remarks>   Kevin, 12/26/2018. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

	[DataContract]
	public partial class InputOutputGroupAssignment : DbObjectBase
    {
    
    /*	// Move to partial class
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using FluentValidation;
    using System.Collections.ObjectModel;
    using GCS.Core.Common.Extensions;
    
    namespace GalaxySMS.Client.Entities
    {
        public partial class InputOutputGroupAssignment
        {
        	public InputOutputGroupAssignment()
        	{
        		Initialize();
        	}
        
        	public InputOutputGroupAssignment(InputOutputGroupAssignment e)
        	{
        		Initialize(e);
        	}
        
        	public void Initialize()
        	{
        }
        
        	public void Initialize(InputOutputGroupAssignment e)
        	{
        		Initialize();
        		if( e == null )
        			return;
        		this.InputOutputGroupAssignmentUid = e.InputOutputGroupAssignmentUid;
        		this.GalaxyInterfaceBoardSectionNodeUid = e.GalaxyInterfaceBoardSectionNodeUid;
        		this.InputOutputGroupUid = e.InputOutputGroupUid;
        		this.OffsetIndex = e.OffsetIndex;
        		this.Tag = e.Tag;
        		this.InsertName = e.InsertName;
        		this.InsertDate = e.InsertDate;
        		this.UpdateName = e.UpdateName;
        		this.UpdateDate = e.UpdateDate;
        		this.ConcurrencyValue = e.ConcurrencyValue;
        		
        	}
        
        	public InputOutputGroupAssignment Clone(InputOutputGroupAssignment e)
        	{
        		return new InputOutputGroupAssignment(e);
        	}
        
        	public bool Equals(InputOutputGroupAssignment other)
        	{
        		return base.Equals(other);
        	}
        	
        	public bool IsPrimaryKeyEqual(InputOutputGroupAssignment other)
        	{
        		if( other == null ) 
        			return false;
        
        		if(other.InputOutputGroupAssignmentUid != this.InputOutputGroupAssignmentUid )
        			return false;
        		return true;
        	}
        
        	public override int GetHashCode()
        	{
        		return base.GetHashCode();
        	}
        
        	public override string ToString()
        	{
        		return base.ToString();
        	}
        }
    }
    */
    
    	
        /// <summary>   The input output group assignment UID. </summary>
    	private System.Guid _inputOutputGroupAssignmentUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the input output group assignment UID. </summary>
        ///
        /// <value> The input output group assignment UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.Guid InputOutputGroupAssignmentUid
    	{ 
    		get { return _inputOutputGroupAssignmentUid; }
    		set
    		{
    			if (_inputOutputGroupAssignmentUid != value )
    			{
    				_inputOutputGroupAssignmentUid = value;
    				OnPropertyChanged(() => InputOutputGroupAssignmentUid);
    			}
    		}
    	}
    	
        /// <summary>   The access portal alert event UID. </summary>
    	private System.Guid _accessPortalAlertEventUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the access portal alert event UID. </summary>
        ///
        /// <value> The access portal alert event UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.Guid AccessPortalAlertEventUid
        { 
    		get { return _accessPortalAlertEventUid; }
    		set
    		{
    			if (_accessPortalAlertEventUid != value )
    			{
                    _accessPortalAlertEventUid = value;
    				OnPropertyChanged(() => AccessPortalAlertEventUid);
                    OnPropertyChanged(() => IsAvailable, false);
                }
            }
        }


        /// <summary>   The input device alert event UID. </summary>
        private System.Guid _inputDeviceAlertEventUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the input device alert event UID. </summary>
        ///
        /// <value> The input device alert event UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public System.Guid InputDeviceAlertEventUid
        {
            get { return _inputDeviceAlertEventUid; }
            set
            {
                if (_inputDeviceAlertEventUid != value)
                {
                    _inputDeviceAlertEventUid = value;
                    OnPropertyChanged(() => InputDeviceAlertEventUid);
                    OnPropertyChanged(() => IsAvailable, false);
                }
            }
        }

                /// <summary>   The access portal alert event UID. </summary>
    	private System.Guid _galaxyPanelAlertEventUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the access portal alert event UID. </summary>
        ///
        /// <value> The access portal alert event UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.Guid GalaxyPanelAlertEventUid
        { 
    		get { return _galaxyPanelAlertEventUid; }
    		set
    		{
    			if (_galaxyPanelAlertEventUid != value )
    			{
                    _galaxyPanelAlertEventUid = value;
    				OnPropertyChanged(() => GalaxyPanelAlertEventUid);
                    OnPropertyChanged(() => IsAvailable, false);
                }
            }
        }



        /// <summary>   The input output group UID. </summary>
    	private System.Guid _inputOutputGroupUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the input output group UID. </summary>
        ///
        /// <value> The input output group UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.Guid InputOutputGroupUid
    	{ 
    		get { return _inputOutputGroupUid; }
    		set
    		{
    			if (_inputOutputGroupUid != value )
    			{
    				_inputOutputGroupUid = value;
    				OnPropertyChanged(() => InputOutputGroupUid);
    			}
    		}
    	}
    	
        /// <summary>   Zero-based index of the offset. </summary>
    	private short _offsetIndex;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the zero-based index of the offset. </summary>
        ///
        /// <value> The offset index. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public short OffsetIndex
    	{ 
    		get { return _offsetIndex; }
    		set
    		{
    			if (_offsetIndex != value )
    			{
    				_offsetIndex = value;
    				OnPropertyChanged(() => OffsetIndex);
    			}
    		}
    	}
    	
        /// <summary>   The tag. </summary>
    	private string _tag;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the tag. </summary>
        ///
        /// <value> The tag. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string Tag
    	{ 
    		get { return _tag; }
    		set
    		{
    			if (_tag != value )
    			{
    				_tag = value;
    				OnPropertyChanged(() => Tag);
    			}
    		}
    	}
    	
        /// <summary>   Name of the insert. </summary>
    	private string _insertName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the insert. </summary>
        ///
        /// <value> The name of the insert. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string InsertName
    	{ 
    		get { return _insertName; }
    		set
    		{
    			if (_insertName != value )
    			{
    				_insertName = value;
    				OnPropertyChanged(() => InsertName);
    			}
    		}
    	}
    	
        /// <summary>   The insert date. </summary>
    	private System.DateTimeOffset _insertDate;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the insert date. </summary>
        ///
        /// <value> The insert date. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.DateTimeOffset InsertDate
    	{ 
    		get { return _insertDate; }
    		set
    		{
    			if (_insertDate != value )
    			{
    				_insertDate = value;
    				OnPropertyChanged(() => InsertDate);
    			}
    		}
    	}
    	
        /// <summary>   Name of the update. </summary>
    	private string _updateName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the update. </summary>
        ///
        /// <value> The name of the update. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string UpdateName
    	{ 
    		get { return _updateName; }
    		set
    		{
    			if (_updateName != value )
    			{
    				_updateName = value;
    				OnPropertyChanged(() => UpdateName);
    			}
    		}
    	}
    	
        /// <summary>   The update. </summary>
    	private Nullable<System.DateTimeOffset> _updateDate;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the update. </summary>
        ///
        /// <value> The update date. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public Nullable<System.DateTimeOffset> UpdateDate
    	{ 
    		get { return _updateDate; }
    		set
    		{
    			if (_updateDate != value )
    			{
    				_updateDate = value;
    				OnPropertyChanged(() => UpdateDate);
    			}
    		}
    	}
    	
        /// <summary>   The concurrency value. </summary>
    	private Nullable<short> _concurrencyValue;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the concurrency value. </summary>
        ///
        /// <value> The concurrency value. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public Nullable<short> ConcurrencyValue
    	{ 
    		get { return _concurrencyValue; }
    		set
    		{
    			if (_concurrencyValue != value )
    			{
    				_concurrencyValue = value;
    				OnPropertyChanged(() => ConcurrencyValue);
    			}
    		}
    	}
    
     	
     //   /// <summary>   Group the input output belongs to. </summary>
    	//private InputOutputGroup _inputOutputGroup;

     //   ////////////////////////////////////////////////////////////////////////////////////////////////////
     //   /// <summary>   Gets or sets the group the input output belongs to. </summary>
     //   ///
     //   /// <value> The input output group. </value>
     //   ////////////////////////////////////////////////////////////////////////////////////////////////////

    	//[DataMember]
    	//public virtual InputOutputGroup InputOutputGroup
    	//{ 
    	//	get { return _inputOutputGroup; }
    	//	set
    	//	{
    	//		if (_inputOutputGroup != value )
    	//		{
    	//			_inputOutputGroup = value;
    	//			OnPropertyChanged(() => InputOutputGroup);
    	//		}
    	//	}
    	//}

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>
        /// Gets or sets a value indicating whether this InputOutputGroupAssignment is available.
        /// </summary>
        ///
        /// <value> True if this InputOutputGroupAssignment is available, false if not. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public bool IsAvailable
        {
            get { return this.AccessPortalAlertEventUid == Guid.Empty && 
                    this.InputDeviceAlertEventUid == Guid.Empty && 
                    this.GalaxyPanelAlertEventUid == Guid.Empty && 
                    this.IsEarmarked == false; }
            set
            {
                OnPropertyChanged(() => IsAvailable, false);
            }
        }

        /// <summary>   True if this InputOutputGroupAssignment is earmarked. </summary>
        private bool _isEarmarked;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>
        /// Gets or sets a value indicating whether this InputOutputGroupAssignment is earmarked.
        /// </summary>
        ///
        /// <value> True if this InputOutputGroupAssignment is earmarked, false if not. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public bool IsEarmarked
        {
            get { return _isEarmarked; }
            set
            {
                if (_isEarmarked != value)
                {
                    _isEarmarked = value;
                    OnPropertyChanged(() => IsEarmarked, false);
                    OnPropertyChanged(() => IsAvailable, false);
                }
            }
        }

    }
    
}
