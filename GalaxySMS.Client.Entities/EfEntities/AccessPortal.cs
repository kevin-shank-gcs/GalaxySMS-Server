//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Linq;
using GCS.Core.Common.Extensions;

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
    using GCS.Core.Common.Core;
    using FluentValidation;
    using GCS.Core.Common.Contracts;
    using System.Collections.ObjectModel;

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   The access portal. </summary>
    ///
    /// <remarks>   Kevin, 12/26/2018. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    [DataContract]
    public partial class AccessPortal : DbObjectBase, IHasBinaryResource, IHasEntityMappingList, ITableEntityBase, IHasNotes
    {

        /// <summary>   The access portal UID. </summary>
        private System.Guid _accessPortalUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the access portal UID. </summary>
        ///
        /// <value> The access portal UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public System.Guid AccessPortalUid
        {
            get { return _accessPortalUid; }
            set
            {
                if (_accessPortalUid != value)
                {
                    _accessPortalUid = value;
                    OnPropertyChanged(() => AccessPortalUid);
                }
            }
        }

        /// <summary>   The access portal type UID. </summary>
        private System.Guid _accessPortalTypeUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the access portal type UID. </summary>
        ///
        /// <value> The access portal type UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public System.Guid AccessPortalTypeUid
        {
            get { return _accessPortalTypeUid; }
            set
            {
                if (_accessPortalTypeUid != value)
                {
                    _accessPortalTypeUid = value;
                    OnPropertyChanged(() => AccessPortalTypeUid);
                }
            }
        }

        /// <summary>   The binary resource UID. </summary>
        private Nullable<System.Guid> _binaryResourceUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the binary resource UID. </summary>
        ///
        /// <value> The binary resource UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public Nullable<System.Guid> BinaryResourceUid
        {
            get { return _binaryResourceUid; }
            set
            {
                if (_binaryResourceUid != value)
                {
                    _binaryResourceUid = value;
                    OnPropertyChanged(() => BinaryResourceUid);
                }
            }
        }

        /// <summary>   The site UID. </summary>
        private System.Guid _siteUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the site UID. </summary>
        ///
        /// <value> The site UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public System.Guid SiteUid
        {
            get { return _siteUid; }
            set
            {
                if (_siteUid != value)
                {
                    _siteUid = value;
                    OnPropertyChanged(() => SiteUid);
                }
            }
        }


        /// <summary>   Identifier for the entity. </summary>
        private System.Guid _entityId;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the identifier of the entity. </summary>
        ///
        /// <value> The identifier of the entity. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public System.Guid EntityId
        {
            get { return _entityId; }
            set
            {
                if (_entityId != value)
                {
                    _entityId = value;
                    OnPropertyChanged(() => EntityId);
                }
            }
        }

        /// <summary>   Name of the portal. </summary>
        private string _portalName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the portal. </summary>
        ///
        /// <value> The name of the portal. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public string PortalName
        {
            get { return _portalName; }
            set
            {
                if (_portalName != value)
                {
                    _portalName = value;
                    OnPropertyChanged(() => PortalName);
                }
            }
        }

        /// <summary>   The location. </summary>
        private string _location;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the location. </summary>
        ///
        /// <value> The location. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public string Location
        {
            get { return _location; }
            set
            {
                if (_location != value)
                {
                    _location = value;
                    OnPropertyChanged(() => Location);
                }
            }
        }

        /// <summary>   The service comment. </summary>
        private string _serviceComment;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the service comment. </summary>
        ///
        /// <value> The service comment. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public string ServiceComment
        {
            get { return _serviceComment; }
            set
            {
                if (_serviceComment != value)
                {
                    _serviceComment = value;
                    OnPropertyChanged(() => ServiceComment);
                }
            }
        }

        /// <summary>   The criticality comment. </summary>
        private string _criticalityComment;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the criticality comment. </summary>
        ///
        /// <value> The criticality comment. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public string CriticalityComment
        {
            get { return _criticalityComment; }
            set
            {
                if (_criticalityComment != value)
                {
                    _criticalityComment = value;
                    OnPropertyChanged(() => CriticalityComment);
                }
            }
        }

        /// <summary>   The comment. </summary>
        private string _comment;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the comment. </summary>
        ///
        /// <value> The comment. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public string Comment
        {
            get { return _comment; }
            set
            {
                if (_comment != value)
                {
                    _comment = value;
                    OnPropertyChanged(() => Comment);
                }
            }
        }

        /// <summary>   True if this AccessPortal is template. </summary>
        private bool _isTemplate;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets a value indicating whether this AccessPortal is template. </summary>
        ///
        /// <value> True if this AccessPortal is template, false if not. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public bool IsTemplate
        {
            get { return _isTemplate; }
            set
            {
                if (_isTemplate != value)
                {
                    _isTemplate = value;
                    OnPropertyChanged(() => IsTemplate);
                }
            }
        }

        private bool _isEnabled;

        [DataMember]
        public bool IsEnabled
        {
            get { return _isEnabled; }
            set
            {
                if (_isEnabled != value)
                {
                    _isEnabled = value;
                    OnPropertyChanged(() => IsEnabled);
                }
            }
        }

        /// <summary>   Name of the insert. </summary>
        private string _insertName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the insert. </summary>
        ///
        /// <value> The name of the insert. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public string InsertName
        {
            get { return _insertName; }
            set
            {
                if (_insertName != value)
                {
                    _insertName = value;
                    OnPropertyChanged(() => InsertName);
                }
            }
        }

        /// <summary>   The insert date. </summary>
        private System.DateTimeOffset _insertDate;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the insert date. </summary>
        ///
        /// <value> The insert date. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public System.DateTimeOffset InsertDate
        {
            get { return _insertDate; }
            set
            {
                if (_insertDate != value)
                {
                    _insertDate = value;
                    OnPropertyChanged(() => InsertDate);
                }
            }
        }

        /// <summary>   Name of the update. </summary>
        private string _updateName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the update. </summary>
        ///
        /// <value> The name of the update. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public string UpdateName
        {
            get { return _updateName; }
            set
            {
                if (_updateName != value)
                {
                    _updateName = value;
                    OnPropertyChanged(() => UpdateName);
                }
            }
        }

        /// <summary>   The update. </summary>
        private Nullable<System.DateTimeOffset> _updateDate;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the update. </summary>
        ///
        /// <value> The update date. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public Nullable<System.DateTimeOffset> UpdateDate
        {
            get { return _updateDate; }
            set
            {
                if (_updateDate != value)
                {
                    _updateDate = value;
                    OnPropertyChanged(() => UpdateDate);
                }
            }
        }

        /// <summary>   The concurrency value. </summary>
        private Nullable<short> _concurrencyValue;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the concurrency value. </summary>
        ///
        /// <value> The concurrency value. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public Nullable<short> ConcurrencyValue
        {
            get { return _concurrencyValue; }
            set
            {
                if (_concurrencyValue != value)
                {
                    _concurrencyValue = value;
                    OnPropertyChanged(() => ConcurrencyValue);
                }
            }
        }


        /// <summary>   The gcs binary resource. </summary>
        private gcsBinaryResource _gcsBinaryResource;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name. </summary>
        ///
        /// <value> The name. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public string Name
        {
            get { return PortalName; }
            set
            {
                if (Name != value)
                {
                    PortalName = value;
                    OnPropertyChanged(() => Name);
                }
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the gcs binary resource. </summary>
        ///
        /// <value> The gcs binary resource. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public virtual gcsBinaryResource gcsBinaryResource
        {
            get { return _gcsBinaryResource; }
            set
            {
                if (_gcsBinaryResource != value)
                {
                    _gcsBinaryResource = value;
                    OnPropertyChanged(() => gcsBinaryResource);
                }
            }
        }

        /// <summary>   List of identifiers for the entities. </summary>
        private ICollection<Guid> _entityIds;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets a list of identifiers of the entities. </summary>
        ///
        /// <value> A list of identifiers of the entities. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public virtual ICollection<Guid> EntityIds
        {
            get { return _entityIds; }
            set
            {
                if (_entityIds != value)
                {
                    _entityIds = value;
                    OnPropertyChanged(() => EntityIds);
                }
            }
        }


        /// <summary>   List of identifiers for the roles that can access this device. </summary>
        private ICollection<Guid> _roleIds;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets a list of identifiers of the roles that have access to this item. </summary>
        ///
        /// <value> A list of identifiers of the roles. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public virtual ICollection<Guid> RoleIds
        {
            get { return _roleIds; }
            set
            {
                if (_roleIds != value)
                {
                    _roleIds = value;
                    OnPropertyChanged(() => RoleIds);
                }
            }
        }



        /// <summary>   The mapped entities permission levels. </summary>
        private ICollection<EntityIdEntityMapPermissionLevel> _MappedEntitiesPermissionLevels;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the mapped entities permission levels. </summary>
        ///
        /// <value> The mapped entities permission levels. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public virtual ICollection<EntityIdEntityMapPermissionLevel> MappedEntitiesPermissionLevels
        {
            get { return _MappedEntitiesPermissionLevels; }
            set
            {
                if (_MappedEntitiesPermissionLevels != value)
                {
                    _MappedEntitiesPermissionLevels = value;
                    OnPropertyChanged(() => MappedEntitiesPermissionLevels);
                }
            }
        }

        /// <summary>   Name of the region. </summary>
        private string _regionName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the region. </summary>
        ///
        /// <value> The name of the region. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public string RegionName
        {
            get { return _regionName; }
            set
            {
                if (_regionName != value)
                {
                    _regionName = value;
                    OnPropertyChanged(() => RegionName);
                }
            }
        }
        /// <summary>   Name of the site. </summary>
        private string _siteName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the site. </summary>
        ///
        /// <value> The name of the site. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public string SiteName
        {
            get { return _siteName; }
            set
            {
                if (_siteName != value)
                {
                    _siteName = value;
                    OnPropertyChanged(() => SiteName);
                }
            }
        }


        /// <summary>   The cluster UID. </summary>
        private Guid _clusterUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the cluster UID. </summary>
        ///
        /// <value> The cluster UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public Guid ClusterUid
        {
            get { return _clusterUid; }
            set
            {
                if (_clusterUid != value)
                {
                    _clusterUid = value;
                    OnPropertyChanged(() => ClusterUid, false);
                }
            }
        }

        /// <summary>   The galaxy panel UID. </summary>
        private Guid _galaxyPanelUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the galaxy pane UID. </summary>
        ///
        /// <value> The galaxy pane UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public Guid GalaxyPanelUid
        {
            get { return _galaxyPanelUid; }
            set
            {
                if (_galaxyPanelUid != value)
                {
                    _galaxyPanelUid = value;
                    OnPropertyChanged(() => GalaxyPanelUid, false);
                }
            }
        }

        /// <summary>   The account code. </summary>
        private int _clusterGroupId;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the account code. </summary>
        ///
        /// <value> The account code. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public int ClusterGroupId
        {
            get { return _clusterGroupId; }
            set
            {
                if (_clusterGroupId != value)
                {
                    _clusterGroupId = value;
                    OnPropertyChanged(() => ClusterGroupId, false);
                }
            }
        }

        /// <summary>   The cluster number. </summary>
        private int _clusterNumber;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the cluster number. </summary>
        ///
        /// <value> The cluster number. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public int ClusterNumber
        {
            get { return _clusterNumber; }
            set
            {
                if (_clusterNumber != value)
                {
                    _clusterNumber = value;
                    OnPropertyChanged(() => ClusterNumber, false);
                }
            }
        }

        /// <summary>   The panel number. </summary>
        private int _panelNumber;


        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the panel number. </summary>
        ///
        /// <value> The panel number. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public int PanelNumber
        {
            get { return _panelNumber; }
            set
            {
                if (_panelNumber != value)
                {
                    _panelNumber = value;
                    OnPropertyChanged(() => PanelNumber, false);
                }
            }
        }

        /// <summary>   The board number. </summary>
        private short _boardNumber;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the board number. </summary>
        ///
        /// <value> The board number. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public short BoardNumber
        {
            get { return _boardNumber; }
            set
            {
                if (_boardNumber != value)
                {
                    _boardNumber = value;
                    OnPropertyChanged(() => BoardNumber, false);
                }
            }
        }

        /// <summary>   The section number. </summary>
        private short _sectionNumber;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the section number. </summary>
        ///
        /// <value> The section number. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public short SectionNumber
        {
            get { return _sectionNumber; }
            set
            {
                if (_sectionNumber != value)
                {
                    _sectionNumber = value;
                    OnPropertyChanged(() => SectionNumber, false);
                }
            }
        }


        /// <summary>   The module number. </summary>
        private short _moduleNumber;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the module number. </summary>
        ///
        /// <value> The module number. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public short ModuleNumber
        {
            get { return _moduleNumber; }
            set
            {
                if (_moduleNumber != value)
                {
                    _moduleNumber = value;
                    OnPropertyChanged(() => ModuleNumber, false);
                }
            }
        }

        /// <summary>   The node number. </summary>
        private short _nodeNumber;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the node number. </summary>
        ///
        /// <value> The node number. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public short NodeNumber
        {
            get { return _nodeNumber; }
            set
            {
                if (_nodeNumber != value)
                {
                    _nodeNumber = value;
                    OnPropertyChanged(() => NodeNumber, false);
                }
            }
        }

        private bool _isNodeActive;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets a value indicating whether the node is active. </summary>
        ///
        /// <value> True if a node is active, false if not. </value>
        ///=================================================================================================
        [DataMember]
        public bool IsNodeActive
        {
            get { return _isNodeActive; }
            set
            {
                if (_isNodeActive != value)
                {
                    _isNodeActive = value;
                    OnPropertyChanged(() => IsNodeActive, false);
                }
            }
        }


        /// <summary>   The cluster type UID. </summary>
        private Guid _clusterTypeUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the cluster type UID. </summary>
        ///
        /// <value> The cluster type UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public Guid ClusterTypeUid
        {
            get { return _clusterTypeUid; }
            set
            {
                if (_clusterTypeUid != value)
                {
                    _clusterTypeUid = value;
                    OnPropertyChanged(() => ClusterTypeUid, false);
                }
            }
        }

        /// <summary>   The cluster type code. </summary>
        private string _clusterTypeCode;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the cluster type code. </summary>
        ///
        /// <value> The cluster type code. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public string ClusterTypeCode
        {
            get { return _clusterTypeCode; }
            set
            {
                if (_clusterTypeCode != value)
                {
                    _clusterTypeCode = value;
                    OnPropertyChanged(() => ClusterTypeCode, false);
                }
            }
        }


        /// <summary>   The galaxy panel model UID. </summary>
        private Guid _galaxyPanelModelUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the galaxy panel model UID. </summary>
        ///
        /// <value> The galaxy panel model UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public Guid GalaxyPanelModelUid
        {
            get { return _galaxyPanelModelUid; }
            set
            {
                if (_galaxyPanelModelUid != value)
                {
                    _galaxyPanelModelUid = value;
                    OnPropertyChanged(() => GalaxyPanelModelUid, false);
                }
            }
        }

        /// <summary>   The galaxy panel type code. </summary>
        private string _galaxyPanelTypeCode;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the galaxy panel type code. </summary>
        ///
        /// <value> The galaxy panel type code. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public string GalaxyPanelTypeCode
        {
            get { return _galaxyPanelTypeCode; }
            set
            {
                if (_galaxyPanelTypeCode != value)
                {
                    _galaxyPanelTypeCode = value;
                    OnPropertyChanged(() => GalaxyPanelTypeCode, false);
                }
            }
        }


        /// <summary>   The interface board type UID. </summary>
        private Guid _interfaceBoardTypeUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the interface board type UID. </summary>
        ///
        /// <value> The interface board type UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public Guid InterfaceBoardTypeUid
        {
            get { return _interfaceBoardTypeUid; }
            set
            {
                if (_interfaceBoardTypeUid != value)
                {
                    _interfaceBoardTypeUid = value;
                    OnPropertyChanged(() => InterfaceBoardTypeUid, false);
                }
            }
        }

        /// <summary>   The interface board type code. </summary>
        private short _interfaceBoardTypeCode;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the interface board type code. </summary>
        ///
        /// <value> The interface board type code. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public short InterfaceBoardTypeCode
        {
            get { return _interfaceBoardTypeCode; }
            set
            {
                if (_interfaceBoardTypeCode != value)
                {
                    _interfaceBoardTypeCode = value;
                    OnPropertyChanged(() => InterfaceBoardTypeCode, false);
                }
            }
        }

        /// <summary>   The interface board model. </summary>
        private string _interfaceBoardModel;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the interface board model. </summary>
        ///
        /// <value> The interface board model. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public string InterfaceBoardModel
        {
            get { return _interfaceBoardModel; }
            set
            {
                if (_interfaceBoardModel != value)
                {
                    _interfaceBoardModel = value;
                    OnPropertyChanged(() => InterfaceBoardModel, false);
                }
            }
        }

        /// <summary>   The interface board section mode UID. </summary>
        private Guid _interfaceBoardSectionModeUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the interface board section mode UID. </summary>
        ///
        /// <value> The interface board section mode UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public Guid InterfaceBoardSectionModeUid
        {
            get { return _interfaceBoardSectionModeUid; }
            set
            {
                if (_interfaceBoardSectionModeUid != value)
                {
                    _interfaceBoardSectionModeUid = value;
                    OnPropertyChanged(() => InterfaceBoardSectionModeUid, false);
                }
            }
        }


        /// <summary>   The interface board section mode code. </summary>
        private short _interfaceBoardSectionModeCode;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the interface board section mode code. </summary>
        ///
        /// <value> The interface board section mode code. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public short InterfaceBoardSectionModeCode
        {
            get { return _interfaceBoardSectionModeCode; }
            set
            {
                if (_interfaceBoardSectionModeCode != value)
                {
                    _interfaceBoardSectionModeCode = value;
                    OnPropertyChanged(() => InterfaceBoardSectionModeCode, false);
                }
            }
        }


        /// <summary>   The galaxy hardware module type UID. </summary>
        private Guid _galaxyHardwareModuleTypeUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the galaxy hardware module type UID. </summary>
        ///
        /// <value> The galaxy hardware module type UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public Guid GalaxyHardwareModuleTypeUid
        {
            get { return _galaxyHardwareModuleTypeUid; }
            set
            {
                if (_galaxyHardwareModuleTypeUid != value)
                {
                    _galaxyHardwareModuleTypeUid = value;
                    OnPropertyChanged(() => GalaxyHardwareModuleTypeUid, false);
                }
            }
        }

        /// <summary>   The module type code. </summary>
        private short _moduleTypeCode;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the module type code. </summary>
        ///
        /// <value> The module type code. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public short ModuleTypeCode
        {
            get { return _moduleTypeCode; }
            set
            {
                if (_moduleTypeCode != value)
                {
                    _moduleTypeCode = value;
                    OnPropertyChanged(() => ModuleTypeCode, false);
                }
            }
        }


        /// <summary>   The galaxy hardware address. </summary>
        private AccessPortalGalaxyHardwareAddress _galaxyHardwareAddress;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the galaxy hardware address. </summary>
        ///
        /// <value> The galaxy hardware address. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public AccessPortalGalaxyHardwareAddress GalaxyHardwareAddress
        {
            get { return _galaxyHardwareAddress; }
            set
            {
                if (_galaxyHardwareAddress != value)
                {
                    _galaxyHardwareAddress = value;
                    OnPropertyChanged(() => GalaxyHardwareAddress, false);
                }
            }
        }


        /// <summary>   The properties. </summary>
        private AccessPortalProperties _properties;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the properties. </summary>
        ///
        /// <value> The properties. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public AccessPortalProperties Properties
        {
            get { return _properties; }
            set
            {
                if (_properties != value)
                {
                    _properties = value;
                    OnPropertyChanged(() => Properties, false);
                }
            }
        }

        /// <summary>   The areas. </summary>
        private ICollection<AccessPortalArea> _areas;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the areas. </summary>
        ///
        /// <value> The areas. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public ICollection<AccessPortalArea> Areas
        {
            get { return _areas; }
            set
            {
                if (_areas != value)
                {
                    _areas = value;
                    OnPropertyChanged(() => Areas, false);
                }
            }
        }

        /// <summary>   The schedules. </summary>
        private ICollection<AccessPortalTimeSchedule> _schedules;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the schedules. </summary>
        ///
        /// <value> The schedules. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public ICollection<AccessPortalTimeSchedule> Schedules
        {
            get { return _schedules; }
            set
            {
                if (_schedules != value)
                {
                    _schedules = value;
                    OnPropertyChanged(() => Schedules, false);
                }
            }
        }

        /// <summary>   The alert events. </summary>
        private ICollection<AccessPortalAlertEvent> _alertEvents;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the alert events. </summary>
        ///
        /// <value> The alert events. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public ICollection<AccessPortalAlertEvent> AlertEvents
        {
            get { return _alertEvents; }
            set
            {
                if (_alertEvents != value)
                {
                    _alertEvents = value;
                    OnPropertyChanged(() => AlertEvents, false);
                }
            }
        }

        /// <summary>   The auxiliary outputs. </summary>
        private ICollection<AccessPortalAuxiliaryOutput> _auxiliaryOutputs;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the auxiliary outputs. </summary>
        ///
        /// <value> The auxiliary outputs. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public ICollection<AccessPortalAuxiliaryOutput> AuxiliaryOutputs
        {
            get { return _auxiliaryOutputs; }
            set
            {
                if (_auxiliaryOutputs != value)
                {
                    _auxiliaryOutputs = value;
                    OnPropertyChanged(() => AuxiliaryOutputs, false);
                }
            }
        }

        /// <summary>   The notes. </summary>
        private ICollection<Note> _notes;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the notes. </summary>
        ///
        /// <value> The notes. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public ICollection<Note> Notes
        {
            get { return _notes; }
            set
            {
                if (_notes != value)
                {
                    _notes = value;
                    OnPropertyChanged(() => Notes, false);
                }
            }
        }


        /// <summary>   The access group access portals. </summary>
        private ICollection<AccessGroupAccessPortal> _accessGroupAccessPortals;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the access group access portals. </summary>
        ///
        /// <value> The access group access portals. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public ICollection<AccessGroupAccessPortal> AccessGroups
        {
            get { return _accessGroupAccessPortals; }
            set
            {
                if (_accessGroupAccessPortals != value)
                {
                    _accessGroupAccessPortals = value;
                    OnPropertyChanged(() => AccessGroups, false);
                    OnPropertyChanged(() => EditableAccessGroupsAccessPortals, false);
                }
            }
        }


        private bool _IsBoundToHardware;

        [DataMember]
        public bool IsBoundToHardware
        {
            get { return _IsBoundToHardware; }
            set
            {
                if (_IsBoundToHardware != value)
                {
                    _IsBoundToHardware = value;
                    OnPropertyChanged(() => IsBoundToHardware, false);
                }
            }
        }

        ///// <summary>   The commands. </summary>
        //private ICollection<AccessPortalCommand> _commands;

        //////////////////////////////////////////////////////////////////////////////////////////////////////
        ///// <summary>   Gets or sets the commands. </summary>
        /////
        ///// <value> The commands. </value>
        //////////////////////////////////////////////////////////////////////////////////////////////////////
        //[DataMember]

        //public ICollection<AccessPortalCommand> Commands
        //{
        //    get { return _commands; }
        //    set
        //    {
        //        if (_commands != value)
        //        {
        //            _commands = value;
        //            OnPropertyChanged(() => Commands, false);
        //        }
        //    }
        //}

        private ICollection<Guid> _DisabledCommandIds;

        [DataMember]
        public ICollection<Guid> DisabledCommandIds
        {
            get { return _DisabledCommandIds; }
            set
            {
                if (_DisabledCommandIds != value)
                {
                    _DisabledCommandIds = value;
                    OnPropertyChanged(() => DisabledCommandIds, false);
                }
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the editable access groups access portals. </summary>
        ///
        /// <value> The editable access groups access portals. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public ICollection<AccessGroupAccessPortal> EditableAccessGroupsAccessPortals
        {
            get { return AccessGroups.Where(i => i.IsSystemAccessGroup == false).ToCollection(); }
            set
            {

            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the pin required schedule UID. </summary>
        ///
        /// <value> The pin required schedule UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public Guid PinRequiredScheduleUid
        {
            get
            {
                var o = Schedules.FirstOrDefault(s => s.AccessPortalScheduleTypeUid == GalaxySMS.Common.Constants.AccessPortalScheduleTypeIds.PinRequired);
                if (o == null)
                    return GalaxySMS.Common.Constants.TimeScheduleIds.TimeSchedule_Never;
                return o.TimeScheduleUid;
            }
            set
            {
                var o = Schedules.FirstOrDefault(s => s.AccessPortalScheduleTypeUid == GalaxySMS.Common.Constants.AccessPortalScheduleTypeIds.PinRequired);
                if (o != null)
                {
                    o.TimeScheduleUid = value;
                    OnPropertyChanged(() => PinRequiredScheduleUid, true, true);
                }
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the automatic unlock schedule UID. </summary>
        ///
        /// <value> The automatic unlock schedule UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public Guid AutomaticUnlockScheduleUid
        {
            get
            {
                var o = Schedules.FirstOrDefault(s => s.AccessPortalScheduleTypeUid == GalaxySMS.Common.Constants.AccessPortalScheduleTypeIds.AutomaticUnlock);
                if (o == null)
                    return GalaxySMS.Common.Constants.TimeScheduleIds.TimeSchedule_Never;
                return o.TimeScheduleUid;
            }
            set
            {
                var o = Schedules.FirstOrDefault(s => s.AccessPortalScheduleTypeUid == GalaxySMS.Common.Constants.AccessPortalScheduleTypeIds.AutomaticUnlock);
                if (o != null)
                {
                    o.TimeScheduleUid = value;
                    OnPropertyChanged(() => AutomaticUnlockScheduleUid, true, true);
                }
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the crisis unlock schedule UID. </summary>
        ///
        /// <value> The crisis unlock schedule UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public Guid CrisisUnlockScheduleUid
        {
            get
            {
                var o = Schedules.FirstOrDefault(s => s.AccessPortalScheduleTypeUid == GalaxySMS.Common.Constants.AccessPortalScheduleTypeIds.CrisisUnlock);
                if (o == null)
                    return GalaxySMS.Common.Constants.TimeScheduleIds.TimeSchedule_Never;
                return o.TimeScheduleUid;
            }
            set
            {
                var o = Schedules.FirstOrDefault(s => s.AccessPortalScheduleTypeUid == GalaxySMS.Common.Constants.AccessPortalScheduleTypeIds.CrisisUnlock);
                if (o != null)
                {
                    o.TimeScheduleUid = value;
                    OnPropertyChanged(() => CrisisUnlockScheduleUid, true, true);
                }
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the disable forced open schedule UID. </summary>
        ///
        /// <value> The disable forced open schedule UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public Guid DisableForcedOpenScheduleUid
        {
            get
            {
                var o = Schedules.FirstOrDefault(s => s.AccessPortalScheduleTypeUid == GalaxySMS.Common.Constants.AccessPortalScheduleTypeIds.DisableForcedOpen);
                if (o == null)
                    return GalaxySMS.Common.Constants.TimeScheduleIds.TimeSchedule_Never;
                return o.TimeScheduleUid;
            }
            set
            {
                var o = Schedules.FirstOrDefault(s => s.AccessPortalScheduleTypeUid == GalaxySMS.Common.Constants.AccessPortalScheduleTypeIds.DisableForcedOpen);
                if (o != null)
                {
                    o.TimeScheduleUid = value;
                    OnPropertyChanged(() => DisableForcedOpenScheduleUid, true, true);
                }
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the disable open too long schedule UID. </summary>
        ///
        /// <value> The disable open too long schedule UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public Guid DisableOpenTooLongScheduleUid
        {
            get
            {
                var o = Schedules.FirstOrDefault(s => s.AccessPortalScheduleTypeUid == GalaxySMS.Common.Constants.AccessPortalScheduleTypeIds.DisableOpenTooLong);
                if (o == null)
                    return GalaxySMS.Common.Constants.TimeScheduleIds.TimeSchedule_Never;
                return o.TimeScheduleUid;
            }
            set
            {
                var o = Schedules.FirstOrDefault(s => s.AccessPortalScheduleTypeUid == GalaxySMS.Common.Constants.AccessPortalScheduleTypeIds.DisableOpenTooLong);
                if (o != null)
                {
                    o.TimeScheduleUid = value;
                    OnPropertyChanged(() => DisableOpenTooLongScheduleUid, true, true);
                }
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the passback to area UID. </summary>
        ///
        /// <value> The passback to area UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public Guid PassbackToAreaUid
        {
            get
            {
                var o = Areas.FirstOrDefault(a => a.AccessPortalAreaTypeUid == GalaxySMS.Common.Constants.AccessPortalAreaTypeIds.ToArea);
                if (o == null)
                    return GalaxySMS.Common.Constants.AreaIds.Area_NoChange;
                return o.AreaUid;
            }
            set
            {
                var o = Areas.FirstOrDefault(a => a.AccessPortalAreaTypeUid == GalaxySMS.Common.Constants.AccessPortalAreaTypeIds.ToArea);
                if (o != null)
                {
                    o.AreaUid = value;
                    OnPropertyChanged(() => PassbackToAreaUid, true, true);
                }
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the passback from area UID. </summary>
        ///
        /// <value> The passback from area UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public Guid PassbackFromAreaUid
        {
            get
            {
                var o = Areas.FirstOrDefault(a => a.AccessPortalAreaTypeUid == GalaxySMS.Common.Constants.AccessPortalAreaTypeIds.FromArea);
                if (o == null)
                    return GalaxySMS.Common.Constants.AreaIds.Area_NoChange;
                return o.AreaUid;
                //return Areas.FirstOrDefault(a => a.AccessPortalAreaTypeUid == GalaxySMS.Common.Constants.AccessPortalAreaTypeIds.FromArea).AreaUid;
            }
            set
            {
                var o = Areas.FirstOrDefault(a => a.AccessPortalAreaTypeUid == GalaxySMS.Common.Constants.AccessPortalAreaTypeIds.FromArea);
                if (o != null)
                {
                    o.AreaUid = value;
                    OnPropertyChanged(() => PassbackFromAreaUid, true, true);
                }
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the whos in area UID. </summary>
        ///
        /// <value> The whos in area UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public Guid WhosInAreaUid
        {
            get
            {
                var o = Areas.FirstOrDefault(a => a.AccessPortalAreaTypeUid == GalaxySMS.Common.Constants.AccessPortalAreaTypeIds.WhosInArea);
                if (o == null)
                    return GalaxySMS.Common.Constants.AreaIds.Area_NoChange;
                return o.AreaUid;
            }
            set
            {
                var o = Areas.FirstOrDefault(a => a.AccessPortalAreaTypeUid == GalaxySMS.Common.Constants.AccessPortalAreaTypeIds.WhosInArea);
                if (o != null)
                {
                    o.AreaUid = value;
                    OnPropertyChanged(() => WhosInAreaUid);
                }
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the access portal group UID. </summary>
        ///
        /// <value> The access portal group UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public Guid AccessPortalGroupUid
        {
            get
            {
                var o = AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.DoorGroup);
                if (o == null)
                    return Guid.Empty;
                return o.InputOutputGroupUid;
                //                return AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.DoorGroup).InputOutputGroupUid;
            }
            set
            {
                var o = AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.DoorGroup);
                if (o != null)
                {
                    o.InputOutputGroupUid = value;
                    OnPropertyChanged(() => AccessPortalGroupUid, true, true);
                }
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets the group the alert event door belongs to. </summary>
        ///
        /// <value> The alert event door group. </value>
        ///=================================================================================================

        public AccessPortalAlertEvent AlertEventDoorGroup
        {
            get
            {
                return AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.DoorGroup);
            }
        }


        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the locked by input output group UID. </summary>
        ///
        /// <value> The locked by input output group UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public Guid LockedByInputOutputGroupUid
        {
            get
            {
                var o = AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.LockedBy);
                if (o == null)
                    return Guid.Empty;
                return o.InputOutputGroupUid;
            }
            set
            {
                var o = AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.LockedBy);
                if (o != null)
                {
                    o.InputOutputGroupUid = value;
                    OnPropertyChanged(() => LockedByInputOutputGroupUid, true, true);
                }
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets the amount to alert event locked by. </summary>
        ///
        /// <value> Amount to alert event locked by. </value>
        ///=================================================================================================

        public AccessPortalAlertEvent AlertEventLockedBy
        {
            get
            {
                return AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.LockedBy);
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the unlocked by input output group UID. </summary>
        ///
        /// <value> The unlocked by input output group UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public Guid UnlockedByInputOutputGroupUid
        {
            get
            {
                var o = AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.UnlockedBy);
                if (o == null)
                    return Guid.Empty;
                return o.InputOutputGroupUid;
            }
            set
            {
                var o = AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.UnlockedBy);
                if (o != null)
                {
                    o.InputOutputGroupUid = value;
                    OnPropertyChanged(() => UnlockedByInputOutputGroupUid, true, true);
                }
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets the amount to alert event unlocked by. </summary>
        ///
        /// <value> Amount to alert event unlocked by. </value>
        ///=================================================================================================

        public AccessPortalAlertEvent AlertEventUnlockedBy
        {
            get
            {
                return AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.UnlockedBy);
            }
        }
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the forced open input output group UID. </summary>
        ///
        /// <value> The forced open input output group UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public Guid ForcedOpenInputOutputGroupUid
        {
            get
            {
                var o = AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.ForcedOpen);
                if (o == null)
                    return Guid.Empty;
                return o.InputOutputGroupUid;
            }
            set
            {
                var o = AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.ForcedOpen);
                if (o != null)
                {
                    o.InputOutputGroupUid = value;
                    OnPropertyChanged(() => ForcedOpenInputOutputGroupUid, true, true);
                }
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets the alert event forced open. </summary>
        ///
        /// <value> The alert event forced open. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public AccessPortalAlertEvent AlertEventForcedOpen
        {
            get
            {
                return AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.ForcedOpen);
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the open too long input output group UID. </summary>
        ///
        /// <value> The open too long input output group UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public Guid OpenTooLongInputOutputGroupUid
        {
            get
            {
                var o = AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.OpenTooLong);
                if (o == null)
                    return Guid.Empty;
                return o.InputOutputGroupUid;
            }
            set
            {
                var o = AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.OpenTooLong);
                if (o != null)
                {
                    o.InputOutputGroupUid = value;
                    OnPropertyChanged(() => OpenTooLongInputOutputGroupUid, true, true);
                }
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets the alert event open too long. </summary>
        ///
        /// <value> The alert event open too long. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public AccessPortalAlertEvent AlertEventOpenTooLong
        {
            get
            {
                return AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.OpenTooLong);
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the invalid access attempt input output group UID. </summary>
        ///
        /// <value> The invalid access attempt input output group UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public Guid InvalidAccessAttemptInputOutputGroupUid
        {
            get
            {
                var o = AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.InvalidAccessAttempt);
                if (o == null)
                    return Guid.Empty;
                return o.InputOutputGroupUid;
            }
            set
            {
                var o = AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.InvalidAccessAttempt);
                if (o != null)
                {
                    o.InputOutputGroupUid = value;
                    OnPropertyChanged(() => InvalidAccessAttemptInputOutputGroupUid, true, true);
                }
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets the alert event invalid access attempt. </summary>
        ///
        /// <value> The alert event invalid access attempt. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public AccessPortalAlertEvent AlertEventInvalidAccessAttempt
        {
            get
            {
                return AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.InvalidAccessAttempt);
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the passback violation input output group UID. </summary>
        ///
        /// <value> The passback violation input output group UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public Guid PassbackViolationInputOutputGroupUid
        {
            get
            {
                var o = AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.PassbackViolation);
                if (o == null)
                    return Guid.Empty;
                return o.InputOutputGroupUid;
            }
            set
            {
                var o = AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.PassbackViolation);
                if (o != null)
                {
                    o.InputOutputGroupUid = value;
                    OnPropertyChanged(() => PassbackViolationInputOutputGroupUid, true, true);
                }
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets the alert event passback violation. </summary>
        ///
        /// <value> The alert event passback violation. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public AccessPortalAlertEvent AlertEventPassbackViolation
        {
            get
            {
                return AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.PassbackViolation);
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the duress input output group UID. </summary>
        ///
        /// <value> The duress input output group UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public Guid DuressInputOutputGroupUid
        {
            get
            {
                var o = AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.DuressAuxiliaryFunction);
                if (o == null)
                    return Guid.Empty;
                return o.InputOutputGroupUid;
            }
            set
            {
                var o = AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.DuressAuxiliaryFunction);
                if (o != null)
                {
                    o.InputOutputGroupUid = value;
                    OnPropertyChanged(() => DuressInputOutputGroupUid, true, true);
                }
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets the alert event duress. </summary>
        ///
        /// <value> The alert event duress. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public AccessPortalAlertEvent AlertEventDuress
        {
            get
            {
                return AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.DuressAuxiliaryFunction);
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the reader heartbeat input output group UID. </summary>
        ///
        /// <value> The reader heartbeat input output group UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public Guid ReaderHeartbeatInputOutputGroupUid
        {
            get
            {
                var o = AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.ReaderHeartbeat);
                if (o == null)
                    return Guid.Empty;
                return o.InputOutputGroupUid;
            }
            set
            {
                var o = AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.ReaderHeartbeat);
                if (o != null)
                {
                    o.InputOutputGroupUid = value;
                    OnPropertyChanged(() => ReaderHeartbeatInputOutputGroupUid, true, true);
                }
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets the alert event reader heartbeat. </summary>
        ///
        /// <value> The alert event reader heartbeat. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public AccessPortalAlertEvent AlertEventReaderHeartbeat
        {
            get
            {
                return AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.ReaderHeartbeat);
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the access granted input output group UID. </summary>
        ///
        /// <value> The access granted input output group UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public Guid AccessGrantedInputOutputGroupUid
        {
            get
            {
                var o = AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.AccessGranted);
                if (o == null)
                    return Guid.Empty;
                return o.InputOutputGroupUid;
            }
            set
            {
                var o = AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.AccessGranted);
                if (o != null)
                {
                    o.InputOutputGroupUid = value;
                    OnPropertyChanged(() => AccessGrantedInputOutputGroupUid, true, true);
                }
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets the alert event access granted. </summary>
        ///
        /// <value> The alert event access granted. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public AccessPortalAlertEvent AlertEventAccessGranted
        {
            get
            {
                return AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.AccessGranted);
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the access granted disarm input output group 1 UID. </summary>
        ///
        /// <value> The access granted disarm input output group 1 UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public Guid AccessGrantedDisarmInputOutputGroup1Uid
        {
            get
            {
                var o = AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.AccessGrantedDisarmInputOutputGroup1);
                if (o == null)
                    return Guid.Empty;
                return o.InputOutputGroupUid;
            }
            set
            {
                var o = AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.AccessGrantedDisarmInputOutputGroup1);
                if (o != null)
                {
                    o.InputOutputGroupUid = value;
                    OnPropertyChanged(() => AccessGrantedDisarmInputOutputGroup1Uid, true, true);
                }
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets the alert event access granted disarm i/o group 1. </summary>
        ///
        /// <value> The alert event access granted disarm i/o group 1. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public AccessPortalAlertEvent AlertEventAccessGrantedDisarmIoGroup1
        {
            get
            {
                return AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.AccessGrantedDisarmInputOutputGroup1);
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the access granted disarm input output group 2 UID. </summary>
        ///
        /// <value> The access granted disarm input output group 2 UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public Guid AccessGrantedDisarmInputOutputGroup2Uid
        {
            get
            {
                var o = AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.AccessGrantedDisarmInputOutputGroup2);
                if (o == null)
                    return Guid.Empty;
                return o.InputOutputGroupUid;
            }
            set
            {
                var o = AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.AccessGrantedDisarmInputOutputGroup2);
                if (o != null)
                {
                    o.InputOutputGroupUid = value;
                    OnPropertyChanged(() => AccessGrantedDisarmInputOutputGroup2Uid, true, true);
                }
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets the alert event access granted disarm i/o group 2. </summary>
        ///
        /// <value> The alert event access granted disarm i/o group 2. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public AccessPortalAlertEvent AlertEventAccessGrantedDisarmIoGroup2
        {
            get
            {
                return AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.AccessGrantedDisarmInputOutputGroup2);
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the access granted disarm input output group 3 UID. </summary>
        ///
        /// <value> The access granted disarm input output group 3 UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public Guid AccessGrantedDisarmInputOutputGroup3Uid
        {
            get
            {
                var o = AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.AccessGrantedDisarmInputOutputGroup3);
                if (o == null)
                    return Guid.Empty;
                return o.InputOutputGroupUid;
            }
            set
            {
                var o = AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.AccessGrantedDisarmInputOutputGroup3);
                if (o != null)
                {
                    o.InputOutputGroupUid = value;
                    OnPropertyChanged(() => AccessGrantedDisarmInputOutputGroup3Uid, true, true);
                }
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets the alert event access granted disarm i/o group 3. </summary>
        ///
        /// <value> The alert event access granted disarm i/o group 3. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public AccessPortalAlertEvent AlertEventAccessGrantedDisarmIoGroup3
        {
            get
            {
                return AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.AccessGrantedDisarmInputOutputGroup3);
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the access granted disarm input output group 4 UID. </summary>
        ///
        /// <value> The access granted disarm input output group 4 UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public Guid AccessGrantedDisarmInputOutputGroup4Uid
        {
            get
            {
                var o = AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.AccessGrantedDisarmInputOutputGroup4);
                if (o == null)
                    return Guid.Empty;
                return o.InputOutputGroupUid;
            }
            set
            {
                var o = AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.AccessGrantedDisarmInputOutputGroup4);
                if (o != null)
                {
                    o.InputOutputGroupUid = value;
                    OnPropertyChanged(() => AccessGrantedDisarmInputOutputGroup4Uid, true, true);
                }
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets the alert event access granted disarm i/o group 4. </summary>
        ///
        /// <value> The alert event access granted disarm i/o group 4. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public AccessPortalAlertEvent AlertEventAccessGrantedDisarmIoGroup4
        {
            get
            {
                return AlertEvents.FirstOrDefault(a => a.AccessPortalAlertEventTypeUid == GalaxySMS.Common.Constants.AccessPortalAlertEventTypeIds.AccessGrantedDisarmInputOutputGroup4);
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets the auxiliary output relay 2. </summary>
        ///
        /// <value> The auxiliary output relay 2. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public AccessPortalAuxiliaryOutput AuxiliaryOutputRelay2
        {
            get
            {
                return AuxiliaryOutputs.FirstOrDefault(a => a.Tag == GalaxySMS.Common.Constants.AccessPortalAuxiliaryOutputTags.Relay2);
            }
        }
    }

}
