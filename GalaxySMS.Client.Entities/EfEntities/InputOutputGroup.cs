//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
	using System;
	using System.Collections.Generic;
	using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using FluentValidation;
	using GCS.Core.Common.Contracts;
	using System.Collections.ObjectModel;
	using System.Linq;
	using GCS.Core.Common.Extensions;

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>   An input output group. </summary>
	///
	/// <remarks>   Kevin, 12/26/2018. </remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	[DataContract]
	public partial class InputOutputGroup : DbObjectBase, IHasEntityMappingList
	{
	
		/// <summary>   The input output group UID. </summary>
		private System.Guid _inputOutputGroupUid;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the input output group UID. </summary>
		///
		/// <value> The input output group UID. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public System.Guid InputOutputGroupUid
		{ 
			get { return _inputOutputGroupUid; }
			set
			{
				if (_inputOutputGroupUid != value )
				{
					_inputOutputGroupUid = value;
					OnPropertyChanged(() => InputOutputGroupUid);
				}
			}
		}
		
		/// <summary>   The cluster UID. </summary>
		private System.Guid _clusterUid;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the cluster UID. </summary>
		///
		/// <value> The cluster UID. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public System.Guid ClusterUid
		{ 
			get { return _clusterUid; }
			set
			{
				if (_clusterUid != value )
				{
					_clusterUid = value;
					OnPropertyChanged(() => ClusterUid);
				}
			}
		}

		/// <summary>   The time schedule UID. </summary>
		private Guid _timeScheduleUid;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the time schedule UID. </summary>
		///
		/// <value> The time schedule UID. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public Guid TimeScheduleUid
		{
			get { return _timeScheduleUid; }
			set
			{
				if (_timeScheduleUid != value)
				{
					_timeScheduleUid = value;
					OnPropertyChanged(() => TimeScheduleUid);
				}
			}
		}

		/// <summary>   Identifier for the entity. </summary>
		private System.Guid _entityId;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the identifier of the entity. </summary>
		///
		/// <value> The identifier of the entity. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public System.Guid EntityId
		{
			get { return _entityId; }
			set
			{
				if (_entityId != value)
				{
					_entityId = value;
					OnPropertyChanged(() => EntityId);
				}
			}
		}

		/// <summary>   Zero-based index of the o group number. </summary>
		private int _iOGroupNumber;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the i/o group number. </summary>
		///
		/// <value> The i/o group number. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public int IOGroupNumber
		{ 
			get { return _iOGroupNumber; }
			set
			{
				if (_iOGroupNumber != value )
				{
					_iOGroupNumber = value;
					OnPropertyChanged(() => IOGroupNumber);
				}
			}
		}

		/// <summary>   True to local i/o group. </summary>
		private bool _localIOGroup;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets a value indicating whether the local i/o group. </summary>
		///
		/// <value> True if local i/o group, false if not. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public bool LocalIOGroup
		{
			get { return _localIOGroup; }
			set
			{
				if (_localIOGroup != value)
				{
					_localIOGroup = value;
					OnPropertyChanged(() => LocalIOGroup);
				}
			}
		}

		/// <summary>   The display resource key. </summary>
		private Nullable<System.Guid> _displayResourceKey;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the display resource key. </summary>
		///
		/// <value> The display resource key. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public Nullable<System.Guid> DisplayResourceKey
		{
			get { return _displayResourceKey; }
			set
			{
				if (_displayResourceKey != value)
				{
					_displayResourceKey = value;
					OnPropertyChanged(() => DisplayResourceKey);
				}
			}
		}

		/// <summary>   The description resource key. </summary>
		private Nullable<System.Guid> _descriptionResourceKey;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the description resource key. </summary>
		///
		/// <value> The description resource key. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public Nullable<System.Guid> DescriptionResourceKey
		{
			get { return _descriptionResourceKey; }
			set
			{
				if (_descriptionResourceKey != value)
				{
					_descriptionResourceKey = value;
					OnPropertyChanged(() => DescriptionResourceKey);
				}
			}
		}

		/// <summary>   The description. </summary>
		private string _description;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the description. </summary>
		///
		/// <value> The description. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public string Description
		{
			get { return _description; }
			set
			{
				if (_description != value)
				{
					_description = value;
					OnPropertyChanged(() => Description);
				}
			}
		}

		/// <summary>   The display. </summary>
		private string _display;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the display. </summary>
		///
		/// <value> The display. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public string Display
		{
			get { return _display; }
			set
			{
				if (_display != value)
				{
					_display = value;
					OnPropertyChanged(() => Display);
				}
			}
		}

		/// <summary>   Name of the insert. </summary>
		private string _insertName;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the name of the insert. </summary>
		///
		/// <value> The name of the insert. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public string InsertName
		{ 
			get { return _insertName; }
			set
			{
				if (_insertName != value )
				{
					_insertName = value;
					OnPropertyChanged(() => InsertName);
				}
			}
		}
		
		/// <summary>   The insert date. </summary>
		private System.DateTimeOffset _insertDate;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the insert date. </summary>
		///
		/// <value> The insert date. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public System.DateTimeOffset InsertDate
		{ 
			get { return _insertDate; }
			set
			{
				if (_insertDate != value )
				{
					_insertDate = value;
					OnPropertyChanged(() => InsertDate);
				}
			}
		}
		
		/// <summary>   Name of the update. </summary>
		private string _updateName;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the name of the update. </summary>
		///
		/// <value> The name of the update. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public string UpdateName
		{ 
			get { return _updateName; }
			set
			{
				if (_updateName != value )
				{
					_updateName = value;
					OnPropertyChanged(() => UpdateName);
				}
			}
		}
		
		/// <summary>   The update. </summary>
		private Nullable<System.DateTimeOffset> _updateDate;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the update. </summary>
		///
		/// <value> The update date. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public Nullable<System.DateTimeOffset> UpdateDate
		{ 
			get { return _updateDate; }
			set
			{
				if (_updateDate != value )
				{
					_updateDate = value;
					OnPropertyChanged(() => UpdateDate);
				}
			}
		}
		
		/// <summary>   The concurrency value. </summary>
		private Nullable<short> _concurrencyValue;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the concurrency value. </summary>
		///
		/// <value> The concurrency value. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public Nullable<short> ConcurrencyValue
		{ 
			get { return _concurrencyValue; }
			set
			{
				if (_concurrencyValue != value )
				{
					_concurrencyValue = value;
					OnPropertyChanged(() => ConcurrencyValue);
				}
			}
		}
	
		
	 //   /// <summary>   The cluster. </summary>
		//private Cluster _cluster;

	 //   ////////////////////////////////////////////////////////////////////////////////////////////////////
	 //   /// <summary>   Gets or sets the cluster. </summary>
	 //   ///
	 //   /// <value> The cluster. </value>
	 //   ////////////////////////////////////////////////////////////////////////////////////////////////////

		//[DataMember]
		//public virtual Cluster Cluster
		//{ 
		//	get { return _cluster; }
		//	set
		//	{
		//		if (_cluster != value )
		//		{
		//			_cluster = value;
		//			OnPropertyChanged(() => Cluster);
		//		}
		//	}
		//}
		
		/// <summary>   The input output group assignments. </summary>
		private ICollection<InputOutputGroupAssignment> _inputOutputGroupAssignments;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the input output group assignments. </summary>
		///
		/// <value> The input output group assignments. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public virtual ICollection<InputOutputGroupAssignment> InputOutputGroupAssignments
		{ 
			get { return _inputOutputGroupAssignments; }
			set
			{
				if (_inputOutputGroupAssignments != value )
				{
					_inputOutputGroupAssignments = value;
					OnPropertyChanged(() => InputOutputGroupAssignments);
				}
			}
		}

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the available input output group assignments. </summary>
		///
		/// <value> The available input output group assignments. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		public virtual ICollection<InputOutputGroupAssignment> AvailableInputOutputGroupAssignments
		{
			get { return _inputOutputGroupAssignments.Where(a=>a.IsAvailable == true).ToCollection(); }
			set
			{
				OnPropertyChanged(() => AvailableInputOutputGroupAssignments);
			}
		}

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Notifies the available input output group assignments. </summary>
		///
		/// <remarks>   Kevin, 12/26/2018. </remarks>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		public void NotifyAvailableInputOutputGroupAssignments()
		{
			OnPropertyChanged(() => AvailableInputOutputGroupAssignments);
		}
		#region Implementation of IHasEntityMappingList

		/// <summary>   List of identifiers for the entities. </summary>
		private ICollection<Guid> _entityIds;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets a list of identifiers of the entities. </summary>
		///
		/// <value> A list of identifiers of the entities. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public virtual ICollection<Guid> EntityIds
		{
			get { return _entityIds; }
			set
			{
				if (_entityIds != value)
				{
					_entityIds = value;
					OnPropertyChanged(() => EntityIds);
				}
			}
		}


		/// <summary>   List of identifiers for the roles that can access this device. </summary>
		private ICollection<Guid> _roleIds;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets a list of identifiers of the roles that have access to this item. </summary>
		///
		/// <value> A list of identifiers of the roles. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public virtual ICollection<Guid> RoleIds
		{
			get { return _roleIds; }
			set
			{
				if (_roleIds != value)
				{
					_roleIds = value;
					OnPropertyChanged(() => RoleIds);
				}
			}
		}


		/// <summary>   The mapped entities permission levels. </summary>
		private ICollection<EntityIdEntityMapPermissionLevel> _MappedEntitiesPermissionLevels;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the mapped entities permission levels. </summary>
		///
		/// <value> The mapped entities permission levels. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public virtual ICollection<EntityIdEntityMapPermissionLevel> MappedEntitiesPermissionLevels
		{
			get { return _MappedEntitiesPermissionLevels; }
			set
			{
				if (_MappedEntitiesPermissionLevels != value)
				{
					_MappedEntitiesPermissionLevels = value;
					OnPropertyChanged(() => MappedEntitiesPermissionLevels);
				}
			}
		}
		#endregion

	}

}
