//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace GalaxySMS.Client.Entities
{
	using System;
	using System.Collections.Generic;
	using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using FluentValidation;
	using GCS.Core.Common.Contracts;
	using System.Collections.ObjectModel;
	using Common.Constants;
	using GCS.Core.Common.UI.Collections;

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>   The access group. </summary>
	///
	/// <remarks>   Kevin, 12/26/2018. </remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	[DataContract]
	public partial class AccessGroup : DbObjectBase, IHasEntityMappingList, ITableEntityBase
	{
		/// <summary>   The access group UID. </summary>
		private System.Guid _accessGroupUid;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the access group UID. </summary>
		///
		/// <value> The access group UID. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public System.Guid AccessGroupUid
		{ 
			get { return _accessGroupUid; }
			set
			{
				if (_accessGroupUid != value )
				{
					_accessGroupUid = value;
					OnPropertyChanged(() => AccessGroupUid);
				}
			}
		}
		
		/// <summary>   The cluster UID. </summary>
		private System.Guid _clusterUid;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the cluster UID. </summary>
		///
		/// <value> The cluster UID. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public System.Guid ClusterUid
		{ 
			get { return _clusterUid; }
			set
			{
				if (_clusterUid != value )
				{
					_clusterUid = value;
					OnPropertyChanged(() => ClusterUid);
				}
			}
		}


		/// <summary>   Identifier for the entity. </summary>
		private System.Guid _entityId;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the identifier of the entity. </summary>
		///
		/// <value> The identifier of the entity. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public System.Guid EntityId
		{
			get { return _entityId; }
			set
			{
				if (_entityId != value)
				{
					_entityId = value;
					OnPropertyChanged(() => EntityId);
				}
			}
		}

		/// <summary>   The access group number. </summary>
		private int _accessGroupNumber;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the access group number. </summary>
		///
		/// <value> The access group number. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public int AccessGroupNumber
		{ 
			get { return _accessGroupNumber; }
			set
			{
				if (_accessGroupNumber != value )
				{
					_accessGroupNumber = value;
					OnPropertyChanged(() => AccessGroupNumber);
					OnPropertyChanged(() => IsExtended);
				}
			}
		}

		/// <summary>   The display. </summary>
		private string _display;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the display. </summary>
		///
		/// <value> The display. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public string Display
		{
			get { return _display; }
			set
			{
				if (_display != value)
				{
					_display = value;
					OnPropertyChanged(() => Display);
				}
			}
		}

		/// <summary>   The description. </summary>
		private string _description;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the description. </summary>
		///
		/// <value> The description. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public string Description
		{ 
			get { return _description; }
			set
			{
				if (_description != value )
				{
					_description = value;
					OnPropertyChanged(() => Description);
				}
			}
		}
		
		/// <summary>   The service comment. </summary>
		private string _serviceComment;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the service comment. </summary>
		///
		/// <value> The service comment. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public string ServiceComment
		{ 
			get { return _serviceComment; }
			set
			{
				if (_serviceComment != value )
				{
					_serviceComment = value;
					OnPropertyChanged(() => ServiceComment);
				}
			}
		}
		
		/// <summary>   The comment. </summary>
		private string _comment;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the comment. </summary>
		///
		/// <value> The comment. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public string Comment
		{ 
			get { return _comment; }
			set
			{
				if (_comment != value )
				{
					_comment = value;
					OnPropertyChanged(() => Comment);
				}
			}
		}

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets a value indicating whether this AccessGroup is extended. </summary>
		///
		/// <value> True if this AccessGroup is extended, false if not. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		public bool IsExtended
		{ 
			get { return AccessGroupNumber >= GalaxySMS.Common.Constants.AccessGroupLimits.MinimumExtendedGroupNumber; }
		}
		
		/// <summary>   True if this AccessGroup is enabled. </summary>
		private bool _isEnabled;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets a value indicating whether this AccessGroup is enabled. </summary>
		///
		/// <value> True if this AccessGroup is enabled, false if not. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public bool IsEnabled
		{ 
			get { return _isEnabled; }
			set
			{
				if (_isEnabled != value )
				{
					_isEnabled = value;
					OnPropertyChanged(() => IsEnabled);
				}
			}
		}

		/// <summary>   The activation date. </summary>
		private Nullable<System.DateTime> _activationDate;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the activation date. </summary>
		///
		/// <value> The activation date. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public Nullable<System.DateTime> ActivationDate
		{
			get { return _activationDate; }
			set
			{
				if (_activationDate != value)
				{
					_activationDate = value;
					OnPropertyChanged(() => ActivationDate);
				}
			}
		}

		/// <summary>   The expiration date. </summary>
		private Nullable<System.DateTime> _expirationDate;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the expiration date. </summary>
		///
		/// <value> The expiration date. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public Nullable<System.DateTime> ExpirationDate
		{
			get { return _expirationDate; }
			set
			{
				if (_expirationDate != value)
				{
					_expirationDate = value;
					OnPropertyChanged(() => ExpirationDate);
				}
			}
		}


		/// <summary>   Name of the insert. </summary>
		private string _insertName;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the name of the insert. </summary>
		///
		/// <value> The name of the insert. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public string InsertName
		{ 
			get { return _insertName; }
			set
			{
				if (_insertName != value )
				{
					_insertName = value;
					OnPropertyChanged(() => InsertName);
				}
			}
		}
		
		/// <summary>   The insert date. </summary>
		private System.DateTimeOffset _insertDate;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the insert date. </summary>
		///
		/// <value> The insert date. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public System.DateTimeOffset InsertDate
		{ 
			get { return _insertDate; }
			set
			{
				if (_insertDate != value )
				{
					_insertDate = value;
					OnPropertyChanged(() => InsertDate);
				}
			}
		}
		
		/// <summary>   Name of the update. </summary>
		private string _updateName;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the name of the update. </summary>
		///
		/// <value> The name of the update. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public string UpdateName
		{ 
			get { return _updateName; }
			set
			{
				if (_updateName != value )
				{
					_updateName = value;
					OnPropertyChanged(() => UpdateName);
				}
			}
		}
		
		/// <summary>   The update. </summary>
		private Nullable<System.DateTimeOffset> _updateDate;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the update. </summary>
		///
		/// <value> The update date. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public Nullable<System.DateTimeOffset> UpdateDate
		{ 
			get { return _updateDate; }
			set
			{
				if (_updateDate != value )
				{
					_updateDate = value;
					OnPropertyChanged(() => UpdateDate);
				}
			}
		}
		
		/// <summary>   The concurrency value. </summary>
		private Nullable<short> _concurrencyValue;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the concurrency value. </summary>
		///
		/// <value> The concurrency value. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public Nullable<short> ConcurrencyValue
		{ 
			get { return _concurrencyValue; }
			set
			{
				if (_concurrencyValue != value )
				{
					_concurrencyValue = value;
					OnPropertyChanged(() => ConcurrencyValue);
				}
			}
		}

		/// <summary>   The display resource key. </summary>
		private Nullable<System.Guid> _displayResourceKey;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the display resource key. </summary>
		///
		/// <value> The display resource key. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public Nullable<System.Guid> DisplayResourceKey
		{
			get { return _displayResourceKey; }
			set
			{
				if (_displayResourceKey != value)
				{
					_displayResourceKey = value;
					OnPropertyChanged(() => DisplayResourceKey);
				}
			}
		}

		/// <summary>   The description resource key. </summary>
		private Nullable<System.Guid> _descriptionResourceKey;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the description resource key. </summary>
		///
		/// <value> The description resource key. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public Nullable<System.Guid> DescriptionResourceKey
		{
			get { return _descriptionResourceKey; }
			set
			{
				if (_descriptionResourceKey != value)
				{
					_descriptionResourceKey = value;
					OnPropertyChanged(() => DescriptionResourceKey);
				}
			}
		}


		/// <summary>   The crisis mode access group UID. </summary>
		private Nullable<System.Guid> _crisisModeAccessGroupUid;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the crisis mode access group UID. </summary>
		///
		/// <value> The crisis mode access group UID. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public Nullable<System.Guid> CrisisModeAccessGroupUid
		{
			get { return _crisisModeAccessGroupUid; }
			set
			{
				if (_crisisModeAccessGroupUid != value)
				{
					_crisisModeAccessGroupUid = value;
					OnPropertyChanged(() => CrisisModeAccessGroupUid);
				}
			}
		}


        private Guid? _defaultTimeScheduleUid;

        [DataMember]
        public Guid? DefaultTimeScheduleUid
        {
            get { return _defaultTimeScheduleUid; }
            set
            {
                if (_defaultTimeScheduleUid != value)
                {
                    _defaultTimeScheduleUid = value;
                    OnPropertyChanged(() => DefaultTimeScheduleUid);
                }
            }
        }

        //   /// <summary>   The cluster. </summary>
        //   private Cluster _cluster;

        //   ////////////////////////////////////////////////////////////////////////////////////////////////////
        //   /// <summary>   Gets or sets the cluster. </summary>
        //   ///
        //   /// <value> The cluster. </value>
        //   ////////////////////////////////////////////////////////////////////////////////////////////////////

        //[DataMember]
        //public virtual Cluster Cluster
        //{ 
        //	get { return _cluster; }
        //	set
        //	{
        //		if (_cluster != value )
        //		{
        //			_cluster = value;
        //			OnPropertyChanged(() => Cluster);
        //		}
        //	}
        //}

        #region Implementation of IHasEntityMappingList

        /// <summary>   List of identifiers for the entities. </summary>
        private ICollection<Guid> _entityIds;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets a list of identifiers of the entities. </summary>
		///
		/// <value> A list of identifiers of the entities. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public virtual ICollection<Guid> EntityIds
		{
			get { return _entityIds; }
			set
			{
				if (_entityIds != value)
				{
					_entityIds = value;
					OnPropertyChanged(() => EntityIds);
				}
			}
		}

		/// <summary>   The mapped entities permission levels. </summary>
		private ICollection<EntityIdEntityMapPermissionLevel> _MappedEntitiesPermissionLevels;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the mapped entities permission levels. </summary>
		///
		/// <value> The mapped entities permission levels. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public virtual ICollection<EntityIdEntityMapPermissionLevel> MappedEntitiesPermissionLevels
		{
			get { return _MappedEntitiesPermissionLevels; }
			set
			{
				if (_MappedEntitiesPermissionLevels != value)
				{
					_MappedEntitiesPermissionLevels = value;
					OnPropertyChanged(() => MappedEntitiesPermissionLevels);
				}
			}
		}

		//private ICollection<AccessGroupAccessPortal> _accessGroupAccessPortals;

		//[DataMember]
		//public ICollection<AccessGroupAccessPortal> AccessGroupAccessPortals
		//{
		//    get { return _accessGroupAccessPortals; }
		//    set
		//    {
		//        if (_accessGroupAccessPortals != value)
		//        {
		//            _accessGroupAccessPortals = value;
		//            OnPropertyChanged(() => AccessGroupAccessPortals, false);
		//        }
		//    }
		//}

		/// <summary>   The access group access portals. </summary>
		private ItemObservableCollection<AccessGroupAccessPortal> _AccessPortals;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the access group access portals. </summary>
		///
		/// <value> The access group access portals. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public ItemObservableCollection<AccessGroupAccessPortal> AccessPortals
		{
			get { return _AccessPortals; }
			set
			{
				if (_AccessPortals != value)
				{
					_AccessPortals = value;
					OnPropertyChanged(() => AccessPortals, false);
				}
			}
		}
		#endregion
	}

}
