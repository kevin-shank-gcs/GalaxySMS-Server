//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
	using System;
	using System.Collections.Generic;
	using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
using System.Collections.ObjectModel;

////////////////////////////////////////////////////////////////////////////////////////////////////
/// <summary>   A person photo. </summary>
///
/// <remarks>   Kevin, 12/26/2018. </remarks>
////////////////////////////////////////////////////////////////////////////////////////////////////

	[DataContract]
	public partial class PersonPhoto : DbObjectBase, ITableEntityBase
	{
		/// <summary>   The person photo UID. </summary>
		private System.Guid _personPhotoUid;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the person photo UID. </summary>
		///
		/// <value> The person photo UID. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public System.Guid PersonPhotoUid
		{ 
			get { return _personPhotoUid; }
			set
			{
				if (_personPhotoUid != value )
				{
					_personPhotoUid = value;
					OnPropertyChanged(() => PersonPhotoUid);
				}
			}
		}
		
		/// <summary>   The person UID. </summary>
		private System.Guid _personUid;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the person UID. </summary>
		///
		/// <value> The person UID. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public System.Guid PersonUid
		{ 
			get { return _personUid; }
			set
			{
				if (_personUid != value )
				{
					_personUid = value;
					OnPropertyChanged(() => PersonUid);
				}
			}
		}
		
		/// <summary>   The tag. </summary>
		private string _tag;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the tag. </summary>
		///
		/// <value> The tag. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public string Tag
		{ 
			get { return _tag; }
			set
			{
				if (_tag != value )
				{
					_tag = value;
					OnPropertyChanged(() => Tag);
				}
			}
		}

		/// <summary>   The original filename. </summary>
		private string _originalFilename;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the OriginalFilename. </summary>
		///
		/// <value> The tag. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public string OriginalFilename
		{
			get { return _originalFilename; }
			set
			{
				if (_originalFilename != value)
				{
					_originalFilename = value;
					OnPropertyChanged(() => OriginalFilename);
				}
			}
		}


		/// <summary>   The unique filename. </summary>
		private string _uniqueFilename;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the UniqueFilename. </summary>
		///
		/// <value> The tag. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public string UniqueFilename
		{
			get { return _uniqueFilename; }
			set
			{
				if (_uniqueFilename != value)
				{
					_uniqueFilename = value;
					OnPropertyChanged(() => UniqueFilename);
				}
			}
		}

		/// <summary>   The content type (file format). </summary>
		private string _contentType;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the ContentType. </summary>
		///
		/// <value> The tag. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public string ContentType
		{
			get { return _contentType; }
			set
			{
				if (_contentType != value)
				{
					_contentType = value;
					OnPropertyChanged(() => ContentType);
				}
			}
		}


		private bool _isDefault;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets a value indicating whether this object is default. </summary>
		///
		/// <value> True if this object is default, false if not. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////
		[DataMember]

		public bool IsDefault
		{
			get { return _isDefault; }
			set
			{
				if (_isDefault != value)
				{
					_isDefault = value;
					OnPropertyChanged(() => IsDefault, true);
				}
			}
		}

		private string _publicUrl;
		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets URL of the public. </summary>
		///
		/// <value> The public URL. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]


		public string PublicUrl
		{
			get { return _publicUrl; }
			set
			{
				if (_publicUrl != value)
				{
					_publicUrl = value;
					OnPropertyChanged(() => PublicUrl, true);
				}
			}
		}


		/// <summary>   The photo image. </summary>
		private byte[] _photoImage;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the photo image. </summary>
		///
		/// <value> The photo image. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public byte[] PhotoImage
		{ 
			get { return _photoImage; }
			set
			{
				if (_photoImage != value )
				{
					_photoImage = value;
					OnPropertyChanged(() => PhotoImage);
				}
			}
		}


        private ObservableCollection<PersonPhotoScaled> _scaledPhotoScaled;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the scaled photos. </summary>
        ///
        /// <value> The scaled photos. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public ObservableCollection<PersonPhotoScaled> ScaledPhotos
        {
            get { return _scaledPhotoScaled; }
            set
            {
                if (_scaledPhotoScaled != value)
                {
                    _scaledPhotoScaled = value;
                    OnPropertyChanged(() => ScaledPhotos, true);
                }
            }
        }

        /// <summary>   Name of the insert. </summary>
        private string _insertName;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the name of the insert. </summary>
		///
		/// <value> The name of the insert. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public string InsertName
		{ 
			get { return _insertName; }
			set
			{
				if (_insertName != value )
				{
					_insertName = value;
					OnPropertyChanged(() => InsertName);
				}
			}
		}
		
		/// <summary>   The insert date. </summary>
		private System.DateTimeOffset _insertDate;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the insert date. </summary>
		///
		/// <value> The insert date. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public System.DateTimeOffset InsertDate
		{ 
			get { return _insertDate; }
			set
			{
				if (_insertDate != value )
				{
					_insertDate = value;
					OnPropertyChanged(() => InsertDate);
				}
			}
		}
		
		/// <summary>   Name of the update. </summary>
		private string _updateName;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the name of the update. </summary>
		///
		/// <value> The name of the update. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public string UpdateName
		{ 
			get { return _updateName; }
			set
			{
				if (_updateName != value )
				{
					_updateName = value;
					OnPropertyChanged(() => UpdateName);
				}
			}
		}
		
		/// <summary>   The update. </summary>
		private Nullable<System.DateTimeOffset> _updateDate;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the update. </summary>
		///
		/// <value> The update date. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public Nullable<System.DateTimeOffset> UpdateDate
		{ 
			get { return _updateDate; }
			set
			{
				if (_updateDate != value )
				{
					_updateDate = value;
					OnPropertyChanged(() => UpdateDate);
				}
			}
		}
		
		/// <summary>   The concurrency value. </summary>
		private Nullable<short> _concurrencyValue;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the concurrency value. </summary>
		///
		/// <value> The concurrency value. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public Nullable<short> ConcurrencyValue
		{ 
			get { return _concurrencyValue; }
			set
			{
				if (_concurrencyValue != value )
				{
					_concurrencyValue = value;
					OnPropertyChanged(() => ConcurrencyValue);
				}
			}
		}
	
		
	 //   /// <summary>   The person. </summary>
		//private Person _person;

	 //   ////////////////////////////////////////////////////////////////////////////////////////////////////
	 //   /// <summary>   Gets or sets the person. </summary>
	 //   ///
	 //   /// <value> The person. </value>
	 //   ////////////////////////////////////////////////////////////////////////////////////////////////////

		//[DataMember]
		//public virtual Person Person
		//{ 
		//	get { return _person; }
		//	set
		//	{
		//		if (_person != value )
		//		{
		//			_person = value;
		//			OnPropertyChanged(() => Person);
		//		}
		//	}
		//}
	}
	
}
