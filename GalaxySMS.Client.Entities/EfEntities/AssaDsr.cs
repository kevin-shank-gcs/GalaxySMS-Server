//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
    using GCS.Core.Common.Core;
    using FluentValidation;
    using System.ComponentModel;
    using System.Collections.ObjectModel;
    using GCS.Core.Common.Contracts;
    using System.Collections.ObjectModel;

    [DataContract]
    //[Browsable(true)]

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   An assa dsr. </summary>
    ///
    /// <remarks>   Kevin, 12/26/2018. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   An assa dsr. </summary>
    ///
    /// <remarks>   Kevin, 12/26/2018. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   An assa dsr. </summary>
    ///
    /// <remarks>   Kevin, 12/26/2018. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   An assa dsr. </summary>
    ///
    /// <remarks>   Kevin, 12/26/2018. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    public partial class AssaDsr : DbObjectBase, IHasEntityMappingList
    {
        /// <summary>   The assa dsr UID. </summary>
        private System.Guid _assaDsrUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the assa dsr UID. </summary>
        ///
        /// <value> The assa dsr UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.Guid AssaDsrUid
    	{ 
    		get { return _assaDsrUid; }
    		set
    		{
    			if (_assaDsrUid != value )
    			{
    				_assaDsrUid = value;
    				OnPropertyChanged(() => AssaDsrUid);
    			}
    		}
    	}
    	
        /// <summary>   The name. </summary>
    	private string _name;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name. </summary>
        ///
        /// <value> The name. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string Name
    	{ 
    		get { return _name; }
    		set
    		{
    			if (_name != value )
    			{
    				_name = value;
    				OnPropertyChanged(() => Name);
    			}
    		}
    	}
    	    	
        /// <summary>   URL of the callback. </summary>
    	private string _callbackUrl;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets URL of the callback. </summary>
        ///
        /// <value> The callback URL. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string CallbackUrl
    	{ 
    		get { return _callbackUrl; }
    		set
    		{
    			if (_callbackUrl != value )
    			{
    				_callbackUrl = value;
    				OnPropertyChanged(() => CallbackUrl);
    			}
    		}
    	}
    	
        /// <summary>   True if this AssaDsr is active. </summary>
    	private bool _isActive;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets a value indicating whether this AssaDsr is active. </summary>
        ///
        /// <value> True if this AssaDsr is active, false if not. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public bool IsActive
    	{ 
    		get { return _isActive; }
    		set
    		{
    			if (_isActive != value )
    			{
    				_isActive = value;
    				OnPropertyChanged(() => IsActive);
    			}
    		}
    	}
    	
        /// <summary>   Name of the insert. </summary>
    	private string _insertName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the insert. </summary>
        ///
        /// <value> The name of the insert. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string InsertName
    	{ 
    		get { return _insertName; }
    		set
    		{
    			if (_insertName != value )
    			{
    				_insertName = value;
    				OnPropertyChanged(() => InsertName);
    			}
    		}
    	}
    	
        /// <summary>   The insert date. </summary>
    	private System.DateTimeOffset _insertDate;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the insert date. </summary>
        ///
        /// <value> The insert date. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.DateTimeOffset InsertDate
    	{ 
    		get { return _insertDate; }
    		set
    		{
    			if (_insertDate != value )
    			{
    				_insertDate = value;
    				OnPropertyChanged(() => InsertDate);
    			}
    		}
    	}
    	
        /// <summary>   Name of the update. </summary>
    	private string _updateName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the update. </summary>
        ///
        /// <value> The name of the update. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string UpdateName
    	{ 
    		get { return _updateName; }
    		set
    		{
    			if (_updateName != value )
    			{
    				_updateName = value;
    				OnPropertyChanged(() => UpdateName);
    			}
    		}
    	}
    	
        /// <summary>   The update. </summary>
    	private Nullable<System.DateTimeOffset> _updateDate;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the update. </summary>
        ///
        /// <value> The update date. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public Nullable<System.DateTimeOffset> UpdateDate
    	{ 
    		get { return _updateDate; }
    		set
    		{
    			if (_updateDate != value )
    			{
    				_updateDate = value;
    				OnPropertyChanged(() => UpdateDate);
    			}
    		}
    	}
    	
        /// <summary>   The concurrency value. </summary>
    	private Nullable<short> _concurrencyValue;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the concurrency value. </summary>
        ///
        /// <value> The concurrency value. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public Nullable<short> ConcurrencyValue
    	{ 
    		get { return _concurrencyValue; }
    		set
    		{
    			if (_concurrencyValue != value )
    			{
    				_concurrencyValue = value;
    				OnPropertyChanged(() => ConcurrencyValue);
    			}
    		}
    	}
    	
        /// <summary>   The server IP address. </summary>
    	private string _serverIpAddress;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the server IP address. </summary>
        ///
        /// <value> The server IP address. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string ServerIpAddress
    	{ 
    		get { return _serverIpAddress; }
    		set
    		{
    			if (_serverIpAddress != value )
    			{
    				_serverIpAddress = value;
    				OnPropertyChanged(() => ServerIpAddress);
    			    //CallbackUrl = string.Format("http://{0}:9090/callback", ServerIpAddress);
    			}
    		}
    	}
    	
        /// <summary>   The server port. </summary>
    	private int _serverPort;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the server port. </summary>
        ///
        /// <value> The server port. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public int ServerPort
    	{ 
    		get { return _serverPort; }
    		set
    		{
    			if (_serverPort != value )
    			{
    				_serverPort = value;
    				OnPropertyChanged(() => ServerPort);
    			}
    		}
    	}
    	
        /// <summary>   True to use HTTPS. </summary>
    	private bool _useHttps;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets a value indicating whether this AssaDsr use HTTPS. </summary>
        ///
        /// <value> True if use https, false if not. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public bool UseHttps
    	{ 
    		get { return _useHttps; }
    		set
    		{
    			if (_useHttps != value )
    			{
    				_useHttps = value;
    				OnPropertyChanged(() => UseHttps);
    			}
    		}
    	}

        /// <summary>   Identifier for the entity. </summary>
        private System.Guid _entityId;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the identifier of the entity. </summary>
        ///
        /// <value> The identifier of the entity. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public System.Guid EntityId
        {
            get { return _entityId; }
            set
            {
                if (_entityId != value)
                {
                    _entityId = value;
                    OnPropertyChanged(() => EntityId);
                }
            }
        }

        /// <summary>   The assa dsr time schedule maps. </summary>
        private ICollection<AssaDsrTimeScheduleMap> _assaDsrTimeScheduleMaps;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the assa dsr time schedule maps. </summary>
        ///
        /// <value> The assa dsr time schedule maps. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public virtual ICollection<AssaDsrTimeScheduleMap> AssaDsrTimeScheduleMaps
    	{ 
    		get { return _assaDsrTimeScheduleMaps; }
    		set
    		{
    			if (_assaDsrTimeScheduleMaps != value )
    			{
    				_assaDsrTimeScheduleMaps = value;
    				OnPropertyChanged(() => AssaDsrTimeScheduleMaps);
    			}
    		}
    	}

        /// <summary>   The assa access points. </summary>
        private ObservableCollection<AssaAccessPoint> _assaAccessPoints;
        //private ICollection<AssaAccessPoint> _assaAccessPoints;

        [DataMember]
        //public virtual ICollection<AssaAccessPoint> AssaAccessPoints

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the assa access points. </summary>
        ///
        /// <value> The assa access points. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the assa access points. </summary>
        ///
        /// <value> The assa access points. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the assa access points. </summary>
        ///
        /// <value> The assa access points. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the assa access points. </summary>
        ///
        /// <value> The assa access points. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public virtual ObservableCollection<AssaAccessPoint> AssaAccessPoints
        {
            get { return _assaAccessPoints; }
    		set
    		{
    			if (_assaAccessPoints != value )
    			{
    				_assaAccessPoints = value;
    				OnPropertyChanged(() => AssaAccessPoints);
    			}
    		}
    	}


        /// <summary>   List of identifiers for the entities. </summary>
        private ICollection<Guid> _entityIds;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets a list of identifiers of the entities. </summary>
        ///
        /// <value> A list of identifiers of the entities. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public virtual ICollection<Guid> EntityIds
        {
            get { return _entityIds; }
            set
            {
                if (_entityIds != value)
                {
                    _entityIds = value;
                    OnPropertyChanged(() => EntityIds);
                }
            }
        }

        /// <summary>   The mapped entities permission levels. </summary>
        private ICollection<EntityIdEntityMapPermissionLevel> _MappedEntitiesPermissionLevels;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the mapped entities permission levels. </summary>
        ///
        /// <value> The mapped entities permission levels. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public virtual ICollection<EntityIdEntityMapPermissionLevel> MappedEntitiesPermissionLevels
        {
            get { return _MappedEntitiesPermissionLevels; }
            set
            {
                if (_MappedEntitiesPermissionLevels != value)
                {
                    _MappedEntitiesPermissionLevels = value;
                    OnPropertyChanged(() => MappedEntitiesPermissionLevels);
                }
            }
        }
    }

}
