//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	
    using FluentValidation;
    
	[DataContract]
	public partial class MercScp : DbObjectBase, ITableEntityBase
    {
    	private System.Guid _mercScpUid;
    
    	[DataMember]
    	public System.Guid MercScpUid
    	{ 
    		get { return _mercScpUid; }
    		set
    		{
    			if (_mercScpUid != value )
    			{
    				_mercScpUid = value;
    				OnPropertyChanged(() => MercScpUid);
    			}
    		}
    	}
    	
    	private System.Guid _mercScpTypeUid;
    
    	[DataMember]
    	public System.Guid MercScpTypeUid
    	{ 
    		get { return _mercScpTypeUid; }
    		set
    		{
    			if (_mercScpTypeUid != value )
    			{
    				_mercScpTypeUid = value;
    				OnPropertyChanged(() => MercScpTypeUid);
    			}
    		}
    	}
    	
    	private System.Guid _mercScpGroupUid;
    
    	[DataMember]
    	public System.Guid MercScpGroupUid
    	{ 
    		get { return _mercScpGroupUid; }
    		set
    		{
    			if (_mercScpGroupUid != value )
    			{
    				_mercScpGroupUid = value;
    				OnPropertyChanged(() => MercScpGroupUid);
    			}
    		}
    	}
        
    	private string _spcName;
    
    	[DataMember]
    	public string SpcName
    	{ 
    		get { return _spcName; }
    		set
    		{
    			if (_spcName != value )
    			{
    				_spcName = value;
    				OnPropertyChanged(() => SpcName);
    			}
    		}
    	}
    	
    	private string _location;
    
    	[DataMember]
    	public string Location
    	{ 
    		get { return _location; }
    		set
    		{
    			if (_location != value )
    			{
    				_location = value;
    				OnPropertyChanged(() => Location);
    			}
    		}
    	}
    	
    	private string _description;
    
    	[DataMember]
    	public string Description
    	{ 
    		get { return _description; }
    		set
    		{
    			if (_description != value )
    			{
    				_description = value;
    				OnPropertyChanged(() => Description);
    			}
    		}
    	}
    	
    	private string _macAddress;
    
    	[DataMember]
    	public string MacAddress
    	{ 
    		get { return _macAddress; }
    		set
    		{
    			if (_macAddress != value )
    			{
    				_macAddress = value;
    				OnPropertyChanged(() => MacAddress);
    			}
    		}
    	}
    	
    	private string _serialNumber;
    
    	[DataMember]
    	public string SerialNumber
    	{ 
    		get { return _serialNumber; }
    		set
    		{
    			if (_serialNumber != value )
    			{
    				_serialNumber = value;
    				OnPropertyChanged(() => SerialNumber);
    			}
    		}
    	}
    	
    	private int _connectionType;
    
    	[DataMember]
    	public int ConnectionType
    	{ 
    		get { return _connectionType; }
    		set
    		{
    			if (_connectionType != value )
    			{
    				_connectionType = value;
    				OnPropertyChanged(() => ConnectionType);
    			}
    		}
    	}
    	
    	private string _ipAddress;
    
    	[DataMember]
    	public string IpAddress
    	{ 
    		get { return _ipAddress; }
    		set
    		{
    			if (_ipAddress != value )
    			{
    				_ipAddress = value;
    				OnPropertyChanged(() => IpAddress);
    			}
    		}
    	}
    	
    	private Nullable<int> _ipPort;
    
    	[DataMember]
    	public Nullable<int> IpPort
    	{ 
    		get { return _ipPort; }
    		set
    		{
    			if (_ipPort != value )
    			{
    				_ipPort = value;
    				OnPropertyChanged(() => IpPort);
    			}
    		}
    	}
    	
    	private string _aesPassword;
    
    	[DataMember]
    	public string AesPassword
    	{ 
    		get { return _aesPassword; }
    		set
    		{
    			if (_aesPassword != value )
    			{
    				_aesPassword = value;
    				OnPropertyChanged(() => AesPassword);
    			}
    		}
    	}
    	
    	private int _scpReplyTimeout;
    
    	[DataMember]
    	public int ScpReplyTimeout
    	{ 
    		get { return _scpReplyTimeout; }
    		set
    		{
    			if (_scpReplyTimeout != value )
    			{
    				_scpReplyTimeout = value;
    				OnPropertyChanged(() => ScpReplyTimeout);
    			}
    		}
    	}
    	
    	private int _tcpConnectRetryInterval;
    
    	[DataMember]
    	public int TcpConnectRetryInterval
    	{ 
    		get { return _tcpConnectRetryInterval; }
    		set
    		{
    			if (_tcpConnectRetryInterval != value )
    			{
    				_tcpConnectRetryInterval = value;
    				OnPropertyChanged(() => TcpConnectRetryInterval);
    			}
    		}
    	}
    	
    	private int _retryCountBeforeOffline;
    
    	[DataMember]
    	public int RetryCountBeforeOffline
    	{ 
    		get { return _retryCountBeforeOffline; }
    		set
    		{
    			if (_retryCountBeforeOffline != value )
    			{
    				_retryCountBeforeOffline = value;
    				OnPropertyChanged(() => RetryCountBeforeOffline);
    			}
    		}
    	}
    	
    	private int _offlineTime;
    
    	[DataMember]
    	public int OfflineTime
    	{ 
    		get { return _offlineTime; }
    		set
    		{
    			if (_offlineTime != value )
    			{
    				_offlineTime = value;
    				OnPropertyChanged(() => OfflineTime);
    			}
    		}
    	}
    	
    	private int _pollDelay;
    
    	[DataMember]
    	public int PollDelay
    	{ 
    		get { return _pollDelay; }
    		set
    		{
    			if (_pollDelay != value )
    			{
    				_pollDelay = value;
    				OnPropertyChanged(() => PollDelay);
    			}
    		}
    	}
    	
    	private string _timeZoneId;
    
    	[DataMember]
    	public string TimeZoneId
    	{ 
    		get { return _timeZoneId; }
    		set
    		{
    			if (_timeZoneId != value )
    			{
    				_timeZoneId = value;
    				OnPropertyChanged(() => TimeZoneId);
    			}
    		}
    	}
    	
    	private bool _useDaylightSavingsTime;
    
    	[DataMember]
    	public bool UseDaylightSavingsTime
    	{ 
    		get { return _useDaylightSavingsTime; }
    		set
    		{
    			if (_useDaylightSavingsTime != value )
    			{
    				_useDaylightSavingsTime = value;
    				OnPropertyChanged(() => UseDaylightSavingsTime);
    			}
    		}
    	}
    	
    	private int _transactionCount;
    
    	[DataMember]
    	public int TransactionCount
    	{ 
    		get { return _transactionCount; }
    		set
    		{
    			if (_transactionCount != value )
    			{
    				_transactionCount = value;
    				OnPropertyChanged(() => TransactionCount);
    			}
    		}
    	}
    	
    	private int _transactionUnreportedLimit;
    
    	[DataMember]
    	public int TransactionUnreportedLimit
    	{ 
    		get { return _transactionUnreportedLimit; }
    		set
    		{
    			if (_transactionUnreportedLimit != value )
    			{
    				_transactionUnreportedLimit = value;
    				OnPropertyChanged(() => TransactionUnreportedLimit);
    			}
    		}
    	}
    	
    	private bool _dualPortEnabled;
    
    	[DataMember]
    	public bool DualPortEnabled
    	{ 
    		get { return _dualPortEnabled; }
    		set
    		{
    			if (_dualPortEnabled != value )
    			{
    				_dualPortEnabled = value;
    				OnPropertyChanged(() => DualPortEnabled);
    			}
    		}
    	}
    	
    	private int _connectionTypeAlt;
    
    	[DataMember]
    	public int ConnectionTypeAlt
    	{ 
    		get { return _connectionTypeAlt; }
    		set
    		{
    			if (_connectionTypeAlt != value )
    			{
    				_connectionTypeAlt = value;
    				OnPropertyChanged(() => ConnectionTypeAlt);
    			}
    		}
    	}
    	
    	private int _retryCountBeforeOfflineAlt;
    
    	[DataMember]
    	public int RetryCountBeforeOfflineAlt
    	{ 
    		get { return _retryCountBeforeOfflineAlt; }
    		set
    		{
    			if (_retryCountBeforeOfflineAlt != value )
    			{
    				_retryCountBeforeOfflineAlt = value;
    				OnPropertyChanged(() => RetryCountBeforeOfflineAlt);
    			}
    		}
    	}
    	
    	private int _pollDelayAlt;
    
    	[DataMember]
    	public int PollDelayAlt
    	{ 
    		get { return _pollDelayAlt; }
    		set
    		{
    			if (_pollDelayAlt != value )
    			{
    				_pollDelayAlt = value;
    				OnPropertyChanged(() => PollDelayAlt);
    			}
    		}
    	}
    	
    	private string _ipAddressAlt;
    
    	[DataMember]
    	public string IpAddressAlt
    	{ 
    		get { return _ipAddressAlt; }
    		set
    		{
    			if (_ipAddressAlt != value )
    			{
    				_ipAddressAlt = value;
    				OnPropertyChanged(() => IpAddressAlt);
    			}
    		}
    	}
    	
    	private int _ipPortAlt;
    
    	[DataMember]
    	public int IpPortAlt
    	{ 
    		get { return _ipPortAlt; }
    		set
    		{
    			if (_ipPortAlt != value )
    			{
    				_ipPortAlt = value;
    				OnPropertyChanged(() => IpPortAlt);
    			}
    		}
    	}
    	
    	private bool _allowConnection;
    
    	[DataMember]
    	public bool AllowConnection
    	{ 
    		get { return _allowConnection; }
    		set
    		{
    			if (_allowConnection != value )
    			{
    				_allowConnection = value;
    				OnPropertyChanged(() => AllowConnection);
    			}
    		}
    	}
    	
    	private string _insertName;
    
    	[DataMember]
    	public string InsertName
    	{ 
    		get { return _insertName; }
    		set
    		{
    			if (_insertName != value )
    			{
    				_insertName = value;
    				OnPropertyChanged(() => InsertName);
    			}
    		}
    	}
    	
    	private System.DateTimeOffset _insertDate;
    
    	[DataMember]
    	public System.DateTimeOffset InsertDate
    	{ 
    		get { return _insertDate; }
    		set
    		{
    			if (_insertDate != value )
    			{
    				_insertDate = value;
    				OnPropertyChanged(() => InsertDate);
    			}
    		}
    	}
    	
    	private string _updateName;
    
    	[DataMember]
    	public string UpdateName
    	{ 
    		get { return _updateName; }
    		set
    		{
    			if (_updateName != value )
    			{
    				_updateName = value;
    				OnPropertyChanged(() => UpdateName);
    			}
    		}
    	}
    	
    	private Nullable<System.DateTimeOffset> _updateDate;
    
    	[DataMember]
    	public Nullable<System.DateTimeOffset> UpdateDate
    	{ 
    		get { return _updateDate; }
    		set
    		{
    			if (_updateDate != value )
    			{
    				_updateDate = value;
    				OnPropertyChanged(() => UpdateDate);
    			}
    		}
    	}
    	
    	private Nullable<short> _concurrencyValue;
    
    	[DataMember]
    	public Nullable<short> ConcurrencyValue
    	{ 
    		get { return _concurrencyValue; }
    		set
    		{
    			if (_concurrencyValue != value )
    			{
    				_concurrencyValue = value;
    				OnPropertyChanged(() => ConcurrencyValue);
    			}
    		}
    	}   


        private bool? _online;

        [DataMember]
        public bool? Online
        {
            get { return _online; }
            set
            {
                if (_online != value)
                {
                    _online = value;
                    OnPropertyChanged(() => Online);
                }
            }
        }

        private DateTimeOffset? _lastConnected;

        [DataMember]
        public DateTimeOffset? LastConnected
        {
            get { return _lastConnected; }
            set
            {
                if (_lastConnected != value)
                {
                    _lastConnected = value;
                    OnPropertyChanged(() => LastConnected);
                }
            }
        }



     //   private MercScpGroup _mercScpGroup;
    
    	//[DataMember]
    	//public virtual MercScpGroup MercScpGroup
    	//{ 
    	//	get { return _mercScpGroup; }
    	//	set
    	//	{
    	//		if (_mercScpGroup != value )
    	//		{
    	//			_mercScpGroup = value;
    	//			OnPropertyChanged(() => MercScpGroup);
    	//		}
    	//	}
    	//}
    }
    
}
