//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using FluentValidation;
    using GCS.Core.Common.Contracts;

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   The access portal galaxy hardware address. </summary>
    ///
    /// <remarks>   Kevin, 12/26/2018. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

	[DataContract]
	public partial class AccessPortalGalaxyHardwareAddress : DbObjectBase, ITableEntityBase
    {
    
    /*	// Move to partial class
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using FluentValidation;
    using System.Collections.ObjectModel;
    using GCS.Core.Common.Extensions;
    
    namespace GalaxySMS.Client.Entities
    {
        public partial class AccessPortalGalaxyHardwareAddress
        {
        	public AccessPortalGalaxyHardwareAddress() : base()
        	{
        		Initialize();
        	}
        
        	public AccessPortalGalaxyHardwareAddress(AccessPortalGalaxyHardwareAddress e) : base(e)
        	{
        		Initialize(e);
        	}
        
        	public void Initialize()
        	{
        		base.Initialize();
        }
        
        	public void Initialize(AccessPortalGalaxyHardwareAddress e)
        	{
        		Initialize();
        		base.Initialize(e);
        
        		if( e == null )
        			return;
        		this.AccessPortalGalaxyHardwareAddressUid = e.AccessPortalGalaxyHardwareAddressUid;
        		this.AccessPortalUid = e.AccessPortalUid;
        		this.GalaxyInterfaceBoardSectionNodeUid = e.GalaxyInterfaceBoardSectionNodeUid;
        		this.InsertName = e.InsertName;
        		this.InsertDate = e.InsertDate;
        		this.UpdateName = e.UpdateName;
        		this.UpdateDate = e.UpdateDate;
        		this.ConcurrencyValue = e.ConcurrencyValue;
        		
        	}
        
        	public AccessPortalGalaxyHardwareAddress Clone(AccessPortalGalaxyHardwareAddress e)
        	{
        		return new AccessPortalGalaxyHardwareAddress(e);
        	}
        
        	public bool Equals(AccessPortalGalaxyHardwareAddress other)
        	{
        		return base.Equals(other);
        	}
        	
        	public bool IsPrimaryKeyEqual(AccessPortalGalaxyHardwareAddress other)
        	{
        		if( other == null ) 
        			return false;
        
        		if(other.AccessPortalGalaxyHardwareAddressUid != this.AccessPortalGalaxyHardwareAddressUid )
        			return false;
        		return true;
        	}
        
        	public override int GetHashCode()
        	{
        		return base.GetHashCode();
        	}
        
        	public override string ToString()
        	{
        		return base.ToString();
        	}
        }
    }
    */
    
    	
        /// <summary>   The access portal galaxy hardware address UID. </summary>
    	private System.Guid _accessPortalGalaxyHardwareAddressUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the access portal galaxy hardware address UID. </summary>
        ///
        /// <value> The access portal galaxy hardware address UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.Guid AccessPortalGalaxyHardwareAddressUid
    	{ 
    		get { return _accessPortalGalaxyHardwareAddressUid; }
    		set
    		{
    			if (_accessPortalGalaxyHardwareAddressUid != value )
    			{
    				_accessPortalGalaxyHardwareAddressUid = value;
    				OnPropertyChanged(() => AccessPortalGalaxyHardwareAddressUid);
    			}
    		}
    	}
    	
        /// <summary>   The access portal UID. </summary>
    	private System.Guid _accessPortalUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the access portal UID. </summary>
        ///
        /// <value> The access portal UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.Guid AccessPortalUid
    	{ 
    		get { return _accessPortalUid; }
    		set
    		{
    			if (_accessPortalUid != value )
    			{
    				_accessPortalUid = value;
    				OnPropertyChanged(() => AccessPortalUid);
    			}
    		}
    	}
    	
        /// <summary>   The galaxy interface board section node UID. </summary>
    	private System.Guid _galaxyInterfaceBoardSectionNodeUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the galaxy interface board section node UID. </summary>
        ///
        /// <value> The galaxy interface board section node UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.Guid GalaxyInterfaceBoardSectionNodeUid
    	{ 
    		get { return _galaxyInterfaceBoardSectionNodeUid; }
    		set
    		{
    			if (_galaxyInterfaceBoardSectionNodeUid != value )
    			{
    				_galaxyInterfaceBoardSectionNodeUid = value;
    				OnPropertyChanged(() => GalaxyInterfaceBoardSectionNodeUid);
    			}
    		}
    	}
    	
        /// <summary>   Name of the insert. </summary>
    	private string _insertName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the insert. </summary>
        ///
        /// <value> The name of the insert. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string InsertName
    	{ 
    		get { return _insertName; }
    		set
    		{
    			if (_insertName != value )
    			{
    				_insertName = value;
    				OnPropertyChanged(() => InsertName);
    			}
    		}
    	}
    	
        /// <summary>   The insert date. </summary>
    	private System.DateTimeOffset _insertDate;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the insert date. </summary>
        ///
        /// <value> The insert date. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.DateTimeOffset InsertDate
    	{ 
    		get { return _insertDate; }
    		set
    		{
    			if (_insertDate != value )
    			{
    				_insertDate = value;
    				OnPropertyChanged(() => InsertDate);
    			}
    		}
    	}
    	
        /// <summary>   Name of the update. </summary>
    	private string _updateName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the update. </summary>
        ///
        /// <value> The name of the update. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string UpdateName
    	{ 
    		get { return _updateName; }
    		set
    		{
    			if (_updateName != value )
    			{
    				_updateName = value;
    				OnPropertyChanged(() => UpdateName);
    			}
    		}
    	}
    	
        /// <summary>   The update. </summary>
    	private Nullable<System.DateTimeOffset> _updateDate;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the update. </summary>
        ///
        /// <value> The update date. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public Nullable<System.DateTimeOffset> UpdateDate
    	{ 
    		get { return _updateDate; }
    		set
    		{
    			if (_updateDate != value )
    			{
    				_updateDate = value;
    				OnPropertyChanged(() => UpdateDate);
    			}
    		}
    	}
    	
        /// <summary>   The concurrency value. </summary>
    	private Nullable<short> _concurrencyValue;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the concurrency value. </summary>
        ///
        /// <value> The concurrency value. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public Nullable<short> ConcurrencyValue
    	{ 
    		get { return _concurrencyValue; }
    		set
    		{
    			if (_concurrencyValue != value )
    			{
    				_concurrencyValue = value;
    				OnPropertyChanged(() => ConcurrencyValue);
    			}
    		}
    	}


        //   /// <summary>   The access portal. </summary>
        //private AccessPortal _accessPortal;

        //   ////////////////////////////////////////////////////////////////////////////////////////////////////
        //   /// <summary>   Gets or sets the access portal. </summary>
        //   ///
        //   /// <value> The access portal. </value>
        //   ////////////////////////////////////////////////////////////////////////////////////////////////////

        //[DataMember]
        //public virtual AccessPortal AccessPortal
        //{ 
        //	get { return _accessPortal; }
        //	set
        //	{
        //		if (_accessPortal != value )
        //		{
        //			_accessPortal = value;
        //			OnPropertyChanged(() => AccessPortal);
        //		}
        //	}
        //}

        //   /// <summary>   The galaxy interface board section node. </summary>
        //private GalaxyInterfaceBoardSectionNode _galaxyInterfaceBoardSectionNode;

        //   ////////////////////////////////////////////////////////////////////////////////////////////////////
        //   /// <summary>   Gets or sets the galaxy interface board section node. </summary>
        //   ///
        //   /// <value> The galaxy interface board section node. </value>
        //   ////////////////////////////////////////////////////////////////////////////////////////////////////

        //[DataMember]
        //public virtual GalaxyInterfaceBoardSectionNode GalaxyInterfaceBoardSectionNode
        //{ 
        //	get { return _galaxyInterfaceBoardSectionNode; }
        //	set
        //	{
        //		if (_galaxyInterfaceBoardSectionNode != value )
        //		{
        //			_galaxyInterfaceBoardSectionNode = value;
        //			OnPropertyChanged(() => GalaxyInterfaceBoardSectionNode);
        //		}
        //	}
        //}

        private bool _isNodeActive;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets a value indicating whether the node is active. </summary>
        ///
        /// <value> True if a node is active, false if not. </value>
        ///=================================================================================================
    	[DataMember]

        public bool IsNodeActive
        {
            get { return _isNodeActive; }
            set
            {
                if (_isNodeActive != value)
                {
                    _isNodeActive = value;
                    OnPropertyChanged(() => IsNodeActive, true);
                }
            }
        }

    }
    
}
