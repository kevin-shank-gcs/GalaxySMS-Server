//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using FluentValidation;

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   The gcs role. </summary>
    ///
    /// <remarks>   Kevin, 12/26/2018. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

	[DataContract]
	public partial class gcsRole : DbObjectBase
    {
    
        /// <summary>   Identifier for the role. </summary>
    	private System.Guid _roleId;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the identifier of the role. </summary>
        ///
        /// <value> The identifier of the role. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.Guid RoleId
    	{ 
    		get { return _roleId; }
    		set
    		{
    			if (_roleId != value )
    			{
    				_roleId = value;
    				OnPropertyChanged(() => RoleId);
    			}
    		}
    	}
    	
        /// <summary>   Identifier for the application. </summary>
    	private System.Guid _entityId;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the identifier of the application. </summary>
        ///
        /// <value> The identifier of the application. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.Guid EntityId
    	{ 
    		get { return _entityId; }
    		set
    		{
    			if (_entityId != value )
    			{
    				_entityId = value;
    				OnPropertyChanged(() => EntityId);
    			}
    		}
    	}
    	
        /// <summary>   Name of the role. </summary>
    	private string _roleName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the role. </summary>
        ///
        /// <value> The name of the role. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string RoleName
    	{ 
    		get { return _roleName; }
    		set
    		{
    			if (_roleName != value )
    			{
    				_roleName = value;
    				OnPropertyChanged(() => RoleName);
    			}
    		}
    	}
    	
        /// <summary>   Information describing the role. </summary>
    	private string _roleDescription;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets information describing the role. </summary>
        ///
        /// <value> Information describing the role. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string RoleDescription
    	{ 
    		get { return _roleDescription; }
    		set
    		{
    			if (_roleDescription != value )
    			{
    				_roleDescription = value;
    				OnPropertyChanged(() => RoleDescription);
    			}
    		}
    	}
    	
        /// <summary>   True if this gcsRole is active. </summary>
    	private bool _isActive;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets a value indicating whether this gcsRole is active. </summary>
        ///
        /// <value> True if this gcsRole is active, false if not. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public bool IsActive
    	{ 
    		get { return _isActive; }
    		set
    		{
    			if (_isActive != value )
    			{
    				_isActive = value;
    				OnPropertyChanged(() => IsActive);
    			}
    		}
    	}
    	
        /// <summary>   True if this gcsRole is a default role. </summary>
    	private bool _isDefault;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets a value indicating whether this gcsRole is a default role. </summary>
        ///
        /// <value> True if this gcsRole is a default role, false if not. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public bool IsDefault
    	{ 
    		get { return _isDefault; }
    		set
    		{
    			if (_isDefault != value )
    			{
    				_isDefault = value;
    				OnPropertyChanged(() => IsDefault);
    			}
    		}
    	}
     	
        /// <summary>   True if this gcsRole is administrator role. </summary>
        private bool _isAdministratorRole;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>
        /// Gets or sets a value indicating whether this gcsRole is administrator role.
        /// </summary>
        ///
        /// <value> True if this gcsRole is administrator role, false if not. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public bool IsAdministratorRole
        { 
            get { return _isAdministratorRole; }
            set
            {
                if (_isAdministratorRole != value )
                {
                    _isAdministratorRole = value;
                    OnPropertyChanged(() => IsAdministratorRole);
                }
            }
        }
   	
        /// <summary>   Name of the insert. </summary>
    	private string _insertName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the insert. </summary>
        ///
        /// <value> The name of the insert. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string InsertName
    	{ 
    		get { return _insertName; }
    		set
    		{
    			if (_insertName != value )
    			{
    				_insertName = value;
    				OnPropertyChanged(() => InsertName);
    			}
    		}
    	}
    	
        /// <summary>   The insert date. </summary>
    	private System.DateTimeOffset _insertDate;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the insert date. </summary>
        ///
        /// <value> The insert date. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.DateTimeOffset InsertDate
    	{ 
    		get { return _insertDate; }
    		set
    		{
    			if (_insertDate != value )
    			{
    				_insertDate = value;
    				OnPropertyChanged(() => InsertDate);
    			}
    		}
    	}
    	
        /// <summary>   Name of the update. </summary>
    	private string _updateName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the update. </summary>
        ///
        /// <value> The name of the update. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string UpdateName
    	{ 
    		get { return _updateName; }
    		set
    		{
    			if (_updateName != value )
    			{
    				_updateName = value;
    				OnPropertyChanged(() => UpdateName);
    			}
    		}
    	}
    	
        /// <summary>   The update. </summary>
    	private Nullable<System.DateTimeOffset> _updateDate;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the update. </summary>
        ///
        /// <value> The update date. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public Nullable<System.DateTimeOffset> UpdateDate
    	{ 
    		get { return _updateDate; }
    		set
    		{
    			if (_updateDate != value )
    			{
    				_updateDate = value;
    				OnPropertyChanged(() => UpdateDate);
    			}
    		}
    	}
    	
        /// <summary>   The concurrency value. </summary>
    	private Nullable<short> _concurrencyValue;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the concurrency value. </summary>
        ///
        /// <value> The concurrency value. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public Nullable<short> ConcurrencyValue
    	{ 
    		get { return _concurrencyValue; }
    		set
    		{
    			if (_concurrencyValue != value )
    			{
    				_concurrencyValue = value;
    				OnPropertyChanged(() => ConcurrencyValue);
    			}
    		}
    	}
    
    	
     //   /// <summary>   The gcs entity application roles. </summary>
    	//private ICollection<gcsEntityApplicationRole> _gcsEntityApplicationRoles;

     //   ////////////////////////////////////////////////////////////////////////////////////////////////////
     //   /// <summary>   Gets or sets the gcs entity application roles. </summary>
     //   ///
     //   /// <value> The gcs entity application roles. </value>
     //   ////////////////////////////////////////////////////////////////////////////////////////////////////

    	//[DataMember]
    	//public virtual ICollection<gcsEntityApplicationRole> gcsEntityApplicationRoles
    	//{ 
    	//	get { return _gcsEntityApplicationRoles; }
    	//	set
    	//	{
    	//		if (_gcsEntityApplicationRoles != value )
    	//		{
    	//			_gcsEntityApplicationRoles = value;
    	//			OnPropertyChanged(() => gcsEntityApplicationRoles);
    	//		}
    	//	}
    	//}
    	
        /// <summary>   The gcs role permissions. </summary>
    	private ICollection<gcsRolePermission> _gcsRolePermissions;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the gcs role permissions. </summary>
        ///
        /// <value> The gcs role permissions. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public virtual ICollection<gcsRolePermission> RolePermissions
    	{ 
    		get { return _gcsRolePermissions; }
    		set
    		{
    			if (_gcsRolePermissions != value )
    			{
    				_gcsRolePermissions = value;
    				OnPropertyChanged(() => RolePermissions);
    			}
    		}
    	}


        private RoleFilters _deviceFilters;

        [DataMember]
        public RoleFilters DeviceFilters
        {
            get { return _deviceFilters; }
            set
            {
                if (_deviceFilters != value)
                {
                    _deviceFilters = value;
                    OnPropertyChanged(() => DeviceFilters);
                }
            }
        }



        //private ICollection<RoleAccessPortal> _accessPortals;


        //////////////////////////////////////////////////////////////////////////////////////////////////////
        ///// <summary>   Gets or sets the access portals that are associated with the role. </summary>
        /////
        ///// <value> The access portals. </value>
        //////////////////////////////////////////////////////////////////////////////////////////////////////

        //[DataMember]
        //public ICollection<RoleAccessPortal> AccessPortals
        //{
        //    get { return _accessPortals; }
        //    set
        //    {
        //        if (_accessPortals != value)
        //        {
        //            _accessPortals = value;
        //            OnPropertyChanged(() => AccessPortals);
        //        }
        //    }
        //}


        //private ICollection<RoleInputOutputGroup> _inputOutputGroups;

        //////////////////////////////////////////////////////////////////////////////////////////////////////
        ///// <summary>   Gets or sets the input-output groups that are associated with the role. </summary>
        /////
        ///// <value> The input-output groups. </value>
        //////////////////////////////////////////////////////////////////////////////////////////////////////

        //[DataMember]
        //public ICollection<RoleInputOutputGroup> InputOutputGroups
        //{
        //    get { return _inputOutputGroups; }
        //    set
        //    {
        //        if (_inputOutputGroups != value)
        //        {
        //            _inputOutputGroups = value;
        //            OnPropertyChanged(() => InputOutputGroups);
        //        }
        //    }
        //}

        //private ICollection<RoleCluster> _clusters;

        //////////////////////////////////////////////////////////////////////////////////////////////////////
        ///// <summary>   Gets or sets the clusters that are associated with the role. </summary>
        /////
        ///// <value> The clusters. </value>
        //////////////////////////////////////////////////////////////////////////////////////////////////////

        //[DataMember]
        //public ICollection<RoleCluster> Clusters
        //{
        //    get { return _clusters; }
        //    set
        //    {
        //        if (_clusters != value)
        //        {
        //            _clusters = value;
        //            OnPropertyChanged(() => Clusters);
        //        }
        //    }
        //}

        //private ICollection<RoleInputDevice> _inputDevices;

        //////////////////////////////////////////////////////////////////////////////////////////////////////
        ///// <summary>   Gets or sets the input devices that are associated with the role. </summary>
        /////
        ///// <value> The input devices. </value>
        //////////////////////////////////////////////////////////////////////////////////////////////////////

        //[DataMember]
        //public ICollection<RoleInputDevice> InputDevices
        //{
        //    get { return _inputDevices; }
        //    set
        //    {
        //        if (_inputDevices != value)
        //        {
        //            _inputDevices = value;
        //            OnPropertyChanged(() => InputDevices);
        //        }
        //    }
        //}

        //private ICollection<RoleOutputDevice> _outputDevices;

        //////////////////////////////////////////////////////////////////////////////////////////////////////
        ///// <summary>   Gets or sets the output devices that are associated with the role. </summary>
        /////
        ///// <value> The output devices. </value>
        //////////////////////////////////////////////////////////////////////////////////////////////////////

        //[DataMember]
        //public ICollection<RoleOutputDevice> OutputDevices
        //{
        //    get { return _outputDevices; }
        //    set
        //    {
        //        if (_outputDevices != value)
        //        {
        //            _outputDevices = value;
        //            OnPropertyChanged(() => OutputDevices);
        //        }
        //    }
        //}


    }

}
