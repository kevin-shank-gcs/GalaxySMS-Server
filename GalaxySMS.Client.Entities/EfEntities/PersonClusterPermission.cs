//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;
    using FluentValidation;

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   Person cluster permission descriptor. </summary>
    ///
    /// <remarks>   Kevin, 12/26/2018. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

	[DataContract]
	public partial class PersonClusterPermission : DbObjectBase, ITableEntityBase
    {
        /// <summary>   The person cluster permission UID. </summary>
    	private System.Guid _personClusterPermissionUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the person cluster permission UID. </summary>
        ///
        /// <value> The person cluster permission UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.Guid PersonClusterPermissionUid
    	{ 
    		get { return _personClusterPermissionUid; }
    		set
    		{
    			if (_personClusterPermissionUid != value )
    			{
    				_personClusterPermissionUid = value;
    				OnPropertyChanged(() => PersonClusterPermissionUid);
    			}
    		}
    	}
    	
        /// <summary>   The person UID. </summary>
    	private System.Guid _personUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the person UID. </summary>
        ///
        /// <value> The person UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.Guid PersonUid
    	{ 
    		get { return _personUid; }
    		set
    		{
    			if (_personUid != value )
    			{
    				_personUid = value;
    				OnPropertyChanged(() => PersonUid);
    			}
    		}
    	}
    	
        /// <summary>   The cluster UID. </summary>
    	private System.Guid _clusterUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the cluster UID. </summary>
        ///
        /// <value> The cluster UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.Guid ClusterUid
    	{ 
    		get { return _clusterUid; }
    		set
    		{
    			if (_clusterUid != value )
    			{
    				_clusterUid = value;
    				OnPropertyChanged(() => ClusterUid);
    			}
    		}
    	}
    	
        /// <summary>   The person credential UID. </summary>
    	private Nullable<System.Guid> _personCredentialUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the person credential UID. </summary>
        ///
        /// <value> The person credential UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public Nullable<System.Guid> PersonCredentialUid
    	{ 
    		get { return _personCredentialUid; }
    		set
    		{
    			if (_personCredentialUid != value )
    			{
    				_personCredentialUid = value;
    				OnPropertyChanged(() => PersonCredentialUid);
    			}
    		}
    	}
    	
        /// <summary>   Name of the insert. </summary>
    	private string _insertName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the insert. </summary>
        ///
        /// <value> The name of the insert. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string InsertName
    	{ 
    		get { return _insertName; }
    		set
    		{
    			if (_insertName != value )
    			{
    				_insertName = value;
    				OnPropertyChanged(() => InsertName);
    			}
    		}
    	}
    	
        /// <summary>   The insert date. </summary>
    	private System.DateTimeOffset _insertDate;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the insert date. </summary>
        ///
        /// <value> The insert date. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.DateTimeOffset InsertDate
    	{ 
    		get { return _insertDate; }
    		set
    		{
    			if (_insertDate != value )
    			{
    				_insertDate = value;
    				OnPropertyChanged(() => InsertDate);
    			}
    		}
    	}
    	
        /// <summary>   Name of the update. </summary>
    	private string _updateName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the update. </summary>
        ///
        /// <value> The name of the update. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string UpdateName
    	{ 
    		get { return _updateName; }
    		set
    		{
    			if (_updateName != value )
    			{
    				_updateName = value;
    				OnPropertyChanged(() => UpdateName);
    			}
    		}
    	}
    	
        /// <summary>   The update. </summary>
    	private Nullable<System.DateTimeOffset> _updateDate;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the update. </summary>
        ///
        /// <value> The update date. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public Nullable<System.DateTimeOffset> UpdateDate
    	{ 
    		get { return _updateDate; }
    		set
    		{
    			if (_updateDate != value )
    			{
    				_updateDate = value;
    				OnPropertyChanged(() => UpdateDate);
    			}
    		}
    	}
    	
        /// <summary>   The concurrency value. </summary>
    	private Nullable<short> _concurrencyValue;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the concurrency value. </summary>
        ///
        /// <value> The concurrency value. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public Nullable<short> ConcurrencyValue
    	{ 
    		get { return _concurrencyValue; }
    		set
    		{
    			if (_concurrencyValue != value )
    			{
    				_concurrencyValue = value;
    				OnPropertyChanged(() => ConcurrencyValue);
    			}
    		}
    	}
    	
        /// <summary>   The credential cluster tour UID. </summary>
    	private Nullable<System.Guid> _credentialClusterTourUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the credential cluster tour UID. </summary>
        ///
        /// <value> The credential cluster tour UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public Nullable<System.Guid> CredentialClusterTourUid
    	{ 
    		get { return _credentialClusterTourUid; }
    		set
    		{
    			if (_credentialClusterTourUid != value )
    			{
    				_credentialClusterTourUid = value;
    				OnPropertyChanged(() => CredentialClusterTourUid);
    			}
    		}
    	}
    	
        /// <summary>   The credential bits. </summary>
    	private byte[] _credentialBits;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the credential bits. </summary>
        ///
        /// <value> The credential bits. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public byte[] CredentialBits
    	{ 
    		get { return _credentialBits; }
    		set
    		{
    			if (_credentialBits != value )
    			{
    				_credentialBits = value;
    				OnPropertyChanged(() => CredentialBits, true, true);
    			}
    		}
    	}
    
    	
        /// <summary>   Groups the person access belongs to. </summary>
    	private ICollection<PersonAccessGroup> _personAccessGroups;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the groups the person access belongs to. </summary>
        ///
        /// <value> The person access groups. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public virtual ICollection<PersonAccessGroup> PersonAccessGroups
    	{ 
    		get { return _personAccessGroups; }
    		set
    		{
    			if (_personAccessGroups != value )
    			{
    				_personAccessGroups = value;
    				OnPropertyChanged(() => PersonAccessGroups, true, true);
    			}
    		}
    	}

        /// <summary>   Groups the person input output belongs to. </summary>
        private ICollection<PersonInputOutputGroup> _personInputOutputGroups;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the groups the person input output belongs to. </summary>
        ///
        /// <value> The person input output groups. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public virtual ICollection<PersonInputOutputGroup> PersonInputOutputGroups
        {
            get { return _personInputOutputGroups; }
            set
            {
                if (_personInputOutputGroups != value)
                {
                    _personInputOutputGroups = value;
                    OnPropertyChanged(() => PersonInputOutputGroups, true, true);
                }
            }
        }

     //   /// <summary>   The person credential. </summary>
     //   private PersonCredential _personCredential;

     //   ////////////////////////////////////////////////////////////////////////////////////////////////////
     //   /// <summary>   Gets or sets the person credential. </summary>
     //   ///
     //   /// <value> The person credential. </value>
     //   ////////////////////////////////////////////////////////////////////////////////////////////////////

    	//[DataMember]
    	//public virtual PersonCredential PersonCredential
    	//{ 
    	//	get { return _personCredential; }
    	//	set
    	//	{
    	//		if (_personCredential != value )
    	//		{
    	//			_personCredential = value;
    	//			OnPropertyChanged(() => PersonCredential);
    	//		}
    	//	}
    	//}
    	
        /// <summary>   Group the person personal access belongs to. </summary>
    	private PersonPersonalAccessGroup _personPersonalAccessGroup;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the group the person personal access belongs to. </summary>
        ///
        /// <value> The person personal access group. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public virtual PersonPersonalAccessGroup PersonPersonalAccessGroup
    	{ 
    		get { return _personPersonalAccessGroup; }
    		set
    		{
    			if (_personPersonalAccessGroup != value )
    			{
    				_personPersonalAccessGroup = value;
    				OnPropertyChanged(() => PersonPersonalAccessGroup, true, true);
    			}
    		}
    	}
    }
    
}
