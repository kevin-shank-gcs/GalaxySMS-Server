//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	
    using FluentValidation;

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   The access portal alert event type. </summary>
    ///
    /// <remarks>   Kevin, 12/26/2018. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

	[DataContract]
	public partial class AccessPortalAlertEventType : DbObjectBase, ITableEntityBase
    {
   	
        /// <summary>   The access portal alert event type UID. </summary>
    	private System.Guid _accessPortalAlertEventTypeUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the access portal alert event type UID. </summary>
        ///
        /// <value> The access portal alert event type UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.Guid AccessPortalAlertEventTypeUid
    	{ 
    		get { return _accessPortalAlertEventTypeUid; }
    		set
    		{
    			if (_accessPortalAlertEventTypeUid != value )
    			{
    				_accessPortalAlertEventTypeUid = value;
    				OnPropertyChanged(() => AccessPortalAlertEventTypeUid);
    			}
    		}
    	}
    	
        /// <summary>   The display resource key. </summary>
    	private Nullable<System.Guid> _displayResourceKey;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the display resource key. </summary>
        ///
        /// <value> The display resource key. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public Nullable<System.Guid> DisplayResourceKey
    	{ 
    		get { return _displayResourceKey; }
    		set
    		{
    			if (_displayResourceKey != value )
    			{
    				_displayResourceKey = value;
    				OnPropertyChanged(() => DisplayResourceKey);
    			}
    		}
    	}
    	
        /// <summary>   The description resource key. </summary>
    	private Nullable<System.Guid> _descriptionResourceKey;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the description resource key. </summary>
        ///
        /// <value> The description resource key. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public Nullable<System.Guid> DescriptionResourceKey
    	{ 
    		get { return _descriptionResourceKey; }
    		set
    		{
    			if (_descriptionResourceKey != value )
    			{
    				_descriptionResourceKey = value;
    				OnPropertyChanged(() => DescriptionResourceKey);
    			}
    		}
    	}
    	
        /// <summary>   The display. </summary>
    	private string _display;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the display. </summary>
        ///
        /// <value> The display. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string Display
    	{ 
    		get { return _display; }
    		set
    		{
    			if (_display != value )
    			{
    				_display = value;
    				OnPropertyChanged(() => Display);
    			}
    		}
    	}
    	
        /// <summary>   The description. </summary>
    	private string _description;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the description. </summary>
        ///
        /// <value> The description. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string Description
    	{ 
    		get { return _description; }
    		set
    		{
    			if (_description != value )
    			{
    				_description = value;
    				OnPropertyChanged(() => Description);
    			}
    		}
    	}
    	
        /// <summary>   The tag. </summary>
    	private string _tag;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the tag. </summary>
        ///
        /// <value> The tag. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string Tag
    	{ 
    		get { return _tag; }
    		set
    		{
    			if (_tag != value )
    			{
    				_tag = value;
    				OnPropertyChanged(() => Tag);
    			}
    		}
    	}
    	
            /// <summary>   True if this AccessPortalAlertEventType can acknowledge. </summary>
            private bool _CanAcknowledge;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets a value indicating whether we can acknowledge. </summary>
        ///
        /// <value> True if we can acknowledge, false if not. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public bool CanAcknowledge
        {
            get { return _CanAcknowledge; }
            set
            {
                if (_CanAcknowledge != value)
                {
                    _CanAcknowledge = value;
                    OnPropertyChanged(() => CanAcknowledge);
                }
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>
        /// True if this AccessPortalAlertEventType can have input output group offset.
        /// </summary>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        private bool _CanHaveInputOutputGroupOffset;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>
        /// Gets or sets a value indicating whether we can have input output group offset.
        /// </summary>
        ///
        /// <value> True if we can have input output group offset, false if not. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public bool CanHaveInputOutputGroupOffset
        {
            get { return _CanHaveInputOutputGroupOffset; }
            set
            {
                if (_CanHaveInputOutputGroupOffset != value)
                {
                    _CanHaveInputOutputGroupOffset = value;
                    OnPropertyChanged(() => CanHaveInputOutputGroupOffset);
                }
            }
        }

        /// <summary>   True if this AccessPortalAlertEventType can have schedule. </summary>
        private bool _CanHaveSchedule;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets a value indicating whether we can have schedule. </summary>
        ///
        /// <value> True if we can have schedule, false if not. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public bool CanHaveSchedule
        {
            get { return _CanHaveSchedule; }
            set
            {
                if (_CanHaveSchedule != value)
                {
                    _CanHaveSchedule = value;
                    OnPropertyChanged(() => CanHaveSchedule);
                }
            }
        }


        /// <summary>   True if this AccessPortalAlertEventType can have audio. </summary>
        private bool _CanHaveAudio;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets a value indicating whether we can have audio. </summary>
        ///
        /// <value> True if we can have audio, false if not. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public bool CanHaveAudio
        {
            get { return _CanHaveAudio; }
            set
            {
                if (_CanHaveAudio != value)
                {
                    _CanHaveAudio = value;
                    OnPropertyChanged(() => CanHaveAudio);
                }
            }
        }


        /// <summary>   True if this AccessPortalAlertEventType can have instructions. </summary>
        private bool _CanHaveInstructions;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets a value indicating whether we can have instructions. </summary>
        ///
        /// <value> True if we can have instructions, false if not. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public bool CanHaveInstructions
        {
            get { return _CanHaveInstructions; }
            set
            {
                if (_CanHaveInstructions != value)
                {
                    _CanHaveInstructions = value;
                    OnPropertyChanged(() => CanHaveInstructions);
                }
            }
        }


        /// <summary>   Name of the insert. </summary>
        private string _insertName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the insert. </summary>
        ///
        /// <value> The name of the insert. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string InsertName
    	{ 
    		get { return _insertName; }
    		set
    		{
    			if (_insertName != value )
    			{
    				_insertName = value;
    				OnPropertyChanged(() => InsertName);
    			}
    		}
    	}
    	
        /// <summary>   The insert date. </summary>
    	private System.DateTimeOffset _insertDate;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the insert date. </summary>
        ///
        /// <value> The insert date. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.DateTimeOffset InsertDate
    	{ 
    		get { return _insertDate; }
    		set
    		{
    			if (_insertDate != value )
    			{
    				_insertDate = value;
    				OnPropertyChanged(() => InsertDate);
    			}
    		}
    	}
    	
        /// <summary>   Name of the update. </summary>
    	private string _updateName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the update. </summary>
        ///
        /// <value> The name of the update. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string UpdateName
    	{ 
    		get { return _updateName; }
    		set
    		{
    			if (_updateName != value )
    			{
    				_updateName = value;
    				OnPropertyChanged(() => UpdateName);
    			}
    		}
    	}
    	
        /// <summary>   The update. </summary>
    	private Nullable<System.DateTimeOffset> _updateDate;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the update. </summary>
        ///
        /// <value> The update date. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public Nullable<System.DateTimeOffset> UpdateDate
    	{ 
    		get { return _updateDate; }
    		set
    		{
    			if (_updateDate != value )
    			{
    				_updateDate = value;
    				OnPropertyChanged(() => UpdateDate);
    			}
    		}
    	}
    	
        /// <summary>   The concurrency value. </summary>
    	private Nullable<short> _concurrencyValue;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the concurrency value. </summary>
        ///
        /// <value> The concurrency value. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public Nullable<short> ConcurrencyValue
    	{ 
    		get { return _concurrencyValue; }
    		set
    		{
    			if (_concurrencyValue != value )
    			{
    				_concurrencyValue = value;
    				OnPropertyChanged(() => ConcurrencyValue);
    			}
    		}
    	}
    
    	
     //   /// <summary>   The access portal alert events. </summary>
    	//private ICollection<AccessPortalAlertEvent> _accessPortalAlertEvents;

     //   ////////////////////////////////////////////////////////////////////////////////////////////////////
     //   /// <summary>   Gets or sets the access portal alert events. </summary>
     //   ///
     //   /// <value> The access portal alert events. </value>
     //   ////////////////////////////////////////////////////////////////////////////////////////////////////

    	//[DataMember]
    	//public virtual ICollection<AccessPortalAlertEvent> AccessPortalAlertEvents
    	//{ 
    	//	get { return _accessPortalAlertEvents; }
    	//	set
    	//	{
    	//		if (_accessPortalAlertEvents != value )
    	//		{
    	//			_accessPortalAlertEvents = value;
    	//			OnPropertyChanged(() => AccessPortalAlertEvents);
    	//		}
    	//	}
    	//}
    }
    
}
