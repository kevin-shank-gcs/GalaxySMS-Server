//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
    using GCS.Core.Common.Core;
    using FluentValidation;
    using GCS.Core.Common.Contracts;
    using System.Collections.ObjectModel;

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   An area. </summary>
    ///
    /// <remarks>   Kevin, 12/26/2018. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    [DataContract]
	public partial class Area : DbObjectBase, IHasEntityMappingList
    {

        /// <summary>   The area UID. </summary>
        private System.Guid _areaUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the area UID. </summary>
        ///
        /// <value> The area UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public System.Guid AreaUid
        {
            get { return _areaUid; }
            set
            {
                if (_areaUid != value)
                {
                    _areaUid = value;
                    OnPropertyChanged(() => AreaUid);
                }
            }
        }

        /// <summary>   The cluster UID. </summary>
        private System.Guid _clusterUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the cluster UID. </summary>
        ///
        /// <value> The cluster UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public System.Guid ClusterUid
        {
            get { return _clusterUid; }
            set
            {
                if (_clusterUid != value)
                {
                    _clusterUid = value;
                    OnPropertyChanged(() => ClusterUid);
                }
            }
        }


        /// <summary>   Identifier for the entity. </summary>
        private System.Guid _entityId;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the identifier of the entity. </summary>
        ///
        /// <value> The identifier of the entity. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public System.Guid EntityId
        {
            get { return _entityId; }
            set
            {
                if (_entityId != value)
                {
                    _entityId = value;
                    OnPropertyChanged(() => EntityId);
                }
            }
        }

        /// <summary>   The area number. </summary>
        private int _areaNumber;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the area number. </summary>
        ///
        /// <value> The area number. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public int AreaNumber
        {
            get { return _areaNumber; }
            set
            {
                if (_areaNumber != value)
                {
                    _areaNumber = value;
                    OnPropertyChanged(() => AreaNumber);
                }
            }
        }

        /// <summary>   Name of the area. </summary>
        private string _areaName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the area. </summary>
        ///
        /// <value> The name of the area. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public string AreaName
        {
            get { return _areaName; }
            set
            {
                if (_areaName != value)
                {
                    _areaName = value;
                    OnPropertyChanged(() => AreaName);
                }
            }
        }

        /// <summary>   Name of the insert. </summary>
        private string _insertName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the insert. </summary>
        ///
        /// <value> The name of the insert. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public string InsertName
        {
            get { return _insertName; }
            set
            {
                if (_insertName != value)
                {
                    _insertName = value;
                    OnPropertyChanged(() => InsertName);
                }
            }
        }

        /// <summary>   The insert date. </summary>
        private System.DateTimeOffset _insertDate;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the insert date. </summary>
        ///
        /// <value> The insert date. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public System.DateTimeOffset InsertDate
        {
            get { return _insertDate; }
            set
            {
                if (_insertDate != value)
                {
                    _insertDate = value;
                    OnPropertyChanged(() => InsertDate);
                }
            }
        }

        /// <summary>   Name of the update. </summary>
        private string _updateName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the update. </summary>
        ///
        /// <value> The name of the update. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public string UpdateName
        {
            get { return _updateName; }
            set
            {
                if (_updateName != value)
                {
                    _updateName = value;
                    OnPropertyChanged(() => UpdateName);
                }
            }
        }

        /// <summary>   The update. </summary>
        private Nullable<System.DateTimeOffset> _updateDate;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the update. </summary>
        ///
        /// <value> The update date. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public Nullable<System.DateTimeOffset> UpdateDate
        {
            get { return _updateDate; }
            set
            {
                if (_updateDate != value)
                {
                    _updateDate = value;
                    OnPropertyChanged(() => UpdateDate);
                }
            }
        }

        /// <summary>   The concurrency value. </summary>
        private Nullable<short> _concurrencyValue;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the concurrency value. </summary>
        ///
        /// <value> The concurrency value. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public Nullable<short> ConcurrencyValue
        {
            get { return _concurrencyValue; }
            set
            {
                if (_concurrencyValue != value)
                {
                    _concurrencyValue = value;
                    OnPropertyChanged(() => ConcurrencyValue);
                }
            }
        }

        /// <summary>   The display resource key. </summary>
        private Nullable<System.Guid> _displayResourceKey;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the display resource key. </summary>
        ///
        /// <value> The display resource key. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public Nullable<System.Guid> DisplayResourceKey
        {
            get { return _displayResourceKey; }
            set
            {
                if (_displayResourceKey != value)
                {
                    _displayResourceKey = value;
                    OnPropertyChanged(() => DisplayResourceKey);
                }
            }
        }

        /// <summary>   The description resource key. </summary>
        private Nullable<System.Guid> _descriptionResourceKey;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the description resource key. </summary>
        ///
        /// <value> The description resource key. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public Nullable<System.Guid> DescriptionResourceKey
        {
            get { return _descriptionResourceKey; }
            set
            {
                if (_descriptionResourceKey != value)
                {
                    _descriptionResourceKey = value;
                    OnPropertyChanged(() => DescriptionResourceKey);
                }
            }
        }

        /// <summary>   The description. </summary>
        private string _description;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the description. </summary>
        ///
        /// <value> The description. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public string Description
        {
            get { return _description; }
            set
            {
                if (_description != value)
                {
                    _description = value;
                    OnPropertyChanged(() => Description);
                }
            }
        }

        /// <summary>   The display. </summary>
        private string _display;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the display. </summary>
        ///
        /// <value> The display. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public string Display
        {
            get { return _display; }
            set
            {
                if (_display != value)
                {
                    _display = value;
                    OnPropertyChanged(() => Display);
                }
            }
        }


        ///// <summary>   The cluster. </summary>
        //private Cluster _cluster;

        //////////////////////////////////////////////////////////////////////////////////////////////////////
        ///// <summary>   Gets or sets the cluster. </summary>
        /////
        ///// <value> The cluster. </value>
        //////////////////////////////////////////////////////////////////////////////////////////////////////

        //[DataMember]
        //public virtual Cluster Cluster
        //{
        //    get { return _cluster; }
        //    set
        //    {
        //        if (_cluster != value)
        //        {
        //            _cluster = value;
        //            OnPropertyChanged(() => Cluster);
        //        }
        //    }
        //}

        #region Implementation of IHasEntityMappingList

        /// <summary>   List of identifiers for the entities. </summary>
        private ICollection<Guid> _entityIds;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets a list of identifiers of the entities. </summary>
        ///
        /// <value> A list of identifiers of the entities. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public virtual ICollection<Guid> EntityIds
        {
            get { return _entityIds; }
            set
            {
                if (_entityIds != value)
                {
                    _entityIds = value;
                    OnPropertyChanged(() => EntityIds);
                }
            }
        }

        /// <summary>   The mapped entities permission levels. </summary>
        private ICollection<EntityIdEntityMapPermissionLevel> _MappedEntitiesPermissionLevels;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the mapped entities permission levels. </summary>
        ///
        /// <value> The mapped entities permission levels. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public virtual ICollection<EntityIdEntityMapPermissionLevel> MappedEntitiesPermissionLevels
        {
            get { return _MappedEntitiesPermissionLevels; }
            set
            {
                if (_MappedEntitiesPermissionLevels != value)
                {
                    _MappedEntitiesPermissionLevels = value;
                    OnPropertyChanged(() => MappedEntitiesPermissionLevels);
                }
            }
        }
        #endregion
    }

}
