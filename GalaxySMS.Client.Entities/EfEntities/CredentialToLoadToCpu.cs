//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
    using GCS.Core.Common.Core;
    using GCS.Core.Common.Contracts;
    using FluentValidation;

    [DataContract]
    public partial class CredentialToLoadToCpu : DbObjectBase
    {


        private System.Guid _credentialToLoadToCpuUid;

        [DataMember]
        public System.Guid CredentialToLoadToCpuUid
        {
            get { return _credentialToLoadToCpuUid; }
            set
            {
                if (_credentialToLoadToCpuUid != value)
                {
                    _credentialToLoadToCpuUid = value;
                    OnPropertyChanged(() => CredentialToLoadToCpuUid);
                }
            }
        }

        private System.Guid _cpuUid;

        [DataMember]
        public System.Guid CpuUid
        {
            get { return _cpuUid; }
            set
            {
                if (_cpuUid != value)
                {
                    _cpuUid = value;
                    OnPropertyChanged(() => CpuUid);
                }
            }
        }

        private System.Guid _credentialUid;

        [DataMember]
        public System.Guid CredentialUid
        {
            get { return _credentialUid; }
            set
            {
                if (_credentialUid != value)
                {
                    _credentialUid = value;
                    OnPropertyChanged(() => CredentialUid);
                }
            }
        }

        private System.DateTimeOffset _lastCredentialChangeDate;

        [DataMember]
        public System.DateTimeOffset LastCredentialChangeDate
        {
            get { return _lastCredentialChangeDate; }
            set
            {
                if (_lastCredentialChangeDate != value)
                {
                    _lastCredentialChangeDate = value;
                    OnPropertyChanged(() => LastCredentialChangeDate);
                }
            }
        }

        private System.DateTimeOffset _lastPersonalAccessGroupChangeDate;

        [DataMember]
        public System.DateTimeOffset LastPersonalAccessGroupChangeDate
        {
            get { return _lastPersonalAccessGroupChangeDate; }
            set
            {
                if (_lastPersonalAccessGroupChangeDate != value)
                {
                    _lastPersonalAccessGroupChangeDate = value;
                    OnPropertyChanged(() => LastPersonalAccessGroupChangeDate);
                }
            }
        }

        private Nullable<System.DateTimeOffset> _lastCredentialLoadedDate;

        [DataMember]
        public Nullable<System.DateTimeOffset> LastCredentialLoadedDate
        {
            get { return _lastCredentialLoadedDate; }
            set
            {
                if (_lastCredentialLoadedDate != value)
                {
                    _lastCredentialLoadedDate = value;
                    OnPropertyChanged(() => LastCredentialLoadedDate);
                }
            }
        }

        private Nullable<System.DateTimeOffset> _lastPersonalAccessGroupLoadedDate;

        [DataMember]
        public Nullable<System.DateTimeOffset> LastPersonalAccessGroupLoadedDate
        {
            get { return _lastPersonalAccessGroupLoadedDate; }
            set
            {
                if (_lastPersonalAccessGroupLoadedDate != value)
                {
                    _lastPersonalAccessGroupLoadedDate = value;
                    OnPropertyChanged(() => LastPersonalAccessGroupLoadedDate);
                }
            }
        }

        private Nullable<System.DateTimeOffset> _lastForceLoadDate;

        [DataMember]
        public Nullable<System.DateTimeOffset> LastForceLoadDate
        {
            get { return _lastForceLoadDate; }
            set
            {
                if (_lastForceLoadDate != value)
                {
                    _lastForceLoadDate = value;
                    OnPropertyChanged(() => LastForceLoadDate);
                }
            }
        }

        private Credential _credential;

        [DataMember]
        public virtual Credential Credential
        {
            get { return _credential; }
            set
            {
                if (_credential != value)
                {
                    _credential = value;
                    OnPropertyChanged(() => Credential);
                }
            }
        }

        private GalaxyCpu _galaxyCpu;

        [DataMember]
        public virtual GalaxyCpu GalaxyCpu
        {
            get { return _galaxyCpu; }
            set
            {
                if (_galaxyCpu != value)
                {
                    _galaxyCpu = value;
                    OnPropertyChanged(() => GalaxyCpu);
                }
            }
        }
    }

}
