//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
	using System;
	using System.Collections.Generic;
	using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;
	using FluentValidation;

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>   A credential. </summary>
	///
	/// <remarks>   Kevin, 12/26/2018. </remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	[DataContract]
	public partial class Credential : DbObjectBase, ITableEntityBase
	{    	
		/// <summary>   The credential UID. </summary>
		private System.Guid _credentialUid;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the credential UID. </summary>
		///
		/// <value> The credential UID. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public System.Guid CredentialUid
		{ 
			get { return _credentialUid; }
			set
			{
				if (_credentialUid != value )
				{
					_credentialUid = value;
					OnPropertyChanged(() => CredentialUid);
				}
			}
		}
		
		/// <summary>   The credential format UID. </summary>
		private System.Guid _credentialFormatUid;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the credential format UID. </summary>
		///
		/// <value> The credential format UID. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public System.Guid CredentialFormatUid
		{ 
			get { return _credentialFormatUid; }
			set
			{
				if (_credentialFormatUid != value )
				{
					_credentialFormatUid = value;
					OnPropertyChanged(() => CredentialFormatUid, true, true);
				}
			}
		}
		
		/// <summary>   The card number. </summary>
		private string _cardNumber;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the card number. </summary>
		///
		/// <value> The card number. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public string CardNumber
		{ 
			get { return _cardNumber; }
			set
			{
				if (_cardNumber != value )
				{
					_cardNumber = value;
					OnPropertyChanged(() => CardNumber, true, true);
				}
			}
		}
		
		/// <summary>   True if card number is hexadecimal. </summary>
		private bool _cardNumberIsHex;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets a value indicating whether the card number is hexadecimal. </summary>
		///
		/// <value> True if card number is hexadecimal, false if not. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public bool CardNumberIsHex
		{ 
			get { return _cardNumberIsHex; }
			set
			{
				if (_cardNumberIsHex != value )
				{
					_cardNumberIsHex = value;
					OnPropertyChanged(() => CardNumberIsHex, true, true);
				}
			}
		}
		
		/// <summary>   Information describing the card binary. </summary>
		private byte[] _cardBinaryData;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets information describing the card binary. </summary>
		///
		/// <value> Information describing the card binary. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public byte[] CardBinaryData
		{ 
			get { return _cardBinaryData; }
			set
			{
				if (_cardBinaryData != value )
				{
					_cardBinaryData = value;
					OnPropertyChanged(() => CardBinaryData, true, true);
				}
			}
		}
		
		/// <summary>   Name of the insert. </summary>
		private string _insertName;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the name of the insert. </summary>
		///
		/// <value> The name of the insert. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public string InsertName
		{ 
			get { return _insertName; }
			set
			{
				if (_insertName != value )
				{
					_insertName = value;
					OnPropertyChanged(() => InsertName);
				}
			}
		}
		
		/// <summary>   The insert date. </summary>
		private System.DateTimeOffset _insertDate;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the insert date. </summary>
		///
		/// <value> The insert date. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public System.DateTimeOffset InsertDate
		{ 
			get { return _insertDate; }
			set
			{
				if (_insertDate != value )
				{
					_insertDate = value;
					OnPropertyChanged(() => InsertDate);
				}
			}
		}
		
		/// <summary>   Name of the update. </summary>
		private string _updateName;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the name of the update. </summary>
		///
		/// <value> The name of the update. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public string UpdateName
		{ 
			get { return _updateName; }
			set
			{
				if (_updateName != value )
				{
					_updateName = value;
					OnPropertyChanged(() => UpdateName);
				}
			}
		}
		
		/// <summary>   The update. </summary>
		private Nullable<System.DateTimeOffset> _updateDate;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the update. </summary>
		///
		/// <value> The update date. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public Nullable<System.DateTimeOffset> UpdateDate
		{ 
			get { return _updateDate; }
			set
			{
				if (_updateDate != value )
				{
					_updateDate = value;
					OnPropertyChanged(() => UpdateDate);
				}
			}
		}
		
		/// <summary>   The concurrency value. </summary>
		private Nullable<short> _concurrencyValue;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the concurrency value. </summary>
		///
		/// <value> The concurrency value. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public Nullable<short> ConcurrencyValue
		{ 
			get { return _concurrencyValue; }
			set
			{
				if (_concurrencyValue != value )
				{
					_concurrencyValue = value;
					OnPropertyChanged(() => ConcurrencyValue);
				}
			}
		}
		
		/// <summary>   Number of bits. </summary>
		private short _bitCount;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the number of bits. </summary>
		///
		/// <value> The number of bits. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public short BitCount
		{ 
			get { return _bitCount; }
			set
			{
				if (_bitCount != value )
				{
					_bitCount = value;
					OnPropertyChanged(() => BitCount);
				}
			}
		}
	
		
		/// <summary>   The credential 26 bit standard. </summary>
		private Credential26BitStandard _standard26Bit;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the credential 26 bit standard. </summary>
		///
		/// <value> The credential 26 bit standard. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public virtual Credential26BitStandard Standard26Bit
		{ 
			get { return _standard26Bit; }
			set
			{
				if (_standard26Bit != value )
				{
					_standard26Bit = value;
					OnPropertyChanged(() => Standard26Bit);
				}
			}
		}
		
		/// <summary>   The credential bqt 36 bit. </summary>
		private CredentialBqt36Bit _Bqt36Bit;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the credential bqt 36 bit. </summary>
		///
		/// <value> The credential bqt 36 bit. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public virtual CredentialBqt36Bit Bqt36Bit
		{ 
			get { return _Bqt36Bit; }
			set
			{
				if (_Bqt36Bit != value )
				{
					_Bqt36Bit = value;
					OnPropertyChanged(() => Bqt36Bit);
				}
			}
		}
		
		/// <summary>   The credential corporate 1 k 35 bit. </summary>
		private CredentialCorporate1K35Bit _corporate1K35Bit;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the credential corporate 1 k 35 bit. </summary>
		///
		/// <value> The credential corporate 1 k 35 bit. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public virtual CredentialCorporate1K35Bit Corporate1K35Bit
		{ 
			get { return _corporate1K35Bit; }
			set
			{
				if (_corporate1K35Bit != value )
				{
					_corporate1K35Bit = value;
					OnPropertyChanged(() => Corporate1K35Bit);
				}
			}
		}
		
		/// <summary>   The credential corporate 1 k 48 bit. </summary>
		private CredentialCorporate1K48Bit _corporate1K48Bit;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the credential corporate 1 k 48 bit. </summary>
		///
		/// <value> The credential corporate 1 k 48 bit. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public virtual CredentialCorporate1K48Bit Corporate1K48Bit
		{ 
			get { return _corporate1K48Bit; }
			set
			{
				if (_corporate1K48Bit != value )
				{
					_corporate1K48Bit = value;
					OnPropertyChanged(() => Corporate1K48Bit);
				}
			}
		}
		
		/// <summary>   The credential format. </summary>
		private CredentialFormat _credentialFormat;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the credential format. </summary>
		///
		/// <value> The credential format. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public virtual CredentialFormat CredentialFormat
		{ 
			get { return _credentialFormat; }
			set
			{
				if (_credentialFormat != value || 
					_credentialFormat?.CredentialFormatUid != value?.CredentialFormatUid ||
					_credentialFormat?.Description != value?.Description)
				{
					_credentialFormat = value;
					OnPropertyChanged(() => CredentialFormat, false, false);
					OnPropertyChanged(() => CredentialFormat.CredentialFormatDataFields, false, false);

					EnsureCredentialExists();
				}
			}
		}
		
		/// <summary>   The credential cypress 37 bit. </summary>
		private CredentialCypress37Bit _cypress37Bit;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the credential cypress 37 bit. </summary>
		///
		/// <value> The credential cypress 37 bit. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public virtual CredentialCypress37Bit Cypress37Bit
		{ 
			get { return _cypress37Bit; }
			set
			{
				if (_cypress37Bit != value )
				{
					_cypress37Bit = value;
					OnPropertyChanged(() => Cypress37Bit);
				}
			}
		}
		
		/// <summary>   Information describing the credential. </summary>
		private CredentialData _credentialData;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets information describing the credential. </summary>
		///
		/// <value> Information describing the credential. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public virtual CredentialData CredentialData
		{ 
			get { return _credentialData; }
			set
			{
				if (_credentialData != value )
				{
					_credentialData = value;
					OnPropertyChanged(() => CredentialData);
				}
			}
		}
		
		/// <summary>   The credential h 1030437 bit. </summary>
		private CredentialH1030437Bit _H1030437Bit;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the credential h 1030437 bit. </summary>
		///
		/// <value> The credential h 1030437 bit. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public virtual CredentialH1030437Bit H1030437Bit
		{ 
			get { return _H1030437Bit; }
			set
			{
				if (_H1030437Bit != value )
				{
					_H1030437Bit = value;
					OnPropertyChanged(() => H1030437Bit);
				}
			}
		}

		
		
		/// <summary>   The credential h 1030237 bit. </summary>
		private CredentialH1030237Bit _H1030237Bit;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the credential h 1030437 bit. </summary>
		///
		/// <value> The credential h 1030437 bit. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public virtual CredentialH1030237Bit H1030237Bit
		{ 
			get { return _H1030237Bit; }
			set
			{
				if (_H1030237Bit != value )
				{
					_H1030237Bit = value;
					OnPropertyChanged(() => H1030237Bit);
				}
			}
		}

	   /// <summary>   The credential piv 75 bit. </summary>
		private CredentialPIV75Bit _PIV75Bit;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the credential piv 75 bit. </summary>
		///
		/// <value> The credential piv 75 bit. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public virtual CredentialPIV75Bit PIV75Bit
		{ 
			get { return _PIV75Bit; }
			set
			{
				if (_PIV75Bit != value )
				{
					_PIV75Bit = value;
					OnPropertyChanged(() => PIV75Bit);
				}
			}
		}
		
		/// <summary>   The credential xceed identifier 40 bit. </summary>
		private CredentialXceedId40Bit _xceedId40Bit;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the credential xceed identifier 40 bit. </summary>
		///
		/// <value> The credential xceed identifier 40 bit. </value>
		////////////////////////////////////////////////////////////////////////////////////////////////////

		[DataMember]
		public virtual CredentialXceedId40Bit XceedId40Bit
		{ 
			get { return _xceedId40Bit; }
			set
			{
				if (_xceedId40Bit != value )
				{
					_xceedId40Bit = value;
					OnPropertyChanged(() => XceedId40Bit);
				}
			}
		}


		/// <summary>   The credential software house 37 bit. </summary>
		private CredentialSoftwareHouse37Bit _softwareHouse37Bit;

		////////////////////////////////////////////////////////////////////////////////////////////////////
		/// <summary>   Gets or sets the credential software house 37 bit. </summary>
		///
		/// <value> The credential software house 37 bit. </value>
		///=================================================================================================

		[DataMember]
		public virtual CredentialSoftwareHouse37Bit SoftwareHouse37Bit
		{ 
			get { return _softwareHouse37Bit; }
			set
			{
				if (_softwareHouse37Bit != value )
				{
					_softwareHouse37Bit = value;
					OnPropertyChanged(() => SoftwareHouse37Bit);
				}
			}
		}

	}
	
}
