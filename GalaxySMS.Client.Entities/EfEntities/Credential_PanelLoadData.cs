//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
	using System;
	using System.Collections.Generic;
	using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	
	using FluentValidation;
	
	[DataContract]
	public partial class Credential_PanelLoadData : DbObjectBase
	{
		
		private System.Guid _personUid;
	
		[DataMember]
		public System.Guid PersonUid
		{ 
			get { return _personUid; }
			set
			{
				if (_personUid != value )
				{
					_personUid = value;
					OnPropertyChanged(() => PersonUid);
				}
			}
		}
		
		private string _firstName;
	
		[DataMember]
		public string FirstName
		{ 
			get { return _firstName; }
			set
			{
				if (_firstName != value )
				{
					_firstName = value;
					OnPropertyChanged(() => FirstName);
				}
			}
		}
		
		private string _lastName;
	
		[DataMember]
		public string LastName
		{ 
			get { return _lastName; }
			set
			{
				if (_lastName != value )
				{
					_lastName = value;
					OnPropertyChanged(() => LastName);
				}
			}
		}
		
		private string _personId;
	
		[DataMember]
		public string PersonId
		{ 
			get { return _personId; }
			set
			{
				if (_personId != value )
				{
					_personId = value;
					OnPropertyChanged(() => PersonId);
				}
			}
		}
		
		private Nullable<System.DateTimeOffset> _personActivationDateTime;
	
		[DataMember]
		public Nullable<System.DateTimeOffset> PersonActivationDateTime
		{ 
			get { return _personActivationDateTime; }
			set
			{
				if (_personActivationDateTime != value )
				{
					_personActivationDateTime = value;
					OnPropertyChanged(() => PersonActivationDateTime);
				}
			}
		}
		
		private Nullable<System.DateTimeOffset> _personExpirationDateTime;
	
		[DataMember]
		public Nullable<System.DateTimeOffset> PersonExpirationDateTime
		{ 
			get { return _personExpirationDateTime; }
			set
			{
				if (_personExpirationDateTime != value )
				{
					_personExpirationDateTime = value;
					OnPropertyChanged(() => PersonExpirationDateTime);
				}
			}
		}

        private Nullable<System.DateTime> _PersonEmploymentDate;

		[DataMember]
		public Nullable<System.DateTime> PersonEmploymentDate
		{
            get { return _PersonEmploymentDate; }
            set
            {
                if (_PersonEmploymentDate != value)
                {
                    _PersonEmploymentDate = value;
                    OnPropertyChanged(() => PersonEmploymentDate);
                }
            }
        }


        private Nullable<System.DateTime> _personTerminationDate;
	
		[DataMember]
		public Nullable<System.DateTime> PersonTerminationDate
		{ 
			get { return _personTerminationDate; }
			set
			{
				if (_personTerminationDate != value )
				{
					_personTerminationDate = value;
					OnPropertyChanged(() => PersonTerminationDate);
				}
			}
		}
		
		private bool _veryImportantPerson;
	
		[DataMember]
		public bool VeryImportantPerson
		{ 
			get { return _veryImportantPerson; }
			set
			{
				if (_veryImportantPerson != value )
				{
					_veryImportantPerson = value;
					OnPropertyChanged(() => VeryImportantPerson);
				}
			}
		}
		
		private bool _hasPhysicalDisability;
	
		[DataMember]
		public bool HasPhysicalDisability
		{ 
			get { return _hasPhysicalDisability; }
			set
			{
				if (_hasPhysicalDisability != value )
				{
					_hasPhysicalDisability = value;
					OnPropertyChanged(() => HasPhysicalDisability);
				}
			}
		}
		
		private bool _hasVertigo;
	
		[DataMember]
		public bool HasVertigo
		{ 
			get { return _hasVertigo; }
			set
			{
				if (_hasVertigo != value )
				{
					_hasVertigo = value;
					OnPropertyChanged(() => HasVertigo);
				}
			}
		}
		
		private bool _personInactiveState;
	
		[DataMember]
		public bool PersonInactiveState
		{ 
			get { return _personInactiveState; }
			set
			{
				if (_personInactiveState != value )
				{
					_personInactiveState = value;
					OnPropertyChanged(() => PersonInactiveState);
				}
			}
		}
		
		private bool _pINExempt;
	
		[DataMember]
		public bool PINExempt
		{ 
			get { return _pINExempt; }
			set
			{
				if (_pINExempt != value )
				{
					_pINExempt = value;
					OnPropertyChanged(() => PINExempt);
				}
			}
		}
		
		private bool _passbackExempt;
	
		[DataMember]
		public bool PassbackExempt
		{ 
			get { return _passbackExempt; }
			set
			{
				if (_passbackExempt != value )
				{
					_passbackExempt = value;
					OnPropertyChanged(() => PassbackExempt);
				}
			}
		}
		
		private bool _canToggleLockState;
	
		[DataMember]
		public bool CanToggleLockState
		{ 
			get { return _canToggleLockState; }
			set
			{
				if (_canToggleLockState != value )
				{
					_canToggleLockState = value;
					OnPropertyChanged(() => CanToggleLockState);
				}
			}
		}
		
		private bool _personAccessControlPropertiesIsActive;
	
		[DataMember]
		public bool PersonAccessControlPropertiesIsActive
		{ 
			get { return _personAccessControlPropertiesIsActive; }
			set
			{
				if (_personAccessControlPropertiesIsActive != value )
				{
					_personAccessControlPropertiesIsActive = value;
					OnPropertyChanged(() => PersonAccessControlPropertiesIsActive);
				}
			}
		}
		
		private Nullable<int> _pIN;
	
		[DataMember]
		public Nullable<int> PIN
		{ 
			get { return _pIN; }
			set
			{
				if (_pIN != value )
				{
					_pIN = value;
					OnPropertyChanged(() => PIN);
				}
			}
		}
		
		private System.Guid _personAccessControlPropertiesAccessProfileUid;
	
		[DataMember]
		public System.Guid PersonAccessControlPropertiesAccessProfileUid
		{ 
			get { return _personAccessControlPropertiesAccessProfileUid; }
			set
			{
				if (_personAccessControlPropertiesAccessProfileUid != value )
				{
					_personAccessControlPropertiesAccessProfileUid = value;
					OnPropertyChanged(() => PersonAccessControlPropertiesAccessProfileUid);
				}
			}
		}
		
		private System.Guid _personCredentialUid;
	
		[DataMember]
		public System.Guid PersonCredentialUid
		{ 
			get { return _personCredentialUid; }
			set
			{
				if (_personCredentialUid != value )
				{
					_personCredentialUid = value;
					OnPropertyChanged(() => PersonCredentialUid);
				}
			}
		}
		
		private System.Guid _credentialUid;
	
		[DataMember]
		public System.Guid CredentialUid
		{ 
			get { return _credentialUid; }
			set
			{
				if (_credentialUid != value )
				{
					_credentialUid = value;
					OnPropertyChanged(() => CredentialUid);
				}
			}
		}
		
		private Nullable<System.DateTimeOffset> _credentialActivationDateTime;
	
		[DataMember]
		public Nullable<System.DateTimeOffset> CredentialActivationDateTime
		{ 
			get { return _credentialActivationDateTime; }
			set
			{
				if (_credentialActivationDateTime != value )
				{
					_credentialActivationDateTime = value;
					OnPropertyChanged(() => CredentialActivationDateTime);
				}
			}
		}
		
		private Nullable<System.DateTimeOffset> _credentialExpirationDateTime;
	
		[DataMember]
		public Nullable<System.DateTimeOffset> CredentialExpirationDateTime
		{ 
			get { return _credentialExpirationDateTime; }
			set
			{
				if (_credentialExpirationDateTime != value )
				{
					_credentialExpirationDateTime = value;
					OnPropertyChanged(() => CredentialExpirationDateTime);
				}
			}
		}
		
		private short _credentialUsageCount;
	
		[DataMember]
		public short CredentialUsageCount
		{ 
			get { return _credentialUsageCount; }
			set
			{
				if (_credentialUsageCount != value )
				{
					_credentialUsageCount = value;
					OnPropertyChanged(() => CredentialUsageCount);
				}
			}
		}
		
		private bool _duressEnabled;
	
		[DataMember]
		public bool DuressEnabled
		{ 
			get { return _duressEnabled; }
			set
			{
				if (_duressEnabled != value )
				{
					_duressEnabled = value;
					OnPropertyChanged(() => DuressEnabled);
				}
			}
		}
		
		private bool _reverseBits;
	
		[DataMember]
		public bool ReverseBits
		{ 
			get { return _reverseBits; }
			set
			{
				if (_reverseBits != value )
				{
					_reverseBits = value;
					OnPropertyChanged(() => ReverseBits);
				}
			}
		}
		
		private bool _traceEnabled;
	
		[DataMember]
		public bool TraceEnabled
		{ 
			get { return _traceEnabled; }
			set
			{
				if (_traceEnabled != value )
				{
					_traceEnabled = value;
					OnPropertyChanged(() => TraceEnabled);
				}
			}
		}
		
		private bool _personCredentialIsActive;
	
		[DataMember]
		public bool PersonCredentialIsActive
		{ 
			get { return _personCredentialIsActive; }
			set
			{
				if (_personCredentialIsActive != value )
				{
					_personCredentialIsActive = value;
					OnPropertyChanged(() => PersonCredentialIsActive);
				}
			}
		}

		private GalaxySMS.Common.Enums.PersonCredentialRoles _credentialRoleCode;
	
		[DataMember]
		public GalaxySMS.Common.Enums.PersonCredentialRoles CredentialRoleCode
		{ 
			get { return _credentialRoleCode; }
			set
			{
				if (_credentialRoleCode != value )
				{
					_credentialRoleCode = value;
					OnPropertyChanged(() => CredentialRoleCode);
				}
			}
		}
		
		private GalaxySMS.Common.Enums.PersonActivationModes _credentialActivationModeCode;
	
		[DataMember]
		public GalaxySMS.Common.Enums.PersonActivationModes CredentialActivationModeCode
		{ 
			get { return _credentialActivationModeCode; }
			set
			{
				if (_credentialActivationModeCode != value )
				{
					_credentialActivationModeCode = value;
					OnPropertyChanged(() => CredentialActivationModeCode);
				}
			}
		}
		
		private GalaxySMS.Common.Enums.PersonExpirationModes _credentialExpirationModeCode;
	
		[DataMember]
		public GalaxySMS.Common.Enums.PersonExpirationModes CredentialExpirationModeCode
		{ 
			get { return _credentialExpirationModeCode; }
			set
			{
				if (_credentialExpirationModeCode != value )
				{
					_credentialExpirationModeCode = value;
					OnPropertyChanged(() => CredentialExpirationModeCode);
				}
			}
		}
		
		private GalaxySMS.Common.Enums.AccessPortalNoServerReplyBehavior _noServerReplyBehaviorCode;
	
		[DataMember]
		public GalaxySMS.Common.Enums.AccessPortalNoServerReplyBehavior NoServerReplyBehaviorCode
		{ 
			get { return _noServerReplyBehaviorCode; }
			set
			{
				if (_noServerReplyBehaviorCode != value )
				{
					_noServerReplyBehaviorCode = value;
					OnPropertyChanged(() => NoServerReplyBehaviorCode);
				}
			}
		}

		
		private GalaxySMS.Common.Enums.AccessPortalDeferToServerBehavior _deferToServerBehaviorCode;
	
		[DataMember]
		public GalaxySMS.Common.Enums.AccessPortalDeferToServerBehavior DeferToServerBehaviorCode
		{ 
			get { return _deferToServerBehaviorCode; }
			set
			{
				if (_deferToServerBehaviorCode != value )
				{
					_deferToServerBehaviorCode = value;
					OnPropertyChanged(() => DeferToServerBehaviorCode);
				}
			}
		}
		
		private System.DateTimeOffset _lastPanelImpactingChangeDate;
	
		[DataMember]
		public System.DateTimeOffset LastPanelImpactingChangeDate
		{ 
			get { return _lastPanelImpactingChangeDate; }
			set
			{
				if (_lastPanelImpactingChangeDate != value )
				{
					_lastPanelImpactingChangeDate = value;
					OnPropertyChanged(() => LastPanelImpactingChangeDate);
				}
			}
		}
		
		private byte[] _credentialBits;
	
		[DataMember]
		public byte[] CredentialBits
		{ 
			get { return _credentialBits; }
			set
			{
				if (_credentialBits != value )
				{
					_credentialBits = value;
					OnPropertyChanged(() => CredentialBits);
				}
			}
		}
		
		private string _credentialFormatDisplay;
	
		[DataMember]
		public string CredentialFormatDisplay
		{ 
			get { return _credentialFormatDisplay; }
			set
			{
				if (_credentialFormatDisplay != value )
				{
					_credentialFormatDisplay = value;
					OnPropertyChanged(() => CredentialFormatDisplay);
				}
			}
		}
		
		private short _credentialFormatCode;
	
		[DataMember]
		public short CredentialFormatCode
		{ 
			get { return _credentialFormatCode; }
			set
			{
				if (_credentialFormatCode != value )
				{
					_credentialFormatCode = value;
					OnPropertyChanged(() => CredentialFormatCode);
				}
			}
		}
		
		private short _bitCount;
	
		[DataMember]
		public short BitCount
		{ 
			get { return _bitCount; }
			set
			{
				if (_bitCount != value )
				{
					_bitCount = value;
					OnPropertyChanged(() => BitCount);
				}
			}
		}
		
		private byte[] _cardBinaryData;
	
		[DataMember]
		public byte[] CardBinaryData
		{ 
			get { return _cardBinaryData; }
			set
			{
				if (_cardBinaryData != value )
				{
					_cardBinaryData = value;
					OnPropertyChanged(() => CardBinaryData);
				}
			}
		}
		
		private string _cardNumber;
	
		[DataMember]
		public string CardNumber
		{ 
			get { return _cardNumber; }
			set
			{
				if (_cardNumber != value )
				{
					_cardNumber = value;
					OnPropertyChanged(() => CardNumber);
				}
			}
		}
		
		private bool _cardNumberIsHex;
	
		[DataMember]
		public bool CardNumberIsHex
		{ 
			get { return _cardNumberIsHex; }
			set
			{
				if (_cardNumberIsHex != value )
				{
					_cardNumberIsHex = value;
					OnPropertyChanged(() => CardNumberIsHex);
				}
			}
		}
		
		private Nullable<long> _facCompSiteCode;
	
		[DataMember]
		public Nullable<long> FacCompSiteCode
		{ 
			get { return _facCompSiteCode; }
			set
			{
				if (_facCompSiteCode != value )
				{
					_facCompSiteCode = value;
					OnPropertyChanged(() => FacCompSiteCode);
				}
			}
		}
		
		private Nullable<long> _idCode;
	
		[DataMember]
		public Nullable<long> IdCode
		{ 
			get { return _idCode; }
			set
			{
				if (_idCode != value )
				{
					_idCode = value;
					OnPropertyChanged(() => IdCode);
				}
			}
		}
		
		private Nullable<long> _issueCode;
	
		[DataMember]
		public Nullable<long> IssueCode
		{ 
			get { return _issueCode; }
			set
			{
				if (_issueCode != value )
				{
					_issueCode = value;
					OnPropertyChanged(() => IssueCode);
				}
			}
		}
		
		private System.DateTimeOffset? _lcdStartingDate;
	
		[DataMember]
		public System.DateTimeOffset? LcdStartingDate
		{ 
			get { return _lcdStartingDate; }
			set
			{
				if (_lcdStartingDate != value )
				{
					_lcdStartingDate = value;
					OnPropertyChanged(() => LcdStartingDate);
				}
			}
		}
		
		private System.DateTimeOffset? _lcdEndingDate;
	
		[DataMember]
		public System.DateTimeOffset? LcdEndingDate
		{ 
			get { return _lcdEndingDate; }
			set
			{
				if (_lcdEndingDate != value )
				{
					_lcdEndingDate = value;
					OnPropertyChanged(() => LcdEndingDate);
				}
			}
		}
		
		private string _lcdMessage;
	
		[DataMember]
		public string LcdMessage
		{ 
			get { return _lcdMessage; }
			set
			{
				if (_lcdMessage != value )
				{
					_lcdMessage = value;
					OnPropertyChanged(() => LcdMessage);
				}
			}
		}
		
		private short _lcdMessageDisplayModeCode;
	
		[DataMember]
		public short LcdMessageDisplayModeCode
		{ 
			get { return _lcdMessageDisplayModeCode; }
			set
			{
				if (_lcdMessageDisplayModeCode != value )
				{
					_lcdMessageDisplayModeCode = value;
					OnPropertyChanged(() => LcdMessageDisplayModeCode);
				}
			}
		}
		
		private System.Guid _clusterUid;
	
		[DataMember]
		public System.Guid ClusterUid
		{ 
			get { return _clusterUid; }
			set
			{
				if (_clusterUid != value )
				{
					_clusterUid = value;
					OnPropertyChanged(() => ClusterUid);
				}
			}
		}
		
		private string _clusterName;
	
		[DataMember]
		public string ClusterName
		{ 
			get { return _clusterName; }
			set
			{
				if (_clusterName != value )
				{
					_clusterName = value;
					OnPropertyChanged(() => ClusterName);
				}
			}
		}
		
		private int _clusterGroupId;
	
		[DataMember]
		public int ClusterGroupId
		{ 
			get { return _clusterGroupId; }
			set
			{
				if (_clusterGroupId != value )
				{
					_clusterGroupId = value;
					OnPropertyChanged(() => ClusterGroupId);
				}
			}
		}
		
		private int _clusterNumber;
	
		[DataMember]
		public int ClusterNumber
		{ 
			get { return _clusterNumber; }
			set
			{
				if (_clusterNumber != value )
				{
					_clusterNumber = value;
					OnPropertyChanged(() => ClusterNumber);
				}
			}
		}
		
		private string _clusterTypeCode;
	
		[DataMember]
		public string ClusterTypeCode
		{ 
			get { return _clusterTypeCode; }
			set
			{
				if (_clusterTypeCode != value )
				{
					_clusterTypeCode = value;
					OnPropertyChanged(() => ClusterTypeCode);
				}
			}
		}
		
		private bool _clusterIsActive;
	
		[DataMember]
		public bool ClusterIsActive
		{ 
			get { return _clusterIsActive; }
			set
			{
				if (_clusterIsActive != value )
				{
					_clusterIsActive = value;
					OnPropertyChanged(() => ClusterIsActive);
				}
			}
		}
		
		private short _credentialDataLength;
	
		[DataMember]
		public short CredentialDataLength
		{ 
			get { return _credentialDataLength; }
			set
			{
				if (_credentialDataLength != value )
				{
					_credentialDataLength = value;
					OnPropertyChanged(() => CredentialDataLength);
				}
			}
		}
		
		private int _panelNumber;
	
		[DataMember]
		public int PanelNumber
		{ 
			get { return _panelNumber; }
			set
			{
				if (_panelNumber != value )
				{
					_panelNumber = value;
					OnPropertyChanged(() => PanelNumber);
				}
			}
		}
		
		private int _cpuNumber;
	
		[DataMember]
		public int CpuNumber
		{ 
			get { return _cpuNumber; }
			set
			{
				if (_cpuNumber != value )
				{
					_cpuNumber = value;
					OnPropertyChanged(() => CpuNumber);
				}
			}
		}
		
		private Nullable<int> _accessGroup1;
	
		[DataMember]
		public Nullable<int> AccessGroup1
		{ 
			get { return _accessGroup1; }
			set
			{
				if (_accessGroup1 != value )
				{
					_accessGroup1 = value;
					OnPropertyChanged(() => AccessGroup1);
				}
			}
		}
		
		private Nullable<int> _accessGroup2;
	
		[DataMember]
		public Nullable<int> AccessGroup2
		{ 
			get { return _accessGroup2; }
			set
			{
				if (_accessGroup2 != value )
				{
					_accessGroup2 = value;
					OnPropertyChanged(() => AccessGroup2);
				}
			}
		}
		
		private Nullable<int> _accessGroup3;
	
		[DataMember]
		public Nullable<int> AccessGroup3
		{ 
			get { return _accessGroup3; }
			set
			{
				if (_accessGroup3 != value )
				{
					_accessGroup3 = value;
					OnPropertyChanged(() => AccessGroup3);
				}
			}
		}
		
		private Nullable<int> _accessGroup4;
	
		[DataMember]
		public Nullable<int> AccessGroup4
		{ 
			get { return _accessGroup4; }
			set
			{
				if (_accessGroup4 != value )
				{
					_accessGroup4 = value;
					OnPropertyChanged(() => AccessGroup4);
				}
			}
		}
		
		private Nullable<int> _personalAccessGroupNumber;
	
		[DataMember]
		public Nullable<int> PersonalAccessGroupNumber
		{ 
			get { return _personalAccessGroupNumber; }
			set
			{
				if (_personalAccessGroupNumber != value )
				{
					_personalAccessGroupNumber = value;
					OnPropertyChanged(() => PersonalAccessGroupNumber);
				}
			}
		}
		
		private Nullable<int> _inputOutputGroup1;
	
		[DataMember]
		public Nullable<int> InputOutputGroup1
		{ 
			get { return _inputOutputGroup1; }
			set
			{
				if (_inputOutputGroup1 != value )
				{
					_inputOutputGroup1 = value;
					OnPropertyChanged(() => InputOutputGroup1);
				}
			}
		}
		
		private Nullable<int> _inputOutputGroup2;
	
		[DataMember]
		public Nullable<int> InputOutputGroup2
		{ 
			get { return _inputOutputGroup2; }
			set
			{
				if (_inputOutputGroup2 != value )
				{
					_inputOutputGroup2 = value;
					OnPropertyChanged(() => InputOutputGroup2);
				}
			}
		}
		
		private Nullable<int> _inputOutputGroup3;
	
		[DataMember]
		public Nullable<int> InputOutputGroup3
		{ 
			get { return _inputOutputGroup3; }
			set
			{
				if (_inputOutputGroup3 != value )
				{
					_inputOutputGroup3 = value;
					OnPropertyChanged(() => InputOutputGroup3);
				}
			}
		}
		
		private Nullable<int> _inputOutputGroup4;
	
		[DataMember]
		public Nullable<int> InputOutputGroup4
		{ 
			get { return _inputOutputGroup4; }
			set
			{
				if (_inputOutputGroup4 != value )
				{
					_inputOutputGroup4 = value;
					OnPropertyChanged(() => InputOutputGroup4);
				}
			}
		}
		
		private bool _otisSplitGroupOperation;
	
		[DataMember]
		public bool OtisSplitGroupOperation
		{ 
			get { return _otisSplitGroupOperation; }
			set
			{
				if (_otisSplitGroupOperation != value )
				{
					_otisSplitGroupOperation = value;
					OnPropertyChanged(() => OtisSplitGroupOperation);
				}
			}
		}
		
		private bool _otisCimOverride;
	
		[DataMember]
		public bool OtisCimOverride
		{ 
			get { return _otisCimOverride; }
			set
			{
				if (_otisCimOverride != value )
				{
					_otisCimOverride = value;
					OnPropertyChanged(() => OtisCimOverride);
				}
			}
		}
		
		private string _cpuUid;
	
		[DataMember]
		public string CpuUid
		{ 
			get { return _cpuUid; }
			set
			{
				if (_cpuUid != value )
				{
					_cpuUid = value;
					OnPropertyChanged(() => CpuUid);
				}
			}
		}

		private string _serverAddress;
		
		[DataMember]
		public string ServerAddress
		{
			get { return _serverAddress; }
			set
			{
				if (_serverAddress != value)
				{
					_serverAddress = value;
					OnPropertyChanged(() => ServerAddress);
				}
			}
		}



		private bool _isConnected;
		
		[DataMember]
		public bool IsConnected
		{
			get { return _isConnected; }
			set
			{
				if (_isConnected != value)
				{
					_isConnected = value;
					OnPropertyChanged(() => IsConnected, true);
				}
			}
		}

	}
	
}
