//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   A galaxy input device. </summary>
    ///
    /// <remarks>   Kevin, 12/26/2018. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

	[DataContract]
	public partial class GalaxyInputDevice : DbObjectBase, ITableEntityBase
    {
        /// <summary>   The input device UID. </summary>
    	private System.Guid _inputDeviceUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the input device UID. </summary>
        ///
        /// <value> The input device UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.Guid InputDeviceUid
    	{ 
    		get { return _inputDeviceUid; }
    		set
    		{
    			if (_inputDeviceUid != value )
    			{
    				_inputDeviceUid = value;
    				OnPropertyChanged(() => InputDeviceUid);
    			}
    		}
    	}
    	
        /// <summary>   The input device supervision type UID. </summary>
    	private System.Guid _inputDeviceSupervisionTypeUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the input device supervision type UID. </summary>
        ///
        /// <value> The input device supervision type UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.Guid InputDeviceSupervisionTypeUid
    	{ 
    		get { return _inputDeviceSupervisionTypeUid; }
    		set
    		{
    			if (_inputDeviceSupervisionTypeUid != value )
    			{
    				_inputDeviceSupervisionTypeUid = value;
    				OnPropertyChanged(() => InputDeviceSupervisionTypeUid);
    			}
    		}
    	}
    	
        /// <summary>   The galaxy input mode UID. </summary>
    	private System.Guid _galaxyInputModeUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the galaxy input mode UID. </summary>
        ///
        /// <value> The galaxy input mode UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.Guid GalaxyInputModeUid
    	{ 
    		get { return _galaxyInputModeUid; }
    		set
    		{
    			if (_galaxyInputModeUid != value )
    			{
    				_galaxyInputModeUid = value;
    				OnPropertyChanged(() => GalaxyInputModeUid);
    			}
    		}
    	}
    	
        /// <summary>   Duration of the delay. </summary>
    	private int _delayDuration;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the duration of the delay. </summary>
        ///
        /// <value> The delay duration. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public int DelayDuration
    	{ 
    		get { return _delayDuration; }
    		set
    		{
    			if (_delayDuration != value )
    			{
    				_delayDuration = value;
    				OnPropertyChanged(() => DelayDuration);
    			}
    		}
    	}
    	
        /// <summary>   The galaxy input delay type UID. </summary>
    	private System.Guid _galaxyInputDelayTypeUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the galaxy input delay type UID. </summary>
        ///
        /// <value> The galaxy input delay type UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.Guid GalaxyInputDelayTypeUid
    	{ 
    		get { return _galaxyInputDelayTypeUid; }
    		set
    		{
    			if (_galaxyInputDelayTypeUid != value )
    			{
    				_galaxyInputDelayTypeUid = value;
    				OnPropertyChanged(() => GalaxyInputDelayTypeUid);
    			}
    		}
    	}
    	
        /// <summary>   True to disable, false to enable the disarmed on off log events. </summary>
    	private bool _disableDisarmedOnOffLogEvents;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>
        /// Gets or sets a value indicating whether the disarmed on off log events is disabled.
        /// </summary>
        ///
        /// <value> True if disable disarmed on off log events, false if not. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public bool DisableDisarmedOnOffLogEvents
    	{ 
    		get { return _disableDisarmedOnOffLogEvents; }
    		set
    		{
    			if (_disableDisarmedOnOffLogEvents != value )
    			{
    				_disableDisarmedOnOffLogEvents = value;
    				OnPropertyChanged(() => DisableDisarmedOnOffLogEvents);
    			}
    		}
    	}
    	
    	
        /// <summary>   True if this InputDeviceSupervisionType is normal open. </summary>
    	private bool _isNormalOpen;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets a value indicating whether a normal is open. </summary>
        ///
        /// <value> True if a normal is open, false if not. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public bool IsNormalOpen
    	{ 
    		get { return _isNormalOpen; }
    		set
    		{
    			if (_isNormalOpen != value )
    			{
    				_isNormalOpen = value;
    				OnPropertyChanged(() => IsNormalOpen);
    			}
    		}
    	}
    	
        /// <summary>   The trouble short threshold. </summary>
    	private short _troubleShortThreshold;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the trouble short threshold. </summary>
        ///
        /// <value> The trouble short threshold. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public short TroubleShortThreshold
    	{ 
    		get { return _troubleShortThreshold; }
    		set
    		{
    			if (_troubleShortThreshold != value )
    			{
    				_troubleShortThreshold = value;
    				OnPropertyChanged(() => TroubleShortThreshold);
    			}
    		}
    	}
    	
        /// <summary>   The normal change threshold. </summary>
    	private short _normalChangeThreshold;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the normal change threshold. </summary>
        ///
        /// <value> The normal change threshold. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public short NormalChangeThreshold
    	{ 
    		get { return _normalChangeThreshold; }
    		set
    		{
    			if (_normalChangeThreshold != value )
    			{
    				_normalChangeThreshold = value;
    				OnPropertyChanged(() => NormalChangeThreshold);
    			}
    		}
    	}
    	
        /// <summary>   The trouble open threshold. </summary>
    	private short _troubleOpenThreshold;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the trouble open threshold. </summary>
        ///
        /// <value> The trouble open threshold. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public short TroubleOpenThreshold
    	{ 
    		get { return _troubleOpenThreshold; }
    		set
    		{
    			if (_troubleOpenThreshold != value )
    			{
    				_troubleOpenThreshold = value;
    				OnPropertyChanged(() => TroubleOpenThreshold);
    			}
    		}
    	}
    	
        /// <summary>   True to enable, false to disable the alternate voltages. </summary>
    	private bool _alternateVoltagesEnabled;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>
        /// Gets or sets a value indicating whether the alternate voltages is enabled.
        /// </summary>
        ///
        /// <value> True if alternate voltages enabled, false if not. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public bool AlternateVoltagesEnabled
    	{ 
    		get { return _alternateVoltagesEnabled; }
    		set
    		{
    			if (_alternateVoltagesEnabled != value )
    			{
    				_alternateVoltagesEnabled = value;
    				OnPropertyChanged(() => AlternateVoltagesEnabled);
    			}
    		}
    	}
    	
        /// <summary>   The alternate trouble short threshold. </summary>
    	private short _alternateTroubleShortThreshold;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the alternate trouble short threshold. </summary>
        ///
        /// <value> The alternate trouble short threshold. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public short AlternateTroubleShortThreshold
    	{ 
    		get { return _alternateTroubleShortThreshold; }
    		set
    		{
    			if (_alternateTroubleShortThreshold != value )
    			{
    				_alternateTroubleShortThreshold = value;
    				OnPropertyChanged(() => AlternateTroubleShortThreshold);
    			}
    		}
    	}
    	
        /// <summary>   The alternate normal change threshold. </summary>
    	private short _alternateNormalChangeThreshold;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the alternate normal change threshold. </summary>
        ///
        /// <value> The alternate normal change threshold. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public short AlternateNormalChangeThreshold
    	{ 
    		get { return _alternateNormalChangeThreshold; }
    		set
    		{
    			if (_alternateNormalChangeThreshold != value )
    			{
    				_alternateNormalChangeThreshold = value;
    				OnPropertyChanged(() => AlternateNormalChangeThreshold);
    			}
    		}
    	}
    	
        /// <summary>   The alternate trouble open threshold. </summary>
    	private short _alternateTroubleOpenThreshold;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the alternate trouble open threshold. </summary>
        ///
        /// <value> The alternate trouble open threshold. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public short AlternateTroubleOpenThreshold
    	{ 
    		get { return _alternateTroubleOpenThreshold; }
    		set
    		{
    			if (_alternateTroubleOpenThreshold != value )
    			{
    				_alternateTroubleOpenThreshold = value;
    				OnPropertyChanged(() => AlternateTroubleOpenThreshold);
    			}
    		}
    	}

        /// <summary>   Name of the insert. </summary>
    	private string _insertName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the insert. </summary>
        ///
        /// <value> The name of the insert. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string InsertName
    	{ 
    		get { return _insertName; }
    		set
    		{
    			if (_insertName != value )
    			{
    				_insertName = value;
    				OnPropertyChanged(() => InsertName);
    			}
    		}
    	}
    	
        /// <summary>   The insert date. </summary>
    	private System.DateTimeOffset _insertDate;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the insert date. </summary>
        ///
        /// <value> The insert date. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.DateTimeOffset InsertDate
    	{ 
    		get { return _insertDate; }
    		set
    		{
    			if (_insertDate != value )
    			{
    				_insertDate = value;
    				OnPropertyChanged(() => InsertDate);
    			}
    		}
    	}
    	
        /// <summary>   Name of the update. </summary>
    	private string _updateName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the update. </summary>
        ///
        /// <value> The name of the update. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string UpdateName
    	{ 
    		get { return _updateName; }
    		set
    		{
    			if (_updateName != value )
    			{
    				_updateName = value;
    				OnPropertyChanged(() => UpdateName);
    			}
    		}
    	}
    	
        /// <summary>   The update. </summary>
    	private Nullable<System.DateTimeOffset> _updateDate;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the update. </summary>
        ///
        /// <value> The update date. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public Nullable<System.DateTimeOffset> UpdateDate
    	{ 
    		get { return _updateDate; }
    		set
    		{
    			if (_updateDate != value )
    			{
    				_updateDate = value;
    				OnPropertyChanged(() => UpdateDate);
    			}
    		}
    	}
    	
        /// <summary>   The concurrency value. </summary>
    	private Nullable<short> _concurrencyValue;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the concurrency value. </summary>
        ///
        /// <value> The concurrency value. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public Nullable<short> ConcurrencyValue
    	{ 
    		get { return _concurrencyValue; }
    		set
    		{
    			if (_concurrencyValue != value )
    			{
    				_concurrencyValue = value;
    				OnPropertyChanged(() => ConcurrencyValue);
    			}
    		}
    	}
    
    	
     //   /// <summary>   The input device. </summary>
    	//private InputDevice _inputDevice;

     //   ////////////////////////////////////////////////////////////////////////////////////////////////////
     //   /// <summary>   Gets or sets the input device. </summary>
     //   ///
     //   /// <value> The input device. </value>
     //   ////////////////////////////////////////////////////////////////////////////////////////////////////

    	//[DataMember]
    	//public virtual InputDevice InputDevice
    	//{ 
    	//	get { return _inputDevice; }
    	//	set
    	//	{
    	//		if (_inputDevice != value )
    	//		{
    	//			_inputDevice = value;
    	//			OnPropertyChanged(() => InputDevice);
    	//		}
    	//	}
    	//}
    	
     //   /// <summary>   Type of the input device supervision. </summary>
    	//private InputDeviceSupervisionType _inputDeviceSupervisionType;

     //   ////////////////////////////////////////////////////////////////////////////////////////////////////
     //   /// <summary>   Gets or sets the type of the input device supervision. </summary>
     //   ///
     //   /// <value> The type of the input device supervision. </value>
     //   ////////////////////////////////////////////////////////////////////////////////////////////////////

    	//[DataMember]
    	//public virtual InputDeviceSupervisionType InputDeviceSupervisionType
    	//{ 
    	//	get { return _inputDeviceSupervisionType; }
    	//	set
    	//	{
    	//		if (_inputDeviceSupervisionType != value )
    	//		{
    	//			_inputDeviceSupervisionType = value;
    	//			OnPropertyChanged(() => InputDeviceSupervisionType);
    	//		}
    	//	}
    	//}

        private ICollection<InputDeviceAlertEvent> _alertEvents;

        [DataMember]
        public ICollection<InputDeviceAlertEvent> AlertEvents
        {
            get { return _alertEvents; }
            set
            {
                if (_alertEvents != value )
                {
                    _alertEvents = value;
                    OnPropertyChanged(() => AlertEvents);
                }
            }

        }


        private ICollection<GalaxyInputArmingInputOutputGroup> _armingInputOutputGroups;

        [DataMember]
        public ICollection<GalaxyInputArmingInputOutputGroup> ArmingInputOutputGroups
        {
            get { return _armingInputOutputGroups; }
            set
            {
                if (_armingInputOutputGroups != value )
                {
                    _armingInputOutputGroups = value;
                    OnPropertyChanged(() => ArmingInputOutputGroups);
                }
            }
        }



        

        private GalaxyInputDeviceTimeSchedule _timeSchedule;

        [DataMember]
        public GalaxyInputDeviceTimeSchedule TimeSchedule
        {
            get { return _timeSchedule; }
            set
            {
                if (_timeSchedule != value )
                {
                    _timeSchedule = value;
                    OnPropertyChanged(() => TimeSchedule);
                }
            }

        }


        /// <summary>   The galaxy hardware address. </summary>
        private InputDeviceGalaxyHardwareAddress _galaxyHardwareAddress;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the galaxy hardware address. </summary>
        ///
        /// <value> The galaxy hardware address. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public virtual InputDeviceGalaxyHardwareAddress GalaxyHardwareAddress
        { 
            get { return _galaxyHardwareAddress; }
            set
            {
                if (_galaxyHardwareAddress != value )
                {
                    _galaxyHardwareAddress = value;
                    OnPropertyChanged(() => GalaxyHardwareAddress);
                }
            }
        }


    }
    
}
