//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using FluentValidation;

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   Gcs permission descriptor. </summary>
    ///
    /// <remarks>   Kevin, 12/26/2018. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

	[DataContract]
	public partial class gcsPermission : DbObjectBase
    {
        /// <summary>   Identifier for the permission. </summary>
    	private System.Guid _permissionId;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the identifier of the permission. </summary>
        ///
        /// <value> The identifier of the permission. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.Guid PermissionId
    	{ 
    		get { return _permissionId; }
    		set
    		{
    			if (_permissionId != value )
    			{
    				_permissionId = value;
    				OnPropertyChanged(() => PermissionId);
    			}
    		}
    	}
        
        /// <summary>   Identifier for the permission category. </summary>
    	private System.Guid _permissionCategoryId;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the identifier of the permission category. </summary>
        ///
        /// <value> The identifier of the permission category. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.Guid PermissionCategoryId
    	{ 
    		get { return _permissionCategoryId; }
    		set
    		{
    			if (_permissionCategoryId != value )
    			{
    				_permissionCategoryId = value;
    				OnPropertyChanged(() => PermissionCategoryId);
    			}
    		}
    	}

        /// <summary>   Identifier for the permission type. </summary>
        private System.Guid _permissionTypeId;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the identifier of the permission type. </summary>
        ///
        /// <value> The identifier of the permission type. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public System.Guid PermissionTypeId
        {
            get { return _permissionTypeId; }
            set
            {
                if (_permissionTypeId != value)
                {
                    _permissionTypeId = value;
                    OnPropertyChanged(() => PermissionTypeId);
                }
            }
        }

        /// <summary>   Name of the permission. </summary>
        private string _permissionName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the permission. </summary>
        ///
        /// <value> The name of the permission. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string PermissionName
    	{ 
    		get { return _permissionName; }
    		set
    		{
    			if (_permissionName != value )
    			{
    				_permissionName = value;
    				OnPropertyChanged(() => PermissionName);
    			}
    		}
    	}
        
        /// <summary>   Information describing the permission. </summary>
    	private string _permissionDescription;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets information describing the permission. </summary>
        ///
        /// <value> Information describing the permission. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string PermissionDescription
    	{ 
    		get { return _permissionDescription; }
    		set
    		{
    			if (_permissionDescription != value )
    			{
    				_permissionDescription = value;
    				OnPropertyChanged(() => PermissionDescription);
    			}
    		}
    	}
        
        /// <summary>   True if this gcsPermission is active. </summary>
    	private bool _isActive;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets a value indicating whether this gcsPermission is active. </summary>
        ///
        /// <value> True if this gcsPermission is active, false if not. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public bool IsActive
    	{ 
    		get { return _isActive; }
    		set
    		{
    			if (_isActive != value )
    			{
    				_isActive = value;
    				OnPropertyChanged(() => IsActive);
    			}
    		}
    	}


        private string _code;
        [DataMember]

        public string Code
        {
            get { return _code; }
            set
            {
                if (_code != value)
                {
                    _code = value;
                    OnPropertyChanged(() => Code);
                }
            }
        }

        /// <summary>   Name of the insert. </summary>
        private string _insertName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the insert. </summary>
        ///
        /// <value> The name of the insert. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string InsertName
    	{ 
    		get { return _insertName; }
    		set
    		{
    			if (_insertName != value )
    			{
    				_insertName = value;
    				OnPropertyChanged(() => InsertName);
    			}
    		}
    	}
        
        /// <summary>   The insert date. </summary>
    	private System.DateTimeOffset _insertDate;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the insert date. </summary>
        ///
        /// <value> The insert date. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.DateTimeOffset InsertDate
    	{ 
    		get { return _insertDate; }
    		set
    		{
    			if (_insertDate != value )
    			{
    				_insertDate = value;
    				OnPropertyChanged(() => InsertDate);
    			}
    		}
    	}
        
        /// <summary>   Name of the update. </summary>
    	private string _updateName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the update. </summary>
        ///
        /// <value> The name of the update. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string UpdateName
    	{ 
    		get { return _updateName; }
    		set
    		{
    			if (_updateName != value )
    			{
    				_updateName = value;
    				OnPropertyChanged(() => UpdateName);
    			}
    		}
    	}
        
        /// <summary>   The update. </summary>
    	private Nullable<System.DateTimeOffset> _updateDate;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the update. </summary>
        ///
        /// <value> The update date. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public Nullable<System.DateTimeOffset> UpdateDate
    	{ 
    		get { return _updateDate; }
    		set
    		{
    			if (_updateDate != value )
    			{
    				_updateDate = value;
    				OnPropertyChanged(() => UpdateDate);
    			}
    		}
    	}
        
        /// <summary>   The concurrency value. </summary>
    	private Nullable<short> _concurrencyValue;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the concurrency value. </summary>
        ///
        /// <value> The concurrency value. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public Nullable<short> ConcurrencyValue
    	{ 
    		get { return _concurrencyValue; }
    		set
    		{
    			if (_concurrencyValue != value )
    			{
    				_concurrencyValue = value;
    				OnPropertyChanged(() => ConcurrencyValue);
    			}
    		}
    	}

        #region Custom properties added just for client side usage

        /// <summary>   True if role has permission. </summary>
        private bool _roleHasPermission;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets a value indicating whether the role has permission. </summary>
        ///
        /// <value> True if role has permission, false if not. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public bool RoleHasPermission
        {
            get { return _roleHasPermission; }
            set
            {
                if (_roleHasPermission != value)
                {
                    _roleHasPermission = value;
                    OnPropertyChanged(() => RoleHasPermission);
                }
            }
        }

        #endregion
    }
    
}
