//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using FluentValidation;

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   The gcs application. </summary>
    ///
    /// <remarks>   Kevin, 12/26/2018. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

	[DataContract]
	public partial class gcsApplication : DbObjectBase
    {
        /// <summary>   Identifier for the application. </summary>
    	private System.Guid _applicationId;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the identifier of the application. </summary>
        ///
        /// <value> The identifier of the application. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.Guid ApplicationId
    	{ 
    		get { return _applicationId; }
    		set
    		{
    			if (_applicationId != value )
    			{
    				_applicationId = value;
    				OnPropertyChanged(() => ApplicationId);
    			}
    		}
    	}
    	
        /// <summary>   Identifier for the language. </summary>
    	private Nullable<System.Guid> _languageId;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the identifier of the language. </summary>
        ///
        /// <value> The identifier of the language. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public Nullable<System.Guid> LanguageId
    	{ 
    		get { return _languageId; }
    		set
    		{
    			if (_languageId != value )
    			{
    				_languageId = value;
    				OnPropertyChanged(() => LanguageId);
    			}
    		}
    	}
    	
     //   /// <summary>   Identifier for the system role. </summary>
    	//private Nullable<System.Guid> _systemRoleId;

     //   ////////////////////////////////////////////////////////////////////////////////////////////////////
     //   /// <summary>   Gets or sets the identifier of the system role. </summary>
     //   ///
     //   /// <value> The identifier of the system role. </value>
     //   ////////////////////////////////////////////////////////////////////////////////////////////////////

    	//[DataMember]
    	//public Nullable<System.Guid> SystemRoleId
    	//{ 
    	//	get { return _systemRoleId; }
    	//	set
    	//	{
    	//		if (_systemRoleId != value )
    	//		{
    	//			_systemRoleId = value;
    	//			OnPropertyChanged(() => SystemRoleId);
    	//		}
    	//	}
    	//}
    	
        /// <summary>   Name of the application. </summary>
    	private string _applicationName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the application. </summary>
        ///
        /// <value> The name of the application. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string ApplicationName
    	{ 
    		get { return _applicationName; }
    		set
    		{
    			if (_applicationName != value )
    			{
    				_applicationName = value;
    				OnPropertyChanged(() => ApplicationName);
    			}
    		}
    	}
    	
        /// <summary>   Information describing the application. </summary>
    	private string _applicationDescription;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets information describing the application. </summary>
        ///
        /// <value> Information describing the application. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string ApplicationDescription
    	{ 
    		get { return _applicationDescription; }
    		set
    		{
    			if (_applicationDescription != value )
    			{
    				_applicationDescription = value;
    				OnPropertyChanged(() => ApplicationDescription);
    			}
    		}
    	}
    	
        /// <summary>   Name of the insert. </summary>
    	private string _insertName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the insert. </summary>
        ///
        /// <value> The name of the insert. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string InsertName
    	{ 
    		get { return _insertName; }
    		set
    		{
    			if (_insertName != value )
    			{
    				_insertName = value;
    				OnPropertyChanged(() => InsertName);
    			}
    		}
    	}
    	
        /// <summary>   The insert date. </summary>
    	private System.DateTimeOffset _insertDate;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the insert date. </summary>
        ///
        /// <value> The insert date. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.DateTimeOffset InsertDate
    	{ 
    		get { return _insertDate; }
    		set
    		{
    			if (_insertDate != value )
    			{
    				_insertDate = value;
    				OnPropertyChanged(() => InsertDate);
    			}
    		}
    	}
    	
        /// <summary>   Name of the update. </summary>
    	private string _updateName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the update. </summary>
        ///
        /// <value> The name of the update. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string UpdateName
    	{ 
    		get { return _updateName; }
    		set
    		{
    			if (_updateName != value )
    			{
    				_updateName = value;
    				OnPropertyChanged(() => UpdateName);
    			}
    		}
    	}
    	
        /// <summary>   The update. </summary>
    	private Nullable<System.DateTimeOffset> _updateDate;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the update. </summary>
        ///
        /// <value> The update date. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public Nullable<System.DateTimeOffset> UpdateDate
    	{ 
    		get { return _updateDate; }
    		set
    		{
    			if (_updateDate != value )
    			{
    				_updateDate = value;
    				OnPropertyChanged(() => UpdateDate);
    			}
    		}
    	}
    	
        /// <summary>   The concurrency value. </summary>
    	private Nullable<short> _concurrencyValue;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the concurrency value. </summary>
        ///
        /// <value> The concurrency value. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public Nullable<short> ConcurrencyValue
    	{ 
    		get { return _concurrencyValue; }
    		set
    		{
    			if (_concurrencyValue != value )
    			{
    				_concurrencyValue = value;
    				OnPropertyChanged(() => ConcurrencyValue);
    			}
    		}
    	}
    
    	
        /// <summary>   The gcs user settings. </summary>
    	private ICollection<gcsUserSetting> _gcsUserSettings;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the gcs user settings. </summary>
        ///
        /// <value> The gcs user settings. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public virtual ICollection<gcsUserSetting> UserSettings
    	{ 
    		get { return _gcsUserSettings; }
    		set
    		{
    			if (_gcsUserSettings != value )
    			{
    				_gcsUserSettings = value;
    				OnPropertyChanged(() => UserSettings);
    			}
    		}
    	}
    	
     //   /// <summary>   The gcs entity applications. </summary>
    	//private ICollection<gcsEntityApplication> _gcsEntityApplications;

     //   ////////////////////////////////////////////////////////////////////////////////////////////////////
     //   /// <summary>   Gets or sets the gcs entity applications. </summary>
     //   ///
     //   /// <value> The gcs entity applications. </value>
     //   ////////////////////////////////////////////////////////////////////////////////////////////////////

    	//[DataMember]
    	//public virtual ICollection<gcsEntityApplication> gcsEntityApplications
    	//{ 
    	//	get { return _gcsEntityApplications; }
    	//	set
    	//	{
    	//		if (_gcsEntityApplications != value )
    	//		{
    	//			_gcsEntityApplications = value;
    	//			OnPropertyChanged(() => gcsEntityApplications);
    	//		}
    	//	}
    	//}
    	
        /// <summary>   Categories the gcs permission belongs to. </summary>
    	private ICollection<gcsPermissionCategory> _gcsPermissionCategories;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the categories the gcs permission belongs to. </summary>
        ///
        /// <value> The gcs permission categories. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public virtual ICollection<gcsPermissionCategory> PermissionCategories
    	{ 
    		get { return _gcsPermissionCategories; }
    		set
    		{
    			if (_gcsPermissionCategories != value )
    			{
    				_gcsPermissionCategories = value;
    				OnPropertyChanged(() => PermissionCategories);
    			}
    		}
    	}
    }
    
}
