//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	using FluentValidation;
    using GCS.Framework.CredentialProcessor;

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   A credential h 1030437 bit. </summary>
    ///
    /// <remarks>   Kevin, 12/26/2018. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    public partial class CredentialH1030437Bit
    {
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   A credential h 1030437 bit validator. </summary>
        ///
        /// <remarks>   Kevin, 12/26/2018. </remarks>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	class CredentialH1030437BitValidator : AbstractValidator<CredentialH1030437Bit>
    	{
            ////////////////////////////////////////////////////////////////////////////////////////////////////
            /// <summary>   Default constructor. </summary>
            ///
            /// <remarks>   Kevin, 12/26/2018. </remarks>
            ////////////////////////////////////////////////////////////////////////////////////////////////////

    		public CredentialH1030437BitValidator()
    		{
		        RuleFor(obj => obj.FacilityCode).InclusiveBetween((int)CredentialHIDH1030437BitFormat.FacilityCodeMinimumValue, (int)CredentialHIDH1030437BitFormat.FacilityCodeMaximumValue);
		        RuleFor(obj => obj.IdCode).InclusiveBetween((int)CredentialHIDH1030437BitFormat.IdCodeMinimumValue, (int)CredentialHIDH1030437BitFormat.IdCodeMaximumValue);
    		}
    	}

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets the validator. </summary>
        ///
        /// <remarks>   Kevin, 12/26/2018. </remarks>
        ///
        /// <returns>   The validator. </returns>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	protected override IValidator GetValidator()
    	{
    		return new CredentialH1030437BitValidator();
    	}
    }
    
}
