//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
    using GCS.Core.Common.Core;
    using GCS.Core.Common.Contracts;
    using FluentValidation;
    using GCS.Framework.CredentialProcessor;

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   A credential xceed identifier 40 bit. </summary>
    ///
    /// <remarks>   Kevin, 12/26/2018. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    public partial class CredentialXceedId40Bit
    {
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   A credential xceed identifier 40 bit validator. </summary>
        ///
        /// <remarks>   Kevin, 12/26/2018. </remarks>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        class CredentialXceedId40BitValidator : AbstractValidator<CredentialXceedId40Bit>
        {
            ////////////////////////////////////////////////////////////////////////////////////////////////////
            /// <summary>   Default constructor. </summary>
            ///
            /// <remarks>   Kevin, 12/26/2018. </remarks>
            ////////////////////////////////////////////////////////////////////////////////////////////////////

            public CredentialXceedId40BitValidator()
            {
                RuleFor(obj => obj.SiteCode).InclusiveBetween((short)CredentialXceedId40BitFormat.SiteCodeMinimumValue, (short)CredentialXceedId40BitFormat.SiteCodeMaximumValue);
                RuleFor(obj => obj.IdCode).InclusiveBetween((int)CredentialXceedId40BitFormat.IdCodeMinimumValue, (int)CredentialXceedId40BitFormat.IdCodeMaximumValue);
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets the validator. </summary>
        ///
        /// <remarks>   Kevin, 12/26/2018. </remarks>
        ///
        /// <returns>   The validator. </returns>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        protected override IValidator GetValidator()
        {
            return new CredentialXceedId40BitValidator();
        }
    }

}
