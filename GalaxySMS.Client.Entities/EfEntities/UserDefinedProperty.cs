//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.ObjectModel;

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
    using GCS.Core.Common.Core;
    using GCS.Core.Common.Contracts;
    using FluentValidation;
    using System.Linq;

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   A user defined property. </summary>
    ///
    /// <remarks>   Kevin, 12/26/2018. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    [DataContract]
    public partial class UserDefinedProperty : DbObjectBase, ITableEntityBase, IHasEntityMappingList
    {

        /// <summary>   The user defined property UID. </summary>
        private System.Guid _userDefinedPropertyUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the user defined property UID. </summary>
        ///
        /// <value> The user defined property UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public System.Guid UserDefinedPropertyUid
        {
            get { return _userDefinedPropertyUid; }
            set
            {
                if (_userDefinedPropertyUid != value)
                {
                    _userDefinedPropertyUid = value;
                    OnPropertyChanged(() => UserDefinedPropertyUid);
                }
            }
        }

        /// <summary>   The property type UID. </summary>
        private System.Guid _propertyTypeUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the property type UID. </summary>
        ///
        /// <value> The property type UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public System.Guid PropertyTypeUid
        {
            get { return _propertyTypeUid; }
            set
            {
                if (_propertyTypeUid != value)
                {
                    _propertyTypeUid = value;
                    OnPropertyChanged(() => PropertyTypeUid);
                }
            }
        }

        /// <summary>   The property sensitivity level UID. </summary>
        private System.Guid _propertySensitivityLevelUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the property sensitivity level UID. </summary>
        ///
        /// <value> The property sensitivity level UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public System.Guid PropertySensitivityLevelUid
        {
            get { return _propertySensitivityLevelUid; }
            set
            {
                if (_propertySensitivityLevelUid != value)
                {
                    _propertySensitivityLevelUid = value;
                    OnPropertyChanged(() => PropertySensitivityLevelUid);
                }
            }
        }


        /// <summary>   Name of the property. </summary>
        private string _propertyName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the property. </summary>
        ///
        /// <value> The name of the property. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public string PropertyName
        {
            get { return _propertyName; }
            set
            {
                if (_propertyName != value)
                {
                    _propertyName = value;
                    OnPropertyChanged(() => PropertyName);
                }
            }
        }

        /// <summary>   The display. </summary>
        private string _display;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the display. </summary>
        ///
        /// <value> The display. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public string Display
        {
            get { return _display; }
            set
            {
                if (_display != value)
                {
                    _display = value;
                    OnPropertyChanged(() => Display, true);
                }
            }
        }

        /// <summary>   The display resource key. </summary>
        private Nullable<System.Guid> _displayResourceKey;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the display resource key. </summary>
        ///
        /// <value> The display resource key. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public Nullable<System.Guid> DisplayResourceKey
        {
            get { return _displayResourceKey; }
            set
            {
                if (_displayResourceKey != value)
                {
                    _displayResourceKey = value;
                    OnPropertyChanged(() => DisplayResourceKey);
                }
            }
        }

        /// <summary>   The description. </summary>
        private string _description;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the description. </summary>
        ///
        /// <value> The description. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public string Description
        {
            get { return _description; }
            set
            {
                if (_description != value)
                {
                    _description = value;
                    OnPropertyChanged(() => Description);
                }
            }
        }

        /// <summary>   The description resource key. </summary>
        private Nullable<System.Guid> _descriptionResourceKey;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the description resource key. </summary>
        ///
        /// <value> The description resource key. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public Nullable<System.Guid> DescriptionResourceKey
        {
            get { return _descriptionResourceKey; }
            set
            {
                if (_descriptionResourceKey != value)
                {
                    _descriptionResourceKey = value;
                    OnPropertyChanged(() => DescriptionResourceKey);
                }
            }
        }

        /// <summary>   The code. </summary>
        private short _code;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the code. </summary>
        ///
        /// <value> The code. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public short Code
        {
            get { return _code; }
            set
            {
                if (_code != value)
                {
                    _code = value;
                    OnPropertyChanged(() => Code);
                }
            }
        }

        /// <summary>   The display order. </summary>
        private int _displayOrder;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the display order. </summary>
        ///
        /// <value> The display order. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public int DisplayOrder
        {
            get { return _displayOrder; }
            set
            {
                if (_displayOrder != value)
                {
                    _displayOrder = value;
                    OnPropertyChanged(() => DisplayOrder);
                }
            }
        }

        /// <summary>   True if this UserDefinedProperty is default. </summary>
        private bool _isDefault;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>
        /// Gets or sets a value indicating whether this UserDefinedProperty is default.
        /// </summary>
        ///
        /// <value> True if this UserDefinedProperty is default, false if not. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public bool IsDefault
        {
            get { return _isDefault; }
            set
            {
                if (_isDefault != value)
                {
                    _isDefault = value;
                    OnPropertyChanged(() => IsDefault);
                }
            }
        }

        /// <summary>   True if this UserDefinedProperty is active. </summary>
        private bool _isActive;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>
        /// Gets or sets a value indicating whether this UserDefinedProperty is active.
        /// </summary>
        ///
        /// <value> True if this UserDefinedProperty is active, false if not. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public bool IsActive
        {
            get { return _isActive; }
            set
            {
                if (_isActive != value)
                {
                    _isActive = value;
                    OnPropertyChanged(() => IsActive);
                }
            }
        }

        /// <summary>   Name of the insert. </summary>
        private string _insertName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the insert. </summary>
        ///
        /// <value> The name of the insert. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public string InsertName
        {
            get { return _insertName; }
            set
            {
                if (_insertName != value)
                {
                    _insertName = value;
                    OnPropertyChanged(() => InsertName);
                }
            }
        }

        /// <summary>   The insert date. </summary>
        private System.DateTimeOffset _insertDate;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the insert date. </summary>
        ///
        /// <value> The insert date. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public System.DateTimeOffset InsertDate
        {
            get { return _insertDate; }
            set
            {
                if (_insertDate != value)
                {
                    _insertDate = value;
                    OnPropertyChanged(() => InsertDate);
                }
            }
        }

        /// <summary>   Name of the update. </summary>
        private string _updateName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the update. </summary>
        ///
        /// <value> The name of the update. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public string UpdateName
        {
            get { return _updateName; }
            set
            {
                if (_updateName != value)
                {
                    _updateName = value;
                    OnPropertyChanged(() => UpdateName);
                }
            }
        }

        /// <summary>   The update. </summary>
        private Nullable<System.DateTimeOffset> _updateDate;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the update. </summary>
        ///
        /// <value> The update date. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public Nullable<System.DateTimeOffset> UpdateDate
        {
            get { return _updateDate; }
            set
            {
                if (_updateDate != value)
                {
                    _updateDate = value;
                    OnPropertyChanged(() => UpdateDate);
                }
            }
        }

        /// <summary>   The concurrency value. </summary>
        private Nullable<short> _concurrencyValue;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the concurrency value. </summary>
        ///
        /// <value> The concurrency value. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public Nullable<short> ConcurrencyValue
        {
            get { return _concurrencyValue; }
            set
            {
                if (_concurrencyValue != value)
                {
                    _concurrencyValue = value;
                    OnPropertyChanged(() => ConcurrencyValue);
                }
            }
        }

        /// <summary>   Identifier for the entity. </summary>
        private System.Guid _entityId;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the identifier of the entity. </summary>
        ///
        /// <value> The identifier of the entity. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public System.Guid EntityId
        {
            get { return _entityId; }
            set
            {
                if (_entityId != value)
                {
                    _entityId = value;
                    OnPropertyChanged(() => EntityId);
                }
            }
        }


        /// <summary>   Name of the schema. </summary>
        private string _schemaName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the schema. </summary>
        ///
        /// <value> The name of the schema. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public string SchemaName
        {
            get { return _schemaName; }
            set
            {
                if (_schemaName != value)
                {
                    _schemaName = value;
                    OnPropertyChanged(() => SchemaName);
                }
            }
        }


        /// <summary>   Name of the table. </summary>
        private string _tableName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the table. </summary>
        ///
        /// <value> The name of the table. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public string TableName
        {
            get { return _tableName; }
            set
            {
                if (_tableName != value)
                {
                    _tableName = value;
                    OnPropertyChanged(() => TableName);
                }
            }
        }


        /// <summary>   Name of the column. </summary>
        private string _columnName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the column. </summary>
        ///
        /// <value> The name of the column. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public string ColumnName
        {
            get { return _columnName; }
            set
            {
                if (_columnName != value)
                {
                    _columnName = value;
                    OnPropertyChanged(() => ColumnName);
                }
            }
        }


        /// <summary>   The user defined boolean property rules. </summary>
        private UserDefinedBooleanPropertyRule _userDefinedBooleanPropertyRules;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the user defined boolean property rules. </summary>
        ///
        /// <value> The user defined boolean property rules. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public virtual UserDefinedBooleanPropertyRule UserDefinedBooleanPropertyRules
        {
            get { return _userDefinedBooleanPropertyRules; }
            set
            {
                if (_userDefinedBooleanPropertyRules != value)
                {
                    _userDefinedBooleanPropertyRules = value;
                    OnPropertyChanged(() => UserDefinedBooleanPropertyRules);
                }
            }
        }

        /// <summary>   The user defined date property rules. </summary>
        private UserDefinedDatePropertyRule _userDefinedDatePropertyRules;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the user defined date property rules. </summary>
        ///
        /// <value> The user defined date property rules. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public virtual UserDefinedDatePropertyRule UserDefinedDatePropertyRules
        {
            get { return _userDefinedDatePropertyRules; }
            set
            {
                if (_userDefinedDatePropertyRules != value)
                {
                    _userDefinedDatePropertyRules = value;
                    OnPropertyChanged(() => UserDefinedDatePropertyRules);
                }
            }
        }

        /// <summary>   The user defined list property items. </summary>
        private ICollection<UserDefinedListPropertyItem> _userDefinedListPropertyItems;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the user defined list property items. </summary>
        ///
        /// <value> The user defined list property items. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public virtual ICollection<UserDefinedListPropertyItem> UserDefinedListPropertyItems
        {
            get { return _userDefinedListPropertyItems; }
            set
            {
                if (_userDefinedListPropertyItems != value)
                {
                    _userDefinedListPropertyItems = value;
                    OnPropertyChanged(() => UserDefinedListPropertyItems);
                }
            }
        }

        /// <summary>   The user defined list property rules. </summary>
        private UserDefinedListPropertyRule _userDefinedListPropertyRules;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the user defined list property rules. </summary>
        ///
        /// <value> The user defined list property rules. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public virtual UserDefinedListPropertyRule UserDefinedListPropertyRules
        {
            get { return _userDefinedListPropertyRules; }
            set
            {
                if (_userDefinedListPropertyRules != value)
                {
                    _userDefinedListPropertyRules = value;
                    OnPropertyChanged(() => UserDefinedListPropertyRules);
                }
            }
        }

        /// <summary>   The user defined number property rules. </summary>
        private UserDefinedNumberPropertyRule _userDefinedNumberPropertyRules;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the user defined number property rules. </summary>
        ///
        /// <value> The user defined number property rules. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public virtual UserDefinedNumberPropertyRule UserDefinedNumberPropertyRules
        {
            get { return _userDefinedNumberPropertyRules; }
            set
            {
                if (_userDefinedNumberPropertyRules != value)
                {
                    _userDefinedNumberPropertyRules = value;
                    OnPropertyChanged(() => UserDefinedNumberPropertyRules);
                }
            }
        }

        /// <summary>   Type of the user defined property. </summary>
        private UserDefinedPropertyType _userDefinedPropertyType;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the type of the user defined property. </summary>
        ///
        /// <value> The type of the user defined property. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public virtual UserDefinedPropertyType UserDefinedPropertyType
        {
            get { return _userDefinedPropertyType; }
            set
            {
                if (_userDefinedPropertyType != value)
                {
                    _userDefinedPropertyType = value;
                    OnPropertyChanged(() => UserDefinedPropertyType);
                }
            }
        }

        /// <summary>   The user defined text property rules. </summary>
        private UserDefinedTextPropertyRule _userDefinedTextPropertyRules;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the user defined text property rules. </summary>
        ///
        /// <value> The user defined text property rules. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public virtual UserDefinedTextPropertyRule UserDefinedTextPropertyRules
        {
            get { return _userDefinedTextPropertyRules; }
            set
            {
                if (_userDefinedTextPropertyRules != value)
                {
                    _userDefinedTextPropertyRules = value;
                    OnPropertyChanged(() => UserDefinedTextPropertyRules);
                }
            }
        }

        /// <summary>   The user defined unique identifier property rules. </summary>
        private UserDefinedGuidPropertyRule _userDefinedGuidPropertyRules;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the user defined unique identifier property rules. </summary>
        ///
        /// <value> The user defined unique identifier property rules. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public virtual UserDefinedGuidPropertyRule UserDefinedGuidPropertyRules
        {
            get { return _userDefinedGuidPropertyRules; }
            set
            {
                if (_userDefinedGuidPropertyRules != value)
                {
                    _userDefinedGuidPropertyRules = value;
                    OnPropertyChanged(() => UserDefinedGuidPropertyRules);
                }
            }
        }


        /// <summary>   The gcs entity. </summary>
        private gcsEntity _gcsEntity;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the gcs entity. </summary>
        ///
        /// <value> The gcs entity. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public virtual gcsEntity gcsEntity
        {
            get { return _gcsEntity; }
            set
            {
                if (_gcsEntity != value)
                {
                    _gcsEntity = value;
                    OnPropertyChanged(() => gcsEntity);
                }
            }
        }


        #region Implementation of IHasEntityMappingList

        /// <summary>   List of identifiers for the entities. </summary>
        private ICollection<Guid> _entityIds;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets a list of identifiers of the entities. </summary>
        ///
        /// <value> A list of identifiers of the entities. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public virtual ICollection<Guid> EntityIds
        {
            get { return _entityIds; }
            set
            {
                if (_entityIds != value)
                {
                    _entityIds = value;
                    OnPropertyChanged(() => EntityIds);
                }
            }
        }

        /// <summary>   The mapped entities permission levels. </summary>
        private ICollection<EntityIdEntityMapPermissionLevel> _MappedEntitiesPermissionLevels;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the mapped entities permission levels. </summary>
        ///
        /// <value> The mapped entities permission levels. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public virtual ICollection<EntityIdEntityMapPermissionLevel> MappedEntitiesPermissionLevels
        {
            get { return _MappedEntitiesPermissionLevels; }
            set
            {
                if (_MappedEntitiesPermissionLevels != value)
                {
                    _MappedEntitiesPermissionLevels = value;
                    OnPropertyChanged(() => MappedEntitiesPermissionLevels);
                }
            }
        }
        #endregion

        /// <summary>   The property sensitivity level. </summary>
        private PropertySensitivityLevel _propertySensitivityLevel;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the property sensitivity level. </summary>
        ///
        /// <value> The property sensitivity level. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public virtual PropertySensitivityLevel PropertySensitivityLevel
        {
            get { return _propertySensitivityLevel; }
            set
            {
                if (_propertySensitivityLevel != value)
                {
                    _propertySensitivityLevel = value;
                    OnPropertyChanged(() => PropertySensitivityLevel);
                }
            }
        }


        /// <summary>   Name of the unique property. </summary>
        private string _UniquePropertyName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the unique property. </summary>
        ///
        /// <value> The name of the unique property. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public string UniquePropertyName
        {
            get { return _UniquePropertyName; }
            set
            {
                if (_UniquePropertyName != value)
                {
                    _UniquePropertyName = value;
                    OnPropertyChanged(() => UniquePropertyName, false);
                }
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets the empty content. </summary>
        ///
        /// <value> The empty content. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public string EmptyContent
        {
            get
            {
                if (PropertyTypeUid == GalaxySMS.Common.Constants.UserDefinedPropertyTypeIds.Text && this.UserDefinedTextPropertyRules != null)
                {
                    if (this.UserDefinedTextPropertyRules.EmptyContent == "~")
                        return this.Display;
                    return this.UserDefinedTextPropertyRules.EmptyContent;
                }
                else if(PropertyTypeUid == GalaxySMS.Common.Constants.UserDefinedPropertyTypeIds.Number && this.UserDefinedNumberPropertyRules != null)
                {
                    if (this.UserDefinedNumberPropertyRules.EmptyContent == "~")
                        return this.Display;
                    return this.UserDefinedNumberPropertyRules.EmptyContent;
                }
                else if (PropertyTypeUid == GalaxySMS.Common.Constants.UserDefinedPropertyTypeIds.Date && this.UserDefinedDatePropertyRules != null)
                {
                    if (this.UserDefinedDatePropertyRules.EmptyContent == "~")
                        return this.Display;
                    return this.UserDefinedDatePropertyRules.EmptyContent;
                }
                return this.Display;
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets a value indicating whether this UserDefinedProperty is required. </summary>
        ///
        /// <value> True if this UserDefinedProperty is required, false if not. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public bool IsRequired
        {
            get
            {
                if (PropertyTypeUid == GalaxySMS.Common.Constants.UserDefinedPropertyTypeIds.Text && this.UserDefinedTextPropertyRules != null)
                {
                    return this.UserDefinedTextPropertyRules.IsRequired || this.UserDefinedTextPropertyRules.MinimumLength > 0;
                }
                else if (PropertyTypeUid == GalaxySMS.Common.Constants.UserDefinedPropertyTypeIds.Number && this.UserDefinedNumberPropertyRules != null)
                {
                    return this.UserDefinedNumberPropertyRules.IsRequired;
                }
                else if (PropertyTypeUid == GalaxySMS.Common.Constants.UserDefinedPropertyTypeIds.Date && this.UserDefinedDatePropertyRules != null)
                {
                    return !this.UserDefinedDatePropertyRules.AllowNull;
                }
                else if (PropertyTypeUid == GalaxySMS.Common.Constants.UserDefinedPropertyTypeIds.Guid && this.UserDefinedGuidPropertyRules != null)
                {
                    return this.UserDefinedGuidPropertyRules.IsRequired;
                }
                return false;
            }
        }
        /// <summary>   The sensitivity levels. </summary>
        private ObservableCollection<PropertySensitivityLevel> _sensitivityLevels;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the sensitivity levels. </summary>
        ///
        /// <value> The sensitivity levels. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public ObservableCollection<PropertySensitivityLevel> SensitivityLevels
        {
            get { return _sensitivityLevels; }
            set
            {
                if (_sensitivityLevels != value)
                {
                    _sensitivityLevels = value;
                    OnPropertyChanged(() => SensitivityLevels, false);
                }
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets the sensitivity level display. </summary>
        ///
        /// <value> The sensitivity level display. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public string SensitivityLevelDisplay
        {
            get
            {
                var selectedSensitivityLevel = SensitivityLevels.Where(o => o.PropertySensitivityLevelUid == PropertySensitivityLevelUid).FirstOrDefault();
                return selectedSensitivityLevel != null ? selectedSensitivityLevel.Display : string.Empty;
            }
        }
    }

}
