//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
    using GCS.Core.Common.Core;
    using FluentValidation;

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   An assa access point. </summary>
    ///
    /// <remarks>   Kevin, 12/26/2018. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    [DataContract]
	public partial class AssaAccessPoint : DbObjectBase
    {

        /*	// Move to partial class
        using System;
        using System.Collections.Generic;
        using System.Runtime.Serialization;
        using GCS.Core.Common.Core;
        using FluentValidation;
        using System.Collections.ObjectModel;
        using GCS.Core.Common.Extensions;

        namespace GalaxySMS.Client.Entities
        {
            public partial class AssaAccessPoint
            {
                public AssaAccessPoint()
                {
                    Initialize();
                }

                public AssaAccessPoint(AssaAccessPoint e)
                {
                    Initialize(e);
                }

                public void Initialize()
                {
            }

                public void Initialize(AssaAccessPoint e)
                {
                    Initialize();
                    if( e == null )
                        return;
                    this.AssaAccessPointUid = e.AssaAccessPointUid;
                    this.AssaDsrUid = e.AssaDsrUid;
                    this.AssaAccessPointTypeUid = e.AssaAccessPointTypeUid;
                    this.SerialNumber = e.SerialNumber;
                    this.AccessPointName = e.AccessPointName;
                    this.FirmwareVersion = e.FirmwareVersion;
                    this.AccessPointTypeDescription = e.AccessPointTypeDescription;
                    this.InsertName = e.InsertName;
                    this.InsertDate = e.InsertDate;
                    this.UpdateName = e.UpdateName;
                    this.UpdateDate = e.UpdateDate;
                    this.ConcurrencyValue = e.ConcurrencyValue;

                }

                public AssaAccessPoint Clone(AssaAccessPoint e)
                {
                    return new AssaAccessPoint(e);
                }

                public bool Equals(AssaAccessPoint other)
                {
                    return base.Equals(other);
                }

                public bool IsPrimaryKeyEqual(AssaAccessPoint other)
                {
                    if( other == null ) 
                        return false;

                    if(other.AssaAccessPointUid != this.AssaAccessPointUid )
                        return false;
                    return true;
                }

                public override int GetHashCode()
                {
                    return base.GetHashCode();
                }

                public override string ToString()
                {
                    return base.ToString();
                }
            }
        }
        */


        /// <summary>   The assa access point UID. </summary>
        private System.Guid _assaAccessPointUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the assa access point UID. </summary>
        ///
        /// <value> The assa access point UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.Guid AssaAccessPointUid
    	{ 
    		get { return _assaAccessPointUid; }
    		set
    		{
    			if (_assaAccessPointUid != value )
    			{
    				_assaAccessPointUid = value;
    				OnPropertyChanged(() => AssaAccessPointUid);
    			}
    		}
    	}
    	
        /// <summary>   The assa dsr UID. </summary>
    	private System.Guid _assaDsrUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the assa dsr UID. </summary>
        ///
        /// <value> The assa dsr UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.Guid AssaDsrUid
    	{ 
    		get { return _assaDsrUid; }
    		set
    		{
    			if (_assaDsrUid != value )
    			{
    				_assaDsrUid = value;
    				OnPropertyChanged(() => AssaDsrUid);
    			}
    		}
    	}
    	
        /// <summary>   The assa access point type UID. </summary>
    	private System.Guid _assaAccessPointTypeUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the assa access point type UID. </summary>
        ///
        /// <value> The assa access point type UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.Guid AssaAccessPointTypeUid
    	{ 
    		get { return _assaAccessPointTypeUid; }
    		set
    		{
    			if (_assaAccessPointTypeUid != value )
    			{
    				_assaAccessPointTypeUid = value;
    				OnPropertyChanged(() => AssaAccessPointTypeUid);
    			}
    		}
    	}
    	
        /// <summary>   The serial number. </summary>
    	private string _serialNumber;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the serial number. </summary>
        ///
        /// <value> The serial number. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string SerialNumber
    	{ 
    		get { return _serialNumber; }
    		set
    		{
    			if (_serialNumber != value )
    			{
    				_serialNumber = value;
    				OnPropertyChanged(() => SerialNumber);
    			}
    		}
    	}
    	
        /// <summary>   Name of the access point. </summary>
    	private string _accessPointName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the access point. </summary>
        ///
        /// <value> The name of the access point. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string AccessPointName
    	{ 
    		get { return _accessPointName; }
    		set
    		{
    			if (_accessPointName != value )
    			{
    				_accessPointName = value;
    				OnPropertyChanged(() => AccessPointName);
    			}
    		}
    	}
    	
        /// <summary>   The firmware version. </summary>
    	private string _firmwareVersion;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the firmware version. </summary>
        ///
        /// <value> The firmware version. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string FirmwareVersion
    	{ 
    		get { return _firmwareVersion; }
    		set
    		{
    			if (_firmwareVersion != value )
    			{
    				_firmwareVersion = value;
    				OnPropertyChanged(() => FirmwareVersion);
    			}
    		}
    	}
    	
        /// <summary>   Name of the insert. </summary>
    	private string _insertName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the insert. </summary>
        ///
        /// <value> The name of the insert. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string InsertName
    	{ 
    		get { return _insertName; }
    		set
    		{
    			if (_insertName != value )
    			{
    				_insertName = value;
    				OnPropertyChanged(() => InsertName);
    			}
    		}
    	}
    	
        /// <summary>   The insert date. </summary>
    	private System.DateTimeOffset _insertDate;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the insert date. </summary>
        ///
        /// <value> The insert date. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.DateTimeOffset InsertDate
    	{ 
    		get { return _insertDate; }
    		set
    		{
    			if (_insertDate != value )
    			{
    				_insertDate = value;
    				OnPropertyChanged(() => InsertDate);
    			}
    		}
    	}
    	
        /// <summary>   Name of the update. </summary>
    	private string _updateName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the update. </summary>
        ///
        /// <value> The name of the update. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string UpdateName
    	{ 
    		get { return _updateName; }
    		set
    		{
    			if (_updateName != value )
    			{
    				_updateName = value;
    				OnPropertyChanged(() => UpdateName);
    			}
    		}
    	}
    	
        /// <summary>   The update. </summary>
    	private Nullable<System.DateTimeOffset> _updateDate;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the update. </summary>
        ///
        /// <value> The update date. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public Nullable<System.DateTimeOffset> UpdateDate
    	{ 
    		get { return _updateDate; }
    		set
    		{
    			if (_updateDate != value )
    			{
    				_updateDate = value;
    				OnPropertyChanged(() => UpdateDate);
    			}
    		}
    	}
    	
        /// <summary>   The concurrency value. </summary>
    	private Nullable<short> _concurrencyValue;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the concurrency value. </summary>
        ///
        /// <value> The concurrency value. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public Nullable<short> ConcurrencyValue
    	{ 
    		get { return _concurrencyValue; }
    		set
    		{
    			if (_concurrencyValue != value )
    			{
    				_concurrencyValue = value;
    				OnPropertyChanged(() => ConcurrencyValue);
    			}
    		}
    	}

        /// <summary>   The site UID. </summary>
        private System.Guid _siteUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the site UID. </summary>
        ///
        /// <value> The site UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public System.Guid SiteUid
        {
            get { return _siteUid; }
            set
            {
                if (_siteUid != value)
                {
                    _siteUid = value;
                    OnPropertyChanged(() => SiteUid);
                }
            }
        }

        /// <summary>   Unique identifier for the assa. </summary>
        private string _assaUniqueId;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets a unique identifier of the assa. </summary>
        ///
        /// <value> Unique identifier of the assa. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public string AssaUniqueId
        {
            get { return _assaUniqueId; }
            set
            {
                if (_assaUniqueId != value)
                {
                    _assaUniqueId = value;
                    OnPropertyChanged(() => AssaUniqueId);
                }
            }
        }

        /// <summary>   Information describing the access point type. </summary>
        private string _accessPointTypeDescription;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets information describing the access point type. </summary>
        ///
        /// <value> Information describing the access point type. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public string AccessPointTypeDescription
        {
            get { return _accessPointTypeDescription; }
            set
            {
                if (_accessPointTypeDescription != value)
                {
                    _accessPointTypeDescription = value;
                    OnPropertyChanged(() => AccessPointTypeDescription);
                }
            }
        }

        /// <summary>   The access point. </summary>
        private AssaAbloyDsr.AccessPoint _accessPoint;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the access point. </summary>
        ///
        /// <value> The access point. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public AssaAbloyDsr.AccessPoint AccessPoint
        {
            get { return _accessPoint; }
            set
            {
                if (_accessPoint != value)
                {
                    _accessPoint = value;
                    OnPropertyChanged(() => AccessPoint, false);
                }
            }
        }

        //private AssaAccessPointType _assaAccessPointType;

        //[DataMember]
        //public virtual AssaAccessPointType AssaAccessPointType
        //{
        //    get { return _assaAccessPointType; }
        //    set
        //    {
        //        if (_assaAccessPointType != value)
        //        {
        //            _assaAccessPointType = value;
        //            OnPropertyChanged(() => AssaAccessPointType);
        //        }
        //    }
        //}

        //private AssaDsr _assaDsr;

        //[DataMember]
        //public virtual AssaDsr AssaDsr
        //{
        //    get { return _assaDsr; }
        //    set
        //    {
        //        if (_assaDsr != value)
        //        {
        //            _assaDsr = value;
        //            OnPropertyChanged(() => AssaDsr);
        //        }
        //    }
        //}

        //private Site _site;

        //[DataMember]
        //public virtual Site Site
        //{
        //    get { return _site; }
        //    set
        //    {
        //        if (_site != value)
        //        {
        //            _site = value;
        //            OnPropertyChanged(() => Site);
        //        }
        //    }
        //}

    }

}
