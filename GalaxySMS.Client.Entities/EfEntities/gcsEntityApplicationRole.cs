//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using FluentValidation;

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   The gcs entity application role. </summary>
    ///
    /// <remarks>   Kevin, 12/26/2018. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

	[DataContract]
	public partial class gcsEntityApplicationRole : DbObjectBase
    {
        
        /// <summary>   Identifier for the entity application role. </summary>
    	private System.Guid _entityApplicationRoleId;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the identifier of the entity application role. </summary>
        ///
        /// <value> The identifier of the entity application role. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.Guid EntityApplicationRoleId
    	{ 
    		get { return _entityApplicationRoleId; }
    		set
    		{
    			if (_entityApplicationRoleId != value )
    			{
    				_entityApplicationRoleId = value;
    				OnPropertyChanged(() => EntityApplicationRoleId);
    			}
    		}
    	}
        
        /// <summary>   Identifier for the role. </summary>
    	private System.Guid _roleId;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the identifier of the role. </summary>
        ///
        /// <value> The identifier of the role. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.Guid RoleId
    	{ 
    		get { return _roleId; }
    		set
    		{
    			if (_roleId != value )
    			{
    				_roleId = value;
    				OnPropertyChanged(() => RoleId);
    			}
    		}
    	}
        
        /// <summary>   Identifier for the entity application. </summary>
    	private System.Guid _entityApplicationId;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the identifier of the entity application. </summary>
        ///
        /// <value> The identifier of the entity application. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.Guid EntityApplicationId
    	{ 
    		get { return _entityApplicationId; }
    		set
    		{
    			if (_entityApplicationId != value )
    			{
    				_entityApplicationId = value;
    				OnPropertyChanged(() => EntityApplicationId);
    			}
    		}
    	}
        
        /// <summary>   Name of the insert. </summary>
    	private string _insertName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the insert. </summary>
        ///
        /// <value> The name of the insert. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string InsertName
    	{ 
    		get { return _insertName; }
    		set
    		{
    			if (_insertName != value )
    			{
    				_insertName = value;
    				OnPropertyChanged(() => InsertName);
    			}
    		}
    	}
        
        /// <summary>   The insert date. </summary>
    	private System.DateTimeOffset _insertDate;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the insert date. </summary>
        ///
        /// <value> The insert date. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.DateTimeOffset InsertDate
    	{ 
    		get { return _insertDate; }
    		set
    		{
    			if (_insertDate != value )
    			{
    				_insertDate = value;
    				OnPropertyChanged(() => InsertDate);
    			}
    		}
    	}
        
        /// <summary>   Name of the update. </summary>
    	private string _updateName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the update. </summary>
        ///
        /// <value> The name of the update. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string UpdateName
    	{ 
    		get { return _updateName; }
    		set
    		{
    			if (_updateName != value )
    			{
    				_updateName = value;
    				OnPropertyChanged(() => UpdateName);
    			}
    		}
    	}
        
        /// <summary>   The update. </summary>
    	private Nullable<System.DateTimeOffset> _updateDate;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the update. </summary>
        ///
        /// <value> The update date. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public Nullable<System.DateTimeOffset> UpdateDate
    	{ 
    		get { return _updateDate; }
    		set
    		{
    			if (_updateDate != value )
    			{
    				_updateDate = value;
    				OnPropertyChanged(() => UpdateDate);
    			}
    		}
    	}
        
        /// <summary>   The concurrency value. </summary>
    	private Nullable<short> _concurrencyValue;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the concurrency value. </summary>
        ///
        /// <value> The concurrency value. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public Nullable<short> ConcurrencyValue
    	{ 
    		get { return _concurrencyValue; }
    		set
    		{
    			if (_concurrencyValue != value )
    			{
    				_concurrencyValue = value;
    				OnPropertyChanged(() => ConcurrencyValue);
    			}
    		}
    	}
    
        
        /// <summary>   The gcs entity application. </summary>
    	private gcsEntityApplication _gcsEntityApplication;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the gcs entity application. </summary>
        ///
        /// <value> The gcs entity application. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public virtual gcsEntityApplication gcsEntityApplication
    	{ 
    		get { return _gcsEntityApplication; }
    		set
    		{
    			if (_gcsEntityApplication != value )
    			{
    				_gcsEntityApplication = value;
    				OnPropertyChanged(() => gcsEntityApplication);
    			}
    		}
    	}
        
        /// <summary>   The gcs role. </summary>
    	private gcsRole _gcsRole;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the gcs role. </summary>
        ///
        /// <value> The gcs role. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public virtual gcsRole gcsRole
    	{ 
    		get { return _gcsRole; }
    		set
    		{
    			if (_gcsRole != value )
    			{
    				_gcsRole = value;
    				OnPropertyChanged(() => gcsRole);
    			}
    		}
    	}
        
     //   /// <summary>   The gcs user entity application roles. </summary>
    	//private ICollection<gcsUserEntityApplicationRole> _gcsUserEntityApplicationRoles;

     //   ////////////////////////////////////////////////////////////////////////////////////////////////////
     //   /// <summary>   Gets or sets the gcs user entity application roles. </summary>
     //   ///
     //   /// <value> The gcs user entity application roles. </value>
     //   ////////////////////////////////////////////////////////////////////////////////////////////////////

    	//[DataMember]
    	//public virtual ICollection<gcsUserEntityApplicationRole> gcsUserEntityApplicationRoles
    	//{ 
    	//	get { return _gcsUserEntityApplicationRoles; }
    	//	set
    	//	{
    	//		if (_gcsUserEntityApplicationRoles != value )
    	//		{
    	//			_gcsUserEntityApplicationRoles = value;
    	//			OnPropertyChanged(() => gcsUserEntityApplicationRoles);
    	//		}
    	//	}
    	//}
    }
    
}
