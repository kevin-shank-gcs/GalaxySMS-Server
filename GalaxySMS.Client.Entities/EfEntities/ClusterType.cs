//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using FluentValidation;

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   A cluster type. </summary>
    ///
    /// <remarks>   Kevin, 12/26/2018. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

	[DataContract]
	public partial class ClusterType : DbObjectBase
    {
    
    /*	// Move to partial class
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using FluentValidation;
    using System.Collections.ObjectModel;
    using GCS.Core.Common.Extensions;
    
    namespace GalaxySMS.Client.Entities
    {
        public partial class ClusterType
        {
        	public ClusterType()
        	{
        		Initialize();
        	}
        
        	public ClusterType(ClusterType e)
        	{
        		Initialize(e);
        	}
        
        	public void Initialize()
        	{
        		this.Clusters = new HashSet<Cluster>();
        		this.ClusterTypeClusterCommands = new HashSet<ClusterTypeClusterCommand>();
        }
        
        	public void Initialize(ClusterType e)
        	{
        		Initialize();
        		if( e == null )
        			return;
        		this.ClusterTypeUid = e.ClusterTypeUid;
        		this.Display = e.Display;
        		this.DisplayResourceKey = e.DisplayResourceKey;
        		this.Description = e.Description;
        		this.DescriptionResourceKey = e.DescriptionResourceKey;
        		this.TypeCode = e.TypeCode;
        		this.IsDefault = e.IsDefault;
        		this.IsActive = e.IsActive;
        		this.InsertName = e.InsertName;
        		this.InsertDate = e.InsertDate;
        		this.UpdateName = e.UpdateName;
        		this.UpdateDate = e.UpdateDate;
        		this.ConcurrencyValue = e.ConcurrencyValue;
        		this.Clusters = e.Clusters.ToCollection();
        		this.ClusterTypeClusterCommands = e.ClusterTypeClusterCommands.ToCollection();
        		
        	}
        
        	public ClusterType Clone(ClusterType e)
        	{
        		return new ClusterType(e);
        	}
        
        	public bool Equals(ClusterType other)
        	{
        		return base.Equals(other);
        	}
        	
        	public bool IsPrimaryKeyEqual(ClusterType other)
        	{
        		if( other == null ) 
        			return false;
        
        		if(other.ClusterTypeUid != this.ClusterTypeUid )
        			return false;
        		return true;
        	}
        
        	public override int GetHashCode()
        	{
        		return base.GetHashCode();
        	}
        
        	public override string ToString()
        	{
        		return base.ToString();
        	}
        }
    }
    */
    
    	
        /// <summary>   The cluster type UID. </summary>
    	private System.Guid _clusterTypeUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the cluster type UID. </summary>
        ///
        /// <value> The cluster type UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.Guid ClusterTypeUid
    	{ 
    		get { return _clusterTypeUid; }
    		set
    		{
    			if (_clusterTypeUid != value )
    			{
    				_clusterTypeUid = value;
    				OnPropertyChanged(() => ClusterTypeUid);
    			}
    		}
    	}
    	
        /// <summary>   The display. </summary>
    	private string _display;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the display. </summary>
        ///
        /// <value> The display. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string Display
    	{ 
    		get { return _display; }
    		set
    		{
    			if (_display != value )
    			{
    				_display = value;
    				OnPropertyChanged(() => Display);
    			}
    		}
    	}
    	
        /// <summary>   The display resource key. </summary>
    	private Nullable<System.Guid> _displayResourceKey;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the display resource key. </summary>
        ///
        /// <value> The display resource key. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public Nullable<System.Guid> DisplayResourceKey
    	{ 
    		get { return _displayResourceKey; }
    		set
    		{
    			if (_displayResourceKey != value )
    			{
    				_displayResourceKey = value;
    				OnPropertyChanged(() => DisplayResourceKey);
    			}
    		}
    	}
    	
        /// <summary>   The description. </summary>
    	private string _description;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the description. </summary>
        ///
        /// <value> The description. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string Description
    	{ 
    		get { return _description; }
    		set
    		{
    			if (_description != value )
    			{
    				_description = value;
    				OnPropertyChanged(() => Description);
    			}
    		}
    	}
    	
        /// <summary>   The description resource key. </summary>
    	private Nullable<System.Guid> _descriptionResourceKey;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the description resource key. </summary>
        ///
        /// <value> The description resource key. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public Nullable<System.Guid> DescriptionResourceKey
    	{ 
    		get { return _descriptionResourceKey; }
    		set
    		{
    			if (_descriptionResourceKey != value )
    			{
    				_descriptionResourceKey = value;
    				OnPropertyChanged(() => DescriptionResourceKey);
    			}
    		}
    	}
    	
        /// <summary>   The type code. </summary>
    	private string _typeCode;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the type code. </summary>
        ///
        /// <value> The type code. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string TypeCode
    	{ 
    		get { return _typeCode; }
    		set
    		{
    			if (_typeCode != value )
    			{
    				_typeCode = value;
    				OnPropertyChanged(() => TypeCode);
    			}
    		}
    	}

        //private Nullable<bool> _isDefault;

        //[DataMember]
        //public Nullable<bool> IsDefault
        //{ 
        //	get { return _isDefault; }
        //	set
        //	{
        //		if (_isDefault != value )
        //		{
        //			_isDefault = value;
        //			OnPropertyChanged(() => IsDefault);
        //		}
        //	}
        //}

        //private Nullable<bool> _isActive;

        //[DataMember]
        //public Nullable<bool> IsActive
        //{ 
        //	get { return _isActive; }
        //	set
        //	{
        //		if (_isActive != value )
        //		{
        //			_isActive = value;
        //			OnPropertyChanged(() => IsActive);
        //		}
        //	}
        //}

        /// <summary>   True if this ClusterType is default. </summary>
        private bool _isDefault;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets a value indicating whether this ClusterType is default. </summary>
        ///
        /// <value> True if this ClusterType is default, false if not. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public bool IsDefault
        {
            get { return _isDefault; }
            set
            {
                if (_isDefault != value)
                {
                    _isDefault = value;
                    OnPropertyChanged(() => IsDefault);
                }
            }
        }

        /// <summary>   True if this ClusterType is active. </summary>
        private bool _isActive;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets a value indicating whether this ClusterType is active. </summary>
        ///
        /// <value> True if this ClusterType is active, false if not. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public bool IsActive
        {
            get { return _isActive; }
            set
            {
                if (_isActive != value)
                {
                    _isActive = value;
                    OnPropertyChanged(() => IsActive);
                }
            }
        }


//        /// <summary>   The clusters. </summary>
//        private ICollection<Cluster> _clusters;
    
////    	[DataMember]

//        ////////////////////////////////////////////////////////////////////////////////////////////////////
//        /// <summary>   Gets or sets the clusters. </summary>
//        ///
//        /// <value> The clusters. </value>
//        ////////////////////////////////////////////////////////////////////////////////////////////////////

//    	public virtual ICollection<Cluster> Clusters
//    	{ 
//    		get { return _clusters; }
//    		set
//    		{
//    			if (_clusters != value )
//    			{
//    				_clusters = value;
//    				OnPropertyChanged(() => Clusters);
//    			}
//    		}
//    	}
    	
     //   /// <summary>   The cluster type cluster commands. </summary>
    	//private ICollection<ClusterTypeClusterCommand> _clusterTypeClusterCommands;

     //   ////////////////////////////////////////////////////////////////////////////////////////////////////
     //   /// <summary>   Gets or sets the cluster type cluster commands. </summary>
     //   ///
     //   /// <value> The cluster type cluster commands. </value>
     //   ////////////////////////////////////////////////////////////////////////////////////////////////////

    	//[DataMember]
    	//public virtual ICollection<ClusterTypeClusterCommand> ClusterTypeClusterCommands
    	//{ 
    	//	get { return _clusterTypeClusterCommands; }
    	//	set
    	//	{
    	//		if (_clusterTypeClusterCommands != value )
    	//		{
    	//			_clusterTypeClusterCommands = value;
    	//			OnPropertyChanged(() => ClusterTypeClusterCommands);
    	//		}
    	//	}
    	//}

        /// <summary>   Name of the insert. </summary>
        private string _insertName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the insert. </summary>
        ///
        /// <value> The name of the insert. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public string InsertName
        {
            get { return _insertName; }
            set
            {
                if (_insertName != value)
                {
                    _insertName = value;
                    OnPropertyChanged(() => InsertName);
                }
            }
        }

        /// <summary>   The insert date. </summary>
        private System.DateTimeOffset _insertDate;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the insert date. </summary>
        ///
        /// <value> The insert date. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public System.DateTimeOffset InsertDate
        {
            get { return _insertDate; }
            set
            {
                if (_insertDate != value)
                {
                    _insertDate = value;
                    OnPropertyChanged(() => InsertDate);
                }
            }
        }

        /// <summary>   Name of the update. </summary>
        private string _updateName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the update. </summary>
        ///
        /// <value> The name of the update. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public string UpdateName
        {
            get { return _updateName; }
            set
            {
                if (_updateName != value)
                {
                    _updateName = value;
                    OnPropertyChanged(() => UpdateName);
                }
            }
        }

        /// <summary>   The update. </summary>
        private Nullable<System.DateTimeOffset> _updateDate;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the update. </summary>
        ///
        /// <value> The update date. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public Nullable<System.DateTimeOffset> UpdateDate
        {
            get { return _updateDate; }
            set
            {
                if (_updateDate != value)
                {
                    _updateDate = value;
                    OnPropertyChanged(() => UpdateDate);
                }
            }
        }

        /// <summary>   The concurrency value. </summary>
        private Nullable<short> _concurrencyValue;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the concurrency value. </summary>
        ///
        /// <value> The concurrency value. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public Nullable<short> ConcurrencyValue
        {
            get { return _concurrencyValue; }
            set
            {
                if (_concurrencyValue != value)
                {
                    _concurrencyValue = value;
                    OnPropertyChanged(() => ConcurrencyValue);
                }
            }
        }

    }

}
