//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using FluentValidation;

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   A state province. </summary>
    ///
    /// <remarks>   Kevin, 12/26/2018. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

	[DataContract]
	public partial class StateProvince : DbObjectBase
    {
   	
        /// <summary>   The state province UID. </summary>
    	private System.Guid _stateProvinceUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the state province UID. </summary>
        ///
        /// <value> The state province UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.Guid StateProvinceUid
    	{ 
    		get { return _stateProvinceUid; }
    		set
    		{
    			if (_stateProvinceUid != value )
    			{
    				_stateProvinceUid = value;
    				OnPropertyChanged(() => StateProvinceUid);
    			}
    		}
    	}
    	
        /// <summary>   The country UID. </summary>
    	private Nullable<System.Guid> _countryUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the country UID. </summary>
        ///
        /// <value> The country UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public Nullable<System.Guid> CountryUid
    	{ 
    		get { return _countryUid; }
    		set
    		{
    			if (_countryUid != value )
    			{
    				_countryUid = value;
    				OnPropertyChanged(() => CountryUid);
    			}
    		}
    	}
    	
        /// <summary>   The state province code. </summary>
    	private string _stateProvinceCode;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the state province code. </summary>
        ///
        /// <value> The state province code. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string StateProvinceCode
    	{ 
    		get { return _stateProvinceCode; }
    		set
    		{
    			if (_stateProvinceCode != value )
    			{
    				_stateProvinceCode = value;
    				OnPropertyChanged(() => StateProvinceCode);
    			}
    		}
    	}
    	
        /// <summary>   Name of the state province. </summary>
    	private string _stateProvinceName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the state province. </summary>
        ///
        /// <value> The name of the state province. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string StateProvinceName
    	{ 
    		get { return _stateProvinceName; }
    		set
    		{
    			if (_stateProvinceName != value )
    			{
    				_stateProvinceName = value;
    				OnPropertyChanged(() => StateProvinceName);
    			}
    		}
    	}
    	
        /// <summary>   Name of the insert. </summary>
    	private string _insertName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the insert. </summary>
        ///
        /// <value> The name of the insert. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string InsertName
    	{ 
    		get { return _insertName; }
    		set
    		{
    			if (_insertName != value )
    			{
    				_insertName = value;
    				OnPropertyChanged(() => InsertName);
    			}
    		}
    	}
    	
        /// <summary>   The insert date. </summary>
    	private System.DateTimeOffset _insertDate;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the insert date. </summary>
        ///
        /// <value> The insert date. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.DateTimeOffset InsertDate
    	{ 
    		get { return _insertDate; }
    		set
    		{
    			if (_insertDate != value )
    			{
    				_insertDate = value;
    				OnPropertyChanged(() => InsertDate);
    			}
    		}
    	}
    	
        /// <summary>   Name of the update. </summary>
    	private string _updateName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the update. </summary>
        ///
        /// <value> The name of the update. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string UpdateName
    	{ 
    		get { return _updateName; }
    		set
    		{
    			if (_updateName != value )
    			{
    				_updateName = value;
    				OnPropertyChanged(() => UpdateName);
    			}
    		}
    	}
    	
        /// <summary>   The update. </summary>
    	private Nullable<System.DateTimeOffset> _updateDate;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the update. </summary>
        ///
        /// <value> The update date. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public Nullable<System.DateTimeOffset> UpdateDate
    	{ 
    		get { return _updateDate; }
    		set
    		{
    			if (_updateDate != value )
    			{
    				_updateDate = value;
    				OnPropertyChanged(() => UpdateDate);
    			}
    		}
    	}
    	
        /// <summary>   The concurrency value. </summary>
    	private Nullable<short> _concurrencyValue;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the concurrency value. </summary>
        ///
        /// <value> The concurrency value. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public Nullable<short> ConcurrencyValue
    	{ 
    		get { return _concurrencyValue; }
    		set
    		{
    			if (_concurrencyValue != value )
    			{
    				_concurrencyValue = value;
    				OnPropertyChanged(() => ConcurrencyValue);
    			}
    		}
    	}
    	
        /// <summary>   Name of the country. </summary>
    	private string _countryName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the country. </summary>
        ///
        /// <value> The name of the country. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string CountryName
    	{ 
    		get { return _countryName; }
    		set
    		{
    			if (_countryName != value )
    			{
    				_countryName = value;
    				OnPropertyChanged(() => CountryName);
    			}
    		}
    	}
    	
        /// <summary>   The country ISO. </summary>
    	private string _countryIso;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the country ISO. </summary>
        ///
        /// <value> The country ISO. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string CountryIso
    	{ 
    		get { return _countryIso; }
    		set
    		{
    			if (_countryIso != value )
    			{
    				_countryIso = value;
    				OnPropertyChanged(() => CountryIso);
    			}
    		}
    	}
    	
        /// <summary>   The third ISO. </summary>
    	private string _iso3;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the ISO 3. </summary>
        ///
        /// <value> The ISO 3. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string Iso3
    	{ 
    		get { return _iso3; }
    		set
    		{
    			if (_iso3 != value )
    			{
    				_iso3 = value;
    				OnPropertyChanged(() => Iso3);
    			}
    		}
    	}
    
    	
        /// <summary>   The addresses. </summary>
    	private ICollection<Address> _addresses;

     //   ////////////////////////////////////////////////////////////////////////////////////////////////////
     //   /// <summary>   Gets or sets the addresses. </summary>
     //   ///
     //   /// <value> The addresses. </value>
     //   ////////////////////////////////////////////////////////////////////////////////////////////////////

    	//[DataMember]
    	//public virtual ICollection<Address> Addresses
    	//{ 
    	//	get { return _addresses; }
    	//	set
    	//	{
    	//		if (_addresses != value )
    	//		{
    	//			_addresses = value;
    	//			OnPropertyChanged(() => Addresses);
    	//		}
    	//	}
    	//}
    	
     //   /// <summary>   The country. </summary>
    	//private Country _country;

     //   ////////////////////////////////////////////////////////////////////////////////////////////////////
     //   /// <summary>   Gets or sets the country. </summary>
     //   ///
     //   /// <value> The country. </value>
     //   ////////////////////////////////////////////////////////////////////////////////////////////////////

    	//[DataMember]
    	//public virtual Country Country
    	//{ 
    	//	get { return _country; }
    	//	set
    	//	{
    	//		if (_country != value )
    	//		{
    	//			_country = value;
    	//			OnPropertyChanged(() => Country);
    	//		}
    	//	}
    	//}
    }
    
}
