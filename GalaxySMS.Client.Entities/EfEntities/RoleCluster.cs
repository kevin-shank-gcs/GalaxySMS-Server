//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
	using GCS.Core.Common.Core;
	using GCS.Core.Common.Contracts;	
    using FluentValidation;

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   A role cluster. </summary>
    ///
    /// <remarks>   Kevin, 12/26/2018. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

	[DataContract]
	public partial class RoleCluster : DbObjectBase, ITableEntityBase
    {   	
        /// <summary>   The role cluster UID. </summary>
    	private System.Guid _roleClusterUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the role cluster UID. </summary>
        ///
        /// <value> The role cluster UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.Guid RoleClusterUid
    	{ 
    		get { return _roleClusterUid; }
    		set
    		{
    			if (_roleClusterUid != value )
    			{
    				_roleClusterUid = value;
    				OnPropertyChanged(() => RoleClusterUid);
    			}
    		}
    	}
    	
        /// <summary>   Identifier for the role. </summary>
    	private System.Guid _roleId;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the identifier of the role. </summary>
        ///
        /// <value> The identifier of the role. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.Guid RoleId
    	{ 
    		get { return _roleId; }
    		set
    		{
    			if (_roleId != value )
    			{
    				_roleId = value;
    				OnPropertyChanged(() => RoleId);
    			}
    		}
    	}
    	
        /// <summary>   The cluster UID. </summary>
    	private System.Guid _clusterUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the cluster UID. </summary>
        ///
        /// <value> The cluster UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.Guid ClusterUid
    	{ 
    		get { return _clusterUid; }
    		set
    		{
    			if (_clusterUid != value )
    			{
    				_clusterUid = value;
    				OnPropertyChanged(() => ClusterUid);
    			}
    		}
    	}

        private bool _includeAllAccessPortals;
 
        [DataMember]

        public bool IncludeAllAccessPortals
        {
            get { return _includeAllAccessPortals; }
            set
            {
                if (_includeAllAccessPortals != value)
                {
                    _includeAllAccessPortals = value;
                    OnPropertyChanged(() => IncludeAllAccessPortals);
                }
            }
        }


        private bool _IncludeAllInputOutputGroups;
        
        [DataMember]
        public bool IncludeAllInputOutputGroups
        {
            get { return _IncludeAllInputOutputGroups; }
            set
            {
                if (_IncludeAllInputOutputGroups != value)
                {
                    _IncludeAllInputOutputGroups = value;
                    OnPropertyChanged(() => IncludeAllInputOutputGroups);
                }
            }
        }

        private bool _IncludeAllInputDevices;

        [DataMember]
        public bool IncludeAllInputDevices
        {
            get { return _IncludeAllInputDevices; }
            set
            {
                if (_IncludeAllInputDevices != value)
                {
                    _IncludeAllInputDevices = value;
                    OnPropertyChanged(() => IncludeAllInputDevices);
                }
            }
        }

        private bool _IncludeAllOutputDevices;

        [DataMember]
        public bool IncludeAllOutputDevices
        {
            get { return _IncludeAllOutputDevices; }
            set
            {
                if (_IncludeAllOutputDevices != value)
                {
                    _IncludeAllOutputDevices = value;
                    OnPropertyChanged(() => IncludeAllOutputDevices);
                }
            }
        }


        /// <summary>   Name of the insert. </summary>
        private string _insertName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the insert. </summary>
        ///
        /// <value> The name of the insert. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string InsertName
    	{ 
    		get { return _insertName; }
    		set
    		{
    			if (_insertName != value )
    			{
    				_insertName = value;
    				OnPropertyChanged(() => InsertName);
    			}
    		}
    	}
    	
        /// <summary>   The insert date. </summary>
    	private System.DateTimeOffset _insertDate;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the insert date. </summary>
        ///
        /// <value> The insert date. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public System.DateTimeOffset InsertDate
    	{ 
    		get { return _insertDate; }
    		set
    		{
    			if (_insertDate != value )
    			{
    				_insertDate = value;
    				OnPropertyChanged(() => InsertDate);
    			}
    		}
    	}
    	
        /// <summary>   Name of the update. </summary>
    	private string _updateName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the update. </summary>
        ///
        /// <value> The name of the update. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public string UpdateName
    	{ 
    		get { return _updateName; }
    		set
    		{
    			if (_updateName != value )
    			{
    				_updateName = value;
    				OnPropertyChanged(() => UpdateName);
    			}
    		}
    	}
    	
        /// <summary>   The update. </summary>
    	private Nullable<System.DateTimeOffset> _updateDate;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the update. </summary>
        ///
        /// <value> The update date. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public Nullable<System.DateTimeOffset> UpdateDate
    	{ 
    		get { return _updateDate; }
    		set
    		{
    			if (_updateDate != value )
    			{
    				_updateDate = value;
    				OnPropertyChanged(() => UpdateDate);
    			}
    		}
    	}
    	
        /// <summary>   The concurrency value. </summary>
    	private Nullable<short> _concurrencyValue;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the concurrency value. </summary>
        ///
        /// <value> The concurrency value. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public Nullable<short> ConcurrencyValue
    	{ 
    		get { return _concurrencyValue; }
    		set
    		{
    			if (_concurrencyValue != value )
    			{
    				_concurrencyValue = value;
    				OnPropertyChanged(() => ConcurrencyValue);
    			}
    		}
    	}
    
    	
     //   /// <summary>   The cluster. </summary>
    	//private Cluster _cluster;

     //   ////////////////////////////////////////////////////////////////////////////////////////////////////
     //   /// <summary>   Gets or sets the cluster. </summary>
     //   ///
     //   /// <value> The cluster. </value>
     //   ////////////////////////////////////////////////////////////////////////////////////////////////////

    	//[DataMember]
    	//public virtual Cluster Cluster
    	//{ 
    	//	get { return _cluster; }
    	//	set
    	//	{
    	//		if (_cluster != value )
    	//		{
    	//			_cluster = value;
    	//			OnPropertyChanged(() => Cluster);
    	//		}
    	//	}
    	//}
    	
     //   /// <summary>   The gcs role. </summary>
    	//private gcsRole _gcsRole;

     //   ////////////////////////////////////////////////////////////////////////////////////////////////////
     //   /// <summary>   Gets or sets the gcs role. </summary>
     //   ///
     //   /// <value> The gcs role. </value>
     //   ////////////////////////////////////////////////////////////////////////////////////////////////////

    	//[DataMember]
    	//public virtual gcsRole gcsRole
    	//{ 
    	//	get { return _gcsRole; }
    	//	set
    	//	{
    	//		if (_gcsRole != value )
    	//		{
    	//			_gcsRole = value;
    	//			OnPropertyChanged(() => gcsRole);
    	//		}
    	//	}
    	//}
    	
        /// <summary>   The role cluster permissions. </summary>
    	private ICollection<RoleClusterPermission> _roleClusterPermissions;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the role cluster permissions. </summary>
        ///
        /// <value> The role cluster permissions. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

    	[DataMember]
    	public virtual ICollection<RoleClusterPermission> RoleClusterPermissions
    	{ 
    		get { return _roleClusterPermissions; }
    		set
    		{
    			if (_roleClusterPermissions != value )
    			{
    				_roleClusterPermissions = value;
    				OnPropertyChanged(() => RoleClusterPermissions);
    			}
    		}
    	}

        private ICollection<RoleAccessPortal> _accessPortals;

        [DataMember]
        public ICollection<RoleAccessPortal> AccessPortals
        {
            get { return _accessPortals; }
            set
            {
                if (_accessPortals != value)
                {
                    _accessPortals = value;
                    OnPropertyChanged(() => AccessPortals);
                }
            }
        }

        private ICollection<RoleInputOutputGroup> _inputOutputGroups;

        [DataMember]
        public ICollection<RoleInputOutputGroup> InputOutputGroups
        {
            get { return _inputOutputGroups; }
            set
            {
                if (_inputOutputGroups != value)
                {
                    _inputOutputGroups = value;
                    OnPropertyChanged(() => InputOutputGroups);
                }
            }
        }

        private ICollection<RoleInputDevice> _inputDevices;

        [DataMember]
        public ICollection<RoleInputDevice> InputDevices
        {
            get { return _inputDevices; }
            set
            {
                if (_inputDevices != value)
                {
                    _inputDevices = value;
                    OnPropertyChanged(() => InputDevices);
                }
            }
        }

        private ICollection<RoleOutputDevice> _outputDevices;

        [DataMember]
        public ICollection<RoleOutputDevice> OutputDevices
        {
            get { return _outputDevices; }
            set
            {
                if (_outputDevices != value)
                {
                    _outputDevices = value;
                    OnPropertyChanged(() => OutputDevices);
                }
            }
        }

    }
    
}
