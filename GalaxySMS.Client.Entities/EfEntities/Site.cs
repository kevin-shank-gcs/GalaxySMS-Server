//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
    using GCS.Core.Common.Core;
    using FluentValidation;
    using GCS.Core.Common.Contracts;
    using System.Collections.ObjectModel;

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   A site. </summary>
    ///
    /// <remarks>   Kevin, 12/26/2018. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    [DataContract]
    public partial class Site : DbObjectBase, IHasBinaryResource, IHasAddress, IHasEntityMappingList
    {
        /// <summary>   The site UID. </summary>
        private System.Guid _siteUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the site UID. </summary>
        ///
        /// <value> The site UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public System.Guid SiteUid
        {
            get { return _siteUid; }
            set
            {
                if (_siteUid != value)
                {
                    _siteUid = value;
                    OnPropertyChanged(() => SiteUid);
                }
            }
        }

        /// <summary>   The region UID. </summary>
        private System.Guid _regionUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the region UID. </summary>
        ///
        /// <value> The region UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public System.Guid RegionUid
        {
            get { return _regionUid; }
            set
            {
                if (_regionUid != value)
                {
                    _regionUid = value;
                    OnPropertyChanged(() => RegionUid);
                }
            }
        }

        /// <summary>   Name of the site. </summary>
        private string _siteName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the site. </summary>
        ///
        /// <value> The name of the site. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public string SiteName
        {
            get { return _siteName; }
            set
            {
                if (_siteName != value)
                {
                    _siteName = value;
                    OnPropertyChanged(() => SiteName);
                }
            }
        }

        /// <summary>   Name of the insert. </summary>
        private string _insertName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the insert. </summary>
        ///
        /// <value> The name of the insert. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public string InsertName
        {
            get { return _insertName; }
            set
            {
                if (_insertName != value)
                {
                    _insertName = value;
                    OnPropertyChanged(() => InsertName);
                }
            }
        }

        /// <summary>   The insert date. </summary>
        private System.DateTimeOffset _insertDate;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the insert date. </summary>
        ///
        /// <value> The insert date. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public System.DateTimeOffset InsertDate
        {
            get { return _insertDate; }
            set
            {
                if (_insertDate != value)
                {
                    _insertDate = value;
                    OnPropertyChanged(() => InsertDate);
                }
            }
        }

        /// <summary>   Name of the update. </summary>
        private string _updateName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the update. </summary>
        ///
        /// <value> The name of the update. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public string UpdateName
        {
            get { return _updateName; }
            set
            {
                if (_updateName != value)
                {
                    _updateName = value;
                    OnPropertyChanged(() => UpdateName);
                }
            }
        }

        /// <summary>   The update. </summary>
        private Nullable<System.DateTimeOffset> _updateDate;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the update. </summary>
        ///
        /// <value> The update date. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public Nullable<System.DateTimeOffset> UpdateDate
        {
            get { return _updateDate; }
            set
            {
                if (_updateDate != value)
                {
                    _updateDate = value;
                    OnPropertyChanged(() => UpdateDate);
                }
            }
        }

        /// <summary>   The concurrency value. </summary>
        private Nullable<short> _concurrencyValue;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the concurrency value. </summary>
        ///
        /// <value> The concurrency value. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public Nullable<short> ConcurrencyValue
        {
            get { return _concurrencyValue; }
            set
            {
                if (_concurrencyValue != value)
                {
                    _concurrencyValue = value;
                    OnPropertyChanged(() => ConcurrencyValue);
                }
            }
        }

        /// <summary>   Identifier for the site. </summary>
        private string _siteId;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the identifier of the site. </summary>
        ///
        /// <value> The identifier of the site. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public string SiteId
        {
            get { return _siteId; }
            set
            {
                if (_siteId != value)
                {
                    _siteId = value;
                    OnPropertyChanged(() => SiteId);
                }
            }
        }

        /// <summary>   The binary resource UID. </summary>
        private Nullable<System.Guid> _binaryResourceUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the binary resource UID. </summary>
        ///
        /// <value> The binary resource UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public Nullable<System.Guid> BinaryResourceUid
        {
            get { return _binaryResourceUid; }
            set
            {
                if (_binaryResourceUid != value)
                {
                    _binaryResourceUid = value;
                    OnPropertyChanged(() => BinaryResourceUid);
                }
            }
        }

        ///// <summary>   The longitude. </summary>
        //private Nullable<double> _longitude;

        //////////////////////////////////////////////////////////////////////////////////////////////////////
        ///// <summary>   Gets or sets the longitude. </summary>
        /////
        ///// <value> The longitude. </value>
        //////////////////////////////////////////////////////////////////////////////////////////////////////

        //[DataMember]
        //public Nullable<double> Longitude
        //{
        //    get { return _longitude; }
        //    set
        //    {
        //        if (_longitude != value)
        //        {
        //            _longitude = value;
        //            OnPropertyChanged(() => Longitude);
        //        }
        //    }
        //}

        ///// <summary>   The latitude. </summary>
        //private Nullable<double> _latitude;

        //////////////////////////////////////////////////////////////////////////////////////////////////////
        ///// <summary>   Gets or sets the latitude. </summary>
        /////
        ///// <value> The latitude. </value>
        //////////////////////////////////////////////////////////////////////////////////////////////////////

        //[DataMember]
        //public Nullable<double> Latitude
        //{
        //    get { return _latitude; }
        //    set
        //    {
        //        if (_latitude != value)
        //        {
        //            _latitude = value;
        //            OnPropertyChanged(() => Latitude);
        //        }
        //    }
        //}

        /// <summary>   The address UID. </summary>
        private Nullable<System.Guid> _addressUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the address UID. </summary>
        ///
        /// <value> The address UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public Nullable<System.Guid> AddressUid
        {
            get { return _addressUid; }
            set
            {
                if (_addressUid != value)
                {
                    _addressUid = value;
                    OnPropertyChanged(() => AddressUid);
                }
            }
        }


        /// <summary>   Identifier for the entity. </summary>
        private System.Guid _entityId;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the identifier of the entity. </summary>
        ///
        /// <value> The identifier of the entity. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public System.Guid EntityId
        {
            get { return _entityId; }
            set
            {
                if (_entityId != value)
                {
                    _entityId = value;
                    OnPropertyChanged(() => EntityId);
                }
            }
        }
        /// <summary>   The gcs binary resource. </summary>
        private gcsBinaryResource _gcsBinaryResource;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the gcs binary resource. </summary>
        ///
        /// <value> The gcs binary resource. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public virtual gcsBinaryResource gcsBinaryResource
        {
            get { return _gcsBinaryResource; }
            set
            {
                if (_gcsBinaryResource != value)
                {
                    _gcsBinaryResource = value;
                    OnPropertyChanged(() => gcsBinaryResource);
                }
            }
        }


        /// <summary>   The address. </summary>
        private Address _address;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the address. </summary>
        ///
        /// <value> The address. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public virtual Address Address
        {
            get { return _address; }
            set
            {
                if (_address != value)
                {
                    _address = value;
                    OnPropertyChanged(() => Address);
                }
            }
        }

        /// <summary>   The region. </summary>
        private Region _region;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the region. </summary>
        ///
        /// <value> The region. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public Region Region
        {
            get { return _region; }
            set
            {
                if (_region != value)
                {
                    _region = value;
                    OnPropertyChanged(() => Region);
                }
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the region. </summary>
        ///
        /// <value> The name of the region. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public string RegionName
        {
            get { return Region?.RegionName; }
            internal set
            {
                if (Region != null)
                    Region.RegionName = value;
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name. </summary>
        ///
        /// <value> The name. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public string Name
        {
            get { return SiteName; }
            set
            {
                if (Name != value)
                {
                    SiteName = value;
                    OnPropertyChanged(() => Name);
                }
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets the region image. </summary>
        ///
        /// <value> The region image. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public byte[] RegionImage
        {
            get { return Region?.gcsBinaryResource?.BinaryResource; }
        }
        /// <summary>   List of identifiers for the entities. </summary>
        private ICollection<Guid> _entityIds;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets a list of identifiers of the entities. </summary>
        ///
        /// <value> A list of identifiers of the entities. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public virtual ICollection<Guid> EntityIds
        {
            get { return _entityIds; }
            set
            {
                if (_entityIds != value)
                {
                    _entityIds = value;
                    OnPropertyChanged(() => EntityIds);
                }
            }
        }

        /// <summary>   The mapped entities permission levels. </summary>
        private ICollection<EntityIdEntityMapPermissionLevel> _MappedEntitiesPermissionLevels;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the mapped entities permission levels. </summary>
        ///
        /// <value> The mapped entities permission levels. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public virtual ICollection<EntityIdEntityMapPermissionLevel> MappedEntitiesPermissionLevels
        {
            get { return _MappedEntitiesPermissionLevels; }
            set
            {
                if (_MappedEntitiesPermissionLevels != value)
                {
                    _MappedEntitiesPermissionLevels = value;
                    OnPropertyChanged(() => MappedEntitiesPermissionLevels);
                }
            }
        }

        ///// <summary>   The clusters. </summary>
        //private ICollection<Cluster> _clusters;

        //////////////////////////////////////////////////////////////////////////////////////////////////////
        ///// <summary>   Gets or sets the clusters. </summary>
        /////
        ///// <value> The clusters. </value>
        //////////////////////////////////////////////////////////////////////////////////////////////////////

        //[DataMember]
        //public virtual ICollection<Cluster> Clusters
        //{
        //    get { return _clusters; }
        //    set
        //    {
        //        if (_clusters != value)
        //        {
        //            _clusters = value;
        //            OnPropertyChanged(() => Clusters);
        //        }
        //    }
        //}

    }




    //[DataContract]
    //public partial class Site : DbObjectBase, IHasBinaryResource, IHasAddress, IHasEntityMappingList
    //{
    //    private System.Guid _siteUid;

    //    [DataMember]
    //    public System.Guid SiteUid
    //    {
    //        get { return _siteUid; }
    //        set
    //        {
    //            if (_siteUid != value)
    //            {
    //                _siteUid = value;
    //                OnPropertyChanged(() => SiteUid);
    //            }
    //        }
    //    }

    //    private System.Guid _regionUid;

    //    [DataMember]
    //    public System.Guid RegionUid
    //    {
    //        get { return _regionUid; }
    //        set
    //        {
    //            if (_regionUid != value)
    //            {
    //                _regionUid = value;
    //                OnPropertyChanged(() => RegionUid);
    //            }
    //        }
    //    }

    //    private string _siteName;

    //    [DataMember]
    //    public string SiteName
    //    {
    //        get { return _siteName; }
    //        set
    //        {
    //            if (_siteName != value)
    //            {
    //                _siteName = value;
    //                OnPropertyChanged(() => SiteName);
    //            }
    //        }
    //    }

    //    private string _insertName;

    //    [DataMember]
    //    public string InsertName
    //    {
    //        get { return _insertName; }
    //        set
    //        {
    //            if (_insertName != value)
    //            {
    //                _insertName = value;
    //                OnPropertyChanged(() => InsertName);
    //            }
    //        }
    //    }

    //    private System.DateTimeOffset _insertDate;

    //    [DataMember]
    //    public System.DateTimeOffset InsertDate
    //    {
    //        get { return _insertDate; }
    //        set
    //        {
    //            if (_insertDate != value)
    //            {
    //                _insertDate = value;
    //                OnPropertyChanged(() => InsertDate);
    //            }
    //        }
    //    }

    //    private string _updateName;

    //    [DataMember]
    //    public string UpdateName
    //    {
    //        get { return _updateName; }
    //        set
    //        {
    //            if (_updateName != value)
    //            {
    //                _updateName = value;
    //                OnPropertyChanged(() => UpdateName);
    //            }
    //        }
    //    }

    //    private Nullable<System.DateTimeOffset> _updateDate;

    //    [DataMember]
    //    public Nullable<System.DateTimeOffset> UpdateDate
    //    {
    //        get { return _updateDate; }
    //        set
    //        {
    //            if (_updateDate != value)
    //            {
    //                _updateDate = value;
    //                OnPropertyChanged(() => UpdateDate);
    //            }
    //        }
    //    }

    //    private Nullable<short> _concurrencyValue;

    //    [DataMember]
    //    public Nullable<short> ConcurrencyValue
    //    {
    //        get { return _concurrencyValue; }
    //        set
    //        {
    //            if (_concurrencyValue != value)
    //            {
    //                _concurrencyValue = value;
    //                OnPropertyChanged(() => ConcurrencyValue);
    //            }
    //        }
    //    }

    //    private string _siteId;

    //    [DataMember]
    //    public string SiteId
    //    {
    //        get { return _siteId; }
    //        set
    //        {
    //            if (_siteId != value)
    //            {
    //                _siteId = value;
    //                OnPropertyChanged(() => SiteId);
    //            }
    //        }
    //    }

    //    private Nullable<System.Guid> _binaryResourceUid;

    //    [DataMember]
    //    public Nullable<System.Guid> BinaryResourceUid
    //    {
    //        get { return _binaryResourceUid; }
    //        set
    //        {
    //            if (_binaryResourceUid != value)
    //            {
    //                _binaryResourceUid = value;
    //                OnPropertyChanged(() => BinaryResourceUid);
    //            }
    //        }
    //    }

    //    private Nullable<double> _longitude;

    //    [DataMember]
    //    public Nullable<double> Longitude
    //    {
    //        get { return _longitude; }
    //        set
    //        {
    //            if (_longitude != value)
    //            {
    //                _longitude = value;
    //                OnPropertyChanged(() => Longitude);
    //            }
    //        }
    //    }

    //    private Nullable<double> _latitude;

    //    [DataMember]
    //    public Nullable<double> Latitude
    //    {
    //        get { return _latitude; }
    //        set
    //        {
    //            if (_latitude != value)
    //            {
    //                _latitude = value;
    //                OnPropertyChanged(() => Latitude);
    //            }
    //        }
    //    }

    //    private Nullable<System.Guid> _addressUid;

    //    [DataMember]
    //    public Nullable<System.Guid> AddressUid
    //    {
    //        get { return _addressUid; }
    //        set
    //        {
    //            if (_addressUid != value)
    //            {
    //                _addressUid = value;
    //                OnPropertyChanged(() => AddressUid);
    //            }
    //        }
    //    }


    //    private System.Guid _entityId;

    //    [DataMember]
    //    public System.Guid EntityId
    //    {
    //        get { return _entityId; }
    //        set
    //        {
    //            if (_entityId != value)
    //            {
    //                _entityId = value;
    //                OnPropertyChanged(() => EntityId);
    //            }
    //        }
    //    }
    //    private gcsBinaryResource _gcsBinaryResource;

    //    [DataMember]
    //    public virtual gcsBinaryResource gcsBinaryResource
    //    {
    //        get { return _gcsBinaryResource; }
    //        set
    //        {
    //            if (_gcsBinaryResource != value)
    //            {
    //                _gcsBinaryResource = value;
    //                OnPropertyChanged(() => gcsBinaryResource);
    //            }
    //        }
    //    }


    //    private Address _address;

    //    [DataMember]
    //    public virtual Address Address
    //    {
    //        get { return _address; }
    //        set
    //        {
    //            if (_address != value)
    //            {
    //                _address = value;
    //                OnPropertyChanged(() => Address);
    //            }
    //        }
    //    }

    //    private Region _region;

    //    [DataMember]
    //    public Region Region
    //    {
    //        get { return _region; }
    //        set
    //        {
    //            if (_region != value)
    //            {
    //                _region = value;
    //                OnPropertyChanged(() => Region);
    //            }
    //        }
    //    }

    //    public string RegionName
    //    {
    //        get { return Region?.RegionName; }
    //        internal set
    //        {
    //            if (Region != null)
    //                Region.RegionName = value;
    //        }
    //    }

    //    public string Name
    //    {
    //        get { return SiteName; }
    //        set
    //        {
    //            if (Name != value)
    //            {
    //                SiteName = value;
    //                OnPropertyChanged(() => Name);
    //            }
    //        }
    //    }

    //    public byte[] RegionImage
    //    {
    //        get { return Region?.gcsBinaryResource?.BinaryResource; }
    //    }
    //    private ICollection<Guid> _entityIds;

    //    [DataMember]
    //    public virtual ICollection<Guid> EntityIds
    //    {
    //        get { return _entityIds; }
    //        set
    //        {
    //            if (_entityIds != value)
    //            {
    //                _entityIds = value;
    //                OnPropertyChanged(() => EntityIds);
    //            }
    //        }
    //    }

    //    private ICollection<EntityIdEntityMapPermissionLevel> _MappedEntitiesPermissionLevels;

    //    [DataMember]
    //    public virtual ICollection<EntityIdEntityMapPermissionLevel> MappedEntitiesPermissionLevels
    //    {
    //        get { return _MappedEntitiesPermissionLevels; }
    //        set
    //        {
    //            if (_MappedEntitiesPermissionLevels != value)
    //            {
    //                _MappedEntitiesPermissionLevels = value;
    //                OnPropertyChanged(() => MappedEntitiesPermissionLevels);
    //            }
    //        }
    //    }

    //    private ICollection<Cluster> _clusters;

    //    [DataMember]
    //    public virtual ICollection<Cluster> Clusters
    //    {
    //        get { return _clusters; }
    //        set
    //        {
    //            if (_clusters != value)
    //            {
    //                _clusters = value;
    //                OnPropertyChanged(() => Clusters);
    //            }
    //        }
    //    }

    //}

}
