//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
    using GCS.Core.Common.Core;
    using FluentValidation;

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   The access portal type. </summary>
    ///
    /// <remarks>   Kevin, 12/26/2018. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    [DataContract]
    public partial class AccessPortalType : DbObjectBase, IHasBinaryResource
    {

        /*	// Move to partial class
        using System;
        using System.Collections.Generic;
        using System.Runtime.Serialization;
        using GCS.Core.Common.Core;
        using FluentValidation;
        using System.Collections.ObjectModel;
        using GCS.Core.Common.Extensions;

        namespace GalaxySMS.Client.Entities
        {
            public partial class AccessPortalType
            {
                public AccessPortalType()
                {
                    Initialize();
                }

                public AccessPortalType(AccessPortalType e)
                {
                    Initialize(e);
                }

                public void Initialize()
                {
            }

                public void Initialize(AccessPortalType e)
                {
                    Initialize();
                    if( e == null )
                        return;
                    this.AccessPortalTypeUid = e.AccessPortalTypeUid;
                    this.CredentialReaderTypeUid = e.CredentialReaderTypeUid;
                    this.BinaryResourceUid = e.BinaryResourceUid;
                    this.AccessPortalTypeDescription = e.AccessPortalTypeDescription;
                    this.InsertName = e.InsertName;
                    this.InsertDate = e.InsertDate;
                    this.UpdateName = e.UpdateName;
                    this.UpdateDate = e.UpdateDate;
                    this.ConcurrencyValue = e.ConcurrencyValue;

                }

                public AccessPortalType Clone(AccessPortalType e)
                {
                    return new AccessPortalType(e);
                }

                public bool Equals(AccessPortalType other)
                {
                    return base.Equals(other);
                }

                public bool IsPrimaryKeyEqual(AccessPortalType other)
                {
                    if( other == null ) 
                        return false;

                    if(other.AccessPortalTypeUid != this.AccessPortalTypeUid )
                        return false;
                    return true;
                }

                public override int GetHashCode()
                {
                    return base.GetHashCode();
                }

                public override string ToString()
                {
                    return base.ToString();
                }
            }
        }
        */


        /// <summary>   The access portal type UID. </summary>
        private System.Guid _accessPortalTypeUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the access portal type UID. </summary>
        ///
        /// <value> The access portal type UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public System.Guid AccessPortalTypeUid
        {
            get { return _accessPortalTypeUid; }
            set
            {
                if (_accessPortalTypeUid != value)
                {
                    _accessPortalTypeUid = value;
                    OnPropertyChanged(() => AccessPortalTypeUid);
                }
            }
        }

        /// <summary>   The credential reader type UID. </summary>
        private System.Guid _credentialReaderTypeUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the credential reader type UID. </summary>
        ///
        /// <value> The credential reader type UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public System.Guid CredentialReaderTypeUid
        {
            get { return _credentialReaderTypeUid; }
            set
            {
                if (_credentialReaderTypeUid != value)
                {
                    _credentialReaderTypeUid = value;
                    OnPropertyChanged(() => CredentialReaderTypeUid);
                }
            }
        }

        /// <summary>   The binary resource UID. </summary>
        private Nullable<System.Guid> _binaryResourceUid;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the binary resource UID. </summary>
        ///
        /// <value> The binary resource UID. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public Nullable<System.Guid> BinaryResourceUid
        {
            get { return _binaryResourceUid; }
            set
            {
                if (_binaryResourceUid != value)
                {
                    _binaryResourceUid = value;
                    OnPropertyChanged(() => BinaryResourceUid);
                }
            }
        }

        /// <summary>   Information describing the access portal type. </summary>
        private string _accessPortalTypeDescription;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets information describing the access portal type. </summary>
        ///
        /// <value> Information describing the access portal type. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public string AccessPortalTypeDescription
        {
            get { return _accessPortalTypeDescription; }
            set
            {
                if (_accessPortalTypeDescription != value)
                {
                    _accessPortalTypeDescription = value;
                    OnPropertyChanged(() => AccessPortalTypeDescription);
                }
            }
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name. </summary>
        ///
        /// <value> The name. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public string Name
        {
            get { return AccessPortalTypeDescription; }
            set
            {
                if (Name != value)
                {
                    AccessPortalTypeDescription = value;
                    OnPropertyChanged(() => Name);
                }
            }
        }

        /// <summary>   Name of the insert. </summary>
        private string _insertName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the insert. </summary>
        ///
        /// <value> The name of the insert. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public string InsertName
        {
            get { return _insertName; }
            set
            {
                if (_insertName != value)
                {
                    _insertName = value;
                    OnPropertyChanged(() => InsertName);
                }
            }
        }

        /// <summary>   The insert date. </summary>
        private System.DateTimeOffset _insertDate;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the insert date. </summary>
        ///
        /// <value> The insert date. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public System.DateTimeOffset InsertDate
        {
            get { return _insertDate; }
            set
            {
                if (_insertDate != value)
                {
                    _insertDate = value;
                    OnPropertyChanged(() => InsertDate);
                }
            }
        }

        /// <summary>   Name of the update. </summary>
        private string _updateName;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the name of the update. </summary>
        ///
        /// <value> The name of the update. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public string UpdateName
        {
            get { return _updateName; }
            set
            {
                if (_updateName != value)
                {
                    _updateName = value;
                    OnPropertyChanged(() => UpdateName);
                }
            }
        }

        /// <summary>   The update. </summary>
        private Nullable<System.DateTimeOffset> _updateDate;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the update. </summary>
        ///
        /// <value> The update date. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public Nullable<System.DateTimeOffset> UpdateDate
        {
            get { return _updateDate; }
            set
            {
                if (_updateDate != value)
                {
                    _updateDate = value;
                    OnPropertyChanged(() => UpdateDate);
                }
            }
        }

        /// <summary>   The concurrency value. </summary>
        private Nullable<short> _concurrencyValue;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the concurrency value. </summary>
        ///
        /// <value> The concurrency value. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public Nullable<short> ConcurrencyValue
        {
            get { return _concurrencyValue; }
            set
            {
                if (_concurrencyValue != value)
                {
                    _concurrencyValue = value;
                    OnPropertyChanged(() => ConcurrencyValue);
                }
            }
        }


        /// <summary>   The gcs binary resource. </summary>
        private gcsBinaryResource _gcsBinaryResource;

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the gcs binary resource. </summary>
        ///
        /// <value> The gcs binary resource. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        [DataMember]
        public virtual gcsBinaryResource gcsBinaryResource
        {
            get { return _gcsBinaryResource; }
            set
            {
                if (_gcsBinaryResource != value)
                {
                    _gcsBinaryResource = value;
                    OnPropertyChanged(() => gcsBinaryResource);
                }
            }
        }
    }

}
