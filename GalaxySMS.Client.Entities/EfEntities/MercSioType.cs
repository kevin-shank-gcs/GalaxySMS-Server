//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GalaxySMS.Client.Entities
{
    using System;
    using System.Collections.Generic;
    using System.Runtime.Serialization;
    using GCS.Core.Common.Core;
    using GCS.Core.Common.Contracts;
    using FluentValidation;

    [DataContract]
    public partial class MercSioType : DbObjectBase, ITableEntityBase
    {
        private System.Guid _mercSioTypeUid;

        [DataMember]
        public System.Guid MercSioTypeUid
        {
            get { return _mercSioTypeUid; }
            set
            {
                if (_mercSioTypeUid != value)
                {
                    _mercSioTypeUid = value;
                    OnPropertyChanged(() => MercSioTypeUid);
                }
            }
        }

        private string _display;

        [DataMember]
        public string Display
        {
            get { return _display; }
            set
            {
                if (_display != value)
                {
                    _display = value;
                    OnPropertyChanged(() => Display);
                }
            }
        }

        private Nullable<System.Guid> _displayResourceKey;

        [DataMember]
        public Nullable<System.Guid> DisplayResourceKey
        {
            get { return _displayResourceKey; }
            set
            {
                if (_displayResourceKey != value)
                {
                    _displayResourceKey = value;
                    OnPropertyChanged(() => DisplayResourceKey);
                }
            }
        }

        private string _description;

        [DataMember]
        public string Description
        {
            get { return _description; }
            set
            {
                if (_description != value)
                {
                    _description = value;
                    OnPropertyChanged(() => Description);
                }
            }
        }

        private Nullable<System.Guid> _descriptionResourceKey;

        [DataMember]
        public Nullable<System.Guid> DescriptionResourceKey
        {
            get { return _descriptionResourceKey; }
            set
            {
                if (_descriptionResourceKey != value)
                {
                    _descriptionResourceKey = value;
                    OnPropertyChanged(() => DescriptionResourceKey);
                }
            }
        }

        private string _typeCode;

        [DataMember]
        public string TypeCode
        {
            get { return _typeCode; }
            set
            {
                if (_typeCode != value)
                {
                    _typeCode = value;
                    OnPropertyChanged(() => TypeCode);
                }
            }
        }

        private int _typeCodeValue;

        [DataMember]
        public int TypeCodeValue
        {
            get { return _typeCodeValue; }
            set
            {
                if (_typeCodeValue != value)
                {
                    _typeCodeValue = value;
                    OnPropertyChanged(() => TypeCodeValue);
                }
            }
        }

        private int _modelNumber;

        [DataMember]
        public int ModelNumber
        {
            get { return _modelNumber; }
            set
            {
                if (_modelNumber != value)
                {
                    _modelNumber = value;
                    OnPropertyChanged(() => ModelNumber);
                }
            }
        }

        private int _maxReaders;

        [DataMember]
        public int MaxReaders
        {
            get { return _maxReaders; }
            set
            {
                if (_maxReaders != value)
                {
                    _maxReaders = value;
                    OnPropertyChanged(() => MaxReaders);
                }
            }
        }

        private int _maxInputs;

        [DataMember]
        public int MaxInputs
        {
            get { return _maxInputs; }
            set
            {
                if (_maxInputs != value)
                {
                    _maxInputs = value;
                    OnPropertyChanged(() => MaxInputs);
                }
            }
        }

        private int _maxOutputs;

        [DataMember]
        public int MaxOutputs
        {
            get { return _maxOutputs; }
            set
            {
                if (_maxOutputs != value)
                {
                    _maxOutputs = value;
                    OnPropertyChanged(() => MaxOutputs);
                }
            }
        }

        private string _insertName;

        [DataMember]
        public string InsertName
        {
            get { return _insertName; }
            set
            {
                if (_insertName != value)
                {
                    _insertName = value;
                    OnPropertyChanged(() => InsertName);
                }
            }
        }

        private System.DateTimeOffset _insertDate;

        [DataMember]
        public System.DateTimeOffset InsertDate
        {
            get { return _insertDate; }
            set
            {
                if (_insertDate != value)
                {
                    _insertDate = value;
                    OnPropertyChanged(() => InsertDate);
                }
            }
        }

        private string _updateName;

        [DataMember]
        public string UpdateName
        {
            get { return _updateName; }
            set
            {
                if (_updateName != value)
                {
                    _updateName = value;
                    OnPropertyChanged(() => UpdateName);
                }
            }
        }

        private Nullable<System.DateTimeOffset> _updateDate;

        [DataMember]
        public Nullable<System.DateTimeOffset> UpdateDate
        {
            get { return _updateDate; }
            set
            {
                if (_updateDate != value)
                {
                    _updateDate = value;
                    OnPropertyChanged(() => UpdateDate);
                }
            }
        }

        private Nullable<short> _concurrencyValue;

        [DataMember]
        public Nullable<short> ConcurrencyValue
        {
            get { return _concurrencyValue; }
            set
            {
                if (_concurrencyValue != value)
                {
                    _concurrencyValue = value;
                    OnPropertyChanged(() => ConcurrencyValue);
                }
            }
        }
    }

}
